<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (19,572 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,572 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (779 samples, 3.98%)</title><rect x="10.0" y="339.0" width="47.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (278 samples, 1.42%)</title><rect x="10.0" y="323.0" width="16.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (110 samples, 0.56%)</title><rect x="10.0" y="307.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (168 samples, 0.86%)</title><rect x="16.6" y="307.0" width="10.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="19.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (501 samples, 2.56%)</title><rect x="26.8" y="323.0" width="30.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.8" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (501 samples, 2.56%)</title><rect x="26.8" y="307.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.8" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (501 samples, 2.56%)</title><rect x="26.8" y="291.0" width="30.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.8" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (501 samples, 2.56%)</title><rect x="26.8" y="275.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.8" y="286.0">su..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (300 samples, 1.53%)</title><rect x="26.8" y="259.0" width="18.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Integer (300 samples, 1.53%)</title><rect x="26.8" y="243.0" width="18.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="29.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (201 samples, 1.03%)</title><rect x="44.8" y="259.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.8" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (201 samples, 1.03%)</title><rect x="44.8" y="243.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.8" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (201 samples, 1.03%)</title><rect x="44.8" y="227.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.8" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (201 samples, 1.03%)</title><rect x="44.8" y="211.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.8" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (201 samples, 1.03%)</title><rect x="44.8" y="195.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.8" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (201 samples, 1.03%)</title><rect x="44.8" y="179.0" width="12.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="47.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18,793 samples, 96.02%)</title><rect x="57.0" y="339.0" width="1133.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.0" y="350.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18,793 samples, 96.02%)</title><rect x="57.0" y="323.0" width="1133.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.0" y="334.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18,793 samples, 96.02%)</title><rect x="57.0" y="307.0" width="1133.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.0" y="318.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,299 samples, 78.17%)</title><rect x="57.0" y="291.0" width="922.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.0" y="302.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,299 samples, 78.17%)</title><rect x="57.0" y="275.0" width="922.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="286.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (14,919 samples, 76.23%)</title><rect x="57.0" y="259.0" width="899.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.0" y="270.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (296 samples, 1.51%)</title><rect x="57.0" y="243.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (296 samples, 1.51%)</title><rect x="57.0" y="227.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (296 samples, 1.51%)</title><rect x="57.0" y="211.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (296 samples, 1.51%)</title><rect x="57.0" y="195.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (127 samples, 0.65%)</title><rect x="57.0" y="179.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (169 samples, 0.86%)</title><rect x="64.6" y="179.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.6" y="190.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.86%)</title><rect x="64.6" y="163.0" width="10.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="67.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (14,623 samples, 74.71%)</title><rect x="74.8" y="243.0" width="881.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.8" y="254.0">ru/mail/polis/service/ReplicationServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (185 samples, 0.95%)</title><rect x="74.8" y="227.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (185 samples, 0.95%)</title><rect x="74.8" y="211.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (185 samples, 0.95%)</title><rect x="74.8" y="195.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 0.95%)</title><rect x="74.8" y="179.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.8" y="190.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.95%)</title><rect x="74.8" y="163.0" width="11.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="77.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (241 samples, 1.23%)</title><rect x="86.0" y="227.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (241 samples, 1.23%)</title><rect x="86.0" y="211.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (241 samples, 1.23%)</title><rect x="86.0" y="195.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (157 samples, 0.80%)</title><rect x="86.0" y="179.0" width="9.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.43%)</title><rect x="95.4" y="179.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.4" y="190.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.43%)</title><rect x="95.4" y="163.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="98.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.handleMultipleCase (14,197 samples, 72.54%)</title><rect x="100.5" y="227.0" width="855.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.5" y="238.0">ru/mail/polis/service/ReplicationServiceImpl.handleMultipleCase</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,509 samples, 7.71%)</title><rect x="100.5" y="211.0" width="91.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.5" y="222.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,116 samples, 5.70%)</title><rect x="100.5" y="195.0" width="67.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.5" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (606 samples, 3.10%)</title><rect x="100.5" y="179.0" width="36.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.5" y="190.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (606 samples, 3.10%)</title><rect x="100.5" y="163.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.5" y="174.0">one..</text>
</g>
<g>
<title>byte[] (606 samples, 3.10%)</title><rect x="100.5" y="147.0" width="36.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="103.5" y="158.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (510 samples, 2.61%)</title><rect x="137.0" y="179.0" width="30.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.0" y="190.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (242 samples, 1.24%)</title><rect x="137.0" y="163.0" width="14.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="140.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (268 samples, 1.37%)</title><rect x="151.6" y="163.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (268 samples, 1.37%)</title><rect x="151.6" y="147.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.6" y="158.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (268 samples, 1.37%)</title><rect x="151.6" y="131.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (268 samples, 1.37%)</title><rect x="151.6" y="115.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (268 samples, 1.37%)</title><rect x="151.6" y="99.0" width="16.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="154.6" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (393 samples, 2.01%)</title><rect x="167.8" y="195.0" width="23.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.8" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (393 samples, 2.01%)</title><rect x="167.8" y="179.0" width="23.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.8" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (393 samples, 2.01%)</title><rect x="167.8" y="163.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.8" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (165 samples, 0.84%)</title><rect x="167.8" y="147.0" width="9.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="170.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (228 samples, 1.16%)</title><rect x="177.7" y="147.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.7" y="158.0"></text>
</g>
<g>
<title>byte[] (228 samples, 1.16%)</title><rect x="177.7" y="131.0" width="13.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="180.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (12,688 samples, 64.83%)</title><rect x="191.5" y="211.0" width="764.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.5" y="222.0">ru/mail/polis/service/ReplicationHandler.multipleGet</text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.05%)</title><rect x="191.5" y="195.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="194.5" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (156 samples, 0.80%)</title><rect x="192.0" y="195.0" width="9.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="195.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (376 samples, 1.92%)</title><rect x="201.4" y="195.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.4" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (376 samples, 1.92%)</title><rect x="201.4" y="179.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.4" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (376 samples, 1.92%)</title><rect x="201.4" y="163.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.4" y="174.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (376 samples, 1.92%)</title><rect x="201.4" y="147.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.4" y="158.0">j..</text>
</g>
<g>
<title>byte[] (376 samples, 1.92%)</title><rect x="201.4" y="131.0" width="22.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="204.4" y="142.0">b..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.15%)</title><rect x="224.1" y="195.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1484171695.invoke (30 samples, 0.15%)</title><rect x="224.1" y="179.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.15%)</title><rect x="224.1" y="163.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.06%)</title><rect x="224.1" y="147.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.06%)</title><rect x="224.1" y="131.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="227.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.09%)</title><rect x="224.8" y="147.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.09%)</title><rect x="224.8" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.8" y="142.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.09%)</title><rect x="224.8" y="115.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (278 samples, 1.42%)</title><rect x="225.9" y="195.0" width="16.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (278 samples, 1.42%)</title><rect x="225.9" y="179.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (278 samples, 1.42%)</title><rect x="225.9" y="163.0" width="16.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="228.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (396 samples, 2.02%)</title><rect x="242.7" y="195.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.7" y="206.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (396 samples, 2.02%)</title><rect x="242.7" y="179.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.7" y="190.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (396 samples, 2.02%)</title><rect x="242.7" y="163.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.7" y="174.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (396 samples, 2.02%)</title><rect x="242.7" y="147.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.7" y="158.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (396 samples, 2.02%)</title><rect x="242.7" y="131.0" width="23.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.7" y="142.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (396 samples, 2.02%)</title><rect x="242.7" y="115.0" width="23.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="245.7" y="126.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpClient.get (7,822 samples, 39.97%)</title><rect x="266.5" y="195.0" width="471.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.5" y="206.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (69 samples, 0.35%)</title><rect x="266.5" y="179.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.5" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (21 samples, 0.11%)</title><rect x="266.5" y="163.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="269.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (48 samples, 0.25%)</title><rect x="267.8" y="163.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.25%)</title><rect x="267.8" y="147.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="270.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7,753 samples, 39.61%)</title><rect x="270.7" y="179.0" width="467.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.7" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7,753 samples, 39.61%)</title><rect x="270.7" y="163.0" width="467.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.7" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (18 samples, 0.09%)</title><rect x="270.7" y="147.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="273.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (6,897 samples, 35.24%)</title><rect x="271.8" y="147.0" width="415.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.8" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (5,652 samples, 28.88%)</title><rect x="271.8" y="131.0" width="340.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="274.8" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (1,245 samples, 6.36%)</title><rect x="612.5" y="131.0" width="75.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="615.5" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (708 samples, 3.62%)</title><rect x="687.6" y="147.0" width="42.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="158.0">one/..</text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="687.6" y="131.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.05%)</title><rect x="687.9" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.05%)</title><rect x="687.9" y="115.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.05%)</title><rect x="687.9" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.9" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="687.9" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="690.9" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.03%)</title><rect x="688.4" y="131.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="691.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (677 samples, 3.46%)</title><rect x="688.7" y="131.0" width="40.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.7" y="142.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (677 samples, 3.46%)</title><rect x="688.7" y="115.0" width="40.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.7" y="126.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (677 samples, 3.46%)</title><rect x="688.7" y="99.0" width="40.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.7" y="110.0">one..</text>
</g>
<g>
<title>char[] (638 samples, 3.26%)</title><rect x="688.7" y="83.0" width="38.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="691.7" y="94.0">cha..</text>
</g>
<g>
<title>java.lang.String (16 samples, 0.08%)</title><rect x="727.2" y="83.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="730.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.12%)</title><rect x="728.2" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.12%)</title><rect x="728.2" y="67.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.12%)</title><rect x="728.2" y="51.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.2" y="62.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.12%)</title><rect x="728.2" y="35.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="731.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.04%)</title><rect x="729.8" y="131.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.04%)</title><rect x="729.8" y="115.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.04%)</title><rect x="729.8" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.03%)</title><rect x="729.9" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.9" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="729.9" y="67.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="732.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (75 samples, 0.38%)</title><rect x="730.3" y="147.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (75 samples, 0.38%)</title><rect x="730.3" y="131.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.3" y="142.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.38%)</title><rect x="730.3" y="115.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.03%)</title><rect x="734.8" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="734.8" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="734.8" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.8" y="126.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (43 samples, 0.22%)</title><rect x="735.1" y="147.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.1" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (23 samples, 0.12%)</title><rect x="735.1" y="131.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.12%)</title><rect x="735.1" y="115.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.12%)</title><rect x="735.1" y="99.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.12%)</title><rect x="735.1" y="83.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="738.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (20 samples, 0.10%)</title><rect x="736.5" y="131.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.5" y="142.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.09%)</title><rect x="736.5" y="115.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (17 samples, 0.09%)</title><rect x="736.5" y="99.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (17 samples, 0.09%)</title><rect x="736.5" y="83.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.5" y="94.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (17 samples, 0.09%)</title><rect x="736.5" y="67.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.5" y="78.0"></text>
</g>
<g>
<title>java.nio.channels.Channels$1 (17 samples, 0.09%)</title><rect x="736.5" y="51.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="739.5" y="62.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (7 samples, 0.04%)</title><rect x="737.7" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (7 samples, 0.04%)</title><rect x="737.7" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.7" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (7 samples, 0.04%)</title><rect x="737.7" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.04%)</title><rect x="737.7" y="99.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="740.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.getNodeReplica (144 samples, 0.74%)</title><rect x="738.1" y="195.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (136 samples, 0.69%)</title><rect x="738.1" y="179.0" width="8.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="741.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (8 samples, 0.04%)</title><rect x="746.3" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.04%)</title><rect x="746.3" y="163.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="749.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.handleExternal (1,007 samples, 5.15%)</title><rect x="746.8" y="195.0" width="60.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.8" y="206.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (124 samples, 0.63%)</title><rect x="746.8" y="179.0" width="7.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="749.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (591 samples, 3.02%)</title><rect x="754.3" y="179.0" width="35.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.3" y="190.0">one..</text>
</g>
<g>
<title>byte[] (244 samples, 1.25%)</title><rect x="754.3" y="163.0" width="14.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="757.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (199 samples, 1.02%)</title><rect x="769.0" y="163.0" width="12.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="772.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (148 samples, 0.76%)</title><rect x="781.0" y="163.0" width="8.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="784.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.syncValues (20 samples, 0.10%)</title><rect x="789.9" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (10 samples, 0.05%)</title><rect x="790.5" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (8 samples, 0.04%)</title><rect x="790.6" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.04%)</title><rect x="790.6" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (8 samples, 0.04%)</title><rect x="790.6" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.03%)</title><rect x="790.6" y="99.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.03%)</title><rect x="790.6" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (5 samples, 0.03%)</title><rect x="790.6" y="67.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.6" y="78.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (5 samples, 0.03%)</title><rect x="790.6" y="51.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="793.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getBytes (5 samples, 0.03%)</title><rect x="791.1" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (267 samples, 1.36%)</title><rect x="791.4" y="179.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (267 samples, 1.36%)</title><rect x="791.4" y="163.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (267 samples, 1.36%)</title><rect x="791.4" y="147.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.4" y="158.0"></text>
</g>
<g>
<title>byte[] (267 samples, 1.36%)</title><rect x="791.4" y="131.0" width="16.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="794.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.handleInternal (2,007 samples, 10.25%)</title><rect x="807.5" y="195.0" width="121.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.5" y="206.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one.nio.http.Response (129 samples, 0.66%)</title><rect x="807.5" y="179.0" width="7.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="810.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (591 samples, 3.02%)</title><rect x="815.3" y="179.0" width="35.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.3" y="190.0">one..</text>
</g>
<g>
<title>byte[] (210 samples, 1.07%)</title><rect x="815.3" y="163.0" width="12.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="818.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (251 samples, 1.28%)</title><rect x="828.0" y="163.0" width="15.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="831.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.66%)</title><rect x="843.1" y="163.0" width="7.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="846.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (1,040 samples, 5.31%)</title><rect x="850.9" y="179.0" width="62.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.9" y="190.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (744 samples, 3.80%)</title><rect x="850.9" y="163.0" width="44.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.9" y="174.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (286 samples, 1.46%)</title><rect x="850.9" y="147.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.9" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (286 samples, 1.46%)</title><rect x="850.9" y="131.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.9" y="142.0"></text>
</g>
<g>
<title>byte[] (286 samples, 1.46%)</title><rect x="850.9" y="115.0" width="17.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="853.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (458 samples, 2.34%)</title><rect x="868.2" y="147.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.2" y="158.0">r..</text>
</g>
<g>
<title>byte[] (167 samples, 0.85%)</title><rect x="868.2" y="131.0" width="10.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="871.2" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (291 samples, 1.49%)</title><rect x="878.2" y="131.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (291 samples, 1.49%)</title><rect x="878.2" y="115.0" width="17.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="881.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.composeFromBytes (296 samples, 1.51%)</title><rect x="895.8" y="163.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (296 samples, 1.51%)</title><rect x="895.8" y="147.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (296 samples, 1.51%)</title><rect x="895.8" y="131.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (296 samples, 1.51%)</title><rect x="895.8" y="115.0" width="17.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="898.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (247 samples, 1.26%)</title><rect x="913.6" y="179.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (247 samples, 1.26%)</title><rect x="913.6" y="163.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (247 samples, 1.26%)</title><rect x="913.6" y="147.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.6" y="158.0"></text>
</g>
<g>
<title>byte[] (247 samples, 1.26%)</title><rect x="913.6" y="131.0" width="14.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="916.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.composeFromBytes (463 samples, 2.37%)</title><rect x="928.5" y="195.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.5" y="206.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (271 samples, 1.38%)</title><rect x="928.5" y="179.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (271 samples, 1.38%)</title><rect x="928.5" y="163.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.5" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (271 samples, 1.38%)</title><rect x="928.5" y="147.0" width="16.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="931.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (192 samples, 0.98%)</title><rect x="944.9" y="179.0" width="11.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="947.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (380 samples, 1.94%)</title><rect x="956.4" y="259.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.4" y="270.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (380 samples, 1.94%)</title><rect x="956.4" y="243.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.4" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (380 samples, 1.94%)</title><rect x="956.4" y="227.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="959.4" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (147 samples, 0.75%)</title><rect x="956.4" y="211.0" width="8.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="959.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (233 samples, 1.19%)</title><rect x="965.3" y="211.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.3" y="222.0"></text>
</g>
<g>
<title>byte[] (233 samples, 1.19%)</title><rect x="965.3" y="195.0" width="14.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="968.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,501 samples, 7.67%)</title><rect x="979.3" y="291.0" width="90.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.3" y="302.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (252 samples, 1.29%)</title><rect x="979.3" y="275.0" width="15.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="982.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (455 samples, 2.32%)</title><rect x="994.5" y="275.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.5" y="286.0">o..</text>
</g>
<g>
<title>java.lang.String[] (455 samples, 2.32%)</title><rect x="994.5" y="259.0" width="27.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="997.5" y="270.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (794 samples, 4.06%)</title><rect x="1022.0" y="275.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.0" y="286.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (794 samples, 4.06%)</title><rect x="1022.0" y="259.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.0" y="270.0">one/..</text>
</g>
<g>
<title>char[] (392 samples, 2.00%)</title><rect x="1022.0" y="243.0" width="23.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1025.0" y="254.0">c..</text>
</g>
<g>
<title>java.lang.String (136 samples, 0.69%)</title><rect x="1045.6" y="243.0" width="8.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1048.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (266 samples, 1.36%)</title><rect x="1053.8" y="243.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (266 samples, 1.36%)</title><rect x="1053.8" y="227.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (266 samples, 1.36%)</title><rect x="1053.8" y="211.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.8" y="222.0"></text>
</g>
<g>
<title>byte[] (266 samples, 1.36%)</title><rect x="1053.8" y="195.0" width="16.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1056.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,993 samples, 10.18%)</title><rect x="1069.8" y="291.0" width="120.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.8" y="302.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,993 samples, 10.18%)</title><rect x="1069.8" y="275.0" width="120.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.8" y="286.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (959 samples, 4.90%)</title><rect x="1069.8" y="259.0" width="57.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1072.8" y="270.0">char[]</text>
</g>
<g>
<title>java.lang.String (384 samples, 1.96%)</title><rect x="1127.7" y="259.0" width="23.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1130.7" y="270.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (650 samples, 3.32%)</title><rect x="1150.8" y="259.0" width="39.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.8" y="270.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (650 samples, 3.32%)</title><rect x="1150.8" y="243.0" width="39.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.8" y="254.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (650 samples, 3.32%)</title><rect x="1150.8" y="227.0" width="39.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.8" y="238.0">jav..</text>
</g>
<g>
<title>byte[] (650 samples, 3.32%)</title><rect x="1150.8" y="211.0" width="39.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1153.8" y="222.0">byt..</text>
</g>
</g>
</svg>
