<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (1,230 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (628 samples, 51.06%)</title><rect x="10.0" y="691.0" width="602.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (628 samples, 51.06%)</title><rect x="10.0" y="675.0" width="602.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (628 samples, 51.06%)</title><rect x="10.0" y="659.0" width="602.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (541 samples, 43.98%)</title><rect x="10.0" y="643.0" width="519.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (216 samples, 17.56%)</title><rect x="10.0" y="627.0" width="207.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (111 samples, 9.02%)</title><rect x="10.0" y="611.0" width="106.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (111 samples, 9.02%)</title><rect x="10.0" y="595.0" width="106.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (111 samples, 9.02%)</title><rect x="10.0" y="579.0" width="106.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (111 samples, 9.02%)</title><rect x="10.0" y="563.0" width="106.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.33%)</title><rect x="10.0" y="547.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.33%)</title><rect x="10.0" y="531.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (4 samples, 0.33%)</title><rect x="10.0" y="515.0" width="3.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (104 samples, 8.46%)</title><rect x="13.8" y="547.0" width="99.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.8" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (104 samples, 8.46%)</title><rect x="13.8" y="531.0" width="99.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.8" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (104 samples, 8.46%)</title><rect x="13.8" y="515.0" width="99.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.8" y="526.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (72 samples, 5.85%)</title><rect x="13.8" y="499.0" width="69.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.8" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (72 samples, 5.85%)</title><rect x="13.8" y="483.0" width="69.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.8" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (71 samples, 5.77%)</title><rect x="13.8" y="467.0" width="68.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.8" y="478.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (71 samples, 5.77%)</title><rect x="13.8" y="451.0" width="68.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.8" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (71 samples, 5.77%)</title><rect x="13.8" y="435.0" width="68.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.8" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (71 samples, 5.77%)</title><rect x="13.8" y="419.0" width="68.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.8" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (71 samples, 5.77%)</title><rect x="13.8" y="403.0" width="68.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.8" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (71 samples, 5.77%)</title><rect x="13.8" y="387.0" width="68.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.8" y="398.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.33%)</title><rect x="13.8" y="371.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.33%)</title><rect x="13.8" y="355.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.16%)</title><rect x="13.8" y="339.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="16.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.16%)</title><rect x="15.8" y="339.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (2 samples, 0.16%)</title><rect x="15.8" y="323.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.16%)</title><rect x="15.8" y="307.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.16%)</title><rect x="15.8" y="291.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (2 samples, 0.16%)</title><rect x="15.8" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.16%)</title><rect x="15.8" y="259.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="15.8" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="15.8" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/540628327.get$Lambda (1 samples, 0.08%)</title><rect x="15.8" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$234 (1 samples, 0.08%)</title><rect x="15.8" y="195.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="18.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.08%)</title><rect x="16.7" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.08%)</title><rect x="16.7" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.08%)</title><rect x="16.7" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.08%)</title><rect x="16.7" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.08%)</title><rect x="16.7" y="179.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.08%)</title><rect x="16.7" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.08%)</title><rect x="16.7" y="147.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.08%)</title><rect x="16.7" y="131.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.08%)</title><rect x="16.7" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.08%)</title><rect x="16.7" y="99.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.08%)</title><rect x="16.7" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.7" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.08%)</title><rect x="16.7" y="67.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="19.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.08%)</title><rect x="17.7" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.08%)</title><rect x="17.7" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.08%)</title><rect x="17.7" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (66 samples, 5.37%)</title><rect x="18.6" y="371.0" width="63.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.6" y="382.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.24%)</title><rect x="18.6" y="355.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.24%)</title><rect x="18.6" y="339.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.get$Lambda (1 samples, 0.08%)</title><rect x="18.6" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$201 (1 samples, 0.08%)</title><rect x="18.6" y="307.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="21.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/234658767.get$Lambda (2 samples, 0.16%)</title><rect x="19.6" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$204 (2 samples, 0.16%)</title><rect x="19.6" y="307.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 4.15%)</title><rect x="21.5" y="355.0" width="48.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.5" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 4.15%)</title><rect x="21.5" y="339.0" width="48.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.5" y="350.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (51 samples, 4.15%)</title><rect x="21.5" y="323.0" width="48.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.5" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (51 samples, 4.15%)</title><rect x="21.5" y="307.0" width="48.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.5" y="318.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="21.5" y="291.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="24.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.08%)</title><rect x="22.5" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.08%)</title><rect x="22.5" y="275.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.08%)</title><rect x="23.4" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.08%)</title><rect x="23.4" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.08%)</title><rect x="23.4" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.08%)</title><rect x="23.4" y="243.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.08%)</title><rect x="23.4" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.08%)</title><rect x="23.4" y="211.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (48 samples, 3.90%)</title><rect x="24.4" y="291.0" width="46.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.4" y="302.0">jdk/..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.24%)</title><rect x="24.4" y="275.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.24%)</title><rect x="24.4" y="259.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.24%)</title><rect x="24.4" y="243.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.4" y="254.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.24%)</title><rect x="24.4" y="227.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="27.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.08%)</title><rect x="27.3" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.3" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.08%)</title><rect x="27.3" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.3" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="27.3" y="243.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.49%)</title><rect x="28.2" y="275.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.49%)</title><rect x="28.2" y="259.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.49%)</title><rect x="28.2" y="243.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.2" y="254.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.49%)</title><rect x="28.2" y="227.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.2" y="238.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.08%)</title><rect x="34.0" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.0" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.08%)</title><rect x="34.0" y="259.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="37.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (31 samples, 2.52%)</title><rect x="34.9" y="275.0" width="29.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.9" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.08%)</title><rect x="34.9" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="34.9" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="34.9" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.get$Lambda (1 samples, 0.08%)</title><rect x="34.9" y="211.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.9" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$224 (1 samples, 0.08%)</title><rect x="34.9" y="195.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="37.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 1.54%)</title><rect x="35.9" y="259.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.65%)</title><rect x="35.9" y="243.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.65%)</title><rect x="35.9" y="227.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.65%)</title><rect x="35.9" y="211.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.65%)</title><rect x="35.9" y="195.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.9" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.65%)</title><rect x="35.9" y="179.0" width="7.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="38.9" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.33%)</title><rect x="43.6" y="243.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.33%)</title><rect x="43.6" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.33%)</title><rect x="43.6" y="211.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (4 samples, 0.33%)</title><rect x="43.6" y="195.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.08%)</title><rect x="47.4" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.08%)</title><rect x="47.4" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.08%)</title><rect x="47.4" y="211.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="50.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.test (6 samples, 0.49%)</title><rect x="48.4" y="243.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6 samples, 0.49%)</title><rect x="48.4" y="227.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (6 samples, 0.49%)</title><rect x="48.4" y="211.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6 samples, 0.49%)</title><rect x="48.4" y="195.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (6 samples, 0.49%)</title><rect x="48.4" y="179.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.4" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6 samples, 0.49%)</title><rect x="48.4" y="163.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (6 samples, 0.49%)</title><rect x="48.4" y="147.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6 samples, 0.49%)</title><rect x="48.4" y="131.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.49%)</title><rect x="48.4" y="115.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.49%)</title><rect x="48.4" y="99.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.08%)</title><rect x="48.4" y="83.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.41%)</title><rect x="49.3" y="83.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.3" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.41%)</title><rect x="49.3" y="67.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="52.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (11 samples, 0.89%)</title><rect x="54.1" y="259.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.89%)</title><rect x="54.1" y="243.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.89%)</title><rect x="54.1" y="227.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.16%)</title><rect x="54.1" y="211.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.1" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.08%)</title><rect x="56.0" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.0" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.08%)</title><rect x="56.0" y="195.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.57%)</title><rect x="57.0" y="211.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (7 samples, 0.57%)</title><rect x="57.0" y="195.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.57%)</title><rect x="57.0" y="179.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="57.0" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="57.0" y="147.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (1 samples, 0.08%)</title><rect x="57.0" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.0" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.08%)</title><rect x="57.0" y="115.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.08%)</title><rect x="58.0" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (1 samples, 0.08%)</title><rect x="58.0" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.08%)</title><rect x="58.0" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.08%)</title><rect x="58.0" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.08%)</title><rect x="58.0" y="99.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.08%)</title><rect x="58.0" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.08%)</title><rect x="58.0" y="67.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="58.0" y="51.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="58.0" y="35.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="61.0" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.16%)</title><rect x="58.9" y="163.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.16%)</title><rect x="58.9" y="147.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.08%)</title><rect x="58.9" y="131.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="58.9" y="115.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="58.9" y="99.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="61.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.08%)</title><rect x="59.9" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.08%)</title><rect x="59.9" y="115.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="62.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.24%)</title><rect x="60.8" y="163.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.24%)</title><rect x="60.8" y="147.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.08%)</title><rect x="63.7" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.08%)</title><rect x="63.7" y="195.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="66.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.16%)</title><rect x="64.7" y="275.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.08%)</title><rect x="64.7" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.7" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="64.7" y="243.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="67.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="65.6" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.08%)</title><rect x="65.6" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (1 samples, 0.08%)</title><rect x="65.6" y="227.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="65.6" y="211.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.08%)</title><rect x="65.6" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.08%)</title><rect x="65.6" y="179.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.6" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="65.6" y="163.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="68.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.16%)</title><rect x="66.6" y="275.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.16%)</title><rect x="66.6" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.16%)</title><rect x="66.6" y="243.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.16%)</title><rect x="66.6" y="227.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (2 samples, 0.16%)</title><rect x="66.6" y="211.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="66.6" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.16%)</title><rect x="66.6" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.16%)</title><rect x="66.6" y="163.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.6" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.16%)</title><rect x="66.6" y="147.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.16%)</title><rect x="68.5" y="275.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.08%)</title><rect x="68.5" y="259.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="71.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.08%)</title><rect x="69.5" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="69.5" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.16%)</title><rect x="70.4" y="355.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="73.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (10 samples, 0.81%)</title><rect x="72.4" y="355.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="72.4" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="72.4" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$187/1164590468.get$Lambda (1 samples, 0.08%)</title><rect x="72.4" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$187 (1 samples, 0.08%)</title><rect x="72.4" y="291.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="75.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (1 samples, 0.08%)</title><rect x="73.3" y="339.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="76.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (2 samples, 0.16%)</title><rect x="74.3" y="339.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (1 samples, 0.08%)</title><rect x="76.2" y="339.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="79.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.16%)</title><rect x="77.2" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.16%)</title><rect x="77.2" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.16%)</title><rect x="77.2" y="307.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.16%)</title><rect x="77.2" y="291.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.16%)</title><rect x="77.2" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.16%)</title><rect x="77.2" y="259.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (2 samples, 0.16%)</title><rect x="77.2" y="243.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.16%)</title><rect x="77.2" y="227.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.16%)</title><rect x="77.2" y="211.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="77.2" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="77.2" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$191/1544493240.get$Lambda (1 samples, 0.08%)</title><rect x="77.2" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$191 (1 samples, 0.08%)</title><rect x="77.2" y="147.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="80.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.08%)</title><rect x="78.1" y="195.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.16%)</title><rect x="79.1" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.08%)</title><rect x="79.1" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="82.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.08%)</title><rect x="80.0" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.08%)</title><rect x="80.0" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.0" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="80.0" y="291.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="83.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1 samples, 0.08%)</title><rect x="81.0" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="81.0" y="323.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="84.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="82.0" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="82.0" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="82.0" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.08%)</title><rect x="82.9" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.08%)</title><rect x="82.9" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="82.9" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="82.9" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="82.9" y="435.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="85.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (31 samples, 2.52%)</title><rect x="83.9" y="499.0" width="29.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="83.9" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="83.9" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1879978457.get$Lambda (1 samples, 0.08%)</title><rect x="83.9" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$181 (1 samples, 0.08%)</title><rect x="83.9" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.16%)</title><rect x="84.8" y="483.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.16%)</title><rect x="84.8" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1879978457.apply (2 samples, 0.16%)</title><rect x="84.8" y="451.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.16%)</title><rect x="84.8" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.16%)</title><rect x="84.8" y="419.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.16%)</title><rect x="84.8" y="403.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="87.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.08%)</title><rect x="86.7" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.08%)</title><rect x="86.7" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="86.7" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="86.7" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="86.7" y="419.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (27 samples, 2.20%)</title><rect x="87.7" y="483.0" width="25.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.7" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="87.7" y="467.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="87.7" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.get$Lambda (1 samples, 0.08%)</title><rect x="87.7" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (1 samples, 0.08%)</title><rect x="87.7" y="419.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="90.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (25 samples, 2.03%)</title><rect x="88.7" y="467.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.7" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (25 samples, 2.03%)</title><rect x="88.7" y="451.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24 samples, 1.95%)</title><rect x="88.7" y="435.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (24 samples, 1.95%)</title><rect x="88.7" y="419.0" width="23.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (24 samples, 1.95%)</title><rect x="88.7" y="403.0" width="23.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.7" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (24 samples, 1.95%)</title><rect x="88.7" y="387.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="88.7" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="88.7" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.get$Lambda (1 samples, 0.08%)</title><rect x="88.7" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$177 (1 samples, 0.08%)</title><rect x="88.7" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="91.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8 samples, 0.65%)</title><rect x="89.6" y="371.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.65%)</title><rect x="89.6" y="355.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (8 samples, 0.65%)</title><rect x="89.6" y="339.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (7 samples, 0.57%)</title><rect x="89.6" y="323.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (7 samples, 0.57%)</title><rect x="89.6" y="307.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (7 samples, 0.57%)</title><rect x="89.6" y="291.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (7 samples, 0.57%)</title><rect x="89.6" y="275.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.24%)</title><rect x="89.6" y="259.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.24%)</title><rect x="89.6" y="243.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.16%)</title><rect x="89.6" y="227.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.16%)</title><rect x="89.6" y="211.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (2 samples, 0.16%)</title><rect x="89.6" y="195.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="89.6" y="179.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.get$Lambda (2 samples, 0.16%)</title><rect x="89.6" y="163.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (2 samples, 0.16%)</title><rect x="89.6" y="147.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="92.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.08%)</title><rect x="91.5" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.08%)</title><rect x="91.5" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.5" y="222.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.08%)</title><rect x="91.5" y="195.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="94.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.33%)</title><rect x="92.5" y="259.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.16%)</title><rect x="92.5" y="243.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.16%)</title><rect x="92.5" y="227.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="95.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.16%)</title><rect x="94.4" y="243.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.4" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.16%)</title><rect x="94.4" y="227.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="97.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="96.3" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="96.3" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="96.3" y="291.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="99.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (15 samples, 1.22%)</title><rect x="97.3" y="371.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1 samples, 0.08%)</title><rect x="97.3" y="355.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="100.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (14 samples, 1.14%)</title><rect x="98.3" y="355.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.3" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.08%)</title><rect x="98.3" y="339.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.08%)</title><rect x="99.2" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.08%)</title><rect x="99.2" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.08%)</title><rect x="99.2" y="307.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="102.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.08%)</title><rect x="100.2" y="339.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="103.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.16%)</title><rect x="101.1" y="339.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="104.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.33%)</title><rect x="103.1" y="339.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.33%)</title><rect x="103.1" y="323.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.16%)</title><rect x="103.1" y="307.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="106.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.08%)</title><rect x="105.0" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.08%)</title><rect x="105.0" y="291.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="108.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.08%)</title><rect x="105.9" y="307.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (1 samples, 0.08%)</title><rect x="105.9" y="291.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="108.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.24%)</title><rect x="106.9" y="339.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (1 samples, 0.08%)</title><rect x="106.9" y="323.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="109.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.16%)</title><rect x="107.9" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.16%)</title><rect x="107.9" y="307.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.08%)</title><rect x="107.9" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="110.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (1 samples, 0.08%)</title><rect x="108.8" y="291.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="111.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.08%)</title><rect x="109.8" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.08%)</title><rect x="109.8" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.08%)</title><rect x="109.8" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="109.8" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.08%)</title><rect x="109.8" y="275.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.08%)</title><rect x="109.8" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="109.8" y="243.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="112.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.08%)</title><rect x="110.7" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (1 samples, 0.08%)</title><rect x="110.7" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="110.7" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.get$Lambda (1 samples, 0.08%)</title><rect x="110.7" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$149 (1 samples, 0.08%)</title><rect x="110.7" y="275.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="113.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="111.7" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="111.7" y="419.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="111.7" y="403.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.08%)</title><rect x="112.7" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.08%)</title><rect x="112.7" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.08%)</title><rect x="112.7" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1077689464.linkToTargetMethod (1 samples, 0.08%)</title><rect x="112.7" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20537605.invoke (1 samples, 0.08%)</title><rect x="112.7" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647528812.invoke (1 samples, 0.08%)</title><rect x="112.7" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="112.7" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.08%)</title><rect x="112.7" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.08%)</title><rect x="112.7" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.7" y="350.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="112.7" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1 samples, 0.08%)</title><rect x="113.6" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.08%)</title><rect x="113.6" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.08%)</title><rect x="113.6" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.08%)</title><rect x="113.6" y="499.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="116.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.16%)</title><rect x="114.6" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.16%)</title><rect x="114.6" y="531.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="117.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (105 samples, 8.54%)</title><rect x="116.5" y="611.0" width="100.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.5" y="622.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (105 samples, 8.54%)</title><rect x="116.5" y="595.0" width="100.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.5" y="606.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (105 samples, 8.54%)</title><rect x="116.5" y="579.0" width="100.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.5" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (105 samples, 8.54%)</title><rect x="116.5" y="563.0" width="100.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.5" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (105 samples, 8.54%)</title><rect x="116.5" y="547.0" width="100.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.5" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (105 samples, 8.54%)</title><rect x="116.5" y="531.0" width="100.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.5" y="542.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 3.66%)</title><rect x="116.5" y="515.0" width="43.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.5" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 3.09%)</title><rect x="116.5" y="499.0" width="36.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.5" y="510.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (38 samples, 3.09%)</title><rect x="116.5" y="483.0" width="36.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.5" y="494.0">one..</text>
</g>
<g>
<title>byte[] (38 samples, 3.09%)</title><rect x="116.5" y="467.0" width="36.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.5" y="478.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.57%)</title><rect x="152.9" y="499.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.9" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.33%)</title><rect x="152.9" y="483.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.24%)</title><rect x="156.8" y="483.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.24%)</title><rect x="156.8" y="467.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.24%)</title><rect x="156.8" y="451.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.24%)</title><rect x="156.8" y="435.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.24%)</title><rect x="156.8" y="419.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="159.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (60 samples, 4.88%)</title><rect x="159.7" y="515.0" width="57.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="526.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 4.88%)</title><rect x="159.7" y="499.0" width="57.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.7" y="510.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 4.88%)</title><rect x="159.7" y="483.0" width="57.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="494.0">java/l..</text>
</g>
<g>
<title>java.lang.String (8 samples, 0.65%)</title><rect x="159.7" y="467.0" width="7.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="162.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (52 samples, 4.23%)</title><rect x="167.3" y="467.0" width="49.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.3" y="478.0">java/..</text>
</g>
<g>
<title>byte[] (52 samples, 4.23%)</title><rect x="167.3" y="451.0" width="49.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="170.3" y="462.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (8 samples, 0.65%)</title><rect x="217.2" y="627.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (8 samples, 0.65%)</title><rect x="217.2" y="611.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (8 samples, 0.65%)</title><rect x="217.2" y="595.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (8 samples, 0.65%)</title><rect x="217.2" y="579.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.2" y="590.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (8 samples, 0.65%)</title><rect x="217.2" y="563.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.2" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 0.65%)</title><rect x="217.2" y="547.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.65%)</title><rect x="217.2" y="531.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.65%)</title><rect x="217.2" y="515.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.65%)</title><rect x="217.2" y="499.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.65%)</title><rect x="217.2" y="483.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.2" y="494.0"></text>
</g>
<g>
<title>long[] (5 samples, 0.41%)</title><rect x="217.2" y="467.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="220.2" y="478.0"></text>
</g>
<g>
<title>short[] (3 samples, 0.24%)</title><rect x="222.0" y="467.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="225.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (317 samples, 25.77%)</title><rect x="224.9" y="627.0" width="304.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.9" y="638.0">ru/mail/polis/service/ReplicationHandler$..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (317 samples, 25.77%)</title><rect x="224.9" y="611.0" width="304.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.9" y="622.0">ru/mail/polis/service/ReplicationHandler...</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (259 samples, 21.06%)</title><rect x="224.9" y="595.0" width="248.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.9" y="606.0">ru/mail/polis/dao/DaoEngine.getVa..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (236 samples, 19.19%)</title><rect x="224.9" y="579.0" width="226.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.9" y="590.0">ru/mail/polis/dao/DaoEngine.ge..</text>
</g>
<g>
<title>java.util.NoSuchElementException (1 samples, 0.08%)</title><rect x="224.9" y="563.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.9" y="574.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (235 samples, 19.11%)</title><rect x="225.9" y="563.0" width="225.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.9" y="574.0">java/util/NoSuchElementExcepti..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (235 samples, 19.11%)</title><rect x="225.9" y="547.0" width="225.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.9" y="558.0">java/lang/RuntimeException.&lt;in..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (235 samples, 19.11%)</title><rect x="225.9" y="531.0" width="225.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.9" y="542.0">java/lang/Exception.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (235 samples, 19.11%)</title><rect x="225.9" y="515.0" width="225.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.9" y="526.0">java/lang/Throwable.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (235 samples, 19.11%)</title><rect x="225.9" y="499.0" width="225.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.9" y="510.0">java/lang/Throwable.fillInStac..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (235 samples, 19.11%)</title><rect x="225.9" y="483.0" width="225.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.9" y="494.0">java/lang/Throwable.fillInStac..</text>
</g>
<g>
<title>int[] (15 samples, 1.22%)</title><rect x="225.9" y="467.0" width="14.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="228.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 1.22%)</title><rect x="240.2" y="467.0" width="14.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="243.2" y="478.0"></text>
</g>
<g>
<title>long[] (146 samples, 11.87%)</title><rect x="254.6" y="467.0" width="140.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="257.6" y="478.0">long[]</text>
</g>
<g>
<title>long[] (58 samples, 4.72%)</title><rect x="394.7" y="467.0" width="55.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.7" y="478.0">long[]</text>
</g>
<g>
<title>short[] (1 samples, 0.08%)</title><rect x="450.3" y="467.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="453.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (23 samples, 1.87%)</title><rect x="451.3" y="579.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.3" y="590.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.Value (23 samples, 1.87%)</title><rect x="451.3" y="563.0" width="22.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="454.3" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (41 samples, 3.33%)</title><rect x="473.4" y="595.0" width="39.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.4" y="606.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.81%)</title><rect x="473.4" y="579.0" width="9.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="476.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 2.52%)</title><rect x="483.0" y="579.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.0" y="590.0">on..</text>
</g>
<g>
<title>byte[] (17 samples, 1.38%)</title><rect x="483.0" y="563.0" width="16.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="486.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 1.14%)</title><rect x="499.3" y="563.0" width="13.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="502.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (17 samples, 1.38%)</title><rect x="512.7" y="595.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 1.38%)</title><rect x="512.7" y="579.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 1.38%)</title><rect x="512.7" y="563.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 1.38%)</title><rect x="512.7" y="547.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 1.38%)</title><rect x="512.7" y="531.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.7" y="542.0"></text>
</g>
<g>
<title>byte[] (17 samples, 1.38%)</title><rect x="512.7" y="515.0" width="16.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="515.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.41%)</title><rect x="529.0" y="643.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.41%)</title><rect x="529.0" y="627.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.41%)</title><rect x="529.0" y="611.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (5 samples, 0.41%)</title><rect x="529.0" y="595.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (5 samples, 0.41%)</title><rect x="529.0" y="579.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.33%)</title><rect x="529.0" y="563.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.33%)</title><rect x="529.0" y="547.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.24%)</title><rect x="529.0" y="531.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.24%)</title><rect x="529.0" y="515.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$138/1868095322.apply (3 samples, 0.24%)</title><rect x="529.0" y="499.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$1 (3 samples, 0.24%)</title><rect x="529.0" y="483.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.mergeValues (1 samples, 0.08%)</title><rect x="529.0" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.08%)</title><rect x="529.0" y="451.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (1 samples, 0.08%)</title><rect x="529.0" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.0" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.08%)</title><rect x="529.0" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.0" y="430.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (1 samples, 0.08%)</title><rect x="529.0" y="403.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="532.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (2 samples, 0.16%)</title><rect x="530.0" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.16%)</title><rect x="530.0" y="451.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.0" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="530.0" y="435.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="533.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.08%)</title><rect x="530.9" y="435.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.08%)</title><rect x="531.9" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.08%)</title><rect x="531.9" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (1 samples, 0.08%)</title><rect x="531.9" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (1 samples, 0.08%)</title><rect x="531.9" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (1 samples, 0.08%)</title><rect x="531.9" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.08%)</title><rect x="531.9" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.08%)</title><rect x="531.9" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="531.9" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.08%)</title><rect x="531.9" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.9" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="531.9" y="387.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="534.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.08%)</title><rect x="532.8" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="532.8" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="532.8" y="531.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="535.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.89%)</title><rect x="533.8" y="643.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.89%)</title><rect x="533.8" y="627.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.89%)</title><rect x="533.8" y="611.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.89%)</title><rect x="533.8" y="595.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.89%)</title><rect x="533.8" y="579.0" width="10.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="536.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (11 samples, 0.89%)</title><rect x="544.4" y="643.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.89%)</title><rect x="544.4" y="627.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.89%)</title><rect x="544.4" y="611.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (11 samples, 0.89%)</title><rect x="544.4" y="595.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.89%)</title><rect x="544.4" y="579.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.89%)</title><rect x="544.4" y="563.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.89%)</title><rect x="544.4" y="547.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.89%)</title><rect x="544.4" y="531.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.89%)</title><rect x="544.4" y="515.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.89%)</title><rect x="544.4" y="499.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (11 samples, 0.89%)</title><rect x="544.4" y="483.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (11 samples, 0.89%)</title><rect x="544.4" y="467.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.89%)</title><rect x="544.4" y="451.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2 samples, 0.16%)</title><rect x="544.4" y="435.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="547.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.73%)</title><rect x="546.3" y="435.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9 samples, 0.73%)</title><rect x="546.3" y="419.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.73%)</title><rect x="546.3" y="403.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.16%)</title><rect x="546.3" y="387.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/540628327.apply (2 samples, 0.16%)</title><rect x="546.3" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.16%)</title><rect x="546.3" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.16%)</title><rect x="546.3" y="339.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.16%)</title><rect x="546.3" y="323.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="546.3" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="546.3" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/885673150.get$Lambda (1 samples, 0.08%)</title><rect x="546.3" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$237 (1 samples, 0.08%)</title><rect x="546.3" y="259.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="549.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.08%)</title><rect x="547.2" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.08%)</title><rect x="547.2" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.08%)</title><rect x="547.2" y="275.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="550.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.57%)</title><rect x="548.2" y="387.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.57%)</title><rect x="548.2" y="371.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (7 samples, 0.57%)</title><rect x="548.2" y="355.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.57%)</title><rect x="548.2" y="339.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.57%)</title><rect x="548.2" y="323.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (7 samples, 0.57%)</title><rect x="548.2" y="307.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.57%)</title><rect x="548.2" y="291.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.16%)</title><rect x="548.2" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.16%)</title><rect x="548.2" y="259.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="548.2" y="243.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="548.2" y="227.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.16%)</title><rect x="548.2" y="211.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="551.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (4 samples, 0.33%)</title><rect x="550.1" y="275.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.33%)</title><rect x="550.1" y="259.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.33%)</title><rect x="550.1" y="243.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.24%)</title><rect x="550.1" y="227.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="553.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="553.0" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.08%)</title><rect x="553.0" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="553.0" y="195.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="556.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.08%)</title><rect x="554.0" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.08%)</title><rect x="554.0" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.08%)</title><rect x="554.0" y="243.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="557.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60 samples, 4.88%)</title><rect x="554.9" y="643.0" width="57.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.9" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (60 samples, 4.88%)</title><rect x="554.9" y="627.0" width="57.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.9" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (54 samples, 4.39%)</title><rect x="554.9" y="611.0" width="51.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.9" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (54 samples, 4.39%)</title><rect x="554.9" y="595.0" width="51.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.9" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (54 samples, 4.39%)</title><rect x="554.9" y="579.0" width="51.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.9" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.16%)</title><rect x="554.9" y="563.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.16%)</title><rect x="554.9" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.16%)</title><rect x="554.9" y="531.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.16%)</title><rect x="554.9" y="515.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.08%)</title><rect x="554.9" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.08%)</title><rect x="554.9" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="554.9" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.08%)</title><rect x="554.9" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.08%)</title><rect x="554.9" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.9" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="554.9" y="419.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="557.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.08%)</title><rect x="555.9" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="555.9" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="555.9" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221/1525410965.get$Lambda (1 samples, 0.08%)</title><rect x="555.9" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221 (1 samples, 0.08%)</title><rect x="555.9" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="558.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (52 samples, 4.23%)</title><rect x="556.8" y="563.0" width="49.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.8" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (52 samples, 4.23%)</title><rect x="556.8" y="547.0" width="49.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.8" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52 samples, 4.23%)</title><rect x="556.8" y="531.0" width="49.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.8" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52 samples, 4.23%)</title><rect x="556.8" y="515.0" width="49.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="526.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (25 samples, 2.03%)</title><rect x="556.8" y="499.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 2.03%)</title><rect x="556.8" y="483.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (25 samples, 2.03%)</title><rect x="556.8" y="467.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.8" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (25 samples, 2.03%)</title><rect x="556.8" y="451.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 2.03%)</title><rect x="556.8" y="435.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.8" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (25 samples, 2.03%)</title><rect x="556.8" y="419.0" width="24.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.8" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (25 samples, 2.03%)</title><rect x="556.8" y="403.0" width="24.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.8" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (25 samples, 2.03%)</title><rect x="556.8" y="387.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.8" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 2.03%)</title><rect x="556.8" y="371.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.8" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (25 samples, 2.03%)</title><rect x="556.8" y="355.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.8" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (24 samples, 1.95%)</title><rect x="556.8" y="339.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.8" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (24 samples, 1.95%)</title><rect x="556.8" y="323.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.8" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.16%)</title><rect x="556.8" y="307.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.16%)</title><rect x="556.8" y="291.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="556.8" y="275.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="556.8" y="259.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.16%)</title><rect x="556.8" y="243.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="559.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (22 samples, 1.79%)</title><rect x="558.7" y="307.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.7" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.16%)</title><rect x="558.7" y="291.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.16%)</title><rect x="558.7" y="275.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.16%)</title><rect x="558.7" y="259.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="561.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (20 samples, 1.63%)</title><rect x="560.7" y="291.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (1 samples, 0.08%)</title><rect x="560.7" y="275.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="563.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (14 samples, 1.14%)</title><rect x="561.6" y="275.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1576900234.linkToTargetMethod (1 samples, 0.08%)</title><rect x="561.6" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1664582163.invokeStatic (1 samples, 0.08%)</title><rect x="561.6" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.get$Lambda (1 samples, 0.08%)</title><rect x="561.6" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$249 (1 samples, 0.08%)</title><rect x="561.6" y="211.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="564.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.33%)</title><rect x="562.6" y="259.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.16%)</title><rect x="562.6" y="243.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.16%)</title><rect x="562.6" y="227.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.16%)</title><rect x="562.6" y="211.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.08%)</title><rect x="562.6" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.08%)</title><rect x="562.6" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.08%)</title><rect x="562.6" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.08%)</title><rect x="562.6" y="147.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="565.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$245/1990067422.get (1 samples, 0.08%)</title><rect x="563.5" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1 samples, 0.08%)</title><rect x="563.5" y="179.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="566.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.16%)</title><rect x="564.5" y="243.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2 samples, 0.16%)</title><rect x="564.5" y="227.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.08%)</title><rect x="566.4" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.08%)</title><rect x="566.4" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.08%)</title><rect x="566.4" y="227.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="569.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (1 samples, 0.08%)</title><rect x="567.4" y="259.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="570.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (1 samples, 0.08%)</title><rect x="568.3" y="259.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="571.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="569.3" y="259.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="572.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.41%)</title><rect x="570.3" y="259.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (5 samples, 0.41%)</title><rect x="570.3" y="243.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 0.41%)</title><rect x="570.3" y="227.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (1 samples, 0.08%)</title><rect x="570.3" y="211.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="573.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.16%)</title><rect x="571.2" y="211.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.16%)</title><rect x="571.2" y="195.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="571.2" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="571.2" y="163.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$258/1539664908.get$Lambda (1 samples, 0.08%)</title><rect x="571.2" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$258 (1 samples, 0.08%)</title><rect x="571.2" y="131.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="574.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.08%)</title><rect x="572.2" y="179.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.08%)</title><rect x="572.2" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.08%)</title><rect x="572.2" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.08%)</title><rect x="572.2" y="131.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="575.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.08%)</title><rect x="573.1" y="211.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="573.1" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (1 samples, 0.08%)</title><rect x="573.1" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="573.1" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.08%)</title><rect x="573.1" y="147.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.08%)</title><rect x="573.1" y="131.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="576.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.08%)</title><rect x="574.1" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.08%)</title><rect x="574.1" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="574.1" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (1 samples, 0.08%)</title><rect x="574.1" y="163.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="574.1" y="147.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.08%)</title><rect x="574.1" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.08%)</title><rect x="574.1" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="577.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (5 samples, 0.41%)</title><rect x="575.1" y="275.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.24%)</title><rect x="575.1" y="259.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.16%)</title><rect x="575.1" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.08%)</title><rect x="575.1" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.1" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.08%)</title><rect x="575.1" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="578.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.08%)</title><rect x="576.0" y="227.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.08%)</title><rect x="576.0" y="211.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="579.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.08%)</title><rect x="577.0" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.08%)</title><rect x="577.0" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.08%)</title><rect x="577.0" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.08%)</title><rect x="577.0" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.08%)</title><rect x="577.0" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.08%)</title><rect x="577.0" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.0" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.08%)</title><rect x="577.0" y="147.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="580.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (1 samples, 0.08%)</title><rect x="577.9" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (1 samples, 0.08%)</title><rect x="577.9" y="243.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="580.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (1 samples, 0.08%)</title><rect x="578.9" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (1 samples, 0.08%)</title><rect x="578.9" y="243.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="581.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (1 samples, 0.08%)</title><rect x="579.9" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.08%)</title><rect x="579.9" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.08%)</title><rect x="579.9" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.08%)</title><rect x="579.9" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="582.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (27 samples, 2.20%)</title><rect x="580.8" y="499.0" width="25.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.08%)</title><rect x="580.8" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.08%)</title><rect x="580.8" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.08%)</title><rect x="580.8" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.08%)</title><rect x="580.8" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="580.8" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="580.8" y="403.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="583.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.08%)</title><rect x="581.8" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.08%)</title><rect x="581.8" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.08%)</title><rect x="581.8" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.08%)</title><rect x="581.8" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="581.8" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="581.8" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="584.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2 samples, 0.16%)</title><rect x="582.7" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="582.7" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="582.7" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="582.7" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.7" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="582.7" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="585.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.08%)</title><rect x="583.7" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="583.7" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.08%)</title><rect x="583.7" y="435.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="586.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (5 samples, 0.41%)</title><rect x="584.7" y="483.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.41%)</title><rect x="584.7" y="467.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.41%)</title><rect x="584.7" y="451.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.08%)</title><rect x="584.7" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="587.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.08%)</title><rect x="585.6" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="588.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.24%)</title><rect x="586.6" y="435.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.24%)</title><rect x="586.6" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (3 samples, 0.24%)</title><rect x="586.6" y="403.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.6" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (3 samples, 0.24%)</title><rect x="586.6" y="387.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="589.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (18 samples, 1.46%)</title><rect x="589.4" y="483.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.4" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.08%)</title><rect x="589.4" y="467.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="592.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.08%)</title><rect x="590.4" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="590.4" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.08%)</title><rect x="590.4" y="435.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="593.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (16 samples, 1.30%)</title><rect x="591.4" y="467.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.33%)</title><rect x="591.4" y="451.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.33%)</title><rect x="591.4" y="435.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.24%)</title><rect x="591.4" y="419.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="594.2" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="594.2" y="403.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="597.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.24%)</title><rect x="595.2" y="451.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.24%)</title><rect x="595.2" y="435.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.24%)</title><rect x="595.2" y="419.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.16%)</title><rect x="595.2" y="403.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="597.1" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="597.1" y="387.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="600.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.57%)</title><rect x="598.1" y="451.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.57%)</title><rect x="598.1" y="435.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.57%)</title><rect x="598.1" y="419.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.57%)</title><rect x="598.1" y="403.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.57%)</title><rect x="598.1" y="387.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.57%)</title><rect x="598.1" y="371.0" width="6.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="601.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.16%)</title><rect x="604.8" y="451.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.08%)</title><rect x="604.8" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.08%)</title><rect x="604.8" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="607.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$241/654001490.apply (1 samples, 0.08%)</title><rect x="605.8" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.08%)</title><rect x="605.8" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.08%)</title><rect x="605.8" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="608.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.49%)</title><rect x="606.7" y="611.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.49%)</title><rect x="606.7" y="595.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.49%)</title><rect x="606.7" y="579.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (6 samples, 0.49%)</title><rect x="606.7" y="563.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.49%)</title><rect x="606.7" y="547.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.49%)</title><rect x="606.7" y="531.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.49%)</title><rect x="606.7" y="515.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.49%)</title><rect x="606.7" y="499.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (4 samples, 0.33%)</title><rect x="606.7" y="483.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.33%)</title><rect x="606.7" y="467.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.33%)</title><rect x="606.7" y="451.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.08%)</title><rect x="606.7" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.7" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.08%)</title><rect x="606.7" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.08%)</title><rect x="606.7" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.08%)</title><rect x="606.7" y="387.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="609.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.24%)</title><rect x="607.7" y="435.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.08%)</title><rect x="607.7" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.7" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.08%)</title><rect x="607.7" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.7" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.08%)</title><rect x="607.7" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.7" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.08%)</title><rect x="607.7" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.7" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.08%)</title><rect x="607.7" y="355.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="610.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.16%)</title><rect x="608.6" y="419.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.08%)</title><rect x="608.6" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="608.6" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.08%)</title><rect x="608.6" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.08%)</title><rect x="608.6" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="608.6" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="611.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.08%)</title><rect x="609.6" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.08%)</title><rect x="609.6" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.08%)</title><rect x="609.6" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.08%)</title><rect x="609.6" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.08%)</title><rect x="609.6" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.08%)</title><rect x="609.6" y="323.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="612.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.16%)</title><rect x="610.6" y="483.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.16%)</title><rect x="610.6" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (2 samples, 0.16%)</title><rect x="610.6" y="451.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.16%)</title><rect x="610.6" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.16%)</title><rect x="610.6" y="419.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.16%)</title><rect x="610.6" y="403.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.16%)</title><rect x="610.6" y="387.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (2 samples, 0.16%)</title><rect x="610.6" y="371.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.16%)</title><rect x="610.6" y="355.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.16%)</title><rect x="610.6" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.16%)</title><rect x="610.6" y="323.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.16%)</title><rect x="610.6" y="307.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.apply (2 samples, 0.16%)</title><rect x="610.6" y="291.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.16%)</title><rect x="610.6" y="275.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2 samples, 0.16%)</title><rect x="610.6" y="259.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (5 samples, 0.41%)</title><rect x="612.5" y="691.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (5 samples, 0.41%)</title><rect x="612.5" y="675.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (5 samples, 0.41%)</title><rect x="612.5" y="659.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (5 samples, 0.41%)</title><rect x="612.5" y="643.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (5 samples, 0.41%)</title><rect x="612.5" y="627.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (5 samples, 0.41%)</title><rect x="612.5" y="611.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.41%)</title><rect x="612.5" y="595.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.41%)</title><rect x="612.5" y="579.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.41%)</title><rect x="612.5" y="563.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.41%)</title><rect x="612.5" y="547.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.41%)</title><rect x="612.5" y="531.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.41%)</title><rect x="612.5" y="515.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.41%)</title><rect x="612.5" y="499.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.41%)</title><rect x="612.5" y="483.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.41%)</title><rect x="612.5" y="467.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.41%)</title><rect x="612.5" y="451.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.41%)</title><rect x="612.5" y="435.0" width="4.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="615.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (24 samples, 1.95%)</title><rect x="617.3" y="691.0" width="23.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.3" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.16%)</title><rect x="617.3" y="675.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="617.3" y="659.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$213/2024194184.get$Lambda (2 samples, 0.16%)</title><rect x="617.3" y="643.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$213 (2 samples, 0.16%)</title><rect x="617.3" y="627.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="620.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (2 samples, 0.16%)</title><rect x="619.2" y="675.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="619.2" y="659.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/1809208039.get$Lambda (2 samples, 0.16%)</title><rect x="619.2" y="643.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$214 (2 samples, 0.16%)</title><rect x="619.2" y="627.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.24%)</title><rect x="621.1" y="675.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (2 samples, 0.16%)</title><rect x="621.1" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2 samples, 0.16%)</title><rect x="621.1" y="643.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2 samples, 0.16%)</title><rect x="621.1" y="627.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2 samples, 0.16%)</title><rect x="621.1" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2 samples, 0.16%)</title><rect x="621.1" y="595.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2 samples, 0.16%)</title><rect x="621.1" y="579.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.16%)</title><rect x="621.1" y="563.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.16%)</title><rect x="621.1" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.16%)</title><rect x="621.1" y="531.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.16%)</title><rect x="621.1" y="515.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (2 samples, 0.16%)</title><rect x="621.1" y="499.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.16%)</title><rect x="621.1" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.08%)</title><rect x="621.1" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.08%)</title><rect x="621.1" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1 samples, 0.08%)</title><rect x="621.1" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.08%)</title><rect x="621.1" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.08%)</title><rect x="621.1" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.08%)</title><rect x="621.1" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.08%)</title><rect x="621.1" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.08%)</title><rect x="621.1" y="355.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="624.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.08%)</title><rect x="622.1" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.08%)</title><rect x="622.1" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.08%)</title><rect x="622.1" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.08%)</title><rect x="622.1" y="419.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="625.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$220/331523809.accept (1 samples, 0.08%)</title><rect x="623.0" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.08%)</title><rect x="623.0" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/1809208039.run (1 samples, 0.08%)</title><rect x="623.0" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.08%)</title><rect x="623.0" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.08%)</title><rect x="623.0" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.08%)</title><rect x="623.0" y="579.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.08%)</title><rect x="623.0" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.08%)</title><rect x="623.0" y="547.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="626.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.24%)</title><rect x="624.0" y="675.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.24%)</title><rect x="624.0" y="659.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="627.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.08%)</title><rect x="626.9" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.08%)</title><rect x="626.9" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.08%)</title><rect x="626.9" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.08%)</title><rect x="626.9" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.08%)</title><rect x="626.9" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.08%)</title><rect x="626.9" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.08%)</title><rect x="626.9" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.08%)</title><rect x="626.9" y="563.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="629.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2 samples, 0.16%)</title><rect x="627.8" y="675.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/283242345.run (1 samples, 0.08%)</title><rect x="627.8" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1 samples, 0.08%)</title><rect x="627.8" y="643.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.08%)</title><rect x="627.8" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.08%)</title><rect x="627.8" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.08%)</title><rect x="627.8" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.08%)</title><rect x="627.8" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (1 samples, 0.08%)</title><rect x="627.8" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.08%)</title><rect x="627.8" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.08%)</title><rect x="627.8" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.08%)</title><rect x="627.8" y="515.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.08%)</title><rect x="627.8" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.08%)</title><rect x="627.8" y="483.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.08%)</title><rect x="627.8" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.08%)</title><rect x="627.8" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.08%)</title><rect x="627.8" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="627.8" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.08%)</title><rect x="627.8" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.08%)</title><rect x="627.8" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.8" y="398.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="627.8" y="371.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="630.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$168/650042043.run (1 samples, 0.08%)</title><rect x="628.8" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1 samples, 0.08%)</title><rect x="628.8" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="628.8" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="628.8" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.get$Lambda (1 samples, 0.08%)</title><rect x="628.8" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$223 (1 samples, 0.08%)</title><rect x="628.8" y="579.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10 samples, 0.81%)</title><rect x="629.7" y="675.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.7" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.08%)</title><rect x="629.7" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.7" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.08%)</title><rect x="629.7" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.08%)</title><rect x="629.7" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.7" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.08%)</title><rect x="629.7" y="611.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.7" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.08%)</title><rect x="629.7" y="595.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="632.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9 samples, 0.73%)</title><rect x="630.7" y="659.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.16%)</title><rect x="630.7" y="643.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (2 samples, 0.16%)</title><rect x="630.7" y="627.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="633.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (4 samples, 0.33%)</title><rect x="632.6" y="643.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.33%)</title><rect x="632.6" y="627.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.6" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.33%)</title><rect x="632.6" y="611.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="635.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.24%)</title><rect x="636.5" y="643.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.16%)</title><rect x="636.5" y="627.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="639.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.08%)</title><rect x="638.4" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.08%)</title><rect x="638.4" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.4" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.08%)</title><rect x="638.4" y="595.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="641.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.08%)</title><rect x="639.3" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.08%)</title><rect x="639.3" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1 samples, 0.08%)</title><rect x="639.3" y="643.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="642.3" y="654.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (15 samples, 1.22%)</title><rect x="640.3" y="691.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (2 samples, 0.16%)</title><rect x="640.3" y="675.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (2 samples, 0.16%)</title><rect x="640.3" y="659.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (2 samples, 0.16%)</title><rect x="640.3" y="643.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.16%)</title><rect x="640.3" y="627.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.08%)</title><rect x="640.3" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.08%)</title><rect x="640.3" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.3" y="606.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.08%)</title><rect x="640.3" y="579.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.08%)</title><rect x="641.3" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.08%)</title><rect x="641.3" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (1 samples, 0.08%)</title><rect x="641.3" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.3" y="590.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (1 samples, 0.08%)</title><rect x="641.3" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.3" y="574.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;init&gt; (1 samples, 0.08%)</title><rect x="641.3" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.3" y="558.0"></text>
</g>
<g>
<title>java.net.InetAddress$InetAddressHolder (1 samples, 0.08%)</title><rect x="641.3" y="531.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="644.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (13 samples, 1.06%)</title><rect x="642.2" y="675.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (13 samples, 1.06%)</title><rect x="642.2" y="659.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/StreamSession.&lt;init&gt; (13 samples, 1.06%)</title><rect x="642.2" y="643.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (13 samples, 1.06%)</title><rect x="642.2" y="627.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.2" y="638.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.81%)</title><rect x="642.2" y="611.0" width="9.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="645.2" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.24%)</title><rect x="651.8" y="611.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="654.8" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (558 samples, 45.37%)</title><rect x="654.7" y="691.0" width="535.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (41 samples, 3.33%)</title><rect x="654.7" y="675.0" width="39.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.7" y="686.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (7 samples, 0.57%)</title><rect x="654.7" y="659.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.7" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 0.24%)</title><rect x="654.7" y="643.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="657.7" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (1 samples, 0.08%)</title><rect x="657.6" y="643.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="660.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (3 samples, 0.24%)</title><rect x="658.5" y="643.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.24%)</title><rect x="658.5" y="627.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.24%)</title><rect x="658.5" y="611.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.5" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.24%)</title><rect x="658.5" y="595.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="661.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.08%)</title><rect x="661.4" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.4" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.08%)</title><rect x="661.4" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.08%)</title><rect x="661.4" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.4" y="638.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.08%)</title><rect x="661.4" y="611.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="664.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (33 samples, 2.68%)</title><rect x="662.4" y="659.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.4" y="670.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (33 samples, 2.68%)</title><rect x="662.4" y="643.0" width="31.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.4" y="654.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (33 samples, 2.68%)</title><rect x="662.4" y="627.0" width="31.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.4" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (33 samples, 2.68%)</title><rect x="662.4" y="611.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.4" y="622.0">su..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (28 samples, 2.28%)</title><rect x="662.4" y="595.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="606.0">j..</text>
</g>
<g>
<title>java.lang.Integer (28 samples, 2.28%)</title><rect x="662.4" y="579.0" width="26.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="665.4" y="590.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.41%)</title><rect x="689.2" y="595.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.41%)</title><rect x="689.2" y="579.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.41%)</title><rect x="689.2" y="563.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.41%)</title><rect x="689.2" y="547.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.41%)</title><rect x="689.2" y="531.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.41%)</title><rect x="689.2" y="515.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="692.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (517 samples, 42.03%)</title><rect x="694.0" y="675.0" width="496.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.0" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (517 samples, 42.03%)</title><rect x="694.0" y="659.0" width="496.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (513 samples, 41.71%)</title><rect x="694.0" y="643.0" width="492.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.0" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (221 samples, 17.97%)</title><rect x="694.0" y="627.0" width="212.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.0" y="638.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (221 samples, 17.97%)</title><rect x="694.0" y="611.0" width="212.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.0" y="622.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (208 samples, 16.91%)</title><rect x="694.0" y="595.0" width="199.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.0" y="606.0">RequestHandler2_entity.han..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.73%)</title><rect x="694.0" y="579.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.73%)</title><rect x="694.0" y="563.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.73%)</title><rect x="694.0" y="547.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.73%)</title><rect x="694.0" y="531.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.24%)</title><rect x="694.0" y="515.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="697.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.49%)</title><rect x="696.9" y="515.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.9" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.49%)</title><rect x="696.9" y="499.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (199 samples, 16.18%)</title><rect x="702.7" y="579.0" width="190.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.7" y="590.0">ru/mail/polis/service/Rep..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (199 samples, 16.18%)</title><rect x="702.7" y="563.0" width="190.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.7" y="574.0">ru/mail/polis/service/Rep..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.73%)</title><rect x="702.7" y="547.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.73%)</title><rect x="702.7" y="531.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.73%)</title><rect x="702.7" y="515.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.24%)</title><rect x="702.7" y="499.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="705.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.49%)</title><rect x="705.5" y="499.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.5" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.49%)</title><rect x="705.5" y="483.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="708.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (17 samples, 1.38%)</title><rect x="711.3" y="547.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.24%)</title><rect x="711.3" y="531.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.24%)</title><rect x="711.3" y="515.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get$Lambda (3 samples, 0.24%)</title><rect x="711.3" y="499.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$230 (3 samples, 0.24%)</title><rect x="711.3" y="483.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="714.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (14 samples, 1.14%)</title><rect x="714.2" y="531.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (14 samples, 1.14%)</title><rect x="714.2" y="515.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.24%)</title><rect x="714.2" y="499.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="717.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (11 samples, 0.89%)</title><rect x="717.0" y="499.0" width="10.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (157 samples, 12.76%)</title><rect x="727.6" y="547.0" width="150.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.6" y="558.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.08%)</title><rect x="727.6" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.08%)</title><rect x="727.6" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.6" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (1 samples, 0.08%)</title><rect x="727.6" y="499.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="730.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.08%)</title><rect x="728.6" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.08%)</title><rect x="728.6" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.08%)</title><rect x="728.6" y="499.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.24%)</title><rect x="729.5" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.24%)</title><rect x="729.5" y="515.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.24%)</title><rect x="729.5" y="499.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.24%)</title><rect x="729.5" y="483.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.24%)</title><rect x="729.5" y="467.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="732.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (91 samples, 7.40%)</title><rect x="732.4" y="531.0" width="87.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.4" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 7.40%)</title><rect x="732.4" y="515.0" width="87.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.4" y="526.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 7.40%)</title><rect x="732.4" y="499.0" width="87.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.4" y="510.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 7.40%)</title><rect x="732.4" y="483.0" width="87.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.4" y="494.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.16%)</title><rect x="732.4" y="467.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="732.4" y="451.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$128/673918529.get$Lambda (2 samples, 0.16%)</title><rect x="732.4" y="435.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$128 (2 samples, 0.16%)</title><rect x="732.4" y="419.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="735.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.41%)</title><rect x="734.3" y="467.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.41%)</title><rect x="734.3" y="451.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.24%)</title><rect x="734.3" y="435.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="737.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="737.2" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.16%)</title><rect x="737.2" y="419.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.16%)</title><rect x="737.2" y="403.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="740.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (4 samples, 0.33%)</title><rect x="739.1" y="467.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2 samples, 0.16%)</title><rect x="742.9" y="467.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (63 samples, 5.12%)</title><rect x="744.9" y="467.0" width="60.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.9" y="478.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.33%)</title><rect x="744.9" y="451.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.33%)</title><rect x="744.9" y="435.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.08%)</title><rect x="744.9" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.9" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.08%)</title><rect x="744.9" y="403.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="747.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.24%)</title><rect x="745.8" y="419.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.24%)</title><rect x="745.8" y="403.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="748.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (21 samples, 1.71%)</title><rect x="748.7" y="451.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21 samples, 1.71%)</title><rect x="748.7" y="435.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.24%)</title><rect x="748.7" y="419.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="751.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.16%)</title><rect x="751.6" y="419.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="754.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.16%)</title><rect x="753.5" y="419.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="756.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.16%)</title><rect x="755.4" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="755.4" y="403.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (2 samples, 0.16%)</title><rect x="755.4" y="387.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (2 samples, 0.16%)</title><rect x="755.4" y="371.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="758.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (10 samples, 0.81%)</title><rect x="757.3" y="419.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 0.81%)</title><rect x="757.3" y="403.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (10 samples, 0.81%)</title><rect x="757.3" y="387.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.81%)</title><rect x="757.3" y="371.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.49%)</title><rect x="757.3" y="355.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (3 samples, 0.24%)</title><rect x="757.3" y="339.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.24%)</title><rect x="757.3" y="323.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.24%)</title><rect x="757.3" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.24%)</title><rect x="757.3" y="291.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.24%)</title><rect x="757.3" y="275.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.24%)</title><rect x="757.3" y="259.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.24%)</title><rect x="757.3" y="243.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.24%)</title><rect x="757.3" y="227.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="760.3" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.24%)</title><rect x="760.2" y="339.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.2" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.24%)</title><rect x="760.2" y="323.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="763.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.16%)</title><rect x="763.1" y="355.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.16%)</title><rect x="763.1" y="339.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (2 samples, 0.16%)</title><rect x="763.1" y="323.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.1" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (2 samples, 0.16%)</title><rect x="763.1" y="307.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="766.1" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.16%)</title><rect x="765.0" y="355.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.16%)</title><rect x="765.0" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.16%)</title><rect x="765.0" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.16%)</title><rect x="765.0" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.16%)</title><rect x="765.0" y="291.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="768.0" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.08%)</title><rect x="766.9" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.9" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.08%)</title><rect x="766.9" y="403.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="769.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.08%)</title><rect x="767.9" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.08%)</title><rect x="767.9" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="770.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (1 samples, 0.08%)</title><rect x="768.8" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="771.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (29 samples, 2.36%)</title><rect x="769.8" y="451.0" width="27.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.8" y="462.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (29 samples, 2.36%)</title><rect x="769.8" y="435.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.8" y="446.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (29 samples, 2.36%)</title><rect x="769.8" y="419.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.8" y="430.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (29 samples, 2.36%)</title><rect x="769.8" y="403.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.8" y="414.0">s..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (29 samples, 2.36%)</title><rect x="769.8" y="387.0" width="27.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.8" y="398.0">s..</text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.57%)</title><rect x="769.8" y="371.0" width="6.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="772.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.73%)</title><rect x="776.5" y="371.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.5" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.73%)</title><rect x="776.5" y="355.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.5" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.73%)</title><rect x="776.5" y="339.0" width="8.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="779.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 1.06%)</title><rect x="785.2" y="371.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 1.06%)</title><rect x="785.2" y="355.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.33%)</title><rect x="785.2" y="339.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="788.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.73%)</title><rect x="789.0" y="339.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.0" y="350.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.73%)</title><rect x="789.0" y="323.0" width="8.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="792.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.16%)</title><rect x="797.6" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.16%)</title><rect x="797.6" y="435.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="800.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.49%)</title><rect x="799.5" y="451.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.16%)</title><rect x="799.5" y="435.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="802.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.16%)</title><rect x="801.5" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.16%)</title><rect x="801.5" y="419.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.16%)</title><rect x="803.4" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.16%)</title><rect x="803.4" y="419.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="806.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (8 samples, 0.65%)</title><rect x="805.3" y="467.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1 samples, 0.08%)</title><rect x="805.3" y="451.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="808.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7 samples, 0.57%)</title><rect x="806.3" y="451.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.57%)</title><rect x="806.3" y="435.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.08%)</title><rect x="806.3" y="419.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="809.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.16%)</title><rect x="807.2" y="419.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="810.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.33%)</title><rect x="809.1" y="419.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.33%)</title><rect x="809.1" y="403.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (4 samples, 0.33%)</title><rect x="809.1" y="387.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (4 samples, 0.33%)</title><rect x="809.1" y="371.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.1" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (4 samples, 0.33%)</title><rect x="809.1" y="355.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="812.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (7 samples, 0.57%)</title><rect x="813.0" y="467.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.08%)</title><rect x="813.0" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.08%)</title><rect x="813.0" y="435.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="816.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.49%)</title><rect x="813.9" y="451.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="813.9" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="813.9" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.get$Lambda (1 samples, 0.08%)</title><rect x="813.9" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$126 (1 samples, 0.08%)</title><rect x="813.9" y="387.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="816.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.41%)</title><rect x="814.9" y="435.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.41%)</title><rect x="814.9" y="419.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.08%)</title><rect x="814.9" y="403.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.33%)</title><rect x="815.9" y="403.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.33%)</title><rect x="815.9" y="387.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.33%)</title><rect x="815.9" y="371.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="818.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (16 samples, 1.30%)</title><rect x="819.7" y="531.0" width="15.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1 samples, 0.08%)</title><rect x="819.7" y="515.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="822.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (15 samples, 1.22%)</title><rect x="820.7" y="515.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 1.22%)</title><rect x="820.7" y="499.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 1.22%)</title><rect x="820.7" y="483.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.7" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.08%)</title><rect x="820.7" y="467.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="823.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.24%)</title><rect x="821.6" y="467.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="824.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.24%)</title><rect x="824.5" y="467.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="827.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="827.4" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="827.4" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (1 samples, 0.08%)</title><rect x="827.4" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.4" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.08%)</title><rect x="827.4" y="419.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="830.4" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.16%)</title><rect x="828.3" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.3" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.16%)</title><rect x="828.3" y="451.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="831.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.41%)</title><rect x="830.2" y="467.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (5 samples, 0.41%)</title><rect x="830.2" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.41%)</title><rect x="830.2" y="435.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.33%)</title><rect x="830.2" y="419.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (4 samples, 0.33%)</title><rect x="830.2" y="403.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.33%)</title><rect x="830.2" y="387.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.33%)</title><rect x="830.2" y="371.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.33%)</title><rect x="830.2" y="355.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.33%)</title><rect x="830.2" y="339.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.33%)</title><rect x="830.2" y="323.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.33%)</title><rect x="830.2" y="307.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.33%)</title><rect x="830.2" y="291.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="833.2" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.08%)</title><rect x="834.1" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.1" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.08%)</title><rect x="834.1" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.1" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.08%)</title><rect x="834.1" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.08%)</title><rect x="834.1" y="371.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="837.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (12 samples, 0.98%)</title><rect x="835.0" y="531.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.08%)</title><rect x="835.0" y="515.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11 samples, 0.89%)</title><rect x="836.0" y="515.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/1737771959.accept (11 samples, 0.89%)</title><rect x="836.0" y="499.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (11 samples, 0.89%)</title><rect x="836.0" y="483.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/326626244.linkToTargetMethod (3 samples, 0.24%)</title><rect x="836.0" y="467.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1786364562.invokeStatic (3 samples, 0.24%)</title><rect x="836.0" y="451.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.get$Lambda (3 samples, 0.24%)</title><rect x="836.0" y="435.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.0" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$135 (3 samples, 0.24%)</title><rect x="836.0" y="419.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="839.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (8 samples, 0.65%)</title><rect x="838.9" y="467.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.65%)</title><rect x="838.9" y="451.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.41%)</title><rect x="838.9" y="435.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="841.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.24%)</title><rect x="843.7" y="435.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.24%)</title><rect x="843.7" y="419.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.24%)</title><rect x="843.7" y="403.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="846.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (30 samples, 2.44%)</title><rect x="846.6" y="531.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.6" y="542.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.33%)</title><rect x="846.6" y="515.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (4 samples, 0.33%)</title><rect x="846.6" y="499.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.33%)</title><rect x="846.6" y="483.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.16%)</title><rect x="846.6" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.16%)</title><rect x="846.6" y="451.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="849.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.16%)</title><rect x="848.5" y="467.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.16%)</title><rect x="848.5" y="451.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.5" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.16%)</title><rect x="848.5" y="435.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="851.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (17 samples, 1.38%)</title><rect x="850.4" y="515.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.4" y="526.0"></text>
</g>
<g>
<title>java.net.URI (2 samples, 0.16%)</title><rect x="850.4" y="499.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="853.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (15 samples, 1.22%)</title><rect x="852.3" y="499.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.3" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (1 samples, 0.08%)</title><rect x="852.3" y="483.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="855.3" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (14 samples, 1.14%)</title><rect x="853.3" y="483.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.41%)</title><rect x="853.3" y="467.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.41%)</title><rect x="853.3" y="451.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.24%)</title><rect x="853.3" y="435.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="856.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.16%)</title><rect x="856.1" y="435.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.1" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.16%)</title><rect x="856.1" y="419.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="859.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (9 samples, 0.73%)</title><rect x="858.1" y="467.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.33%)</title><rect x="858.1" y="451.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.33%)</title><rect x="858.1" y="435.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.33%)</title><rect x="858.1" y="419.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="861.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (5 samples, 0.41%)</title><rect x="861.9" y="451.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.16%)</title><rect x="861.9" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.16%)</title><rect x="861.9" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.16%)</title><rect x="861.9" y="403.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="864.9" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.24%)</title><rect x="863.8" y="435.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.8" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.24%)</title><rect x="863.8" y="419.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.24%)</title><rect x="863.8" y="403.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.24%)</title><rect x="863.8" y="387.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.8" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.16%)</title><rect x="863.8" y="371.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="866.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="865.7" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.7" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="865.7" y="355.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="868.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.24%)</title><rect x="866.7" y="515.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1 samples, 0.08%)</title><rect x="866.7" y="499.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="869.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.16%)</title><rect x="867.7" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.16%)</title><rect x="867.7" y="483.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.16%)</title><rect x="867.7" y="467.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="870.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.49%)</title><rect x="869.6" y="515.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.49%)</title><rect x="869.6" y="499.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.49%)</title><rect x="869.6" y="483.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.6" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.08%)</title><rect x="869.6" y="467.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="872.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.08%)</title><rect x="870.5" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.08%)</title><rect x="870.5" y="451.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="873.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.33%)</title><rect x="871.5" y="467.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.33%)</title><rect x="871.5" y="451.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="874.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (3 samples, 0.24%)</title><rect x="875.3" y="531.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.24%)</title><rect x="875.3" y="515.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.24%)</title><rect x="875.3" y="499.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.24%)</title><rect x="875.3" y="483.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (13 samples, 1.06%)</title><rect x="878.2" y="547.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.24%)</title><rect x="878.2" y="531.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.24%)</title><rect x="878.2" y="515.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.get$Lambda (3 samples, 0.24%)</title><rect x="878.2" y="499.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$140 (3 samples, 0.24%)</title><rect x="878.2" y="483.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="881.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.81%)</title><rect x="881.1" y="531.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.81%)</title><rect x="881.1" y="515.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.49%)</title><rect x="881.1" y="499.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="884.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (4 samples, 0.33%)</title><rect x="886.8" y="499.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (4 samples, 0.33%)</title><rect x="886.8" y="483.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="889.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (2 samples, 0.16%)</title><rect x="890.7" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.16%)</title><rect x="890.7" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.16%)</title><rect x="890.7" y="515.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.16%)</title><rect x="890.7" y="499.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.16%)</title><rect x="890.7" y="483.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.7" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.16%)</title><rect x="890.7" y="467.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="893.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (1 samples, 0.08%)</title><rect x="892.6" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.08%)</title><rect x="892.6" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.08%)</title><rect x="892.6" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.08%)</title><rect x="892.6" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="892.6" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.6" y="494.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.08%)</title><rect x="892.6" y="467.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="895.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 1.06%)</title><rect x="893.6" y="595.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 1.06%)</title><rect x="893.6" y="579.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 1.06%)</title><rect x="893.6" y="563.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.65%)</title><rect x="893.6" y="547.0" width="7.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="896.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.41%)</title><rect x="901.2" y="547.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.2" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.41%)</title><rect x="901.2" y="531.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="904.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 3.50%)</title><rect x="906.0" y="627.0" width="41.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.0" y="638.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.73%)</title><rect x="906.0" y="611.0" width="8.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="909.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.65%)</title><rect x="914.7" y="611.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.65%)</title><rect x="914.7" y="595.0" width="7.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="917.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 2.11%)</title><rect x="922.3" y="611.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.3" y="622.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 2.11%)</title><rect x="922.3" y="595.0" width="25.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.3" y="606.0">o..</text>
</g>
<g>
<title>char[] (17 samples, 1.38%)</title><rect x="922.3" y="579.0" width="16.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="925.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.73%)</title><rect x="938.7" y="579.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.73%)</title><rect x="938.7" y="563.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.73%)</title><rect x="938.7" y="547.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.7" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.73%)</title><rect x="938.7" y="531.0" width="8.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="941.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.16%)</title><rect x="947.3" y="627.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.16%)</title><rect x="947.3" y="611.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="950.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.81%)</title><rect x="949.2" y="627.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.81%)</title><rect x="949.2" y="611.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.81%)</title><rect x="949.2" y="595.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.33%)</title><rect x="949.2" y="579.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="952.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.49%)</title><rect x="953.0" y="579.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.0" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.49%)</title><rect x="953.0" y="563.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="956.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (237 samples, 19.27%)</title><rect x="958.8" y="627.0" width="227.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.8" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (237 samples, 19.27%)</title><rect x="958.8" y="611.0" width="227.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.8" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (102 samples, 8.29%)</title><rect x="958.8" y="595.0" width="97.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="961.8" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (29 samples, 2.36%)</title><rect x="1056.7" y="595.0" width="27.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1059.7" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (106 samples, 8.62%)</title><rect x="1084.5" y="595.0" width="101.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.5" y="606.0">java/lang/St..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (106 samples, 8.62%)</title><rect x="1084.5" y="579.0" width="101.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.5" y="590.0">java/lang/St..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (106 samples, 8.62%)</title><rect x="1084.5" y="563.0" width="101.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.5" y="574.0">java/lang/St..</text>
</g>
<g>
<title>byte[] (106 samples, 8.62%)</title><rect x="1084.5" y="547.0" width="101.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1087.5" y="558.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.33%)</title><rect x="1186.2" y="643.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (4 samples, 0.33%)</title><rect x="1186.2" y="627.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.33%)</title><rect x="1186.2" y="611.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.33%)</title><rect x="1186.2" y="595.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
</g>
</svg>
