<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (338 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 2.07%)</title><rect x="10.0" y="755.0" width="24.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="766.0">S..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 2.07%)</title><rect x="10.0" y="739.0" width="24.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="750.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 2.07%)</title><rect x="10.0" y="723.0" width="24.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="734.0">O..</text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="10.0" y="707.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="10.0" y="691.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (6 samples, 1.78%)</title><rect x="13.5" y="707.0" width="20.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.5" y="718.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.30%)</title><rect x="13.5" y="691.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.5" y="702.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 1.48%)</title><rect x="17.0" y="691.0" width="17.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="20.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (214 samples, 63.31%)</title><rect x="34.4" y="755.0" width="747.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.4" y="766.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (214 samples, 63.31%)</title><rect x="34.4" y="739.0" width="747.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="750.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (214 samples, 63.31%)</title><rect x="34.4" y="723.0" width="747.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.4" y="734.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (64 samples, 18.93%)</title><rect x="34.4" y="707.0" width="223.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.4" y="718.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 10.36%)</title><rect x="37.9" y="691.0" width="122.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.9" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 7.99%)</title><rect x="37.9" y="675.0" width="94.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.9" y="686.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (27 samples, 7.99%)</title><rect x="37.9" y="659.0" width="94.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.9" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (27 samples, 7.99%)</title><rect x="37.9" y="643.0" width="94.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.9" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (27 samples, 7.99%)</title><rect x="37.9" y="627.0" width="94.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="638.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (23 samples, 6.80%)</title><rect x="37.9" y="611.0" width="80.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (23 samples, 6.80%)</title><rect x="37.9" y="595.0" width="80.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.9" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (23 samples, 6.80%)</title><rect x="37.9" y="579.0" width="80.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.9" y="590.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.30%)</title><rect x="37.9" y="563.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.30%)</title><rect x="37.9" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.get$Lambda (1 samples, 0.30%)</title><rect x="37.9" y="531.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.&lt;init&gt; (1 samples, 0.30%)</title><rect x="37.9" y="515.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 2.96%)</title><rect x="41.4" y="563.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.4" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 2.96%)</title><rect x="41.4" y="547.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.4" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.30%)</title><rect x="41.4" y="531.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.30%)</title><rect x="41.4" y="515.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.4" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.30%)</title><rect x="41.4" y="499.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="44.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 2.66%)</title><rect x="44.9" y="531.0" width="31.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.9" y="542.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (9 samples, 2.66%)</title><rect x="44.9" y="515.0" width="31.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (9 samples, 2.66%)</title><rect x="44.9" y="499.0" width="31.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 2.66%)</title><rect x="44.9" y="483.0" width="31.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (9 samples, 2.66%)</title><rect x="44.9" y="467.0" width="31.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.9" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9 samples, 2.66%)</title><rect x="44.9" y="451.0" width="31.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.9" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9 samples, 2.66%)</title><rect x="44.9" y="435.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.9" y="446.0">jd..</text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.30%)</title><rect x="44.9" y="419.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.30%)</title><rect x="44.9" y="403.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.9" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.30%)</title><rect x="44.9" y="387.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 1.78%)</title><rect x="48.4" y="419.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 1.78%)</title><rect x="48.4" y="403.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (6 samples, 1.78%)</title><rect x="48.4" y="387.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6 samples, 1.78%)</title><rect x="48.4" y="371.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.30%)</title><rect x="48.4" y="355.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.30%)</title><rect x="48.4" y="339.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="48.4" y="323.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="48.4" y="307.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.30%)</title><rect x="48.4" y="291.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.30%)</title><rect x="48.4" y="275.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.30%)</title><rect x="48.4" y="259.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.30%)</title><rect x="48.4" y="243.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.30%)</title><rect x="48.4" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.30%)</title><rect x="48.4" y="211.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.30%)</title><rect x="48.4" y="195.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.30%)</title><rect x="48.4" y="179.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.59%)</title><rect x="51.9" y="355.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.59%)</title><rect x="51.9" y="339.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.59%)</title><rect x="51.9" y="323.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.59%)</title><rect x="51.9" y="307.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.59%)</title><rect x="51.9" y="291.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.59%)</title><rect x="51.9" y="275.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.59%)</title><rect x="51.9" y="259.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.30%)</title><rect x="51.9" y="243.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.30%)</title><rect x="51.9" y="227.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.30%)</title><rect x="51.9" y="211.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.30%)</title><rect x="51.9" y="195.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.9" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="51.9" y="179.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="54.9" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.30%)</title><rect x="51.9" y="163.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="54.9" y="174.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.30%)</title><rect x="51.9" y="147.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="54.9" y="158.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.30%)</title><rect x="51.9" y="131.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="54.9" y="142.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.30%)</title><rect x="51.9" y="115.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="54.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.30%)</title><rect x="55.4" y="243.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.30%)</title><rect x="55.4" y="227.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.4" y="238.0"></text>
</g>
<g>
<title>write (1 samples, 0.30%)</title><rect x="55.4" y="211.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="58.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3 samples, 0.89%)</title><rect x="58.9" y="355.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2 samples, 0.59%)</title><rect x="58.9" y="339.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2 samples, 0.59%)</title><rect x="58.9" y="323.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.30%)</title><rect x="65.9" y="339.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.30%)</title><rect x="65.9" y="323.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.30%)</title><rect x="65.9" y="307.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.30%)</title><rect x="65.9" y="291.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.30%)</title><rect x="65.9" y="275.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.59%)</title><rect x="69.3" y="419.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.30%)</title><rect x="69.3" y="403.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="69.3" y="387.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="69.3" y="371.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.30%)</title><rect x="69.3" y="355.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.30%)</title><rect x="69.3" y="339.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.30%)</title><rect x="69.3" y="323.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (1 samples, 0.30%)</title><rect x="69.3" y="307.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.30%)</title><rect x="69.3" y="291.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.30%)</title><rect x="72.8" y="403.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.30%)</title><rect x="72.8" y="387.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.30%)</title><rect x="72.8" y="371.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (12 samples, 3.55%)</title><rect x="76.3" y="563.0" width="41.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.3" y="574.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.30%)</title><rect x="76.3" y="547.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.30%)</title><rect x="76.3" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.30%)</title><rect x="76.3" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (11 samples, 3.25%)</title><rect x="79.8" y="547.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.8" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 3.25%)</title><rect x="79.8" y="531.0" width="38.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.8" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 3.25%)</title><rect x="79.8" y="515.0" width="38.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 3.25%)</title><rect x="79.8" y="499.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.8" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (11 samples, 3.25%)</title><rect x="79.8" y="483.0" width="38.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (11 samples, 3.25%)</title><rect x="79.8" y="467.0" width="38.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.8" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (11 samples, 3.25%)</title><rect x="79.8" y="451.0" width="38.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.8" y="462.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.89%)</title><rect x="79.8" y="435.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.89%)</title><rect x="79.8" y="419.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.89%)</title><rect x="79.8" y="403.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (3 samples, 0.89%)</title><rect x="79.8" y="387.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3 samples, 0.89%)</title><rect x="79.8" y="371.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3 samples, 0.89%)</title><rect x="79.8" y="355.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3 samples, 0.89%)</title><rect x="79.8" y="339.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.89%)</title><rect x="79.8" y="323.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.89%)</title><rect x="79.8" y="307.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.89%)</title><rect x="79.8" y="291.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.89%)</title><rect x="79.8" y="275.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (1 samples, 0.30%)</title><rect x="79.8" y="259.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.30%)</title><rect x="79.8" y="243.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.get$Lambda (1 samples, 0.30%)</title><rect x="79.8" y="227.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.&lt;init&gt; (1 samples, 0.30%)</title><rect x="79.8" y="211.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="222.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.59%)</title><rect x="83.3" y="259.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.3" y="270.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.30%)</title><rect x="83.3" y="243.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="86.3" y="254.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.30%)</title><rect x="83.3" y="227.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="86.3" y="238.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.30%)</title><rect x="83.3" y="211.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="86.3" y="222.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.30%)</title><rect x="83.3" y="195.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="86.3" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_compiled_frame(int) (1 samples, 0.30%)</title><rect x="83.3" y="179.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="86.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.run (1 samples, 0.30%)</title><rect x="86.8" y="243.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (8 samples, 2.37%)</title><rect x="90.3" y="435.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (8 samples, 2.37%)</title><rect x="90.3" y="419.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.3" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 1.18%)</title><rect x="90.3" y="403.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 1.18%)</title><rect x="90.3" y="387.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 1.18%)</title><rect x="90.3" y="371.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.30%)</title><rect x="90.3" y="355.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.30%)</title><rect x="90.3" y="339.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.30%)</title><rect x="90.3" y="323.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.3" y="334.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.30%)</title><rect x="90.3" y="307.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.3" y="318.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.30%)</title><rect x="90.3" y="291.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.3" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.30%)</title><rect x="90.3" y="275.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (3 samples, 0.89%)</title><rect x="93.8" y="355.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4 samples, 1.18%)</title><rect x="104.3" y="403.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.3" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.18%)</title><rect x="104.3" y="387.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.3" y="398.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.59%)</title><rect x="104.3" y="371.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="107.3" y="382.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.30%)</title><rect x="104.3" y="355.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.3" y="366.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.30%)</title><rect x="107.8" y="355.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="110.8" y="366.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.30%)</title><rect x="107.8" y="339.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="110.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.run (2 samples, 0.59%)</title><rect x="111.2" y="371.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.30%)</title><rect x="114.7" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.30%)</title><rect x="114.7" y="339.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.30%)</title><rect x="114.7" y="323.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.7" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.30%)</title><rect x="114.7" y="307.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.7" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.30%)</title><rect x="114.7" y="291.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.30%)</title><rect x="114.7" y="275.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.30%)</title><rect x="114.7" y="259.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.7" y="270.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.30%)</title><rect x="114.7" y="243.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="117.7" y="254.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.30%)</title><rect x="114.7" y="227.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="117.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2 samples, 0.59%)</title><rect x="118.2" y="611.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2 samples, 0.59%)</title><rect x="118.2" y="595.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.59%)</title><rect x="118.2" y="579.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.59%)</title><rect x="118.2" y="563.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.2" y="574.0"></text>
</g>
<g>
<title>write (2 samples, 0.59%)</title><rect x="118.2" y="547.0" width="7.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="121.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.30%)</title><rect x="125.2" y="611.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.2" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="125.2" y="595.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="128.2" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.30%)</title><rect x="125.2" y="579.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="128.2" y="590.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="125.2" y="563.0" width="3.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="128.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.30%)</title><rect x="128.7" y="611.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.30%)</title><rect x="128.7" y="595.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.30%)</title><rect x="128.7" y="579.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.7" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.30%)</title><rect x="128.7" y="563.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.7" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.30%)</title><rect x="128.7" y="547.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.30%)</title><rect x="128.7" y="531.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.7" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.30%)</title><rect x="128.7" y="515.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.30%)</title><rect x="128.7" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.30%)</title><rect x="128.7" y="483.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.30%)</title><rect x="128.7" y="467.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.30%)</title><rect x="128.7" y="451.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 2.37%)</title><rect x="132.2" y="675.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.2" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 2.37%)</title><rect x="132.2" y="659.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.2" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (8 samples, 2.37%)</title><rect x="132.2" y="643.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.2" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (8 samples, 2.37%)</title><rect x="132.2" y="627.0" width="27.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.2" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (8 samples, 2.37%)</title><rect x="132.2" y="611.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.2" y="622.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 2.37%)</title><rect x="132.2" y="595.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.2" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 2.07%)</title><rect x="132.2" y="579.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.2" y="590.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.07%)</title><rect x="132.2" y="563.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.2" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 2.07%)</title><rect x="132.2" y="547.0" width="24.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.2" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 2.07%)</title><rect x="132.2" y="531.0" width="24.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.2" y="542.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 2.07%)</title><rect x="132.2" y="515.0" width="24.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.2" y="526.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (7 samples, 2.07%)</title><rect x="132.2" y="499.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.2" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 2.07%)</title><rect x="132.2" y="483.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.2" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 2.07%)</title><rect x="132.2" y="467.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.2" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 2.07%)</title><rect x="132.2" y="451.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.2" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (7 samples, 2.07%)</title><rect x="132.2" y="435.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.2" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 2.07%)</title><rect x="132.2" y="419.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.2" y="430.0">s..</text>
</g>
<g>
<title>write (7 samples, 2.07%)</title><rect x="132.2" y="403.0" width="24.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="135.2" y="414.0">w..</text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.30%)</title><rect x="156.6" y="579.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (1 samples, 0.30%)</title><rect x="156.6" y="563.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.30%)</title><rect x="156.6" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (10 samples, 2.96%)</title><rect x="160.1" y="691.0" width="34.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.1" y="702.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (10 samples, 2.96%)</title><rect x="160.1" y="675.0" width="34.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.1" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (10 samples, 2.96%)</title><rect x="160.1" y="659.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.1" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (10 samples, 2.96%)</title><rect x="160.1" y="643.0" width="34.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.1" y="654.0">ru..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (8 samples, 2.37%)</title><rect x="160.1" y="627.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.1" y="638.0">j..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 2.37%)</title><rect x="160.1" y="611.0" width="27.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.1" y="622.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 2.37%)</title><rect x="160.1" y="595.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.1" y="606.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 2.37%)</title><rect x="160.1" y="579.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.1" y="590.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7 samples, 2.07%)</title><rect x="163.6" y="563.0" width="24.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.6" y="574.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7 samples, 2.07%)</title><rect x="163.6" y="547.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.6" y="558.0">j..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (7 samples, 2.07%)</title><rect x="163.6" y="531.0" width="24.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="166.6" y="542.0">J..</text>
</g>
<g>
<title>JVM_FillInStackTrace (7 samples, 2.07%)</title><rect x="163.6" y="515.0" width="24.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="166.6" y="526.0">J..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (7 samples, 2.07%)</title><rect x="163.6" y="499.0" width="24.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="166.6" y="510.0">j..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (7 samples, 2.07%)</title><rect x="163.6" y="483.0" width="24.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="166.6" y="494.0">j..</text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.59%)</title><rect x="167.1" y="467.0" width="7.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.1" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.30%)</title><rect x="167.1" y="451.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="170.1" y="462.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="167.1" y="435.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="170.1" y="446.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.30%)</title><rect x="170.6" y="451.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="173.6" y="462.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.30%)</title><rect x="174.1" y="467.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="177.1" y="478.0"></text>
</g>
<g>
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.30%)</title><rect x="174.1" y="451.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="177.1" y="462.0"></text>
</g>
<g>
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (1 samples, 0.30%)</title><rect x="174.1" y="435.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="177.1" y="446.0"></text>
</g>
<g>
<title>EnableIf&lt;HasDecorator&lt;1097844ull, MO_UNORDERED&gt;::value, oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::load_internal&lt;1097844ull, oopDesc*&gt;(void*) (1 samples, 0.30%)</title><rect x="174.1" y="419.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="177.1" y="430.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.30%)</title><rect x="177.6" y="467.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="180.6" y="478.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.59%)</title><rect x="181.1" y="467.0" width="6.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="184.1" y="478.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="184.6" y="451.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="187.6" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="184.6" y="435.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="187.6" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.30%)</title><rect x="184.6" y="419.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="187.6" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.59%)</title><rect x="188.0" y="627.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.0" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.59%)</title><rect x="188.0" y="611.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.0" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (2 samples, 0.59%)</title><rect x="188.0" y="595.0" width="7.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="191.0" y="606.0"></text>
</g>
<g>
<title>free (1 samples, 0.30%)</title><rect x="188.0" y="579.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="191.0" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.30%)</title><rect x="191.5" y="579.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="194.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.30%)</title><rect x="191.5" y="563.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="194.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.30%)</title><rect x="191.5" y="547.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="194.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.30%)</title><rect x="191.5" y="531.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="194.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (1 samples, 0.30%)</title><rect x="191.5" y="515.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="194.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.30%)</title><rect x="191.5" y="499.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="194.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.30%)</title><rect x="191.5" y="483.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="194.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (18 samples, 5.33%)</title><rect x="195.0" y="691.0" width="62.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="702.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (18 samples, 5.33%)</title><rect x="195.0" y="675.0" width="62.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.0" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (16 samples, 4.73%)</title><rect x="195.0" y="659.0" width="55.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.0" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (16 samples, 4.73%)</title><rect x="195.0" y="643.0" width="55.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.0" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (12 samples, 3.55%)</title><rect x="195.0" y="627.0" width="41.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.0" y="638.0">jav..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (12 samples, 3.55%)</title><rect x="195.0" y="611.0" width="41.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.0" y="622.0">jav..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (12 samples, 3.55%)</title><rect x="195.0" y="595.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (12 samples, 3.55%)</title><rect x="195.0" y="579.0" width="41.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.0" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 3.55%)</title><rect x="195.0" y="563.0" width="41.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.0" y="574.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 3.55%)</title><rect x="195.0" y="547.0" width="41.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.0" y="558.0">jav..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 3.55%)</title><rect x="195.0" y="531.0" width="41.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="198.0" y="542.0">Jav..</text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 3.55%)</title><rect x="195.0" y="515.0" width="41.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="198.0" y="526.0">JVM..</text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (2 samples, 0.59%)</title><rect x="195.0" y="499.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="198.0" y="510.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (10 samples, 2.96%)</title><rect x="202.0" y="499.0" width="34.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="205.0" y="510.0">ja..</text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.30%)</title><rect x="202.0" y="483.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="205.0" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 2.66%)</title><rect x="205.5" y="483.0" width="31.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="208.5" y="494.0">ja..</text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (4 samples, 1.18%)</title><rect x="212.5" y="467.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="215.5" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (4 samples, 1.18%)</title><rect x="212.5" y="451.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="215.5" y="462.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (3 samples, 0.89%)</title><rect x="212.5" y="435.0" width="10.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="215.5" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.59%)</title><rect x="216.0" y="419.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="219.0" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.59%)</title><rect x="216.0" y="403.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="219.0" y="414.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.30%)</title><rect x="216.0" y="387.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="219.0" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.30%)</title><rect x="216.0" y="371.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="219.0" y="382.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::make_parsable(bool, bool) (1 samples, 0.30%)</title><rect x="216.0" y="355.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="219.0" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (1 samples, 0.30%)</title><rect x="216.0" y="339.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.0" y="350.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.30%)</title><rect x="216.0" y="323.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="219.5" y="387.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="222.5" y="398.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="223.0" y="435.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="226.0" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="223.0" y="419.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="226.0" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="223.0" y="403.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="226.0" y="414.0"></text>
</g>
<g>
<title>_os_semaphore_wait.cold.1 (1 samples, 0.30%)</title><rect x="223.0" y="387.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="226.0" y="398.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="226.4" y="467.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="229.4" y="478.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.30%)</title><rect x="229.9" y="467.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="232.9" y="478.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="233.4" y="467.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.4" y="478.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="233.4" y="451.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="236.4" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="233.4" y="435.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.30%)</title><rect x="233.4" y="419.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="236.4" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 1.18%)</title><rect x="236.9" y="627.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.9" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 1.18%)</title><rect x="236.9" y="611.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.9" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (4 samples, 1.18%)</title><rect x="236.9" y="595.0" width="14.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="239.9" y="606.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.30%)</title><rect x="236.9" y="579.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="239.9" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.89%)</title><rect x="240.4" y="579.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="243.4" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.30%)</title><rect x="240.4" y="563.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="243.4" y="574.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.30%)</title><rect x="240.4" y="547.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="243.4" y="558.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.30%)</title><rect x="240.4" y="531.0" width="3.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="243.4" y="542.0"></text>
</g>
<g>
<title>default_zone_malloc (1 samples, 0.30%)</title><rect x="240.4" y="515.0" width="3.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="243.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (2 samples, 0.59%)</title><rect x="243.9" y="563.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="246.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (2 samples, 0.59%)</title><rect x="243.9" y="547.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="246.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.59%)</title><rect x="243.9" y="531.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="246.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (2 samples, 0.59%)</title><rect x="243.9" y="515.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="246.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.59%)</title><rect x="243.9" y="499.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="246.9" y="510.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.30%)</title><rect x="247.4" y="483.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="250.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (1 samples, 0.30%)</title><rect x="250.9" y="659.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (1 samples, 0.30%)</title><rect x="254.4" y="659.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.30%)</title><rect x="254.4" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.30%)</title><rect x="254.4" y="627.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.30%)</title><rect x="254.4" y="611.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.59%)</title><rect x="257.9" y="707.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.59%)</title><rect x="257.9" y="691.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.59%)</title><rect x="257.9" y="675.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (2 samples, 0.59%)</title><rect x="257.9" y="659.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (2 samples, 0.59%)</title><rect x="257.9" y="643.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.59%)</title><rect x="257.9" y="627.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.59%)</title><rect x="257.9" y="611.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.30%)</title><rect x="257.9" y="595.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.30%)</title><rect x="257.9" y="579.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.30%)</title><rect x="257.9" y="563.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.30%)</title><rect x="257.9" y="547.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.9" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.30%)</title><rect x="257.9" y="531.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="260.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.30%)</title><rect x="261.4" y="595.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.30%)</title><rect x="261.4" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (1 samples, 0.30%)</title><rect x="261.4" y="563.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (1 samples, 0.30%)</title><rect x="261.4" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (1 samples, 0.30%)</title><rect x="261.4" y="531.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.30%)</title><rect x="261.4" y="515.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.30%)</title><rect x="261.4" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.30%)</title><rect x="261.4" y="483.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.30%)</title><rect x="261.4" y="467.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.30%)</title><rect x="261.4" y="451.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.30%)</title><rect x="261.4" y="435.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.30%)</title><rect x="261.4" y="419.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.30%)</title><rect x="261.4" y="403.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.30%)</title><rect x="261.4" y="387.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.30%)</title><rect x="261.4" y="371.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.30%)</title><rect x="261.4" y="355.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.30%)</title><rect x="261.4" y="339.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.4" y="350.0"></text>
</g>
<g>
<title>write (1 samples, 0.30%)</title><rect x="261.4" y="323.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="264.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (88 samples, 26.04%)</title><rect x="264.9" y="707.0" width="307.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.9" y="718.0">java/util/concurrent/ThreadPoolExecutor.g..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (87 samples, 25.74%)</title><rect x="268.3" y="691.0" width="303.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.3" y="702.0">java/util/concurrent/ArrayBlockingQueue.t..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (78 samples, 23.08%)</title><rect x="271.8" y="675.0" width="272.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.8" y="686.0">java/util/concurrent/locks/AbstractQ..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.30%)</title><rect x="271.8" y="659.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 1.18%)</title><rect x="275.3" y="659.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 1.18%)</title><rect x="275.3" y="643.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.89%)</title><rect x="275.3" y="627.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.89%)</title><rect x="275.3" y="611.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.89%)</title><rect x="275.3" y="595.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.3" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.89%)</title><rect x="275.3" y="579.0" width="10.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="278.3" y="590.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="275.3" y="563.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="278.3" y="574.0"></text>
</g>
<g>
<title>Chunk::next() const (1 samples, 0.30%)</title><rect x="275.3" y="547.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="278.3" y="558.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.59%)</title><rect x="278.8" y="563.0" width="7.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="281.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.30%)</title><rect x="285.8" y="627.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (73 samples, 21.60%)</title><rect x="289.3" y="659.0" width="254.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.3" y="670.0">java/util/concurrent/locks/LockSup..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (73 samples, 21.60%)</title><rect x="289.3" y="643.0" width="254.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.3" y="654.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (63 samples, 18.64%)</title><rect x="324.2" y="627.0" width="219.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="327.2" y="638.0">Unsafe_Park(JNIEnv_*, _jobjec..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="324.2" y="611.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="327.2" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.30%)</title><rect x="327.7" y="611.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="330.7" y="622.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (1 samples, 0.30%)</title><rect x="327.7" y="595.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="330.7" y="606.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.30%)</title><rect x="331.2" y="611.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="334.2" y="622.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (1 samples, 0.30%)</title><rect x="331.2" y="595.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="334.2" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (59 samples, 17.46%)</title><rect x="334.7" y="611.0" width="206.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="337.7" y="622.0">Parker::park(bool, long)</text>
</g>
<g>
<title>__psynch_cvwait (54 samples, 15.98%)</title><rect x="334.7" y="595.0" width="188.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="337.7" y="606.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.89%)</title><rect x="523.2" y="595.0" width="10.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="526.2" y="606.0"></text>
</g>
<g>
<title>_pthread_testcancel (1 samples, 0.30%)</title><rect x="530.2" y="579.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="533.2" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.59%)</title><rect x="533.7" y="595.0" width="7.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="536.7" y="606.0"></text>
</g>
<g>
<title>__cxx_global_var_init.4 (1 samples, 0.30%)</title><rect x="540.7" y="611.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="543.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.59%)</title><rect x="544.1" y="675.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.59%)</title><rect x="544.1" y="659.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.59%)</title><rect x="544.1" y="643.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.59%)</title><rect x="544.1" y="627.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.59%)</title><rect x="544.1" y="611.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.59%)</title><rect x="544.1" y="595.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.59%)</title><rect x="544.1" y="579.0" width="7.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="547.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.59%)</title><rect x="544.1" y="563.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.1" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.59%)</title><rect x="544.1" y="547.0" width="7.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="547.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.78%)</title><rect x="551.1" y="675.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.78%)</title><rect x="551.1" y="659.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.78%)</title><rect x="551.1" y="643.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.78%)</title><rect x="551.1" y="627.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.78%)</title><rect x="551.1" y="611.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.1" y="622.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.30%)</title><rect x="551.1" y="595.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="554.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 1.48%)</title><rect x="554.6" y="595.0" width="17.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="557.6" y="606.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.30%)</title><rect x="554.6" y="579.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="557.6" y="590.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.30%)</title><rect x="554.6" y="563.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="557.6" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 1.18%)</title><rect x="558.1" y="579.0" width="14.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="561.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (8 samples, 2.37%)</title><rect x="572.1" y="707.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.1" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8 samples, 2.37%)</title><rect x="572.1" y="691.0" width="27.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.1" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8 samples, 2.37%)</title><rect x="572.1" y="675.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8 samples, 2.37%)</title><rect x="572.1" y="659.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.1" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 2.37%)</title><rect x="572.1" y="643.0" width="27.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.1" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 2.37%)</title><rect x="572.1" y="627.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.1" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 2.37%)</title><rect x="572.1" y="611.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.1" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 2.37%)</title><rect x="572.1" y="595.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.1" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 2.37%)</title><rect x="572.1" y="579.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.1" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 2.37%)</title><rect x="572.1" y="563.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 2.37%)</title><rect x="572.1" y="547.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (8 samples, 2.37%)</title><rect x="572.1" y="531.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.1" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (8 samples, 2.37%)</title><rect x="572.1" y="515.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (8 samples, 2.37%)</title><rect x="572.1" y="499.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (8 samples, 2.37%)</title><rect x="572.1" y="483.0" width="27.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.1" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (8 samples, 2.37%)</title><rect x="572.1" y="467.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.1" y="478.0">j..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (8 samples, 2.37%)</title><rect x="572.1" y="451.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.1" y="462.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (8 samples, 2.37%)</title><rect x="572.1" y="435.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.1" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 2.37%)</title><rect x="572.1" y="419.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 2.37%)</title><rect x="572.1" y="403.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.1" y="414.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (8 samples, 2.37%)</title><rect x="572.1" y="387.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="398.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (8 samples, 2.37%)</title><rect x="572.1" y="371.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="382.0">s..</text>
</g>
<g>
<title>writev (8 samples, 2.37%)</title><rect x="572.1" y="355.0" width="27.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="575.1" y="366.0">w..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (52 samples, 15.38%)</title><rect x="600.0" y="707.0" width="181.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.0" y="718.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (52 samples, 15.38%)</title><rect x="600.0" y="691.0" width="181.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.0" y="702.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (23 samples, 6.80%)</title><rect x="600.0" y="675.0" width="80.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.0" y="686.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (23 samples, 6.80%)</title><rect x="600.0" y="659.0" width="80.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.0" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (23 samples, 6.80%)</title><rect x="600.0" y="643.0" width="80.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.0" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5 samples, 1.48%)</title><rect x="600.0" y="627.0" width="17.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5 samples, 1.48%)</title><rect x="600.0" y="611.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 1.48%)</title><rect x="600.0" y="595.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 1.48%)</title><rect x="600.0" y="579.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 1.48%)</title><rect x="600.0" y="563.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 1.48%)</title><rect x="600.0" y="547.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 1.48%)</title><rect x="600.0" y="531.0" width="17.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 1.48%)</title><rect x="600.0" y="515.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 1.48%)</title><rect x="600.0" y="499.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (5 samples, 1.48%)</title><rect x="600.0" y="483.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 1.48%)</title><rect x="600.0" y="467.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.0" y="478.0"></text>
</g>
<g>
<title>write (5 samples, 1.48%)</title><rect x="600.0" y="451.0" width="17.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.30%)</title><rect x="617.5" y="627.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 5.03%)</title><rect x="620.9" y="627.0" width="59.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (17 samples, 5.03%)</title><rect x="620.9" y="611.0" width="59.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.9" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 5.03%)</title><rect x="620.9" y="595.0" width="59.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.9" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 5.03%)</title><rect x="620.9" y="579.0" width="59.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.9" y="590.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 2.66%)</title><rect x="620.9" y="563.0" width="31.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.9" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 2.66%)</title><rect x="620.9" y="547.0" width="31.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.9" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 2.66%)</title><rect x="620.9" y="531.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 2.66%)</title><rect x="620.9" y="515.0" width="31.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.9" y="526.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 2.66%)</title><rect x="620.9" y="499.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.9" y="510.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (9 samples, 2.66%)</title><rect x="620.9" y="483.0" width="31.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.9" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 2.37%)</title><rect x="620.9" y="467.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 2.37%)</title><rect x="620.9" y="451.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 2.37%)</title><rect x="620.9" y="435.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 2.37%)</title><rect x="620.9" y="419.0" width="28.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.30%)</title><rect x="620.9" y="403.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$238/1051459092.apply (1 samples, 0.30%)</title><rect x="620.9" y="387.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$238/1051459092.apply (1 samples, 0.30%)</title><rect x="624.4" y="403.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.30%)</title><rect x="624.4" y="387.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.30%)</title><rect x="624.4" y="371.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.30%)</title><rect x="624.4" y="355.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.30%)</title><rect x="624.4" y="339.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.30%)</title><rect x="624.4" y="323.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.30%)</title><rect x="624.4" y="307.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.30%)</title><rect x="624.4" y="291.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (3 samples, 0.89%)</title><rect x="627.9" y="403.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.89%)</title><rect x="627.9" y="387.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.89%)</title><rect x="627.9" y="371.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.89%)</title><rect x="627.9" y="355.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.89%)</title><rect x="627.9" y="339.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.89%)</title><rect x="627.9" y="323.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (3 samples, 0.89%)</title><rect x="627.9" y="307.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.89%)</title><rect x="627.9" y="291.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.30%)</title><rect x="627.9" y="275.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.30%)</title><rect x="627.9" y="259.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.get$Lambda (1 samples, 0.30%)</title><rect x="627.9" y="243.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.&lt;init&gt; (1 samples, 0.30%)</title><rect x="627.9" y="227.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.59%)</title><rect x="631.4" y="275.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.30%)</title><rect x="634.9" y="259.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.30%)</title><rect x="634.9" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/948980208.invoke (1 samples, 0.30%)</title><rect x="634.9" y="227.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/820192556.invoke (1 samples, 0.30%)</title><rect x="634.9" y="211.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1169146729.invoke (1 samples, 0.30%)</title><rect x="634.9" y="195.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.30%)</title><rect x="634.9" y="179.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.30%)</title><rect x="634.9" y="163.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.toString (1 samples, 0.30%)</title><rect x="634.9" y="147.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.dbgString (1 samples, 0.30%)</title><rect x="634.9" y="131.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.30%)</title><rect x="634.9" y="115.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.30%)</title><rect x="634.9" y="99.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1254526270.invoke (1 samples, 0.30%)</title><rect x="634.9" y="83.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.9" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.30%)</title><rect x="634.9" y="67.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.30%)</title><rect x="634.9" y="51.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.30%)</title><rect x="634.9" y="35.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (3 samples, 0.89%)</title><rect x="638.4" y="403.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.89%)</title><rect x="638.4" y="387.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.89%)</title><rect x="638.4" y="371.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.30%)</title><rect x="641.9" y="355.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.9" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.30%)</title><rect x="641.9" y="339.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.30%)</title><rect x="641.9" y="323.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.30%)</title><rect x="645.4" y="355.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.30%)</title><rect x="645.4" y="339.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.4" y="350.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.30%)</title><rect x="645.4" y="323.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.4" y="334.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.30%)</title><rect x="645.4" y="307.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.4" y="318.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.30%)</title><rect x="645.4" y="291.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.30%)</title><rect x="645.4" y="275.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.4" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.30%)</title><rect x="645.4" y="259.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.30%)</title><rect x="648.9" y="467.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.30%)</title><rect x="648.9" y="451.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.30%)</title><rect x="648.9" y="435.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.30%)</title><rect x="648.9" y="419.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.30%)</title><rect x="648.9" y="403.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.9" y="414.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.30%)</title><rect x="648.9" y="387.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="651.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7 samples, 2.07%)</title><rect x="652.4" y="563.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.4" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (2 samples, 0.59%)</title><rect x="652.4" y="547.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.30%)</title><rect x="659.3" y="547.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.30%)</title><rect x="659.3" y="531.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.30%)</title><rect x="659.3" y="515.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 1.18%)</title><rect x="662.8" y="547.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 1.18%)</title><rect x="662.8" y="531.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.30%)</title><rect x="662.8" y="515.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.59%)</title><rect x="666.3" y="515.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.30%)</title><rect x="669.8" y="499.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.30%)</title><rect x="673.3" y="515.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$241/654001490.apply (1 samples, 0.30%)</title><rect x="673.3" y="499.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.30%)</title><rect x="673.3" y="483.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.30%)</title><rect x="673.3" y="467.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.30%)</title><rect x="673.3" y="451.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$187/1164590468.accept (1 samples, 0.30%)</title><rect x="676.8" y="563.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.30%)</title><rect x="676.8" y="547.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.30%)</title><rect x="676.8" y="531.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (29 samples, 8.58%)</title><rect x="680.3" y="675.0" width="101.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.3" y="686.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (29 samples, 8.58%)</title><rect x="680.3" y="659.0" width="101.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.3" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (29 samples, 8.58%)</title><rect x="680.3" y="643.0" width="101.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.3" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (29 samples, 8.58%)</title><rect x="680.3" y="627.0" width="101.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.3" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (29 samples, 8.58%)</title><rect x="680.3" y="611.0" width="101.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.3" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (29 samples, 8.58%)</title><rect x="680.3" y="595.0" width="101.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.3" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (29 samples, 8.58%)</title><rect x="680.3" y="579.0" width="101.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.3" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (29 samples, 8.58%)</title><rect x="680.3" y="563.0" width="101.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.3" y="574.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (22 samples, 6.51%)</title><rect x="680.3" y="547.0" width="76.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.3" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (22 samples, 6.51%)</title><rect x="680.3" y="531.0" width="76.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.3" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (22 samples, 6.51%)</title><rect x="680.3" y="515.0" width="76.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.3" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (21 samples, 6.21%)</title><rect x="680.3" y="499.0" width="73.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.3" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (21 samples, 6.21%)</title><rect x="680.3" y="483.0" width="73.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.3" y="494.0">jdk/inte..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 1.18%)</title><rect x="680.3" y="467.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="683.3" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 1.18%)</title><rect x="680.3" y="451.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="683.3" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 1.18%)</title><rect x="680.3" y="435.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="683.3" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.89%)</title><rect x="683.8" y="419.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="686.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (12 samples, 3.55%)</title><rect x="694.3" y="467.0" width="41.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.3" y="478.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.30%)</title><rect x="694.3" y="451.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.30%)</title><rect x="694.3" y="435.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.30%)</title><rect x="694.3" y="419.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.30%)</title><rect x="694.3" y="403.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.30%)</title><rect x="694.3" y="387.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.3" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.30%)</title><rect x="697.8" y="451.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.30%)</title><rect x="697.8" y="435.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.30%)</title><rect x="697.8" y="419.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (8 samples, 2.37%)</title><rect x="701.2" y="451.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.2" y="462.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (8 samples, 2.37%)</title><rect x="701.2" y="435.0" width="28.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.2" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (2 samples, 0.59%)</title><rect x="729.2" y="451.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5 samples, 1.48%)</title><rect x="736.2" y="467.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 1.48%)</title><rect x="736.2" y="451.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.30%)</title><rect x="736.2" y="435.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.30%)</title><rect x="736.2" y="419.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.30%)</title><rect x="736.2" y="403.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.30%)</title><rect x="736.2" y="387.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.30%)</title><rect x="736.2" y="371.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 1.18%)</title><rect x="739.6" y="435.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 1.18%)</title><rect x="739.6" y="419.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4 samples, 1.18%)</title><rect x="739.6" y="403.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 1.18%)</title><rect x="739.6" y="387.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 1.18%)</title><rect x="739.6" y="371.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.6" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="743.1" y="355.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.1" y="366.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_enter(Handle, BasicLock*, Thread*) (1 samples, 0.30%)</title><rect x="743.1" y="339.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="746.1" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.30%)</title><rect x="743.1" y="323.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="746.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.30%)</title><rect x="746.6" y="355.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.30%)</title><rect x="746.6" y="339.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.30%)</title><rect x="746.6" y="323.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.30%)</title><rect x="746.6" y="307.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.6" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="746.6" y="291.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="749.6" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.30%)</title><rect x="746.6" y="275.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="749.6" y="286.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.30%)</title><rect x="746.6" y="259.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="749.6" y="270.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.30%)</title><rect x="746.6" y="243.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="749.6" y="254.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.30%)</title><rect x="746.6" y="227.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="749.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.30%)</title><rect x="750.1" y="355.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.30%)</title><rect x="750.1" y="339.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.1" y="350.0"></text>
</g>
<g>
<title>write (1 samples, 0.30%)</title><rect x="750.1" y="323.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.30%)</title><rect x="753.6" y="499.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.accept (2 samples, 0.59%)</title><rect x="757.1" y="547.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (2 samples, 0.59%)</title><rect x="757.1" y="531.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (2 samples, 0.59%)</title><rect x="757.1" y="515.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.59%)</title><rect x="757.1" y="499.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.59%)</title><rect x="757.1" y="483.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.59%)</title><rect x="757.1" y="467.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.59%)</title><rect x="757.1" y="451.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.59%)</title><rect x="757.1" y="435.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.59%)</title><rect x="757.1" y="419.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/813642819.accept (2 samples, 0.59%)</title><rect x="757.1" y="403.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (5 samples, 1.48%)</title><rect x="764.1" y="547.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (5 samples, 1.48%)</title><rect x="764.1" y="531.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (5 samples, 1.48%)</title><rect x="764.1" y="515.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 1.48%)</title><rect x="764.1" y="499.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 1.48%)</title><rect x="764.1" y="483.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.48%)</title><rect x="764.1" y="467.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 1.48%)</title><rect x="764.1" y="451.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (5 samples, 1.48%)</title><rect x="764.1" y="435.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (5 samples, 1.48%)</title><rect x="764.1" y="419.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 1.48%)</title><rect x="764.1" y="403.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 1.48%)</title><rect x="764.1" y="387.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.30%)</title><rect x="764.1" y="371.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.apply (1 samples, 0.30%)</title><rect x="764.1" y="355.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.30%)</title><rect x="764.1" y="339.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 1.18%)</title><rect x="767.6" y="371.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 1.18%)</title><rect x="767.6" y="355.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 1.18%)</title><rect x="767.6" y="339.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 1.18%)</title><rect x="767.6" y="323.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 1.18%)</title><rect x="767.6" y="307.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 1.18%)</title><rect x="767.6" y="291.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 1.18%)</title><rect x="767.6" y="275.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 1.18%)</title><rect x="767.6" y="259.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 1.18%)</title><rect x="767.6" y="243.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.6" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 1.18%)</title><rect x="767.6" y="227.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="770.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 1.18%)</title><rect x="767.6" y="211.0" width="13.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="770.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (15 samples, 4.44%)</title><rect x="781.5" y="755.0" width="52.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.5" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (15 samples, 4.44%)</title><rect x="781.5" y="739.0" width="52.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.5" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4 samples, 1.18%)</title><rect x="781.5" y="723.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4 samples, 1.18%)</title><rect x="781.5" y="707.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.30%)</title><rect x="781.5" y="691.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3 samples, 0.89%)</title><rect x="785.0" y="691.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2 samples, 0.59%)</title><rect x="788.5" y="675.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.59%)</title><rect x="788.5" y="659.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.59%)</title><rect x="788.5" y="643.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.59%)</title><rect x="788.5" y="627.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.59%)</title><rect x="788.5" y="611.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.59%)</title><rect x="788.5" y="595.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.59%)</title><rect x="788.5" y="579.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.59%)</title><rect x="788.5" y="563.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.30%)</title><rect x="788.5" y="547.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.30%)</title><rect x="788.5" y="531.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.30%)</title><rect x="788.5" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.30%)</title><rect x="788.5" y="499.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.30%)</title><rect x="788.5" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.30%)</title><rect x="788.5" y="467.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.5" y="478.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.30%)</title><rect x="788.5" y="451.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="791.5" y="462.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.30%)</title><rect x="788.5" y="435.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="791.5" y="446.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.30%)</title><rect x="788.5" y="419.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="791.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="792.0" y="547.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="792.0" y="531.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="792.0" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="792.0" y="499.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="792.0" y="483.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.0" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.30%)</title><rect x="792.0" y="467.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="795.0" y="478.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="792.0" y="451.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="795.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.89%)</title><rect x="795.5" y="723.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.89%)</title><rect x="795.5" y="707.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.5" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.89%)</title><rect x="795.5" y="691.0" width="10.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="798.5" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.89%)</title><rect x="795.5" y="675.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="798.5" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.59%)</title><rect x="795.5" y="659.0" width="7.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="798.5" y="670.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.30%)</title><rect x="802.5" y="659.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="805.5" y="670.0"></text>
</g>
<g>
<title>_pthread_testcancel (1 samples, 0.30%)</title><rect x="802.5" y="643.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="805.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (8 samples, 2.37%)</title><rect x="806.0" y="723.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.0" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 2.37%)</title><rect x="806.0" y="707.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.0" y="718.0">j..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 1.78%)</title><rect x="813.0" y="691.0" width="20.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="816.0" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 1.78%)</title><rect x="813.0" y="675.0" width="20.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="816.0" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 1.48%)</title><rect x="813.0" y="659.0" width="17.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="816.0" y="670.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.30%)</title><rect x="830.4" y="659.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="833.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (54 samples, 15.98%)</title><rect x="833.9" y="755.0" width="188.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.9" y="766.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 1.78%)</title><rect x="837.4" y="739.0" width="20.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (6 samples, 1.78%)</title><rect x="837.4" y="723.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (6 samples, 1.78%)</title><rect x="837.4" y="707.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (6 samples, 1.78%)</title><rect x="837.4" y="691.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (6 samples, 1.78%)</title><rect x="837.4" y="675.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (6 samples, 1.78%)</title><rect x="837.4" y="659.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (6 samples, 1.78%)</title><rect x="837.4" y="643.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.78%)</title><rect x="837.4" y="627.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.78%)</title><rect x="837.4" y="611.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 1.78%)</title><rect x="837.4" y="595.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 1.78%)</title><rect x="837.4" y="579.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (6 samples, 1.78%)</title><rect x="837.4" y="563.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (6 samples, 1.78%)</title><rect x="837.4" y="547.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.30%)</title><rect x="837.4" y="531.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.30%)</title><rect x="837.4" y="515.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1 samples, 0.30%)</title><rect x="837.4" y="499.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="837.4" y="483.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="837.4" y="467.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.30%)</title><rect x="837.4" y="451.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.30%)</title><rect x="837.4" y="435.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.30%)</title><rect x="837.4" y="419.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="837.4" y="403.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="837.4" y="387.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="837.4" y="371.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="837.4" y="355.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="837.4" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.4" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.30%)</title><rect x="837.4" y="323.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="840.4" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="837.4" y="307.0" width="3.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="840.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (5 samples, 1.48%)</title><rect x="840.9" y="531.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 1.18%)</title><rect x="844.4" y="515.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 1.18%)</title><rect x="844.4" y="499.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 1.18%)</title><rect x="844.4" y="483.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 1.18%)</title><rect x="844.4" y="467.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 1.18%)</title><rect x="844.4" y="451.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 1.18%)</title><rect x="844.4" y="435.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.4" y="446.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.30%)</title><rect x="844.4" y="419.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="847.4" y="430.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.30%)</title><rect x="844.4" y="403.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="847.4" y="414.0"></text>
</g>
<g>
<title>rpc_errlist (3 samples, 0.89%)</title><rect x="847.9" y="419.0" width="10.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="850.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (6 samples, 1.78%)</title><rect x="858.3" y="739.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/283242345.run (1 samples, 0.30%)</title><rect x="858.3" y="723.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1 samples, 0.30%)</title><rect x="858.3" y="707.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="858.3" y="691.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="858.3" y="675.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.30%)</title><rect x="858.3" y="659.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.30%)</title><rect x="858.3" y="643.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (1 samples, 0.30%)</title><rect x="858.3" y="627.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.30%)</title><rect x="858.3" y="611.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.30%)</title><rect x="858.3" y="595.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.30%)</title><rect x="858.3" y="579.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.30%)</title><rect x="858.3" y="563.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="858.3" y="547.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.30%)</title><rect x="858.3" y="531.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.30%)</title><rect x="858.3" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.30%)</title><rect x="858.3" y="499.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.30%)</title><rect x="858.3" y="483.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="858.3" y="467.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="858.3" y="451.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="858.3" y="435.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="858.3" y="419.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="858.3" y="403.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.3" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.30%)</title><rect x="858.3" y="387.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="861.3" y="398.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.30%)</title><rect x="858.3" y="371.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="861.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$168/650042043.run (5 samples, 1.48%)</title><rect x="861.8" y="723.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (5 samples, 1.48%)</title><rect x="861.8" y="707.0" width="17.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 1.48%)</title><rect x="861.8" y="691.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.48%)</title><rect x="861.8" y="675.0" width="17.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 1.48%)</title><rect x="861.8" y="659.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.48%)</title><rect x="861.8" y="643.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.48%)</title><rect x="861.8" y="627.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.48%)</title><rect x="861.8" y="611.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.48%)</title><rect x="861.8" y="595.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.48%)</title><rect x="861.8" y="579.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.8" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 1.48%)</title><rect x="861.8" y="563.0" width="17.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="864.8" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 1.48%)</title><rect x="861.8" y="547.0" width="17.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="864.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.59%)</title><rect x="879.3" y="739.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.59%)</title><rect x="879.3" y="723.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="882.3" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="879.3" y="707.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="882.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="879.3" y="691.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="882.3" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.30%)</title><rect x="879.3" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="882.3" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.30%)</title><rect x="879.3" y="659.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="882.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.30%)</title><rect x="882.8" y="707.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.30%)</title><rect x="886.3" y="739.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.30%)</title><rect x="886.3" y="723.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.30%)</title><rect x="886.3" y="707.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.30%)</title><rect x="886.3" y="691.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.30%)</title><rect x="889.8" y="739.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.30%)</title><rect x="889.8" y="723.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.30%)</title><rect x="893.3" y="739.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (36 samples, 10.65%)</title><rect x="896.7" y="739.0" width="125.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.7" y="750.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (36 samples, 10.65%)</title><rect x="896.7" y="723.0" width="125.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.7" y="734.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (36 samples, 10.65%)</title><rect x="896.7" y="707.0" width="125.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.7" y="718.0">sun/nio/ch/KQue..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (30 samples, 8.88%)</title><rect x="896.7" y="691.0" width="104.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.7" y="702.0">sun/nio/ch/K..</text>
</g>
<g>
<title>kevent (27 samples, 7.99%)</title><rect x="907.2" y="675.0" width="94.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="910.2" y="686.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 1.78%)</title><rect x="1001.5" y="691.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.30%)</title><rect x="1001.5" y="675.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.30%)</title><rect x="1001.5" y="659.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (5 samples, 1.48%)</title><rect x="1005.0" y="675.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (5 samples, 1.48%)</title><rect x="1005.0" y="659.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1008.0" y="670.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.30%)</title><rect x="1005.0" y="643.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1008.0" y="654.0"></text>
</g>
<g>
<title>rpc_errlist (4 samples, 1.18%)</title><rect x="1008.5" y="643.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1011.5" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (45 samples, 13.31%)</title><rect x="1022.4" y="755.0" width="157.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.4" y="766.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (12 samples, 3.55%)</title><rect x="1022.4" y="739.0" width="41.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.4" y="750.0">one..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11 samples, 3.25%)</title><rect x="1022.4" y="723.0" width="38.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.4" y="734.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 3.25%)</title><rect x="1022.4" y="707.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.4" y="718.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (11 samples, 3.25%)</title><rect x="1022.4" y="691.0" width="38.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.4" y="702.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (8 samples, 2.37%)</title><rect x="1022.4" y="675.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="686.0">s..</text>
</g>
<g>
<title>kevent (8 samples, 2.37%)</title><rect x="1022.4" y="659.0" width="28.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1025.4" y="670.0">k..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.89%)</title><rect x="1050.4" y="675.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.59%)</title><rect x="1050.4" y="659.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.59%)</title><rect x="1050.4" y="643.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.30%)</title><rect x="1057.3" y="659.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.30%)</title><rect x="1057.3" y="643.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.30%)</title><rect x="1057.3" y="627.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.30%)</title><rect x="1057.3" y="611.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.30%)</title><rect x="1057.3" y="595.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.30%)</title><rect x="1060.8" y="723.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.30%)</title><rect x="1060.8" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.30%)</title><rect x="1060.8" y="691.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (33 samples, 9.76%)</title><rect x="1064.3" y="739.0" width="115.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.3" y="750.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (33 samples, 9.76%)</title><rect x="1064.3" y="723.0" width="115.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.3" y="734.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 8.58%)</title><rect x="1064.3" y="707.0" width="101.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.3" y="718.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 8.58%)</title><rect x="1064.3" y="691.0" width="101.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.3" y="702.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 8.58%)</title><rect x="1064.3" y="675.0" width="101.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.3" y="686.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (27 samples, 7.99%)</title><rect x="1064.3" y="659.0" width="94.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.3" y="670.0">RequestHand..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (27 samples, 7.99%)</title><rect x="1064.3" y="643.0" width="94.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.3" y="654.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (27 samples, 7.99%)</title><rect x="1064.3" y="627.0" width="94.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.3" y="638.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (6 samples, 1.78%)</title><rect x="1067.8" y="611.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (6 samples, 1.78%)</title><rect x="1067.8" y="595.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (6 samples, 1.78%)</title><rect x="1067.8" y="579.0" width="21.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 1.78%)</title><rect x="1067.8" y="563.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 1.78%)</title><rect x="1067.8" y="547.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.78%)</title><rect x="1067.8" y="531.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.78%)</title><rect x="1067.8" y="515.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.78%)</title><rect x="1067.8" y="499.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.78%)</title><rect x="1067.8" y="483.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.78%)</title><rect x="1067.8" y="467.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.8" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 1.78%)</title><rect x="1067.8" y="451.0" width="21.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1070.8" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.30%)</title><rect x="1067.8" y="435.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1070.8" y="446.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.30%)</title><rect x="1067.8" y="419.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1070.8" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 1.18%)</title><rect x="1071.3" y="435.0" width="14.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1074.3" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="1085.3" y="435.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1088.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (19 samples, 5.62%)</title><rect x="1088.8" y="611.0" width="66.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.8" y="622.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 1.18%)</title><rect x="1092.2" y="595.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 1.18%)</title><rect x="1092.2" y="579.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 1.18%)</title><rect x="1092.2" y="563.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 1.18%)</title><rect x="1092.2" y="547.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.30%)</title><rect x="1092.2" y="531.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.30%)</title><rect x="1092.2" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.30%)</title><rect x="1092.2" y="499.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.30%)</title><rect x="1092.2" y="483.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.89%)</title><rect x="1095.7" y="531.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.89%)</title><rect x="1095.7" y="515.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.89%)</title><rect x="1095.7" y="499.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.89%)</title><rect x="1095.7" y="483.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.89%)</title><rect x="1095.7" y="467.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.7" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.89%)</title><rect x="1095.7" y="451.0" width="10.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1098.7" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.30%)</title><rect x="1095.7" y="435.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.7" y="446.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.30%)</title><rect x="1095.7" y="419.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.7" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="1099.2" y="435.0" width="3.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1102.2" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="1102.7" y="435.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1105.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (10 samples, 2.96%)</title><rect x="1106.2" y="595.0" width="34.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.2" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.96%)</title><rect x="1106.2" y="579.0" width="34.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.96%)</title><rect x="1106.2" y="563.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.96%)</title><rect x="1106.2" y="547.0" width="34.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1109.2" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (6 samples, 1.78%)</title><rect x="1109.7" y="531.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.7" y="542.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.30%)</title><rect x="1113.2" y="515.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4 samples, 1.18%)</title><rect x="1116.7" y="515.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.7" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4 samples, 1.18%)</title><rect x="1116.7" y="499.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.30%)</title><rect x="1116.7" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.30%)</title><rect x="1116.7" y="467.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.30%)</title><rect x="1116.7" y="451.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.7" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.89%)</title><rect x="1120.2" y="483.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.2" y="494.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.30%)</title><rect x="1120.2" y="467.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1123.2" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.30%)</title><rect x="1120.2" y="451.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.2" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="1120.2" y="435.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.2" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.30%)</title><rect x="1120.2" y="419.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.2" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.30%)</title><rect x="1120.2" y="403.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.2" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.59%)</title><rect x="1123.7" y="467.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.7" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.59%)</title><rect x="1123.7" y="451.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.30%)</title><rect x="1123.7" y="435.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.30%)</title><rect x="1123.7" y="419.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.30%)</title><rect x="1123.7" y="403.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.30%)</title><rect x="1123.7" y="387.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.30%)</title><rect x="1123.7" y="371.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.7" y="382.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.30%)</title><rect x="1123.7" y="355.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.7" y="366.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.30%)</title><rect x="1127.2" y="435.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.2" y="446.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.30%)</title><rect x="1127.2" y="419.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.30%)</title><rect x="1127.2" y="403.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3 samples, 0.89%)</title><rect x="1130.7" y="531.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.89%)</title><rect x="1130.7" y="515.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1130.7" y="499.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.59%)</title><rect x="1134.1" y="499.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.59%)</title><rect x="1134.1" y="483.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.59%)</title><rect x="1134.1" y="467.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.59%)</title><rect x="1134.1" y="451.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.59%)</title><rect x="1134.1" y="435.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.59%)</title><rect x="1134.1" y="419.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.59%)</title><rect x="1134.1" y="403.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.59%)</title><rect x="1134.1" y="387.0" width="7.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1137.1" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.59%)</title><rect x="1134.1" y="371.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1137.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.GET (1 samples, 0.30%)</title><rect x="1141.1" y="595.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1 samples, 0.30%)</title><rect x="1144.6" y="595.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1144.6" y="579.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.30%)</title><rect x="1144.6" y="563.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.30%)</title><rect x="1144.6" y="547.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.30%)</title><rect x="1144.6" y="531.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (1 samples, 0.30%)</title><rect x="1144.6" y="515.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.30%)</title><rect x="1144.6" y="499.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.30%)</title><rect x="1144.6" y="483.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.6" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.30%)</title><rect x="1144.6" y="467.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1147.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (1 samples, 0.30%)</title><rect x="1148.1" y="595.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1148.1" y="579.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (1 samples, 0.30%)</title><rect x="1151.6" y="595.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.30%)</title><rect x="1151.6" y="579.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.6" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1151.6" y="563.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.30%)</title><rect x="1151.6" y="547.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.30%)</title><rect x="1151.6" y="531.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1 samples, 0.30%)</title><rect x="1151.6" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.30%)</title><rect x="1151.6" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.30%)</title><rect x="1151.6" y="483.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.30%)</title><rect x="1151.6" y="467.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.6" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="1151.6" y="451.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1154.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (1 samples, 0.30%)</title><rect x="1155.1" y="611.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.30%)</title><rect x="1155.1" y="595.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.30%)</title><rect x="1155.1" y="579.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.30%)</title><rect x="1155.1" y="563.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (1 samples, 0.30%)</title><rect x="1155.1" y="547.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (1 samples, 0.30%)</title><rect x="1155.1" y="531.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.30%)</title><rect x="1158.6" y="659.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.30%)</title><rect x="1158.6" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.30%)</title><rect x="1158.6" y="627.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.30%)</title><rect x="1158.6" y="611.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.30%)</title><rect x="1162.1" y="659.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.30%)</title><rect x="1162.1" y="643.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.30%)</title><rect x="1162.1" y="627.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1162.1" y="611.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 1.18%)</title><rect x="1165.6" y="707.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (4 samples, 1.18%)</title><rect x="1165.6" y="691.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 1.18%)</title><rect x="1165.6" y="675.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 1.18%)</title><rect x="1165.6" y="659.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 1.18%)</title><rect x="1165.6" y="643.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 1.18%)</title><rect x="1165.6" y="627.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 1.18%)</title><rect x="1165.6" y="611.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 1.18%)</title><rect x="1165.6" y="595.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.6" y="606.0"></text>
</g>
<g>
<title>rpc_errlist (3 samples, 0.89%)</title><rect x="1169.1" y="579.0" width="10.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1172.1" y="590.0"></text>
</g>
<g>
<title>thread_start (3 samples, 0.89%)</title><rect x="1179.5" y="755.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>_pthread_start (3 samples, 0.89%)</title><rect x="1179.5" y="739.0" width="10.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.89%)</title><rect x="1179.5" y="723.0" width="10.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.89%)</title><rect x="1179.5" y="707.0" width="10.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.30%)</title><rect x="1179.5" y="691.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.30%)</title><rect x="1179.5" y="675.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.30%)</title><rect x="1179.5" y="659.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.5" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.30%)</title><rect x="1179.5" y="643.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.30%)</title><rect x="1179.5" y="627.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="1179.5" y="611.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="622.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="1179.5" y="595.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="606.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.30%)</title><rect x="1179.5" y="579.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.5" y="590.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="1183.0" y="691.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="702.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.30%)</title><rect x="1183.0" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.0" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.30%)</title><rect x="1183.0" y="659.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1183.0" y="643.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.0" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1183.0" y="627.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.0" y="638.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1183.0" y="611.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.0" y="622.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.30%)</title><rect x="1183.0" y="595.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="606.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.30%)</title><rect x="1183.0" y="579.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.0" y="590.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.30%)</title><rect x="1186.5" y="691.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.30%)</title><rect x="1186.5" y="675.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.30%)</title><rect x="1186.5" y="659.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.30%)</title><rect x="1186.5" y="643.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
</g>
</svg>
