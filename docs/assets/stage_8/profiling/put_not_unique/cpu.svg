<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="645"> </text>
<g id="frames">
<g>
<title>all (365 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="622.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 1.92%)</title><rect x="10.0" y="595.0" width="22.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="606.0">S..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 1.92%)</title><rect x="10.0" y="579.0" width="22.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="590.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 1.37%)</title><rect x="16.5" y="563.0" width="16.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.5" y="574.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.27%)</title><rect x="16.5" y="547.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.5" y="558.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 1.10%)</title><rect x="19.7" y="547.0" width="12.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.7" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.10%)</title><rect x="19.7" y="531.0" width="12.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="22.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (224 samples, 61.37%)</title><rect x="32.6" y="595.0" width="724.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.6" y="606.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (224 samples, 61.37%)</title><rect x="32.6" y="579.0" width="724.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.6" y="590.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (224 samples, 61.37%)</title><rect x="32.6" y="563.0" width="724.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.6" y="574.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (71 samples, 19.45%)</title><rect x="32.6" y="547.0" width="229.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.6" y="558.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 8.22%)</title><rect x="32.6" y="531.0" width="97.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.6" y="542.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (25 samples, 6.85%)</title><rect x="32.6" y="515.0" width="80.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.6" y="526.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/1630776069.apply (24 samples, 6.58%)</title><rect x="35.9" y="499.0" width="77.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.9" y="510.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (24 samples, 6.58%)</title><rect x="35.9" y="483.0" width="77.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.9" y="494.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (24 samples, 6.58%)</title><rect x="35.9" y="467.0" width="77.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.9" y="478.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (15 samples, 4.11%)</title><rect x="35.9" y="451.0" width="48.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.9" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (15 samples, 4.11%)</title><rect x="35.9" y="435.0" width="48.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.9" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (15 samples, 4.11%)</title><rect x="35.9" y="419.0" width="48.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.9" y="430.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 1.37%)</title><rect x="35.9" y="403.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 1.37%)</title><rect x="35.9" y="387.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 1.10%)</title><rect x="35.9" y="371.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/850437303.apply (4 samples, 1.10%)</title><rect x="35.9" y="355.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4 samples, 1.10%)</title><rect x="35.9" y="339.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 1.10%)</title><rect x="35.9" y="323.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1577944452.apply (4 samples, 1.10%)</title><rect x="35.9" y="307.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4 samples, 1.10%)</title><rect x="35.9" y="291.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4 samples, 1.10%)</title><rect x="35.9" y="275.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.82%)</title><rect x="35.9" y="259.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.82%)</title><rect x="35.9" y="243.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.27%)</title><rect x="35.9" y="227.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$197/221881945.apply (1 samples, 0.27%)</title><rect x="35.9" y="211.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$197/221881945.apply (2 samples, 0.55%)</title><rect x="39.1" y="227.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2 samples, 0.55%)</title><rect x="39.1" y="211.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.27%)</title><rect x="39.1" y="195.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.27%)</title><rect x="39.1" y="179.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.27%)</title><rect x="39.1" y="163.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.27%)</title><rect x="39.1" y="147.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.27%)</title><rect x="39.1" y="131.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.27%)</title><rect x="39.1" y="115.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.27%)</title><rect x="39.1" y="99.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.27%)</title><rect x="39.1" y="83.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.27%)</title><rect x="42.3" y="195.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.27%)</title><rect x="42.3" y="179.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1 samples, 0.27%)</title><rect x="42.3" y="163.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.3" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.27%)</title><rect x="42.3" y="147.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.27%)</title><rect x="42.3" y="131.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.27%)</title><rect x="42.3" y="115.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.3" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (1 samples, 0.27%)</title><rect x="42.3" y="99.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.3" y="110.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.27%)</title><rect x="42.3" y="83.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.27%)</title><rect x="42.3" y="67.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.27%)</title><rect x="45.6" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.27%)</title><rect x="45.6" y="243.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.27%)</title><rect x="45.6" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.27%)</title><rect x="45.6" y="211.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.27%)</title><rect x="45.6" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.27%)</title><rect x="45.6" y="179.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.27%)</title><rect x="45.6" y="163.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (1 samples, 0.27%)</title><rect x="45.6" y="147.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.27%)</title><rect x="45.6" y="131.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.27%)</title><rect x="48.8" y="371.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.27%)</title><rect x="48.8" y="355.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/850437303.apply (1 samples, 0.27%)</title><rect x="48.8" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (10 samples, 2.74%)</title><rect x="52.0" y="403.0" width="32.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.0" y="414.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.27%)</title><rect x="52.0" y="387.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.27%)</title><rect x="52.0" y="371.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.27%)</title><rect x="52.0" y="355.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/356248939.apply (1 samples, 0.27%)</title><rect x="52.0" y="339.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.27%)</title><rect x="55.3" y="387.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.27%)</title><rect x="55.3" y="371.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (8 samples, 2.19%)</title><rect x="58.5" y="387.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7 samples, 1.92%)</title><rect x="58.5" y="371.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7 samples, 1.92%)</title><rect x="58.5" y="355.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.5" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 1.92%)</title><rect x="58.5" y="339.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.5" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1424384071.apply (7 samples, 1.92%)</title><rect x="58.5" y="323.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.5" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (7 samples, 1.92%)</title><rect x="58.5" y="307.0" width="22.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.5" y="318.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (7 samples, 1.92%)</title><rect x="58.5" y="291.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.5" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.82%)</title><rect x="58.5" y="275.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.82%)</title><rect x="58.5" y="259.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.82%)</title><rect x="58.5" y="243.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/310170649.apply (3 samples, 0.82%)</title><rect x="58.5" y="227.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3 samples, 0.82%)</title><rect x="58.5" y="211.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3 samples, 0.82%)</title><rect x="58.5" y="195.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3 samples, 0.82%)</title><rect x="58.5" y="179.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.27%)</title><rect x="58.5" y="163.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.5" y="174.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.27%)</title><rect x="58.5" y="147.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.5" y="158.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.27%)</title><rect x="58.5" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.5" y="142.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.27%)</title><rect x="58.5" y="115.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.55%)</title><rect x="61.7" y="163.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.7" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.55%)</title><rect x="61.7" y="147.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.27%)</title><rect x="65.0" y="131.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4 samples, 1.10%)</title><rect x="68.2" y="275.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4 samples, 1.10%)</title><rect x="68.2" y="259.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4 samples, 1.10%)</title><rect x="68.2" y="243.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.2" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.10%)</title><rect x="68.2" y="227.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.2" y="238.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.82%)</title><rect x="68.2" y="211.0" width="9.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="71.2" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ull&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.55%)</title><rect x="68.2" y="195.0" width="6.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.2" y="206.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.27%)</title><rect x="74.7" y="195.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="77.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$148/172854560.run (1 samples, 0.27%)</title><rect x="77.9" y="211.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.27%)</title><rect x="77.9" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.9" y="206.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.27%)</title><rect x="77.9" y="179.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.9" y="190.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.27%)</title><rect x="77.9" y="163.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.9" y="174.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.27%)</title><rect x="77.9" y="147.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.9" y="158.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.27%)</title><rect x="77.9" y="131.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.9" y="142.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.27%)</title><rect x="77.9" y="115.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.27%)</title><rect x="77.9" y="99.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.27%)</title><rect x="77.9" y="83.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.27%)</title><rect x="77.9" y="67.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.9" y="78.0"></text>
</g>
<g>
<title>__block_literal_global (1 samples, 0.27%)</title><rect x="77.9" y="51.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="80.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.27%)</title><rect x="81.1" y="371.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.1" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="81.1" y="355.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="84.1" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="81.1" y="339.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="84.1" y="350.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.27%)</title><rect x="81.1" y="323.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="84.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (7 samples, 1.92%)</title><rect x="84.4" y="451.0" width="22.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.4" y="462.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="84.4" y="435.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="87.4" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="84.4" y="419.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="87.4" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.27%)</title><rect x="84.4" y="403.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.27%)</title><rect x="84.4" y="387.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="87.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6 samples, 1.64%)</title><rect x="87.6" y="435.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (6 samples, 1.64%)</title><rect x="87.6" y="419.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 1.37%)</title><rect x="90.8" y="403.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.8" y="414.0"></text>
</g>
<g>
<title>write (5 samples, 1.37%)</title><rect x="90.8" y="387.0" width="16.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="93.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1 samples, 0.27%)</title><rect x="107.0" y="451.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1 samples, 0.27%)</title><rect x="107.0" y="435.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.27%)</title><rect x="107.0" y="419.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.0" y="430.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.27%)</title><rect x="107.0" y="403.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.0" y="414.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.27%)</title><rect x="107.0" y="387.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.27%)</title><rect x="107.0" y="371.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="382.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.27%)</title><rect x="107.0" y="355.0" width="3.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="110.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.27%)</title><rect x="110.2" y="451.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.27%)</title><rect x="110.2" y="435.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.27%)</title><rect x="110.2" y="419.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.27%)</title><rect x="110.2" y="403.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.2" y="414.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.27%)</title><rect x="110.2" y="387.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="110.2" y="371.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.37%)</title><rect x="113.5" y="515.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 1.37%)</title><rect x="113.5" y="499.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.55%)</title><rect x="113.5" y="483.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.55%)</title><rect x="113.5" y="467.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.55%)</title><rect x="113.5" y="451.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.55%)</title><rect x="113.5" y="435.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.55%)</title><rect x="113.5" y="419.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.55%)</title><rect x="113.5" y="403.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.55%)</title><rect x="113.5" y="387.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.55%)</title><rect x="113.5" y="371.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.5" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.55%)</title><rect x="113.5" y="355.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="116.5" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.27%)</title><rect x="113.5" y="339.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="116.5" y="350.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.27%)</title><rect x="113.5" y="323.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="116.5" y="334.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.27%)</title><rect x="113.5" y="307.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="116.5" y="318.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.27%)</title><rect x="113.5" y="291.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="116.5" y="302.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.27%)</title><rect x="113.5" y="275.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="116.5" y="286.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.27%)</title><rect x="113.5" y="259.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="116.5" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.27%)</title><rect x="116.7" y="339.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.7" y="350.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.27%)</title><rect x="116.7" y="323.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="119.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1284023277.accept (3 samples, 0.82%)</title><rect x="119.9" y="483.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (3 samples, 0.82%)</title><rect x="119.9" y="467.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (3 samples, 0.82%)</title><rect x="119.9" y="451.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.82%)</title><rect x="119.9" y="435.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.82%)</title><rect x="119.9" y="419.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.27%)</title><rect x="119.9" y="403.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.55%)</title><rect x="123.2" y="403.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.55%)</title><rect x="123.2" y="387.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.55%)</title><rect x="123.2" y="371.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.55%)</title><rect x="123.2" y="355.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.55%)</title><rect x="123.2" y="339.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.55%)</title><rect x="123.2" y="323.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.55%)</title><rect x="123.2" y="307.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.55%)</title><rect x="123.2" y="291.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.55%)</title><rect x="123.2" y="275.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.55%)</title><rect x="123.2" y="259.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.2" y="270.0"></text>
</g>
<g>
<title>write (2 samples, 0.55%)</title><rect x="123.2" y="243.0" width="6.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="126.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$263/522784531.get (41 samples, 11.23%)</title><rect x="129.6" y="531.0" width="132.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.6" y="542.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (41 samples, 11.23%)</title><rect x="129.6" y="515.0" width="132.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.6" y="526.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (39 samples, 10.68%)</title><rect x="129.6" y="499.0" width="126.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.6" y="510.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (38 samples, 10.41%)</title><rect x="129.6" y="483.0" width="122.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.6" y="494.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (38 samples, 10.41%)</title><rect x="129.6" y="467.0" width="122.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="478.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (38 samples, 10.41%)</title><rect x="129.6" y="451.0" width="122.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="132.6" y="462.0">Java_org_rocksd..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (37 samples, 10.14%)</title><rect x="132.8" y="435.0" width="119.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="135.8" y="446.0">rocksdb_put_hel..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.27%)</title><rect x="132.8" y="419.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="135.8" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="136.1" y="419.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="139.1" y="430.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.27%)</title><rect x="136.1" y="403.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.1" y="414.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.27%)</title><rect x="139.3" y="419.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="142.3" y="430.0"></text>
</g>
<g>
<title>compiler_barrier() (1 samples, 0.27%)</title><rect x="139.3" y="403.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="142.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (34 samples, 9.32%)</title><rect x="142.5" y="419.0" width="110.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="145.5" y="430.0">rocksdb::Comp..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (34 samples, 9.32%)</title><rect x="142.5" y="403.0" width="110.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="145.5" y="414.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (34 samples, 9.32%)</title><rect x="142.5" y="387.0" width="110.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="145.5" y="398.0">rocksdb::DB::..</text>
</g>
<g>
<title>ZBUFFv07_recommendedDOutSize (1 samples, 0.27%)</title><rect x="142.5" y="371.0" width="3.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="145.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (32 samples, 8.77%)</title><rect x="145.8" y="371.0" width="103.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="148.8" y="382.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (32 samples, 8.77%)</title><rect x="145.8" y="355.0" width="103.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="148.8" y="366.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.27%)</title><rect x="155.5" y="339.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="158.5" y="350.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (19 samples, 5.21%)</title><rect x="158.7" y="339.0" width="61.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="161.7" y="350.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.27%)</title><rect x="158.7" y="323.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="161.7" y="334.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (18 samples, 4.93%)</title><rect x="161.9" y="323.0" width="58.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="164.9" y="334.0">rocksd..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (18 samples, 4.93%)</title><rect x="161.9" y="307.0" width="58.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="164.9" y="318.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (16 samples, 4.38%)</title><rect x="161.9" y="291.0" width="51.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="164.9" y="302.0">rocks..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (16 samples, 4.38%)</title><rect x="161.9" y="275.0" width="51.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="164.9" y="286.0">rocks..</text>
</g>
<g>
<title>write (16 samples, 4.38%)</title><rect x="161.9" y="259.0" width="51.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="164.9" y="270.0">write</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.27%)</title><rect x="213.7" y="291.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="216.7" y="302.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.27%)</title><rect x="216.9" y="291.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="219.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (9 samples, 2.47%)</title><rect x="220.1" y="339.0" width="29.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="223.1" y="350.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 2.19%)</title><rect x="223.4" y="323.0" width="25.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="226.4" y="334.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 2.19%)</title><rect x="223.4" y="307.0" width="25.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="226.4" y="318.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 2.19%)</title><rect x="223.4" y="291.0" width="25.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="226.4" y="302.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 2.19%)</title><rect x="223.4" y="275.0" width="25.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="226.4" y="286.0">r..</text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (6 samples, 1.64%)</title><rect x="229.8" y="259.0" width="19.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="232.8" y="270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetMinLogContainingPrepSection() (1 samples, 0.27%)</title><rect x="246.0" y="243.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.0" y="254.0"></text>
</g>
<g>
<title>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve(unsigned long) (1 samples, 0.27%)</title><rect x="249.2" y="371.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="252.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (1 samples, 0.27%)</title><rect x="252.5" y="483.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.27%)</title><rect x="252.5" y="467.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.27%)</title><rect x="252.5" y="451.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.5" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.27%)</title><rect x="252.5" y="435.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="255.5" y="446.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.27%)</title><rect x="252.5" y="419.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="255.5" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.27%)</title><rect x="252.5" y="403.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="255.5" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.27%)</title><rect x="252.5" y="387.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="255.5" y="398.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="252.5" y="371.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="255.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (2 samples, 0.55%)</title><rect x="255.7" y="499.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.55%)</title><rect x="255.7" y="483.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.55%)</title><rect x="255.7" y="467.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.55%)</title><rect x="255.7" y="451.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.55%)</title><rect x="255.7" y="435.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.7" y="446.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2 samples, 0.55%)</title><rect x="255.7" y="419.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 1.10%)</title><rect x="262.2" y="547.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.82%)</title><rect x="262.2" y="531.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.82%)</title><rect x="262.2" y="515.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.82%)</title><rect x="262.2" y="499.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.55%)</title><rect x="262.2" y="483.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.55%)</title><rect x="262.2" y="467.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1284023277.accept (2 samples, 0.55%)</title><rect x="262.2" y="451.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (2 samples, 0.55%)</title><rect x="262.2" y="435.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (2 samples, 0.55%)</title><rect x="262.2" y="419.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.55%)</title><rect x="262.2" y="403.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.55%)</title><rect x="262.2" y="387.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.55%)</title><rect x="262.2" y="371.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.55%)</title><rect x="262.2" y="355.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.55%)</title><rect x="262.2" y="339.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.55%)</title><rect x="262.2" y="323.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.55%)</title><rect x="262.2" y="307.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.55%)</title><rect x="262.2" y="291.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.55%)</title><rect x="262.2" y="275.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.55%)</title><rect x="262.2" y="259.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.55%)</title><rect x="262.2" y="243.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.55%)</title><rect x="262.2" y="227.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.2" y="238.0"></text>
</g>
<g>
<title>write (2 samples, 0.55%)</title><rect x="262.2" y="211.0" width="6.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="265.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$265/739860489.apply (1 samples, 0.27%)</title><rect x="268.6" y="483.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.27%)</title><rect x="271.9" y="531.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.27%)</title><rect x="271.9" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.27%)</title><rect x="271.9" y="499.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$133/22197242.accept (1 samples, 0.27%)</title><rect x="271.9" y="483.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.55%)</title><rect x="275.1" y="547.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.55%)</title><rect x="275.1" y="531.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.55%)</title><rect x="275.1" y="515.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.55%)</title><rect x="275.1" y="499.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.27%)</title><rect x="275.1" y="483.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1221693201.run (1 samples, 0.27%)</title><rect x="278.3" y="483.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (98 samples, 26.85%)</title><rect x="281.6" y="547.0" width="316.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.6" y="558.0">java/util/concurrent/ThreadPoolExecutor.get..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (97 samples, 26.58%)</title><rect x="284.8" y="531.0" width="313.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.8" y="542.0">java/util/concurrent/ArrayBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (88 samples, 24.11%)</title><rect x="291.3" y="515.0" width="284.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.3" y="526.0">java/util/concurrent/locks/AbstractQue..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.55%)</title><rect x="294.5" y="499.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.55%)</title><rect x="294.5" y="483.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.55%)</title><rect x="294.5" y="467.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="297.7" y="451.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="462.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.27%)</title><rect x="297.7" y="435.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="300.7" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.27%)</title><rect x="297.7" y="419.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="300.7" y="430.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.27%)</title><rect x="297.7" y="403.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="300.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 1.37%)</title><rect x="301.0" y="499.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.37%)</title><rect x="301.0" y="483.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.37%)</title><rect x="301.0" y="467.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.37%)</title><rect x="301.0" y="451.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.37%)</title><rect x="301.0" y="435.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.0" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 1.37%)</title><rect x="301.0" y="419.0" width="16.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="304.0" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.27%)</title><rect x="301.0" y="403.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="304.0" y="414.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (1 samples, 0.27%)</title><rect x="301.0" y="387.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="304.0" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 1.10%)</title><rect x="304.2" y="403.0" width="12.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="307.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (80 samples, 21.92%)</title><rect x="317.1" y="499.0" width="258.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.1" y="510.0">java/util/concurrent/locks/LockSup..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (80 samples, 21.92%)</title><rect x="317.1" y="483.0" width="258.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.1" y="494.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.27%)</title><rect x="343.0" y="467.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.0" y="478.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.27%)</title><rect x="346.2" y="467.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="349.2" y="478.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (70 samples, 19.18%)</title><rect x="349.5" y="467.0" width="226.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="352.5" y="478.0">Unsafe_Park(JNIEnv_*, _jobject..</text>
</g>
<g>
<title>JavaThreadStatusChanger::is_alive() (1 samples, 0.27%)</title><rect x="349.5" y="451.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="352.5" y="462.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (1 samples, 0.27%)</title><rect x="352.7" y="451.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="355.7" y="462.0"></text>
</g>
<g>
<title>JfrEventSetting::is_enabled(JfrEventId) (1 samples, 0.27%)</title><rect x="352.7" y="435.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="355.7" y="446.0"></text>
</g>
<g>
<title>JfrEventSetting::setting(JfrEventId) (1 samples, 0.27%)</title><rect x="352.7" y="419.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="355.7" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (66 samples, 18.08%)</title><rect x="355.9" y="451.0" width="213.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="358.9" y="462.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.27%)</title><rect x="355.9" y="435.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="358.9" y="446.0"></text>
</g>
<g>
<title>__psynch_cvwait (63 samples, 17.26%)</title><rect x="359.2" y="435.0" width="203.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="362.2" y="446.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.27%)</title><rect x="562.8" y="435.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="565.8" y="446.0"></text>
</g>
<g>
<title>_pthread_testcancel (1 samples, 0.27%)</title><rect x="566.1" y="435.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="569.1" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.27%)</title><rect x="569.3" y="451.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="572.3" y="462.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.27%)</title><rect x="569.3" y="435.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="572.3" y="446.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.27%)</title><rect x="569.3" y="419.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="572.3" y="430.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.27%)</title><rect x="569.3" y="403.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="572.3" y="414.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.27%)</title><rect x="569.3" y="387.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="572.3" y="398.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.27%)</title><rect x="569.3" y="371.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="572.3" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.27%)</title><rect x="572.5" y="451.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="575.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.55%)</title><rect x="575.8" y="515.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.55%)</title><rect x="575.8" y="499.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.55%)</title><rect x="575.8" y="483.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.55%)</title><rect x="575.8" y="467.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.55%)</title><rect x="575.8" y="451.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.55%)</title><rect x="575.8" y="435.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.8" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.55%)</title><rect x="575.8" y="419.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="578.8" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.55%)</title><rect x="575.8" y="403.0" width="6.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="578.8" y="414.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="575.8" y="387.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="578.8" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.27%)</title><rect x="579.0" y="387.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="582.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 1.10%)</title><rect x="582.2" y="515.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 1.10%)</title><rect x="582.2" y="499.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 1.10%)</title><rect x="582.2" y="483.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 1.10%)</title><rect x="582.2" y="467.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.82%)</title><rect x="585.5" y="451.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.5" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.82%)</title><rect x="585.5" y="435.0" width="9.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="588.5" y="446.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (1 samples, 0.27%)</title><rect x="585.5" y="419.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="588.5" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.55%)</title><rect x="588.7" y="419.0" width="6.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="591.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="595.2" y="515.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1221693201.run (19 samples, 5.21%)</title><rect x="598.4" y="547.0" width="61.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.4" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (19 samples, 5.21%)</title><rect x="598.4" y="531.0" width="61.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.4" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (19 samples, 5.21%)</title><rect x="598.4" y="515.0" width="61.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.4" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (18 samples, 4.93%)</title><rect x="601.6" y="499.0" width="58.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.6" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 4.93%)</title><rect x="601.6" y="483.0" width="58.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.6" y="494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 4.93%)</title><rect x="601.6" y="467.0" width="58.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.6" y="478.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 4.93%)</title><rect x="601.6" y="451.0" width="58.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.6" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18 samples, 4.93%)</title><rect x="601.6" y="435.0" width="58.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.6" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18 samples, 4.93%)</title><rect x="601.6" y="419.0" width="58.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.6" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18 samples, 4.93%)</title><rect x="601.6" y="403.0" width="58.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.6" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (18 samples, 4.93%)</title><rect x="601.6" y="387.0" width="58.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.6" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.27%)</title><rect x="601.6" y="371.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.27%)</title><rect x="601.6" y="355.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.27%)</title><rect x="601.6" y="339.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.27%)</title><rect x="601.6" y="323.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.27%)</title><rect x="601.6" y="307.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.27%)</title><rect x="601.6" y="291.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.27%)</title><rect x="601.6" y="275.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$272/2096951458.run (1 samples, 0.27%)</title><rect x="601.6" y="259.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 4.66%)</title><rect x="604.8" y="371.0" width="55.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.8" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 4.66%)</title><rect x="604.8" y="355.0" width="55.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.8" y="366.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (17 samples, 4.66%)</title><rect x="604.8" y="339.0" width="55.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.8" y="350.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (16 samples, 4.38%)</title><rect x="608.1" y="323.0" width="51.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.1" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (16 samples, 4.38%)</title><rect x="608.1" y="307.0" width="51.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.1" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (16 samples, 4.38%)</title><rect x="608.1" y="291.0" width="51.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.1" y="302.0">java/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (16 samples, 4.38%)</title><rect x="608.1" y="275.0" width="51.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.1" y="286.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (16 samples, 4.38%)</title><rect x="608.1" y="259.0" width="51.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.1" y="270.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (16 samples, 4.38%)</title><rect x="608.1" y="243.0" width="51.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.1" y="254.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (16 samples, 4.38%)</title><rect x="608.1" y="227.0" width="51.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.1" y="238.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (14 samples, 3.84%)</title><rect x="614.5" y="211.0" width="45.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.5" y="222.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.27%)</title><rect x="614.5" y="195.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="617.5" y="206.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.27%)</title><rect x="617.8" y="195.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="620.8" y="206.0"></text>
</g>
<g>
<title>writev (12 samples, 3.29%)</title><rect x="621.0" y="195.0" width="38.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="624.0" y="206.0">wri..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (30 samples, 8.22%)</title><rect x="659.8" y="547.0" width="97.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.8" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (30 samples, 8.22%)</title><rect x="659.8" y="531.0" width="97.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.8" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 2.19%)</title><rect x="659.8" y="515.0" width="25.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (8 samples, 2.19%)</title><rect x="659.8" y="499.0" width="25.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 2.19%)</title><rect x="659.8" y="483.0" width="25.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.8" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.27%)</title><rect x="659.8" y="467.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.27%)</title><rect x="659.8" y="451.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (7 samples, 1.92%)</title><rect x="663.0" y="467.0" width="22.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 1.92%)</title><rect x="663.0" y="451.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 1.92%)</title><rect x="663.0" y="435.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 1.92%)</title><rect x="663.0" y="419.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.0" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 1.64%)</title><rect x="666.3" y="403.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 1.64%)</title><rect x="666.3" y="387.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 1.37%)</title><rect x="666.3" y="371.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 1.37%)</title><rect x="666.3" y="355.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 1.37%)</title><rect x="666.3" y="339.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 1.37%)</title><rect x="666.3" y="323.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 1.37%)</title><rect x="666.3" y="307.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 1.10%)</title><rect x="666.3" y="291.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 1.10%)</title><rect x="666.3" y="275.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4 samples, 1.10%)</title><rect x="666.3" y="259.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1106427060.apply (3 samples, 0.82%)</title><rect x="666.3" y="243.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.82%)</title><rect x="666.3" y="227.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.27%)</title><rect x="666.3" y="211.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.27%)</title><rect x="666.3" y="195.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.27%)</title><rect x="666.3" y="179.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/310170649.apply (1 samples, 0.27%)</title><rect x="666.3" y="163.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.27%)</title><rect x="666.3" y="147.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.27%)</title><rect x="666.3" y="131.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.55%)</title><rect x="669.5" y="211.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.55%)</title><rect x="669.5" y="195.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.55%)</title><rect x="669.5" y="179.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.27%)</title><rect x="669.5" y="163.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.27%)</title><rect x="669.5" y="147.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.27%)</title><rect x="669.5" y="131.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.27%)</title><rect x="669.5" y="115.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.27%)</title><rect x="672.7" y="163.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.27%)</title><rect x="672.7" y="147.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.27%)</title><rect x="672.7" y="131.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.27%)</title><rect x="672.7" y="115.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$204/1199228970.apply (1 samples, 0.27%)</title><rect x="676.0" y="243.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.27%)</title><rect x="676.0" y="227.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.27%)</title><rect x="676.0" y="211.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.27%)</title><rect x="676.0" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.27%)</title><rect x="676.0" y="179.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.0" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="676.0" y="163.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="679.0" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="676.0" y="147.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="679.0" y="158.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.27%)</title><rect x="676.0" y="131.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="679.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/1890521636.apply (1 samples, 0.27%)</title><rect x="679.2" y="291.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.27%)</title><rect x="679.2" y="275.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.27%)</title><rect x="679.2" y="259.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.27%)</title><rect x="679.2" y="243.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.27%)</title><rect x="679.2" y="227.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.27%)</title><rect x="679.2" y="211.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.2" y="222.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.27%)</title><rect x="682.4" y="371.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="685.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (22 samples, 6.03%)</title><rect x="685.7" y="515.0" width="71.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.7" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (22 samples, 6.03%)</title><rect x="685.7" y="499.0" width="71.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.7" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (22 samples, 6.03%)</title><rect x="685.7" y="483.0" width="71.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.7" y="494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (22 samples, 6.03%)</title><rect x="685.7" y="467.0" width="71.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.7" y="478.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (22 samples, 6.03%)</title><rect x="685.7" y="451.0" width="71.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.7" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (22 samples, 6.03%)</title><rect x="685.7" y="435.0" width="71.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.7" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (21 samples, 5.75%)</title><rect x="685.7" y="419.0" width="67.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.7" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (21 samples, 5.75%)</title><rect x="685.7" y="403.0" width="67.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.7" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/1681940514.run (9 samples, 2.47%)</title><rect x="685.7" y="387.0" width="29.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.7" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (9 samples, 2.47%)</title><rect x="685.7" y="371.0" width="29.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.7" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (9 samples, 2.47%)</title><rect x="685.7" y="355.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.7" y="366.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.27%)</title><rect x="685.7" y="339.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.27%)</title><rect x="685.7" y="323.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.27%)</title><rect x="685.7" y="307.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.getOpFlags (1 samples, 0.27%)</title><rect x="685.7" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 2.19%)</title><rect x="688.9" y="339.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.9" y="350.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.55%)</title><rect x="688.9" y="323.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="334.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.55%)</title><rect x="688.9" y="307.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="692.1" y="291.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="302.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="692.1" y="275.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="695.1" y="286.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.27%)</title><rect x="692.1" y="259.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="695.1" y="270.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.27%)</title><rect x="692.1" y="243.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="695.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6 samples, 1.64%)</title><rect x="695.4" y="323.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.4" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="695.4" y="307.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="698.4" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="695.4" y="291.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.4" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.27%)</title><rect x="695.4" y="275.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.27%)</title><rect x="698.6" y="307.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 1.10%)</title><rect x="701.8" y="307.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.82%)</title><rect x="705.1" y="291.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.82%)</title><rect x="705.1" y="275.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.82%)</title><rect x="705.1" y="259.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3 samples, 0.82%)</title><rect x="705.1" y="243.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.82%)</title><rect x="705.1" y="227.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.82%)</title><rect x="705.1" y="211.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="705.1" y="195.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="708.1" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="705.1" y="179.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="708.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.55%)</title><rect x="708.3" y="195.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.55%)</title><rect x="708.3" y="179.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="190.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.27%)</title><rect x="708.3" y="163.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="711.3" y="174.0"></text>
</g>
<g>
<title>write (1 samples, 0.27%)</title><rect x="711.5" y="163.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (12 samples, 3.29%)</title><rect x="714.8" y="387.0" width="38.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.8" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (12 samples, 3.29%)</title><rect x="714.8" y="371.0" width="38.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.8" y="382.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (12 samples, 3.29%)</title><rect x="714.8" y="355.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.8" y="366.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 3.29%)</title><rect x="714.8" y="339.0" width="38.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.8" y="350.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 3.29%)</title><rect x="714.8" y="323.0" width="38.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.8" y="334.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 3.29%)</title><rect x="714.8" y="307.0" width="38.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.8" y="318.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.55%)</title><rect x="714.8" y="291.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.55%)</title><rect x="714.8" y="275.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$248/407018175.accept (2 samples, 0.55%)</title><rect x="714.8" y="259.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 2.74%)</title><rect x="721.2" y="291.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.2" y="302.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$248/407018175.accept (10 samples, 2.74%)</title><rect x="721.2" y="275.0" width="32.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.2" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (10 samples, 2.74%)</title><rect x="721.2" y="259.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.2" y="270.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 2.74%)</title><rect x="721.2" y="243.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.2" y="254.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 2.74%)</title><rect x="721.2" y="227.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.2" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.27%)</title><rect x="721.2" y="211.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 2.47%)</title><rect x="724.5" y="211.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.5" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.55%)</title><rect x="724.5" y="195.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.55%)</title><rect x="724.5" y="179.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.5" y="190.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.27%)</title><rect x="724.5" y="163.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="727.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/1256696443.accept (1 samples, 0.27%)</title><rect x="727.7" y="163.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 1.92%)</title><rect x="730.9" y="195.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.9" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 1.92%)</title><rect x="730.9" y="179.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.9" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 1.92%)</title><rect x="730.9" y="163.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.9" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 1.92%)</title><rect x="730.9" y="147.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.9" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 1.92%)</title><rect x="730.9" y="131.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.9" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 1.92%)</title><rect x="730.9" y="115.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.9" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 1.92%)</title><rect x="730.9" y="99.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.9" y="110.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.92%)</title><rect x="730.9" y="83.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.9" y="94.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 1.92%)</title><rect x="730.9" y="67.0" width="22.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="733.9" y="78.0">U..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.27%)</title><rect x="730.9" y="51.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="733.9" y="62.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.27%)</title><rect x="730.9" y="35.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="733.9" y="46.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 1.64%)</title><rect x="734.2" y="51.0" width="19.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="737.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.27%)</title><rect x="753.6" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (18 samples, 4.93%)</title><rect x="756.8" y="595.0" width="58.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (18 samples, 4.93%)</title><rect x="756.8" y="579.0" width="58.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.8" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (5 samples, 1.37%)</title><rect x="756.8" y="563.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (5 samples, 1.37%)</title><rect x="756.8" y="547.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (5 samples, 1.37%)</title><rect x="756.8" y="531.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (5 samples, 1.37%)</title><rect x="756.8" y="515.0" width="16.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.37%)</title><rect x="756.8" y="499.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 1.37%)</title><rect x="756.8" y="483.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 1.37%)</title><rect x="756.8" y="467.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.82%)</title><rect x="756.8" y="451.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.55%)</title><rect x="756.8" y="435.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.55%)</title><rect x="756.8" y="419.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.55%)</title><rect x="756.8" y="403.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.27%)</title><rect x="756.8" y="387.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.27%)</title><rect x="756.8" y="371.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.27%)</title><rect x="756.8" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.27%)</title><rect x="756.8" y="339.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.27%)</title><rect x="756.8" y="323.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="756.8" y="307.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.8" y="318.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.27%)</title><rect x="756.8" y="291.0" width="3.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="759.8" y="302.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.27%)</title><rect x="756.8" y="275.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="759.8" y="286.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="756.8" y="259.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="759.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.27%)</title><rect x="760.0" y="387.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.27%)</title><rect x="760.0" y="371.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.27%)</title><rect x="760.0" y="355.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.27%)</title><rect x="760.0" y="339.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.27%)</title><rect x="763.3" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/1962028127.accept (1 samples, 0.27%)</title><rect x="766.5" y="451.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.5" y="462.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.27%)</title><rect x="769.7" y="451.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="772.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (13 samples, 3.56%)</title><rect x="773.0" y="563.0" width="42.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.0" y="574.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 3.29%)</title><rect x="776.2" y="547.0" width="38.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.2" y="558.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 2.74%)</title><rect x="782.7" y="531.0" width="32.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="785.7" y="542.0">Un..</text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 2.74%)</title><rect x="782.7" y="515.0" width="32.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="785.7" y="526.0">Pa..</text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 2.74%)</title><rect x="782.7" y="499.0" width="32.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="785.7" y="510.0">__..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (53 samples, 14.52%)</title><rect x="815.0" y="595.0" width="171.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="606.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.27%)</title><rect x="821.5" y="579.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.27%)</title><rect x="821.5" y="563.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 1.37%)</title><rect x="824.7" y="579.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$208/631764841.accept (5 samples, 1.37%)</title><rect x="824.7" y="563.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (5 samples, 1.37%)</title><rect x="824.7" y="547.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (5 samples, 1.37%)</title><rect x="824.7" y="531.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (5 samples, 1.37%)</title><rect x="824.7" y="515.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (5 samples, 1.37%)</title><rect x="824.7" y="499.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (5 samples, 1.37%)</title><rect x="824.7" y="483.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 1.37%)</title><rect x="824.7" y="467.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 1.37%)</title><rect x="824.7" y="451.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 1.37%)</title><rect x="824.7" y="435.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (5 samples, 1.37%)</title><rect x="824.7" y="419.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/749233210.run (5 samples, 1.37%)</title><rect x="824.7" y="403.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5 samples, 1.37%)</title><rect x="824.7" y="387.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (4 samples, 1.10%)</title><rect x="827.9" y="371.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (4 samples, 1.10%)</title><rect x="827.9" y="355.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (4 samples, 1.10%)</title><rect x="827.9" y="339.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 1.10%)</title><rect x="827.9" y="323.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 1.10%)</title><rect x="827.9" y="307.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.82%)</title><rect x="827.9" y="291.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.82%)</title><rect x="827.9" y="275.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.82%)</title><rect x="827.9" y="259.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.82%)</title><rect x="827.9" y="243.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.82%)</title><rect x="827.9" y="227.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.82%)</title><rect x="827.9" y="211.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.82%)</title><rect x="827.9" y="195.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.82%)</title><rect x="827.9" y="179.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.9" y="190.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.27%)</title><rect x="827.9" y="163.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="830.9" y="174.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.55%)</title><rect x="831.2" y="163.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="834.2" y="174.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.27%)</title><rect x="831.2" y="147.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="834.2" y="158.0"></text>
</g>
<g>
<title>Thread::last_handle_mark() const (1 samples, 0.27%)</title><rect x="834.4" y="147.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="837.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.27%)</title><rect x="837.6" y="291.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.27%)</title><rect x="840.8" y="579.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.27%)</title><rect x="840.8" y="563.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.27%)</title><rect x="840.8" y="547.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.27%)</title><rect x="840.8" y="531.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.27%)</title><rect x="840.8" y="515.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.27%)</title><rect x="840.8" y="499.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (6 samples, 1.64%)</title><rect x="844.1" y="579.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$165/1901006842.run (2 samples, 0.55%)</title><rect x="844.1" y="563.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (2 samples, 0.55%)</title><rect x="844.1" y="547.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.55%)</title><rect x="844.1" y="531.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.55%)</title><rect x="844.1" y="515.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.55%)</title><rect x="844.1" y="499.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.55%)</title><rect x="844.1" y="483.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/749233210.run (2 samples, 0.55%)</title><rect x="844.1" y="467.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.55%)</title><rect x="844.1" y="451.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.55%)</title><rect x="844.1" y="435.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.55%)</title><rect x="844.1" y="419.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.27%)</title><rect x="844.1" y="403.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.27%)</title><rect x="847.3" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.27%)</title><rect x="847.3" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.27%)</title><rect x="847.3" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.27%)</title><rect x="847.3" y="355.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.27%)</title><rect x="847.3" y="339.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.27%)</title><rect x="847.3" y="323.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.27%)</title><rect x="847.3" y="307.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.27%)</title><rect x="847.3" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.27%)</title><rect x="847.3" y="275.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.27%)</title><rect x="847.3" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.27%)</title><rect x="847.3" y="243.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.3" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.27%)</title><rect x="847.3" y="227.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="850.3" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.27%)</title><rect x="847.3" y="211.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="850.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$169/210457364.run (4 samples, 1.10%)</title><rect x="850.5" y="563.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4 samples, 1.10%)</title><rect x="850.5" y="547.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.82%)</title><rect x="850.5" y="531.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.82%)</title><rect x="850.5" y="515.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.55%)</title><rect x="853.8" y="499.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.27%)</title><rect x="853.8" y="483.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.27%)</title><rect x="853.8" y="467.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.27%)</title><rect x="853.8" y="451.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.27%)</title><rect x="853.8" y="435.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.27%)</title><rect x="853.8" y="419.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.27%)</title><rect x="857.0" y="483.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.27%)</title><rect x="857.0" y="467.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.27%)</title><rect x="857.0" y="451.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.27%)</title><rect x="857.0" y="435.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.27%)</title><rect x="860.2" y="531.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.27%)</title><rect x="863.5" y="579.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.27%)</title><rect x="863.5" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.5" y="574.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.27%)</title><rect x="863.5" y="547.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="863.5" y="531.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.5" y="542.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="863.5" y="515.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="866.5" y="526.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.27%)</title><rect x="863.5" y="499.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="866.5" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.27%)</title><rect x="863.5" y="483.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="866.5" y="494.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.27%)</title><rect x="863.5" y="467.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="866.5" y="478.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.27%)</title><rect x="863.5" y="451.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="866.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.27%)</title><rect x="866.7" y="579.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.27%)</title><rect x="866.7" y="563.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.27%)</title><rect x="866.7" y="547.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4 samples, 1.10%)</title><rect x="869.9" y="579.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.9" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="869.9" y="563.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="872.9" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="869.9" y="547.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.9" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.27%)</title><rect x="869.9" y="531.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="872.9" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.55%)</title><rect x="873.2" y="563.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.2" y="574.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.55%)</title><rect x="873.2" y="547.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.55%)</title><rect x="873.2" y="531.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.2" y="542.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.27%)</title><rect x="876.4" y="515.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="879.4" y="526.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.27%)</title><rect x="876.4" y="499.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="879.4" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.27%)</title><rect x="876.4" y="483.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="879.4" y="494.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.27%)</title><rect x="876.4" y="467.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="879.4" y="478.0"></text>
</g>
<g>
<title>__block_literal_global (1 samples, 0.27%)</title><rect x="876.4" y="451.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="879.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.27%)</title><rect x="879.6" y="563.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.27%)</title><rect x="879.6" y="547.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.27%)</title><rect x="879.6" y="531.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.27%)</title><rect x="879.6" y="515.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 7.95%)</title><rect x="882.9" y="579.0" width="93.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.9" y="590.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 7.95%)</title><rect x="882.9" y="563.0" width="93.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.9" y="574.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 7.95%)</title><rect x="882.9" y="547.0" width="93.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.9" y="558.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (27 samples, 7.40%)</title><rect x="882.9" y="531.0" width="87.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.9" y="542.0">sun/nio/ch..</text>
</g>
<g>
<title>kevent (24 samples, 6.58%)</title><rect x="892.6" y="515.0" width="77.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="895.6" y="526.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.55%)</title><rect x="970.2" y="531.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.27%)</title><rect x="970.2" y="515.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.27%)</title><rect x="970.2" y="499.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (1 samples, 0.27%)</title><rect x="973.4" y="515.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="976.4" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.27%)</title><rect x="973.4" y="499.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.4" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="973.4" y="483.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (3 samples, 0.82%)</title><rect x="976.6" y="579.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.82%)</title><rect x="976.6" y="563.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 0.82%)</title><rect x="976.6" y="547.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (3 samples, 0.82%)</title><rect x="976.6" y="531.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.6" y="542.0"></text>
</g>
<g>
<title>kevent (3 samples, 0.82%)</title><rect x="976.6" y="515.0" width="9.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="979.6" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (54 samples, 14.79%)</title><rect x="986.3" y="595.0" width="174.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.3" y="606.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (20 samples, 5.48%)</title><rect x="986.3" y="579.0" width="64.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.3" y="590.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.27%)</title><rect x="986.3" y="563.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.3" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.27%)</title><rect x="986.3" y="547.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (19 samples, 5.21%)</title><rect x="989.6" y="563.0" width="61.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.6" y="574.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 4.93%)</title><rect x="992.8" y="547.0" width="58.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.8" y="558.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (18 samples, 4.93%)</title><rect x="992.8" y="531.0" width="58.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.8" y="542.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (17 samples, 4.66%)</title><rect x="992.8" y="515.0" width="55.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.8" y="526.0">sun/n..</text>
</g>
<g>
<title>kevent (16 samples, 4.38%)</title><rect x="996.0" y="499.0" width="51.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="999.0" y="510.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.27%)</title><rect x="1047.8" y="515.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.27%)</title><rect x="1047.8" y="499.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.27%)</title><rect x="1047.8" y="483.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.27%)</title><rect x="1047.8" y="467.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 9.32%)</title><rect x="1051.0" y="579.0" width="109.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.0" y="590.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 9.32%)</title><rect x="1051.0" y="563.0" width="109.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.0" y="574.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28 samples, 7.67%)</title><rect x="1051.0" y="547.0" width="90.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.0" y="558.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 6.85%)</title><rect x="1051.0" y="531.0" width="80.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.0" y="542.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 6.85%)</title><rect x="1051.0" y="515.0" width="80.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.0" y="526.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (24 samples, 6.58%)</title><rect x="1051.0" y="499.0" width="77.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.0" y="510.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.27%)</title><rect x="1051.0" y="483.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.27%)</title><rect x="1051.0" y="467.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (23 samples, 6.30%)</title><rect x="1054.2" y="483.0" width="74.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.2" y="494.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (23 samples, 6.30%)</title><rect x="1054.2" y="467.0" width="74.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.2" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (6 samples, 1.64%)</title><rect x="1057.5" y="451.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (6 samples, 1.64%)</title><rect x="1057.5" y="435.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (6 samples, 1.64%)</title><rect x="1057.5" y="419.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 1.64%)</title><rect x="1057.5" y="403.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 1.64%)</title><rect x="1057.5" y="387.0" width="19.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.64%)</title><rect x="1057.5" y="371.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.64%)</title><rect x="1057.5" y="355.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.64%)</title><rect x="1057.5" y="339.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.64%)</title><rect x="1057.5" y="323.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.64%)</title><rect x="1057.5" y="307.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1060.5" y="318.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.27%)</title><rect x="1057.5" y="291.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1060.5" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 1.37%)</title><rect x="1060.7" y="291.0" width="16.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1063.7" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.27%)</title><rect x="1060.7" y="275.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1063.7" y="286.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll(Thread*) (1 samples, 0.27%)</title><rect x="1060.7" y="259.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1063.7" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 1.10%)</title><rect x="1063.9" y="275.0" width="12.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1066.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (16 samples, 4.38%)</title><rect x="1076.8" y="451.0" width="51.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.8" y="462.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (10 samples, 2.74%)</title><rect x="1076.8" y="435.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.8" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.74%)</title><rect x="1076.8" y="419.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.8" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.74%)</title><rect x="1076.8" y="403.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.8" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10 samples, 2.74%)</title><rect x="1076.8" y="387.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.8" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7 samples, 1.92%)</title><rect x="1076.8" y="371.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.8" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.27%)</title><rect x="1076.8" y="355.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.8" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.27%)</title><rect x="1076.8" y="339.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.27%)</title><rect x="1076.8" y="323.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.27%)</title><rect x="1076.8" y="307.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.8" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.27%)</title><rect x="1076.8" y="291.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (5 samples, 1.37%)</title><rect x="1080.1" y="355.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.1" y="366.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (5 samples, 1.37%)</title><rect x="1080.1" y="339.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1083.1" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 1.37%)</title><rect x="1080.1" y="323.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.1" y="334.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.27%)</title><rect x="1080.1" y="307.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.1" y="318.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.55%)</title><rect x="1083.3" y="307.0" width="6.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1086.3" y="318.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.27%)</title><rect x="1086.5" y="291.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.5" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="1086.5" y="275.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.5" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.27%)</title><rect x="1086.5" y="259.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.5" y="270.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.55%)</title><rect x="1089.8" y="307.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.8" y="318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.55%)</title><rect x="1089.8" y="291.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.8" y="302.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.27%)</title><rect x="1093.0" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.27%)</title><rect x="1096.2" y="355.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.27%)</title><rect x="1099.5" y="371.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.27%)</title><rect x="1099.5" y="355.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.27%)</title><rect x="1099.5" y="339.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.27%)</title><rect x="1099.5" y="323.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.27%)</title><rect x="1099.5" y="307.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.27%)</title><rect x="1099.5" y="291.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.27%)</title><rect x="1099.5" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.27%)</title><rect x="1099.5" y="259.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2 samples, 0.55%)</title><rect x="1102.7" y="371.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.55%)</title><rect x="1102.7" y="355.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.55%)</title><rect x="1102.7" y="339.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.55%)</title><rect x="1102.7" y="323.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.55%)</title><rect x="1102.7" y="307.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.55%)</title><rect x="1102.7" y="291.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.55%)</title><rect x="1102.7" y="275.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.55%)</title><rect x="1102.7" y="259.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.55%)</title><rect x="1102.7" y="243.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.7" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.55%)</title><rect x="1102.7" y="227.0" width="6.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1105.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.55%)</title><rect x="1102.7" y="211.0" width="6.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1105.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.55%)</title><rect x="1109.2" y="435.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.55%)</title><rect x="1109.2" y="419.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.55%)</title><rect x="1109.2" y="403.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.55%)</title><rect x="1109.2" y="387.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.27%)</title><rect x="1112.4" y="371.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (1 samples, 0.27%)</title><rect x="1112.4" y="355.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.27%)</title><rect x="1112.4" y="339.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.27%)</title><rect x="1112.4" y="323.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/370370379.test (1 samples, 0.27%)</title><rect x="1112.4" y="307.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (3 samples, 0.82%)</title><rect x="1115.6" y="435.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.82%)</title><rect x="1115.6" y="419.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.82%)</title><rect x="1115.6" y="403.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.82%)</title><rect x="1115.6" y="387.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.82%)</title><rect x="1115.6" y="371.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.27%)</title><rect x="1115.6" y="355.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.27%)</title><rect x="1115.6" y="339.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.27%)</title><rect x="1115.6" y="323.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.27%)</title><rect x="1115.6" y="307.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.27%)</title><rect x="1115.6" y="291.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.55%)</title><rect x="1118.9" y="355.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.55%)</title><rect x="1118.9" y="339.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.55%)</title><rect x="1118.9" y="323.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.55%)</title><rect x="1118.9" y="307.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.55%)</title><rect x="1118.9" y="291.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.9" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.55%)</title><rect x="1118.9" y="275.0" width="6.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1121.9" y="286.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.27%)</title><rect x="1118.9" y="259.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.9" y="270.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.27%)</title><rect x="1118.9" y="243.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.9" y="254.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.27%)</title><rect x="1118.9" y="227.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.9" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.27%)</title><rect x="1122.1" y="259.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1125.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (1 samples, 0.27%)</title><rect x="1125.3" y="435.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.27%)</title><rect x="1125.3" y="419.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.27%)</title><rect x="1125.3" y="403.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.27%)</title><rect x="1125.3" y="387.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1128.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.27%)</title><rect x="1125.3" y="371.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.3" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.27%)</title><rect x="1125.3" y="355.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.27%)</title><rect x="1128.6" y="499.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.27%)</title><rect x="1128.6" y="483.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.27%)</title><rect x="1128.6" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.6" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.27%)</title><rect x="1128.6" y="451.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1131.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.27%)</title><rect x="1131.8" y="531.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.27%)</title><rect x="1131.8" y="515.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.27%)</title><rect x="1135.0" y="531.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.27%)</title><rect x="1135.0" y="515.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.27%)</title><rect x="1135.0" y="499.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.27%)</title><rect x="1138.3" y="531.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.3" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.27%)</title><rect x="1138.3" y="515.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.64%)</title><rect x="1141.5" y="547.0" width="19.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (6 samples, 1.64%)</title><rect x="1141.5" y="531.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.27%)</title><rect x="1141.5" y="515.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (5 samples, 1.37%)</title><rect x="1144.7" y="515.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 1.37%)</title><rect x="1144.7" y="499.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 1.37%)</title><rect x="1144.7" y="483.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 1.37%)</title><rect x="1144.7" y="467.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 1.37%)</title><rect x="1144.7" y="451.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 1.37%)</title><rect x="1144.7" y="435.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.7" y="446.0"></text>
</g>
<g>
<title>rpc_errlist (4 samples, 1.10%)</title><rect x="1148.0" y="419.0" width="12.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1151.0" y="430.0"></text>
</g>
<g>
<title>thread_start (9 samples, 2.47%)</title><rect x="1160.9" y="595.0" width="29.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1163.9" y="606.0">th..</text>
</g>
<g>
<title>_pthread_start (9 samples, 2.47%)</title><rect x="1160.9" y="579.0" width="29.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1163.9" y="590.0">_p..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 2.47%)</title><rect x="1160.9" y="563.0" width="29.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1163.9" y="574.0">th..</text>
</g>
<g>
<title>Thread::call_run() (9 samples, 2.47%)</title><rect x="1160.9" y="547.0" width="29.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.9" y="558.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.27%)</title><rect x="1160.9" y="531.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.9" y="542.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.27%)</title><rect x="1160.9" y="515.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.9" y="526.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.27%)</title><rect x="1160.9" y="499.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.9" y="510.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.27%)</title><rect x="1160.9" y="483.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.9" y="494.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.27%)</title><rect x="1160.9" y="467.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.27%)</title><rect x="1160.9" y="451.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="1160.9" y="435.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.9" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.27%)</title><rect x="1160.9" y="419.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.9" y="430.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 1.92%)</title><rect x="1164.1" y="531.0" width="22.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.1" y="542.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 1.92%)</title><rect x="1164.1" y="515.0" width="22.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.1" y="526.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.64%)</title><rect x="1164.1" y="499.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.1" y="510.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 1.64%)</title><rect x="1164.1" y="483.0" width="19.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.1" y="494.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 1.37%)</title><rect x="1164.1" y="467.0" width="16.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.1" y="478.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 1.37%)</title><rect x="1164.1" y="451.0" width="16.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.1" y="462.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.82%)</title><rect x="1164.1" y="435.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.1" y="446.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.82%)</title><rect x="1164.1" y="419.0" width="9.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.1" y="430.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.27%)</title><rect x="1164.1" y="403.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.1" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.27%)</title><rect x="1167.4" y="403.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.4" y="414.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.27%)</title><rect x="1167.4" y="387.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.4" y="398.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.27%)</title><rect x="1167.4" y="371.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1170.4" y="382.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.27%)</title><rect x="1170.6" y="403.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.6" y="414.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.27%)</title><rect x="1170.6" y="387.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.6" y="398.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.27%)</title><rect x="1173.8" y="435.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.8" y="446.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.27%)</title><rect x="1173.8" y="419.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.8" y="430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.27%)</title><rect x="1173.8" y="403.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.27%)</title><rect x="1173.8" y="387.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.8" y="398.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.27%)</title><rect x="1173.8" y="371.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.8" y="382.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.27%)</title><rect x="1173.8" y="355.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.8" y="366.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl(Node*, Node*, Node*) (1 samples, 0.27%)</title><rect x="1173.8" y="339.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.8" y="350.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.27%)</title><rect x="1173.8" y="323.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom(unsigned int) const (1 samples, 0.27%)</title><rect x="1173.8" y="307.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.8" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (1 samples, 0.27%)</title><rect x="1173.8" y="291.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.8" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.27%)</title><rect x="1177.1" y="435.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.27%)</title><rect x="1177.1" y="419.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.27%)</title><rect x="1177.1" y="403.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.27%)</title><rect x="1177.1" y="387.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.27%)</title><rect x="1177.1" y="371.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.1" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.27%)</title><rect x="1177.1" y="355.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.1" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.27%)</title><rect x="1177.1" y="339.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.27%)</title><rect x="1177.1" y="323.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.27%)</title><rect x="1177.1" y="307.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.27%)</title><rect x="1177.1" y="291.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.1" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.27%)</title><rect x="1177.1" y="275.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.1" y="286.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.27%)</title><rect x="1177.1" y="259.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.1" y="270.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.27%)</title><rect x="1177.1" y="243.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.1" y="254.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.27%)</title><rect x="1177.1" y="227.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.1" y="238.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.27%)</title><rect x="1177.1" y="211.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="222.0"></text>
</g>
<g>
<title>Node::add_req_batch(Node*, unsigned int) (1 samples, 0.27%)</title><rect x="1177.1" y="195.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.1" y="206.0"></text>
</g>
<g>
<title>Node::grow(unsigned int) (1 samples, 0.27%)</title><rect x="1177.1" y="179.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.1" y="190.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.27%)</title><rect x="1177.1" y="163.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.1" y="174.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.27%)</title><rect x="1177.1" y="147.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1180.1" y="158.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.27%)</title><rect x="1180.3" y="467.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="478.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.27%)</title><rect x="1180.3" y="451.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.3" y="462.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.27%)</title><rect x="1180.3" y="435.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.3" y="446.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.27%)</title><rect x="1180.3" y="419.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="430.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.27%)</title><rect x="1180.3" y="403.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="414.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, char*, int, int, char const*, FailedSpeculation**) (1 samples, 0.27%)</title><rect x="1180.3" y="387.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.27%)</title><rect x="1180.3" y="371.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.3" y="382.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (1 samples, 0.27%)</title><rect x="1180.3" y="355.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.3" y="366.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.27%)</title><rect x="1183.5" y="499.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1186.5" y="510.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.27%)</title><rect x="1183.5" y="483.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.5" y="494.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.27%)</title><rect x="1186.8" y="531.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.27%)</title><rect x="1186.8" y="515.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.27%)</title><rect x="1186.8" y="499.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.27%)</title><rect x="1186.8" y="483.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.27%)</title><rect x="1186.8" y="467.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="1186.8" y="451.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
</g>
</svg>
