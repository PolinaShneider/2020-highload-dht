<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (1,666 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.06%)</title><rect x="10.0" y="803.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="10.0" y="787.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (721 samples, 43.28%)</title><rect x="10.7" y="803.0" width="510.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.7" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (721 samples, 43.28%)</title><rect x="10.7" y="787.0" width="510.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.7" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (721 samples, 43.28%)</title><rect x="10.7" y="771.0" width="510.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.7" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (591 samples, 35.47%)</title><rect x="10.7" y="755.0" width="418.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.7" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (327 samples, 19.63%)</title><rect x="10.7" y="739.0" width="231.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.7" y="750.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (143 samples, 8.58%)</title><rect x="10.7" y="723.0" width="101.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.7" y="734.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.12%)</title><rect x="10.7" y="707.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/1630776069.apply (141 samples, 8.46%)</title><rect x="12.1" y="707.0" width="99.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.1" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (141 samples, 8.46%)</title><rect x="12.1" y="691.0" width="99.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.1" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (141 samples, 8.46%)</title><rect x="12.1" y="675.0" width="99.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.1" y="686.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.18%)</title><rect x="12.1" y="659.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.18%)</title><rect x="12.1" y="643.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.06%)</title><rect x="12.1" y="627.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="12.8" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="12.8" y="611.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.12%)</title><rect x="12.8" y="595.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (136 samples, 8.16%)</title><rect x="14.2" y="659.0" width="96.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (136 samples, 8.16%)</title><rect x="14.2" y="643.0" width="96.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.2" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (136 samples, 8.16%)</title><rect x="14.2" y="627.0" width="96.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.2" y="638.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="14.2" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="14.2" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1577944452.get$Lambda (1 samples, 0.06%)</title><rect x="14.2" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (1 samples, 0.06%)</title><rect x="14.2" y="563.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (96 samples, 5.76%)</title><rect x="15.0" y="611.0" width="68.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.0" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (96 samples, 5.76%)</title><rect x="15.0" y="595.0" width="68.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.0" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (95 samples, 5.70%)</title><rect x="15.0" y="579.0" width="67.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.0" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/850437303.apply (95 samples, 5.70%)</title><rect x="15.0" y="563.0" width="67.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.0" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (95 samples, 5.70%)</title><rect x="15.0" y="547.0" width="67.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.0" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (95 samples, 5.70%)</title><rect x="15.0" y="531.0" width="67.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.0" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1577944452.apply (95 samples, 5.70%)</title><rect x="15.0" y="515.0" width="67.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.0" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (95 samples, 5.70%)</title><rect x="15.0" y="499.0" width="67.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.0" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="15.0" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="15.0" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1662340177.get$Lambda (2 samples, 0.12%)</title><rect x="15.0" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$202 (2 samples, 0.12%)</title><rect x="15.0" y="435.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.12%)</title><rect x="16.4" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.12%)</title><rect x="16.4" y="467.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.06%)</title><rect x="16.4" y="451.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="17.1" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1662340177.apply (1 samples, 0.06%)</title><rect x="17.1" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.06%)</title><rect x="17.1" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="17.1" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1800980638.apply (1 samples, 0.06%)</title><rect x="17.1" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="17.1" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="17.1" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="17.1" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="17.1" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="17.1" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="17.1" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.18%)</title><rect x="17.8" y="483.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.18%)</title><rect x="17.8" y="467.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.18%)</title><rect x="17.8" y="451.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (88 samples, 5.28%)</title><rect x="19.9" y="483.0" width="62.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.9" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (76 samples, 4.56%)</title><rect x="19.9" y="467.0" width="53.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (76 samples, 4.56%)</title><rect x="19.9" y="451.0" width="53.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.9" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.06%)</title><rect x="19.9" y="435.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="22.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$197/221881945.apply (71 samples, 4.26%)</title><rect x="20.6" y="435.0" width="50.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.6" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (71 samples, 4.26%)</title><rect x="20.6" y="419.0" width="50.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.6" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="20.6" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="20.6" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$211/1581669780.get$Lambda (1 samples, 0.06%)</title><rect x="20.6" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$211 (1 samples, 0.06%)</title><rect x="20.6" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="23.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="21.3" y="403.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.12%)</title><rect x="21.3" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="21.3" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="21.3" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.12%)</title><rect x="21.3" y="339.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.18%)</title><rect x="22.7" y="403.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.18%)</title><rect x="24.9" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (2 samples, 0.12%)</title><rect x="24.9" y="387.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="27.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="26.3" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="26.3" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="26.3" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="26.3" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.06%)</title><rect x="26.3" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.06%)</title><rect x="26.3" y="307.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="29.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.06%)</title><rect x="27.0" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="27.0" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.06%)</title><rect x="27.0" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.06%)</title><rect x="27.0" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="27.0" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.06%)</title><rect x="27.0" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="30.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (61 samples, 3.66%)</title><rect x="27.7" y="403.0" width="43.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.7" y="414.0">jdk/..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.36%)</title><rect x="27.7" y="387.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.36%)</title><rect x="27.7" y="371.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6 samples, 0.36%)</title><rect x="27.7" y="355.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.7" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.36%)</title><rect x="27.7" y="339.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="30.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="32.0" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.0" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="32.0" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="32.0" y="355.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.48%)</title><rect x="33.4" y="387.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.48%)</title><rect x="33.4" y="371.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.48%)</title><rect x="33.4" y="355.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.4" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.48%)</title><rect x="33.4" y="339.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="39.0" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="39.0" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="39.0" y="355.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="42.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (36 samples, 2.16%)</title><rect x="40.5" y="387.0" width="25.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.5" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (13 samples, 0.78%)</title><rect x="40.5" y="371.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.72%)</title><rect x="40.5" y="355.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.72%)</title><rect x="40.5" y="339.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.72%)</title><rect x="40.5" y="323.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.72%)</title><rect x="40.5" y="307.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.5" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.72%)</title><rect x="40.5" y="291.0" width="8.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="43.5" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$214/1310889769.test (1 samples, 0.06%)</title><rect x="49.0" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.0" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.06%)</title><rect x="49.0" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (1 samples, 0.06%)</title><rect x="49.0" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.06%)</title><rect x="49.0" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.0" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (1 samples, 0.06%)</title><rect x="49.0" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.0" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.06%)</title><rect x="49.0" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (1 samples, 0.06%)</title><rect x="49.0" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.06%)</title><rect x="49.0" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="49.0" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="49.0" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="49.0" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.0" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="49.0" y="179.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="52.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (23 samples, 1.38%)</title><rect x="49.7" y="371.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 1.38%)</title><rect x="49.7" y="355.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 1.38%)</title><rect x="49.7" y="339.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.7" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.06%)</title><rect x="49.7" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="52.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.06%)</title><rect x="50.4" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="53.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.06%)</title><rect x="51.1" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (20 samples, 1.20%)</title><rect x="51.8" y="323.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (20 samples, 1.20%)</title><rect x="51.8" y="307.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (20 samples, 1.20%)</title><rect x="51.8" y="291.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.18%)</title><rect x="51.8" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="51.8" y="259.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.get$Lambda (3 samples, 0.18%)</title><rect x="51.8" y="243.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.8" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.18%)</title><rect x="51.8" y="227.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="54.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="53.9" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.accept (1 samples, 0.06%)</title><rect x="53.9" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="53.9" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="53.9" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="53.9" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="53.9" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="53.9" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="53.9" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="53.9" y="147.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="56.9" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (11 samples, 0.66%)</title><rect x="54.6" y="275.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.6" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (11 samples, 0.66%)</title><rect x="54.6" y="259.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.36%)</title><rect x="54.6" y="243.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.36%)</title><rect x="54.6" y="227.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.36%)</title><rect x="54.6" y="211.0" width="4.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="57.6" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.30%)</title><rect x="58.9" y="243.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.9" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.30%)</title><rect x="58.9" y="227.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="61.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.30%)</title><rect x="62.4" y="275.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.30%)</title><rect x="62.4" y="259.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="65.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.06%)</title><rect x="66.0" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="66.0" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.0" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="66.0" y="355.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.12%)</title><rect x="66.7" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.12%)</title><rect x="66.7" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="66.7" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.12%)</title><rect x="66.7" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (2 samples, 0.12%)</title><rect x="66.7" y="323.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="66.7" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.06%)</title><rect x="66.7" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="66.7" y="275.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="69.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="67.4" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="67.4" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.4" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="67.4" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="70.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.24%)</title><rect x="68.1" y="387.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.12%)</title><rect x="68.1" y="371.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="71.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="69.5" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="69.5" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="72.5" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="70.2" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.2" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.06%)</title><rect x="70.2" y="355.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="73.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.24%)</title><rect x="70.9" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.24%)</title><rect x="70.9" y="419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.24%)</title><rect x="70.9" y="403.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="73.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.12%)</title><rect x="73.7" y="467.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (10 samples, 0.60%)</title><rect x="75.2" y="467.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2 samples, 0.12%)</title><rect x="75.2" y="451.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="78.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (3 samples, 0.18%)</title><rect x="76.6" y="451.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.12%)</title><rect x="78.7" y="451.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="78.7" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="78.7" y="419.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.12%)</title><rect x="78.7" y="403.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.12%)</title><rect x="78.7" y="387.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.12%)</title><rect x="78.7" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (2 samples, 0.12%)</title><rect x="78.7" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.12%)</title><rect x="78.7" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.12%)</title><rect x="78.7" y="323.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.12%)</title><rect x="78.7" y="307.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="81.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.12%)</title><rect x="80.1" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="80.1" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="80.1" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.1" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="80.1" y="403.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1 samples, 0.06%)</title><rect x="81.5" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="81.5" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="84.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="82.2" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="82.2" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="82.2" y="547.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="85.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="83.0" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.12%)</title><rect x="83.0" y="595.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.12%)</title><rect x="83.0" y="579.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (37 samples, 2.22%)</title><rect x="84.4" y="611.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.4" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (37 samples, 2.22%)</title><rect x="84.4" y="595.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.4" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (36 samples, 2.16%)</title><rect x="84.4" y="579.0" width="25.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (36 samples, 2.16%)</title><rect x="84.4" y="563.0" width="25.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36 samples, 2.16%)</title><rect x="84.4" y="547.0" width="25.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.4" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1424384071.apply (36 samples, 2.16%)</title><rect x="84.4" y="531.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (36 samples, 2.16%)</title><rect x="84.4" y="515.0" width="25.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.4" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (36 samples, 2.16%)</title><rect x="84.4" y="499.0" width="25.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (20 samples, 1.20%)</title><rect x="84.4" y="483.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (20 samples, 1.20%)</title><rect x="84.4" y="467.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (20 samples, 1.20%)</title><rect x="84.4" y="451.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/310170649.apply (20 samples, 1.20%)</title><rect x="84.4" y="435.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (20 samples, 1.20%)</title><rect x="84.4" y="419.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (20 samples, 1.20%)</title><rect x="84.4" y="403.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (20 samples, 1.20%)</title><rect x="84.4" y="387.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (13 samples, 0.78%)</title><rect x="84.4" y="371.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.4" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (5 samples, 0.30%)</title><rect x="84.4" y="355.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="84.4" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="87.4" y="350.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.24%)</title><rect x="85.1" y="339.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.1" y="350.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="85.1" y="323.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="88.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (5 samples, 0.30%)</title><rect x="87.9" y="355.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (5 samples, 0.30%)</title><rect x="87.9" y="339.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (5 samples, 0.30%)</title><rect x="87.9" y="323.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (3 samples, 0.18%)</title><rect x="87.9" y="307.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="87.9" y="291.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.get$Lambda (3 samples, 0.18%)</title><rect x="87.9" y="275.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (3 samples, 0.18%)</title><rect x="87.9" y="259.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="90.9" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="90.0" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.run (2 samples, 0.12%)</title><rect x="90.0" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.12%)</title><rect x="90.0" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.0" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.12%)</title><rect x="90.0" y="259.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.12%)</title><rect x="90.0" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.12%)</title><rect x="90.0" y="227.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="93.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (3 samples, 0.18%)</title><rect x="91.5" y="355.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.5" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="91.5" y="339.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.42%)</title><rect x="93.6" y="371.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.6" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.06%)</title><rect x="93.6" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="96.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.18%)</title><rect x="94.3" y="355.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.18%)</title><rect x="94.3" y="339.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="97.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.18%)</title><rect x="96.4" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.18%)</title><rect x="96.4" y="339.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (16 samples, 0.96%)</title><rect x="98.5" y="483.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1 samples, 0.06%)</title><rect x="98.5" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="101.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (15 samples, 0.90%)</title><rect x="99.2" y="467.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (2 samples, 0.12%)</title><rect x="99.2" y="451.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="102.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.12%)</title><rect x="100.7" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.12%)</title><rect x="100.7" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.12%)</title><rect x="100.7" y="419.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1 samples, 0.06%)</title><rect x="102.1" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="105.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.06%)</title><rect x="102.8" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="105.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="103.5" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="106.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.24%)</title><rect x="104.2" y="451.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.06%)</title><rect x="104.2" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="107.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.06%)</title><rect x="104.9" y="435.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="107.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.12%)</title><rect x="105.6" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.12%)</title><rect x="105.6" y="419.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.12%)</title><rect x="105.6" y="403.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="108.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.12%)</title><rect x="107.0" y="451.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.12%)</title><rect x="107.0" y="435.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.06%)</title><rect x="107.0" y="419.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="110.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1 samples, 0.06%)</title><rect x="107.7" y="419.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="110.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.12%)</title><rect x="108.5" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (1 samples, 0.06%)</title><rect x="108.5" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="108.5" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$148/172854560.get$Lambda (1 samples, 0.06%)</title><rect x="108.5" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$148 (1 samples, 0.06%)</title><rect x="108.5" y="387.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="111.5" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="109.2" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$148/172854560.run (1 samples, 0.06%)</title><rect x="109.2" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.06%)</title><rect x="109.2" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.2" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.06%)</title><rect x="109.2" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.06%)</title><rect x="109.2" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="109.2" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="109.2" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="109.2" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.06%)</title><rect x="109.2" y="307.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="112.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="109.9" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="109.9" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="109.9" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="109.9" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="109.9" y="515.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="112.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1 samples, 0.06%)</title><rect x="110.6" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.06%)</title><rect x="110.6" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="110.6" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.6" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.06%)</title><rect x="110.6" y="611.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="113.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.06%)</title><rect x="111.3" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1 samples, 0.06%)</title><rect x="111.3" y="643.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="114.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (184 samples, 11.04%)</title><rect x="112.0" y="723.0" width="130.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.0" y="734.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (184 samples, 11.04%)</title><rect x="112.0" y="707.0" width="130.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.0" y="718.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1284023277.accept (184 samples, 11.04%)</title><rect x="112.0" y="691.0" width="130.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.0" y="702.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (184 samples, 11.04%)</title><rect x="112.0" y="675.0" width="130.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.0" y="686.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (184 samples, 11.04%)</title><rect x="112.0" y="659.0" width="130.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.0" y="670.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (184 samples, 11.04%)</title><rect x="112.0" y="643.0" width="130.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.0" y="654.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (141 samples, 8.46%)</title><rect x="112.0" y="627.0" width="99.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.0" y="638.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (123 samples, 7.38%)</title><rect x="112.0" y="611.0" width="87.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.0" y="622.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (123 samples, 7.38%)</title><rect x="112.0" y="595.0" width="87.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.0" y="606.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (123 samples, 7.38%)</title><rect x="112.0" y="579.0" width="87.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="115.0" y="590.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 1.08%)</title><rect x="199.1" y="611.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.1" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.48%)</title><rect x="199.1" y="595.0" width="5.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="202.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.60%)</title><rect x="204.8" y="595.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.60%)</title><rect x="204.8" y="579.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (10 samples, 0.60%)</title><rect x="204.8" y="563.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.60%)</title><rect x="204.8" y="547.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.60%)</title><rect x="204.8" y="531.0" width="7.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="207.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (43 samples, 2.58%)</title><rect x="211.9" y="627.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.9" y="638.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 2.58%)</title><rect x="211.9" y="611.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.9" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 2.58%)</title><rect x="211.9" y="595.0" width="30.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.9" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.String (5 samples, 0.30%)</title><rect x="211.9" y="579.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="214.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 2.28%)</title><rect x="215.4" y="579.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.4" y="590.0">j..</text>
</g>
<g>
<title>byte[] (38 samples, 2.28%)</title><rect x="215.4" y="563.0" width="26.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="218.4" y="574.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$263/522784531.get (264 samples, 15.85%)</title><rect x="242.3" y="739.0" width="187.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.3" y="750.0">ru/mail/polis/service/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (264 samples, 15.85%)</title><rect x="242.3" y="723.0" width="187.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.3" y="734.0">ru/mail/polis/service/Re..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="242.3" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="242.3" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.3" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="242.3" y="675.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="245.3" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.36%)</title><rect x="243.0" y="707.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="246.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (97 samples, 5.82%)</title><rect x="247.3" y="707.0" width="68.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.3" y="718.0">one/nio..</text>
</g>
<g>
<title>byte[] (62 samples, 3.72%)</title><rect x="247.3" y="691.0" width="43.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="250.3" y="702.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.30%)</title><rect x="291.2" y="691.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="294.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 1.80%)</title><rect x="294.7" y="691.0" width="21.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="297.7" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (158 samples, 9.48%)</title><rect x="316.0" y="707.0" width="111.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.0" y="718.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (157 samples, 9.42%)</title><rect x="316.0" y="691.0" width="111.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.0" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (157 samples, 9.42%)</title><rect x="316.0" y="675.0" width="111.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.0" y="686.0">java/nio/Byte..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (157 samples, 9.42%)</title><rect x="316.0" y="659.0" width="111.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.0" y="670.0">java/nio/Heap..</text>
</g>
<g>
<title>byte[] (43 samples, 2.58%)</title><rect x="316.0" y="643.0" width="30.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="319.0" y="654.0">by..</text>
</g>
<g>
<title>byte[] (114 samples, 6.84%)</title><rect x="346.4" y="643.0" width="80.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.4" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (1 samples, 0.06%)</title><rect x="427.2" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.2" y="702.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="427.2" y="675.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="430.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (2 samples, 0.12%)</title><rect x="427.9" y="707.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.12%)</title><rect x="427.9" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.12%)</title><rect x="427.9" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.12%)</title><rect x="427.9" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="427.9" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.9" y="654.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="427.9" y="627.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="430.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.18%)</title><rect x="429.3" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.18%)</title><rect x="429.3" y="739.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$264/906859911.apply (2 samples, 0.12%)</title><rect x="429.3" y="723.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$2 (2 samples, 0.12%)</title><rect x="429.3" y="707.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.12%)</title><rect x="429.3" y="691.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="432.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$265/739860489.apply (1 samples, 0.06%)</title><rect x="430.7" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$futureHelper$3 (1 samples, 0.06%)</title><rect x="430.7" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.7" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="430.7" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="430.7" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.7" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.06%)</title><rect x="430.7" y="659.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="433.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.48%)</title><rect x="431.4" y="755.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.48%)</title><rect x="431.4" y="739.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.42%)</title><rect x="431.4" y="723.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.42%)</title><rect x="431.4" y="707.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.42%)</title><rect x="431.4" y="691.0" width="5.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="434.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="436.4" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="436.4" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="436.4" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="436.4" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="436.4" y="659.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="439.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1221693201.run (34 samples, 2.04%)</title><rect x="437.1" y="755.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.1" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (34 samples, 2.04%)</title><rect x="437.1" y="739.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.1" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (34 samples, 2.04%)</title><rect x="437.1" y="723.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.1" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (34 samples, 2.04%)</title><rect x="437.1" y="707.0" width="24.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.1" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 2.04%)</title><rect x="437.1" y="691.0" width="24.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.1" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 2.04%)</title><rect x="437.1" y="675.0" width="24.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.1" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 2.04%)</title><rect x="437.1" y="659.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.1" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (34 samples, 2.04%)</title><rect x="437.1" y="643.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.1" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (34 samples, 2.04%)</title><rect x="437.1" y="627.0" width="24.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.1" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (34 samples, 2.04%)</title><rect x="437.1" y="611.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.1" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (34 samples, 2.04%)</title><rect x="437.1" y="595.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.1" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (30 samples, 1.80%)</title><rect x="437.1" y="579.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.1" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="437.1" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="437.1" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/30050075.get$Lambda (1 samples, 0.06%)</title><rect x="437.1" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (1 samples, 0.06%)</title><rect x="437.1" y="515.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="440.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (29 samples, 1.74%)</title><rect x="437.8" y="563.0" width="20.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (5 samples, 0.30%)</title><rect x="437.8" y="547.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="440.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 1.44%)</title><rect x="441.3" y="547.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24 samples, 1.44%)</title><rect x="441.3" y="531.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 1.44%)</title><rect x="441.3" y="515.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.42%)</title><rect x="441.3" y="499.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.12%)</title><rect x="441.3" y="483.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/1501173076.apply (5 samples, 0.30%)</title><rect x="442.8" y="483.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.30%)</title><rect x="442.8" y="467.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.30%)</title><rect x="442.8" y="451.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.12%)</title><rect x="442.8" y="435.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.12%)</title><rect x="442.8" y="419.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.12%)</title><rect x="442.8" y="403.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="445.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.18%)</title><rect x="444.2" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="444.2" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="444.2" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/1890521636.get$Lambda (1 samples, 0.06%)</title><rect x="444.2" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$224 (1 samples, 0.06%)</title><rect x="444.2" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="447.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.12%)</title><rect x="444.9" y="419.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.12%)</title><rect x="444.9" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.06%)</title><rect x="444.9" y="387.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="447.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="445.6" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="445.6" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="445.6" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="448.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (17 samples, 1.02%)</title><rect x="446.3" y="499.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17 samples, 1.02%)</title><rect x="446.3" y="483.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1662340177.apply (17 samples, 1.02%)</title><rect x="446.3" y="467.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (17 samples, 1.02%)</title><rect x="446.3" y="451.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (17 samples, 1.02%)</title><rect x="446.3" y="435.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1800980638.apply (17 samples, 1.02%)</title><rect x="446.3" y="419.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (17 samples, 1.02%)</title><rect x="446.3" y="403.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.06%)</title><rect x="446.3" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="446.3" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="446.3" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="446.3" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="446.3" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="446.3" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="449.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (16 samples, 0.96%)</title><rect x="447.0" y="387.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (7 samples, 0.42%)</title><rect x="447.0" y="371.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (7 samples, 0.42%)</title><rect x="447.0" y="355.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (7 samples, 0.42%)</title><rect x="447.0" y="339.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$266/1426428495.accept (2 samples, 0.12%)</title><rect x="447.0" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (2 samples, 0.12%)</title><rect x="447.0" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (2 samples, 0.12%)</title><rect x="447.0" y="291.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="447.0" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="447.0" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$269/840547314.get$Lambda (1 samples, 0.06%)</title><rect x="447.0" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$269 (1 samples, 0.06%)</title><rect x="447.0" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="450.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.06%)</title><rect x="447.7" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="447.7" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.06%)</title><rect x="447.7" y="243.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="450.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$270/1436395212.accept (4 samples, 0.24%)</title><rect x="448.4" y="323.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (4 samples, 0.24%)</title><rect x="448.4" y="307.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (4 samples, 0.24%)</title><rect x="448.4" y="291.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (4 samples, 0.24%)</title><rect x="448.4" y="275.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (4 samples, 0.24%)</title><rect x="448.4" y="259.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.24%)</title><rect x="448.4" y="243.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.24%)</title><rect x="448.4" y="227.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.24%)</title><rect x="448.4" y="211.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.24%)</title><rect x="448.4" y="195.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.24%)</title><rect x="448.4" y="179.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.12%)</title><rect x="448.4" y="163.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.12%)</title><rect x="448.4" y="147.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.06%)</title><rect x="448.4" y="131.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="451.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="449.1" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="449.1" y="115.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="449.1" y="99.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="449.1" y="83.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.06%)</title><rect x="449.1" y="67.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.1" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.06%)</title><rect x="449.1" y="51.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="452.1" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.12%)</title><rect x="449.8" y="163.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.12%)</title><rect x="449.8" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.06%)</title><rect x="449.8" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.06%)</title><rect x="449.8" y="115.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="452.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="450.6" y="131.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="450.6" y="115.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="450.6" y="99.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="450.6" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="450.6" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.06%)</title><rect x="450.6" y="51.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.06%)</title><rect x="450.6" y="35.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="453.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="451.3" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="451.3" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="451.3" y="291.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="454.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (9 samples, 0.54%)</title><rect x="452.0" y="371.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (9 samples, 0.54%)</title><rect x="452.0" y="355.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2 samples, 0.12%)</title><rect x="452.0" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (1 samples, 0.06%)</title><rect x="452.0" y="323.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="455.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="452.7" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="452.7" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (1 samples, 0.06%)</title><rect x="452.7" y="291.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="455.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (7 samples, 0.42%)</title><rect x="453.4" y="339.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.30%)</title><rect x="453.4" y="323.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="453.4" y="307.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="456.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="454.1" y="307.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.1" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="454.1" y="291.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="457.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="456.9" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="456.9" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="456.9" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="456.9" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="456.9" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="456.9" y="243.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="459.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.24%)</title><rect x="458.3" y="579.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.24%)</title><rect x="458.3" y="563.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (4 samples, 0.24%)</title><rect x="458.3" y="547.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (4 samples, 0.24%)</title><rect x="458.3" y="531.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (4 samples, 0.24%)</title><rect x="458.3" y="515.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.24%)</title><rect x="458.3" y="499.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.12%)</title><rect x="458.3" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.3" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (2 samples, 0.12%)</title><rect x="458.3" y="467.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.3" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.12%)</title><rect x="459.8" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.12%)</title><rect x="459.8" y="467.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="462.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (85 samples, 5.10%)</title><rect x="461.2" y="755.0" width="60.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (85 samples, 5.10%)</title><rect x="461.2" y="739.0" width="60.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.2" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (71 samples, 4.26%)</title><rect x="461.2" y="723.0" width="50.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.2" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (71 samples, 4.26%)</title><rect x="461.2" y="707.0" width="50.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.2" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (71 samples, 4.26%)</title><rect x="461.2" y="691.0" width="50.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.2" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.06%)</title><rect x="461.2" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.06%)</title><rect x="461.2" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.06%)</title><rect x="461.2" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.06%)</title><rect x="461.2" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.06%)</title><rect x="461.2" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.06%)</title><rect x="461.2" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="461.2" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="461.2" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="461.2" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="461.2" y="531.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (70 samples, 4.20%)</title><rect x="461.9" y="675.0" width="49.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.9" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (70 samples, 4.20%)</title><rect x="461.9" y="659.0" width="49.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.9" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 4.20%)</title><rect x="461.9" y="643.0" width="49.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.9" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 4.20%)</title><rect x="461.9" y="627.0" width="49.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.9" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (37 samples, 2.22%)</title><rect x="461.9" y="611.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 2.22%)</title><rect x="461.9" y="595.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (37 samples, 2.22%)</title><rect x="461.9" y="579.0" width="26.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (37 samples, 2.22%)</title><rect x="461.9" y="563.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 2.22%)</title><rect x="461.9" y="547.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (37 samples, 2.22%)</title><rect x="461.9" y="531.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (37 samples, 2.22%)</title><rect x="461.9" y="515.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36 samples, 2.16%)</title><rect x="461.9" y="499.0" width="25.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.9" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 2.16%)</title><rect x="461.9" y="483.0" width="25.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (35 samples, 2.10%)</title><rect x="461.9" y="467.0" width="24.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.9" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.06%)</title><rect x="461.9" y="451.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="464.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1905483096.apply (1 samples, 0.06%)</title><rect x="462.6" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.06%)</title><rect x="462.6" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.06%)</title><rect x="462.6" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="462.6" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="462.6" y="387.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="465.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1106427060.apply (32 samples, 1.92%)</title><rect x="463.3" y="451.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (32 samples, 1.92%)</title><rect x="463.3" y="435.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (32 samples, 1.92%)</title><rect x="463.3" y="419.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.3" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (32 samples, 1.92%)</title><rect x="463.3" y="403.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.3" y="414.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (4 samples, 0.24%)</title><rect x="463.3" y="387.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="466.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (25 samples, 1.50%)</title><rect x="466.1" y="387.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="466.1" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="466.1" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$248/407018175.get$Lambda (1 samples, 0.06%)</title><rect x="466.1" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$248 (1 samples, 0.06%)</title><rect x="466.1" y="323.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1947636208.linkToTargetMethod (2 samples, 0.12%)</title><rect x="466.8" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1239740656.invokeStatic (2 samples, 0.12%)</title><rect x="466.8" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1531535865.get$Lambda (2 samples, 0.12%)</title><rect x="466.8" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$236 (2 samples, 0.12%)</title><rect x="466.8" y="323.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (6 samples, 0.36%)</title><rect x="468.3" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.12%)</title><rect x="468.3" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.06%)</title><rect x="468.3" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.06%)</title><rect x="468.3" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="471.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="469.0" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.06%)</title><rect x="469.0" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="472.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.18%)</title><rect x="469.7" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.18%)</title><rect x="469.7" y="339.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.18%)</title><rect x="469.7" y="323.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$232/500492745.get (2 samples, 0.12%)</title><rect x="469.7" y="307.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (2 samples, 0.12%)</title><rect x="469.7" y="291.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="472.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.06%)</title><rect x="471.1" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.06%)</title><rect x="471.1" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.1" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.06%)</title><rect x="471.1" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.1" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1 samples, 0.06%)</title><rect x="471.1" y="259.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="474.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.06%)</title><rect x="471.8" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1 samples, 0.06%)</title><rect x="471.8" y="339.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="474.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="472.5" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="472.5" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.06%)</title><rect x="472.5" y="339.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="473.2" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="473.2" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.06%)</title><rect x="473.2" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="476.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.18%)</title><rect x="473.9" y="371.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="476.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.66%)</title><rect x="476.1" y="371.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$236/1531535865.run (11 samples, 0.66%)</title><rect x="476.1" y="355.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11 samples, 0.66%)</title><rect x="476.1" y="339.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="476.1" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="476.1" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.06%)</title><rect x="476.1" y="291.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="479.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (1 samples, 0.06%)</title><rect x="476.8" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="479.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.12%)</title><rect x="477.5" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.12%)</title><rect x="477.5" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="477.5" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="477.5" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.12%)</title><rect x="477.5" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.12%)</title><rect x="477.5" y="243.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="480.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.12%)</title><rect x="478.9" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="478.9" y="307.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (2 samples, 0.12%)</title><rect x="478.9" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="478.9" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.12%)</title><rect x="478.9" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.12%)</title><rect x="478.9" y="243.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.9" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="478.9" y="227.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="481.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (5 samples, 0.30%)</title><rect x="480.3" y="323.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (5 samples, 0.30%)</title><rect x="480.3" y="307.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.30%)</title><rect x="480.3" y="291.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (5 samples, 0.30%)</title><rect x="480.3" y="275.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.30%)</title><rect x="480.3" y="259.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.12%)</title><rect x="480.3" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="480.3" y="227.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="483.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.18%)</title><rect x="481.7" y="243.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.18%)</title><rect x="481.7" y="227.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.7" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="481.7" y="211.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="484.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/PutBodyHandler.apply (3 samples, 0.18%)</title><rect x="483.8" y="387.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (3 samples, 0.18%)</title><rect x="483.8" y="371.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (1 samples, 0.06%)</title><rect x="483.8" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (2 samples, 0.12%)</title><rect x="484.5" y="355.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (1 samples, 0.06%)</title><rect x="484.5" y="339.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="487.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="485.3" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="488.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$204/1199228970.apply (1 samples, 0.06%)</title><rect x="486.0" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.06%)</title><rect x="486.0" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.06%)</title><rect x="486.0" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.06%)</title><rect x="486.0" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="486.0" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.06%)</title><rect x="486.0" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.06%)</title><rect x="486.7" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="486.7" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$205/807972334.apply (1 samples, 0.06%)</title><rect x="486.7" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.06%)</title><rect x="486.7" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="486.7" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="486.7" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="489.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/1890521636.apply (1 samples, 0.06%)</title><rect x="487.4" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.06%)</title><rect x="487.4" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (1 samples, 0.06%)</title><rect x="487.4" y="467.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="490.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (33 samples, 1.98%)</title><rect x="488.1" y="611.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.1" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.18%)</title><rect x="488.1" y="595.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.18%)</title><rect x="488.1" y="579.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.18%)</title><rect x="488.1" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.18%)</title><rect x="488.1" y="547.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.18%)</title><rect x="488.1" y="531.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.1" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="488.1" y="515.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="491.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.06%)</title><rect x="490.2" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="490.2" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="490.2" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="490.2" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="490.2" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="490.2" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="493.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (5 samples, 0.30%)</title><rect x="490.9" y="595.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="490.9" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="490.9" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.9" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="490.9" y="547.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="493.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.24%)</title><rect x="491.6" y="579.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.24%)</title><rect x="491.6" y="563.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.24%)</title><rect x="491.6" y="547.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="491.6" y="531.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="494.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.48%)</title><rect x="494.5" y="595.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.48%)</title><rect x="494.5" y="579.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.48%)</title><rect x="494.5" y="563.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.5" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.06%)</title><rect x="494.5" y="547.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="497.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="495.2" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="495.2" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.get$Lambda (2 samples, 0.12%)</title><rect x="495.2" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.2" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (2 samples, 0.12%)</title><rect x="495.2" y="499.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="498.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.06%)</title><rect x="496.6" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.6" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.06%)</title><rect x="496.6" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="499.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.12%)</title><rect x="497.3" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (2 samples, 0.12%)</title><rect x="497.3" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.12%)</title><rect x="497.3" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.3" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.06%)</title><rect x="497.3" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.06%)</title><rect x="497.3" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.06%)</title><rect x="497.3" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="497.3" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="497.3" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="500.3" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="498.0" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.06%)</title><rect x="498.0" y="483.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.12%)</title><rect x="498.7" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.12%)</title><rect x="498.7" y="531.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="501.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (16 samples, 0.96%)</title><rect x="500.1" y="595.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="500.1" y="579.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="500.1" y="563.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.1" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="500.1" y="547.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="503.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.24%)</title><rect x="501.5" y="579.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.24%)</title><rect x="501.5" y="563.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="501.5" y="547.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="504.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.18%)</title><rect x="502.3" y="547.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.3" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="502.3" y="531.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (10 samples, 0.60%)</title><rect x="504.4" y="579.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.18%)</title><rect x="504.4" y="563.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.18%)</title><rect x="504.4" y="547.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="504.4" y="531.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="507.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="505.8" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.8" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="505.8" y="515.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="508.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.18%)</title><rect x="506.5" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.18%)</title><rect x="506.5" y="547.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="506.5" y="531.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="509.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="507.2" y="531.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="510.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="508.6" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="508.6" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="508.6" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="508.6" y="515.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="511.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="509.3" y="563.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="509.3" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="509.3" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="509.3" y="515.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="509.3" y="499.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="509.3" y="483.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="512.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="510.8" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="510.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.06%)</title><rect x="510.8" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="513.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (14 samples, 0.84%)</title><rect x="511.5" y="723.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.84%)</title><rect x="511.5" y="707.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14 samples, 0.84%)</title><rect x="511.5" y="691.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/671086300.run (14 samples, 0.84%)</title><rect x="511.5" y="675.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14 samples, 0.84%)</title><rect x="511.5" y="659.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (14 samples, 0.84%)</title><rect x="511.5" y="643.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="511.5" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="511.5" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.06%)</title><rect x="511.5" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.06%)</title><rect x="511.5" y="579.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="514.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (13 samples, 0.78%)</title><rect x="512.2" y="627.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (13 samples, 0.78%)</title><rect x="512.2" y="611.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/1681940514.run (13 samples, 0.78%)</title><rect x="512.2" y="595.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (13 samples, 0.78%)</title><rect x="512.2" y="579.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (13 samples, 0.78%)</title><rect x="512.2" y="563.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.24%)</title><rect x="512.2" y="547.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.2" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.24%)</title><rect x="512.2" y="531.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.24%)</title><rect x="512.2" y="515.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.24%)</title><rect x="512.2" y="499.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="515.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (9 samples, 0.54%)</title><rect x="515.0" y="547.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.06%)</title><rect x="515.0" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.0" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.06%)</title><rect x="515.0" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.06%)</title><rect x="515.0" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.06%)</title><rect x="515.0" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.0" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.06%)</title><rect x="515.0" y="467.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="518.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.48%)</title><rect x="515.7" y="531.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (5 samples, 0.30%)</title><rect x="515.7" y="515.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.12%)</title><rect x="515.7" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.12%)</title><rect x="515.7" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.12%)</title><rect x="515.7" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.12%)</title><rect x="515.7" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.12%)</title><rect x="515.7" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.7" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.12%)</title><rect x="515.7" y="419.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="518.7" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.12%)</title><rect x="517.1" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.12%)</title><rect x="517.1" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.12%)</title><rect x="517.1" y="467.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.12%)</title><rect x="517.1" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.12%)</title><rect x="517.1" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.12%)</title><rect x="517.1" y="419.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="520.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.06%)</title><rect x="518.5" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.06%)</title><rect x="518.5" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.06%)</title><rect x="518.5" y="467.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="521.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.12%)</title><rect x="519.3" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.3" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.06%)</title><rect x="519.3" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.06%)</title><rect x="519.3" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.06%)</title><rect x="519.3" y="467.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.06%)</title><rect x="520.0" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (1 samples, 0.06%)</title><rect x="520.0" y="483.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="523.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.06%)</title><rect x="520.7" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (1 samples, 0.06%)</title><rect x="520.7" y="499.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="523.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1 samples, 0.06%)</title><rect x="521.4" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1 samples, 0.06%)</title><rect x="521.4" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1 samples, 0.06%)</title><rect x="521.4" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1 samples, 0.06%)</title><rect x="521.4" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1 samples, 0.06%)</title><rect x="521.4" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1 samples, 0.06%)</title><rect x="521.4" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="521.4" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="521.4" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="521.4" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="521.4" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="521.4" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="521.4" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.06%)</title><rect x="521.4" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="521.4" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="521.4" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="521.4" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="521.4" y="547.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="524.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (39 samples, 2.34%)</title><rect x="522.1" y="803.0" width="27.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.1" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="522.1" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="522.1" y="771.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/798963966.get$Lambda (2 samples, 0.12%)</title><rect x="522.1" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$210 (2 samples, 0.12%)</title><rect x="522.1" y="739.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="525.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.42%)</title><rect x="523.5" y="787.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$208/631764841.accept (5 samples, 0.30%)</title><rect x="523.5" y="771.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (5 samples, 0.30%)</title><rect x="523.5" y="755.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (5 samples, 0.30%)</title><rect x="523.5" y="739.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (5 samples, 0.30%)</title><rect x="523.5" y="723.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (5 samples, 0.30%)</title><rect x="523.5" y="707.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (5 samples, 0.30%)</title><rect x="523.5" y="691.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.30%)</title><rect x="523.5" y="675.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.30%)</title><rect x="523.5" y="659.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.30%)</title><rect x="523.5" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (5 samples, 0.30%)</title><rect x="523.5" y="627.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/749233210.run (5 samples, 0.30%)</title><rect x="523.5" y="611.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5 samples, 0.30%)</title><rect x="523.5" y="595.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.12%)</title><rect x="523.5" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.12%)</title><rect x="523.5" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2 samples, 0.12%)</title><rect x="523.5" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (2 samples, 0.12%)</title><rect x="523.5" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.12%)</title><rect x="523.5" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.12%)</title><rect x="523.5" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.12%)</title><rect x="523.5" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.12%)</title><rect x="523.5" y="467.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="526.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3 samples, 0.18%)</title><rect x="524.9" y="579.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.06%)</title><rect x="524.9" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1 samples, 0.06%)</title><rect x="524.9" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.06%)</title><rect x="524.9" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.9" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.06%)</title><rect x="524.9" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="527.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.12%)</title><rect x="525.6" y="563.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$157/439900129.get (2 samples, 0.12%)</title><rect x="525.6" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (2 samples, 0.12%)</title><rect x="525.6" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="525.6" y="515.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="525.6" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.6" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="525.6" y="483.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="528.6" y="494.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="526.3" y="483.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$212/660317805.accept (2 samples, 0.12%)</title><rect x="527.0" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.12%)</title><rect x="527.0" y="755.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$207/1308046492.run (2 samples, 0.12%)</title><rect x="527.0" y="739.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.12%)</title><rect x="527.0" y="723.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.12%)</title><rect x="527.0" y="707.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="527.0" y="691.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="527.0" y="675.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.12%)</title><rect x="527.0" y="659.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="530.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (5 samples, 0.30%)</title><rect x="528.5" y="787.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$165/1901006842.run (3 samples, 0.18%)</title><rect x="528.5" y="771.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (3 samples, 0.18%)</title><rect x="528.5" y="755.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.18%)</title><rect x="528.5" y="739.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.18%)</title><rect x="528.5" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.18%)</title><rect x="528.5" y="707.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3 samples, 0.18%)</title><rect x="528.5" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/749233210.run (3 samples, 0.18%)</title><rect x="528.5" y="675.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (3 samples, 0.18%)</title><rect x="528.5" y="659.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (3 samples, 0.18%)</title><rect x="528.5" y="643.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.18%)</title><rect x="528.5" y="627.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.18%)</title><rect x="528.5" y="611.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.18%)</title><rect x="528.5" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.18%)</title><rect x="528.5" y="579.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (2 samples, 0.12%)</title><rect x="528.5" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (2 samples, 0.12%)</title><rect x="528.5" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="528.5" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.12%)</title><rect x="528.5" y="515.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.12%)</title><rect x="528.5" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.5" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="528.5" y="483.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="531.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="529.9" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="529.9" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="529.9" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215/1013685293.get$Lambda (1 samples, 0.06%)</title><rect x="529.9" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$215 (1 samples, 0.06%)</title><rect x="529.9" y="499.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="532.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$169/210457364.run (2 samples, 0.12%)</title><rect x="530.6" y="771.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2 samples, 0.12%)</title><rect x="530.6" y="755.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="530.6" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="530.6" y="723.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1221693201.get$Lambda (2 samples, 0.12%)</title><rect x="530.6" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.6" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$213 (2 samples, 0.12%)</title><rect x="530.6" y="691.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="533.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.90%)</title><rect x="532.0" y="787.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.90%)</title><rect x="532.0" y="771.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.24%)</title><rect x="532.0" y="755.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4 samples, 0.24%)</title><rect x="532.0" y="739.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="535.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (11 samples, 0.66%)</title><rect x="534.8" y="755.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.42%)</title><rect x="534.8" y="739.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="537.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (4 samples, 0.24%)</title><rect x="539.8" y="739.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (4 samples, 0.24%)</title><rect x="539.8" y="723.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.8" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (4 samples, 0.24%)</title><rect x="539.8" y="707.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="542.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (5 samples, 0.30%)</title><rect x="542.6" y="787.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="542.6" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="542.6" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$201/568928809.get$Lambda (1 samples, 0.06%)</title><rect x="542.6" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.6" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$201 (1 samples, 0.06%)</title><rect x="542.6" y="723.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="545.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.18%)</title><rect x="543.3" y="771.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (3 samples, 0.18%)</title><rect x="543.3" y="755.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (3 samples, 0.18%)</title><rect x="543.3" y="739.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="546.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.06%)</title><rect x="545.5" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1 samples, 0.06%)</title><rect x="545.5" y="755.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="548.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.06%)</title><rect x="546.2" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.06%)</title><rect x="546.2" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.06%)</title><rect x="546.2" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.06%)</title><rect x="546.2" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="546.2" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="546.2" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="546.2" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="546.2" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="546.2" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.06%)</title><rect x="546.2" y="643.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="549.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (2 samples, 0.12%)</title><rect x="546.9" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.12%)</title><rect x="546.9" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2 samples, 0.12%)</title><rect x="546.9" y="755.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.12%)</title><rect x="546.9" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.12%)</title><rect x="546.9" y="723.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.12%)</title><rect x="546.9" y="707.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="549.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.12%)</title><rect x="548.3" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="548.3" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="548.3" y="755.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.12%)</title><rect x="548.3" y="739.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="551.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (904 samples, 54.26%)</title><rect x="549.7" y="803.0" width="640.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (44 samples, 2.64%)</title><rect x="549.7" y="787.0" width="31.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.7" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (30 samples, 1.80%)</title><rect x="549.7" y="771.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.7" y="782.0">o..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (8 samples, 0.48%)</title><rect x="549.7" y="755.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="552.7" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (7 samples, 0.42%)</title><rect x="555.4" y="755.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (15 samples, 0.90%)</title><rect x="560.3" y="755.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (15 samples, 0.90%)</title><rect x="560.3" y="739.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (15 samples, 0.90%)</title><rect x="560.3" y="723.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.3" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (15 samples, 0.90%)</title><rect x="560.3" y="707.0" width="10.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="563.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (14 samples, 0.84%)</title><rect x="571.0" y="771.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.84%)</title><rect x="571.0" y="755.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (14 samples, 0.84%)</title><rect x="571.0" y="739.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (14 samples, 0.84%)</title><rect x="571.0" y="723.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.30%)</title><rect x="571.0" y="707.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.0" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (5 samples, 0.30%)</title><rect x="571.0" y="691.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="574.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.54%)</title><rect x="574.5" y="707.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.54%)</title><rect x="574.5" y="691.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.54%)</title><rect x="574.5" y="675.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.54%)</title><rect x="574.5" y="659.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.54%)</title><rect x="574.5" y="643.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.54%)</title><rect x="574.5" y="627.0" width="6.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="577.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (860 samples, 51.62%)</title><rect x="580.9" y="787.0" width="609.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.9" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (860 samples, 51.62%)</title><rect x="580.9" y="771.0" width="609.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.9" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (845 samples, 50.72%)</title><rect x="580.9" y="755.0" width="598.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.9" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (356 samples, 21.37%)</title><rect x="580.9" y="739.0" width="252.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.9" y="750.0">one/nio/http/HttpSession.handlePar..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (356 samples, 21.37%)</title><rect x="580.9" y="723.0" width="252.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.9" y="734.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (342 samples, 20.53%)</title><rect x="580.9" y="707.0" width="242.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.9" y="718.0">RequestHandler2_entity.handleReq..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.78%)</title><rect x="580.9" y="691.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.78%)</title><rect x="580.9" y="675.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.78%)</title><rect x="580.9" y="659.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.78%)</title><rect x="580.9" y="643.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.30%)</title><rect x="580.9" y="627.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="583.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.48%)</title><rect x="584.4" y="627.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.4" y="638.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.48%)</title><rect x="584.4" y="611.0" width="5.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="587.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (329 samples, 19.75%)</title><rect x="590.1" y="691.0" width="233.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.1" y="702.0">ru/mail/polis/service/Replicati..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (329 samples, 19.75%)</title><rect x="590.1" y="675.0" width="233.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.1" y="686.0">ru/mail/polis/service/Replicati..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.60%)</title><rect x="590.1" y="659.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.60%)</title><rect x="590.1" y="643.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.60%)</title><rect x="590.1" y="627.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.42%)</title><rect x="590.1" y="611.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="593.1" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.18%)</title><rect x="595.0" y="611.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.0" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="595.0" y="595.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="598.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (28 samples, 1.68%)</title><rect x="597.2" y="659.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.42%)</title><rect x="597.2" y="643.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.42%)</title><rect x="597.2" y="627.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$263/522784531.get$Lambda (7 samples, 0.42%)</title><rect x="597.2" y="611.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$263 (7 samples, 0.42%)</title><rect x="597.2" y="595.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="600.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (21 samples, 1.26%)</title><rect x="602.1" y="643.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (21 samples, 1.26%)</title><rect x="602.1" y="627.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (12 samples, 0.72%)</title><rect x="602.1" y="611.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="605.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (9 samples, 0.54%)</title><rect x="610.6" y="611.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="613.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (244 samples, 14.65%)</title><rect x="617.0" y="659.0" width="172.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.0" y="670.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (3 samples, 0.18%)</title><rect x="617.0" y="643.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (3 samples, 0.18%)</title><rect x="617.0" y="627.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="620.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="619.1" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="619.1" y="627.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="622.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="619.8" y="643.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="619.8" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.8" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.06%)</title><rect x="619.8" y="611.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="622.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="620.5" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (1 samples, 0.06%)</title><rect x="620.5" y="611.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.24%)</title><rect x="621.2" y="643.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.24%)</title><rect x="621.2" y="627.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.06%)</title><rect x="621.2" y="611.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="624.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.18%)</title><rect x="622.0" y="611.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.18%)</title><rect x="622.0" y="595.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.18%)</title><rect x="622.0" y="579.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="625.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (134 samples, 8.04%)</title><rect x="624.1" y="643.0" width="94.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.1" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (134 samples, 8.04%)</title><rect x="624.1" y="627.0" width="94.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.1" y="638.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (134 samples, 8.04%)</title><rect x="624.1" y="611.0" width="94.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.1" y="622.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (134 samples, 8.04%)</title><rect x="624.1" y="595.0" width="94.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.1" y="606.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="624.1" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="624.1" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$129/945758232.get$Lambda (2 samples, 0.12%)</title><rect x="624.1" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$129 (2 samples, 0.12%)</title><rect x="624.1" y="531.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.48%)</title><rect x="625.5" y="579.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.48%)</title><rect x="625.5" y="563.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.36%)</title><rect x="625.5" y="547.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="629.7" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="629.7" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.12%)</title><rect x="629.7" y="515.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.30%)</title><rect x="631.2" y="579.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.30%)</title><rect x="631.2" y="563.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.18%)</title><rect x="631.2" y="547.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="634.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="633.3" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="633.3" y="531.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.12%)</title><rect x="633.3" y="515.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="636.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.12%)</title><rect x="634.7" y="579.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="637.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (4 samples, 0.24%)</title><rect x="636.1" y="579.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="639.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (66 samples, 3.96%)</title><rect x="639.0" y="579.0" width="46.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.0" y="590.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.36%)</title><rect x="639.0" y="563.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.30%)</title><rect x="639.0" y="547.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.0" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.12%)</title><rect x="639.0" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.12%)</title><rect x="639.0" y="515.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="642.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.18%)</title><rect x="640.4" y="531.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.4" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.18%)</title><rect x="640.4" y="515.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="643.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="642.5" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="642.5" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="642.5" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (1 samples, 0.06%)</title><rect x="642.5" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.06%)</title><rect x="642.5" y="483.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="645.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (29 samples, 1.74%)</title><rect x="643.2" y="563.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (29 samples, 1.74%)</title><rect x="643.2" y="547.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.18%)</title><rect x="643.2" y="531.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="646.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.18%)</title><rect x="645.3" y="531.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="647.5" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="647.5" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.get$Lambda (1 samples, 0.06%)</title><rect x="647.5" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.5" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.06%)</title><rect x="647.5" y="483.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="650.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (14 samples, 0.84%)</title><rect x="648.2" y="531.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (14 samples, 0.84%)</title><rect x="648.2" y="515.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (14 samples, 0.84%)</title><rect x="648.2" y="499.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.84%)</title><rect x="648.2" y="483.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.30%)</title><rect x="648.2" y="467.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.accept (2 samples, 0.12%)</title><rect x="648.2" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.12%)</title><rect x="648.2" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="648.2" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="648.2" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="648.2" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="648.2" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="648.2" y="355.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="648.2" y="339.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="651.2" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.18%)</title><rect x="649.6" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.6" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.18%)</title><rect x="649.6" y="435.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="652.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.18%)</title><rect x="651.7" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="651.7" y="451.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.get$Lambda (3 samples, 0.18%)</title><rect x="651.7" y="435.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.7" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.18%)</title><rect x="651.7" y="419.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="654.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.24%)</title><rect x="653.8" y="467.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.24%)</title><rect x="653.8" y="451.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.18%)</title><rect x="653.8" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.18%)</title><rect x="653.8" y="419.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.18%)</title><rect x="653.8" y="403.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="656.8" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.06%)</title><rect x="656.0" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.0" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.06%)</title><rect x="656.0" y="419.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="659.0" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.12%)</title><rect x="656.7" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.12%)</title><rect x="656.7" y="451.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.24%)</title><rect x="658.1" y="531.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.1" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.24%)</title><rect x="658.1" y="515.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="661.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.24%)</title><rect x="660.9" y="531.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.24%)</title><rect x="660.9" y="515.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="663.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (2 samples, 0.12%)</title><rect x="663.7" y="563.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="666.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (20 samples, 1.20%)</title><rect x="665.2" y="563.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.2" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (20 samples, 1.20%)</title><rect x="665.2" y="547.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 1.14%)</title><rect x="665.2" y="531.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 1.14%)</title><rect x="665.2" y="515.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.2" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 1.14%)</title><rect x="665.2" y="499.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.30%)</title><rect x="665.2" y="483.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="668.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.42%)</title><rect x="668.7" y="483.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.42%)</title><rect x="668.7" y="467.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.7" y="478.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.42%)</title><rect x="668.7" y="451.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.42%)</title><rect x="673.7" y="483.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.42%)</title><rect x="673.7" y="467.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.24%)</title><rect x="673.7" y="451.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="676.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.18%)</title><rect x="676.5" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.5" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="676.5" y="435.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="679.5" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1 samples, 0.06%)</title><rect x="678.6" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="681.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="679.3" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.3" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.12%)</title><rect x="679.3" y="547.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="682.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.42%)</title><rect x="680.7" y="563.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.18%)</title><rect x="680.7" y="547.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.18%)</title><rect x="680.7" y="531.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="683.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.24%)</title><rect x="682.9" y="547.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.24%)</title><rect x="682.9" y="531.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="685.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (27 samples, 1.62%)</title><rect x="685.7" y="579.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.06%)</title><rect x="685.7" y="563.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="688.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (6 samples, 0.36%)</title><rect x="686.4" y="563.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="689.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="690.7" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (1 samples, 0.06%)</title><rect x="690.7" y="547.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="693.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (19 samples, 1.14%)</title><rect x="691.4" y="563.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (19 samples, 1.14%)</title><rect x="691.4" y="547.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="691.4" y="531.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="694.4" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.06%)</title><rect x="692.8" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="695.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.54%)</title><rect x="693.5" y="531.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (9 samples, 0.54%)</title><rect x="693.5" y="515.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (9 samples, 0.54%)</title><rect x="693.5" y="499.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (9 samples, 0.54%)</title><rect x="693.5" y="483.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.5" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (9 samples, 0.54%)</title><rect x="693.5" y="467.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="696.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.12%)</title><rect x="699.9" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="699.9" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (2 samples, 0.12%)</title><rect x="699.9" y="499.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2 samples, 0.12%)</title><rect x="699.9" y="483.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="702.9" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.30%)</title><rect x="701.3" y="531.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.3" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.30%)</title><rect x="701.3" y="515.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.3" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.30%)</title><rect x="701.3" y="499.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="704.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (20 samples, 1.20%)</title><rect x="704.8" y="579.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.06%)</title><rect x="704.8" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.06%)</title><rect x="704.8" y="547.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="707.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.24%)</title><rect x="705.5" y="563.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="708.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (15 samples, 0.90%)</title><rect x="708.4" y="563.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="708.4" y="547.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="708.4" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/1630776069.get$Lambda (1 samples, 0.06%)</title><rect x="708.4" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (1 samples, 0.06%)</title><rect x="708.4" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="711.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1106427060.get$Lambda (1 samples, 0.06%)</title><rect x="709.1" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$126 (1 samples, 0.06%)</title><rect x="709.1" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="712.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.78%)</title><rect x="709.8" y="547.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.78%)</title><rect x="709.8" y="531.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.42%)</title><rect x="709.8" y="515.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.36%)</title><rect x="714.7" y="515.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.36%)</title><rect x="714.7" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.36%)</title><rect x="714.7" y="483.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="717.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (34 samples, 2.04%)</title><rect x="719.0" y="643.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.0" y="654.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (4 samples, 0.24%)</title><rect x="719.0" y="627.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="722.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (30 samples, 1.80%)</title><rect x="721.8" y="627.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.8" y="638.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (28 samples, 1.68%)</title><rect x="721.8" y="611.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.8" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (28 samples, 1.68%)</title><rect x="721.8" y="595.0" width="19.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.8" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.24%)</title><rect x="721.8" y="579.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="724.8" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.12%)</title><rect x="724.7" y="579.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="727.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.24%)</title><rect x="726.1" y="579.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="729.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="728.9" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="728.9" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.get$Lambda (1 samples, 0.06%)</title><rect x="728.9" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.9" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.06%)</title><rect x="728.9" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="731.9" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.30%)</title><rect x="729.6" y="579.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.6" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (5 samples, 0.30%)</title><rect x="729.6" y="563.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="732.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.42%)</title><rect x="733.2" y="579.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1036414796.accept (7 samples, 0.42%)</title><rect x="733.2" y="563.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.42%)</title><rect x="733.2" y="547.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.18%)</title><rect x="733.2" y="531.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="733.2" y="515.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.get$Lambda (3 samples, 0.18%)</title><rect x="733.2" y="499.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.2" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.18%)</title><rect x="733.2" y="483.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="736.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.12%)</title><rect x="735.3" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/863717798.accept (2 samples, 0.12%)</title><rect x="735.3" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.12%)</title><rect x="735.3" y="499.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="735.3" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="735.3" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="735.3" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.12%)</title><rect x="735.3" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="735.3" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="735.3" y="403.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="738.3" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.06%)</title><rect x="736.7" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.06%)</title><rect x="736.7" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.06%)</title><rect x="736.7" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="736.7" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.7" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="736.7" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="739.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="737.4" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.06%)</title><rect x="737.4" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="740.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.30%)</title><rect x="738.1" y="579.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.30%)</title><rect x="738.1" y="563.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="741.1" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.12%)</title><rect x="741.7" y="611.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.7" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.12%)</title><rect x="741.7" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.7" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.12%)</title><rect x="741.7" y="579.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="744.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureHelper (13 samples, 0.78%)</title><rect x="743.1" y="643.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.12%)</title><rect x="743.1" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.12%)</title><rect x="743.1" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.06%)</title><rect x="743.1" y="595.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="746.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="743.8" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.06%)</title><rect x="743.8" y="579.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="746.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (11 samples, 0.66%)</title><rect x="744.5" y="627.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (3 samples, 0.18%)</title><rect x="744.5" y="611.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="747.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.06%)</title><rect x="746.6" y="611.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="749.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.36%)</title><rect x="747.3" y="611.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/1208407597.accept (6 samples, 0.36%)</title><rect x="747.3" y="595.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (6 samples, 0.36%)</title><rect x="747.3" y="579.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1119806249.linkToTargetMethod (3 samples, 0.18%)</title><rect x="747.3" y="563.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1786364562.invokeStatic (3 samples, 0.18%)</title><rect x="747.3" y="547.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$133/22197242.get$Lambda (3 samples, 0.18%)</title><rect x="747.3" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$133 (3 samples, 0.18%)</title><rect x="747.3" y="515.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="750.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.18%)</title><rect x="749.4" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.18%)</title><rect x="749.4" y="547.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.12%)</title><rect x="749.4" y="531.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="752.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="750.9" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="750.9" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.06%)</title><rect x="750.9" y="499.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="753.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="751.6" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.06%)</title><rect x="751.6" y="595.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="754.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (3 samples, 0.18%)</title><rect x="752.3" y="643.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="752.3" y="627.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="752.3" y="611.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$263/522784531.get$Lambda (2 samples, 0.12%)</title><rect x="752.3" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$263 (2 samples, 0.12%)</title><rect x="752.3" y="579.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="755.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.06%)</title><rect x="753.7" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.06%)</title><rect x="753.7" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.06%)</title><rect x="753.7" y="595.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="756.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (50 samples, 3.00%)</title><rect x="754.4" y="643.0" width="35.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.4" y="654.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.24%)</title><rect x="754.4" y="627.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (4 samples, 0.24%)</title><rect x="754.4" y="611.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.24%)</title><rect x="754.4" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.06%)</title><rect x="754.4" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="754.4" y="563.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="757.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.18%)</title><rect x="755.1" y="579.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.18%)</title><rect x="755.1" y="563.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.1" y="574.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="755.1" y="547.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="758.1" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (25 samples, 1.50%)</title><rect x="757.2" y="627.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.2" y="638.0"></text>
</g>
<g>
<title>java.net.URI (6 samples, 0.36%)</title><rect x="757.2" y="611.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="760.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (19 samples, 1.14%)</title><rect x="761.5" y="611.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.5" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (3 samples, 0.18%)</title><rect x="761.5" y="595.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="764.5" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (16 samples, 0.96%)</title><rect x="763.6" y="595.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.36%)</title><rect x="763.6" y="579.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.36%)</title><rect x="763.6" y="563.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.18%)</title><rect x="763.6" y="547.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="766.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.18%)</title><rect x="765.7" y="547.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.7" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="765.7" y="531.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="768.7" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (10 samples, 0.60%)</title><rect x="767.9" y="579.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.30%)</title><rect x="767.9" y="563.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.30%)</title><rect x="767.9" y="547.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.24%)</title><rect x="767.9" y="531.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="770.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="770.7" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.7" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="770.7" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="773.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (5 samples, 0.30%)</title><rect x="771.4" y="563.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="771.4" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="771.4" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="771.4" y="515.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="774.4" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.18%)</title><rect x="772.8" y="547.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.8" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.18%)</title><rect x="772.8" y="531.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.18%)</title><rect x="772.8" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.18%)</title><rect x="772.8" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="772.8" y="483.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="775.8" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="774.2" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.2" y="494.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="774.2" y="467.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="777.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (8 samples, 0.48%)</title><rect x="774.9" y="627.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1 samples, 0.06%)</title><rect x="774.9" y="611.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="777.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (7 samples, 0.42%)</title><rect x="775.7" y="611.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (1 samples, 0.06%)</title><rect x="775.7" y="595.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="778.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (6 samples, 0.36%)</title><rect x="776.4" y="595.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.36%)</title><rect x="776.4" y="579.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="779.4" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (4 samples, 0.24%)</title><rect x="780.6" y="627.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.6" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (4 samples, 0.24%)</title><rect x="780.6" y="611.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.6" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (4 samples, 0.24%)</title><rect x="780.6" y="595.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="783.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (9 samples, 0.54%)</title><rect x="783.4" y="627.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (9 samples, 0.54%)</title><rect x="783.4" y="611.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.54%)</title><rect x="783.4" y="595.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.4" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.24%)</title><rect x="783.4" y="579.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="786.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.12%)</title><rect x="786.3" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.3" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="786.3" y="563.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.18%)</title><rect x="787.7" y="579.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.18%)</title><rect x="787.7" y="563.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="790.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (40 samples, 2.40%)</title><rect x="789.8" y="659.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.8" y="670.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.78%)</title><rect x="789.8" y="643.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.78%)</title><rect x="789.8" y="627.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1284023277.get$Lambda (13 samples, 0.78%)</title><rect x="789.8" y="611.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$140 (13 samples, 0.78%)</title><rect x="789.8" y="595.0" width="9.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="792.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (27 samples, 1.62%)</title><rect x="799.0" y="643.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 1.62%)</title><rect x="799.0" y="627.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.84%)</title><rect x="799.0" y="611.0" width="9.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="802.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (13 samples, 0.78%)</title><rect x="808.9" y="611.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (13 samples, 0.78%)</title><rect x="808.9" y="595.0" width="9.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="811.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (7 samples, 0.42%)</title><rect x="818.2" y="659.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="818.2" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.06%)</title><rect x="818.2" y="627.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="821.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.36%)</title><rect x="818.9" y="643.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.36%)</title><rect x="818.9" y="627.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.36%)</title><rect x="818.9" y="611.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.12%)</title><rect x="818.9" y="595.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.9" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.12%)</title><rect x="818.9" y="579.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="821.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.24%)</title><rect x="820.3" y="595.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (4 samples, 0.24%)</title><rect x="820.3" y="579.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="823.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.84%)</title><rect x="823.1" y="707.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.84%)</title><rect x="823.1" y="691.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.84%)</title><rect x="823.1" y="675.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.30%)</title><rect x="823.1" y="659.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="826.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.54%)</title><rect x="826.7" y="659.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.7" y="670.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.54%)</title><rect x="826.7" y="643.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="829.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (72 samples, 4.32%)</title><rect x="833.0" y="739.0" width="51.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.0" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (11 samples, 0.66%)</title><rect x="833.0" y="723.0" width="7.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="836.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 1.44%)</title><rect x="840.8" y="723.0" width="17.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 1.44%)</title><rect x="840.8" y="707.0" width="17.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="843.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 2.22%)</title><rect x="857.8" y="723.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.8" y="734.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 2.22%)</title><rect x="857.8" y="707.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.8" y="718.0">o..</text>
</g>
<g>
<title>char[] (18 samples, 1.08%)</title><rect x="857.8" y="691.0" width="12.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="860.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.48%)</title><rect x="870.6" y="691.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="873.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.66%)</title><rect x="876.2" y="691.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="879.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.66%)</title><rect x="876.2" y="675.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.66%)</title><rect x="876.2" y="659.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.2" y="670.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.66%)</title><rect x="876.2" y="643.0" width="7.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="879.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (104 samples, 6.24%)</title><rect x="884.0" y="739.0" width="73.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.0" y="750.0">one/nio/..</text>
</g>
<g>
<title>byte[] (84 samples, 5.04%)</title><rect x="884.0" y="723.0" width="59.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="887.0" y="734.0">byte[]</text>
</g>
<g>
<title>byte[] (20 samples, 1.20%)</title><rect x="943.5" y="723.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.90%)</title><rect x="957.7" y="739.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.90%)</title><rect x="957.7" y="723.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.90%)</title><rect x="957.7" y="707.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.48%)</title><rect x="957.7" y="691.0" width="5.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="960.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.42%)</title><rect x="963.3" y="691.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.3" y="702.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.42%)</title><rect x="963.3" y="675.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="966.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 17.89%)</title><rect x="968.3" y="739.0" width="211.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.3" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 17.89%)</title><rect x="968.3" y="723.0" width="211.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.3" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (145 samples, 8.70%)</title><rect x="968.3" y="707.0" width="102.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="971.3" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (54 samples, 3.24%)</title><rect x="1071.0" y="707.0" width="38.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1074.0" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 5.94%)</title><rect x="1109.3" y="707.0" width="70.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.3" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 5.94%)</title><rect x="1109.3" y="691.0" width="70.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.3" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (99 samples, 5.94%)</title><rect x="1109.3" y="675.0" width="70.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.3" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (99 samples, 5.94%)</title><rect x="1109.3" y="659.0" width="70.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1112.3" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.90%)</title><rect x="1179.4" y="755.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (15 samples, 0.90%)</title><rect x="1179.4" y="739.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.90%)</title><rect x="1179.4" y="723.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.90%)</title><rect x="1179.4" y="707.0" width="10.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1182.4" y="718.0"></text>
</g>
</g>
</svg>
