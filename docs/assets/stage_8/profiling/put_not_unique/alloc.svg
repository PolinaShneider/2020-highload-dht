<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (5,217 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,756 samples, 52.83%)</title><rect x="10.2" y="835.0" width="623.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.2" y="846.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,756 samples, 52.83%)</title><rect x="10.2" y="819.0" width="623.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.2" y="830.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,756 samples, 52.83%)</title><rect x="10.2" y="803.0" width="623.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.2" y="814.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,152 samples, 41.25%)</title><rect x="10.2" y="787.0" width="486.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="798.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,275 samples, 24.44%)</title><rect x="10.2" y="771.0" width="288.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="782.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (529 samples, 10.14%)</title><rect x="10.2" y="755.0" width="119.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.2" y="766.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/161472302.apply (528 samples, 10.12%)</title><rect x="10.5" y="739.0" width="119.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.5" y="750.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (528 samples, 10.12%)</title><rect x="10.5" y="723.0" width="119.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.5" y="734.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (528 samples, 10.12%)</title><rect x="10.5" y="707.0" width="119.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7 samples, 0.13%)</title><rect x="10.5" y="691.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7 samples, 0.13%)</title><rect x="10.5" y="675.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.06%)</title><rect x="10.5" y="659.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="11.1" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="11.1" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.08%)</title><rect x="11.1" y="627.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (21 samples, 0.40%)</title><rect x="12.0" y="691.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (21 samples, 0.40%)</title><rect x="12.0" y="675.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (14 samples, 0.27%)</title><rect x="12.0" y="659.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="15.2" y="659.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="15.2" y="643.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="15.2" y="627.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="18.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (491 samples, 9.41%)</title><rect x="16.8" y="691.0" width="111.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.8" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (491 samples, 9.41%)</title><rect x="16.8" y="675.0" width="111.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.8" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (491 samples, 9.41%)</title><rect x="16.8" y="659.0" width="111.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.8" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="16.8" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="16.8" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (328 samples, 6.29%)</title><rect x="17.2" y="643.0" width="74.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.2" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (328 samples, 6.29%)</title><rect x="17.2" y="627.0" width="74.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.2" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (324 samples, 6.21%)</title><rect x="17.2" y="611.0" width="73.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.2" y="622.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$373/1682020352.apply (324 samples, 6.21%)</title><rect x="17.2" y="595.0" width="73.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.2" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (324 samples, 6.21%)</title><rect x="17.2" y="579.0" width="73.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (324 samples, 6.21%)</title><rect x="17.2" y="563.0" width="73.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.2" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2005123261.apply (324 samples, 6.21%)</title><rect x="17.2" y="547.0" width="73.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.2" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (324 samples, 6.21%)</title><rect x="17.2" y="531.0" width="73.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="542.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="17.2" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="17.2" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$430/1417692320.get$Lambda (2 samples, 0.04%)</title><rect x="17.2" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$430 (2 samples, 0.04%)</title><rect x="17.2" y="467.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (19 samples, 0.36%)</title><rect x="17.7" y="515.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (19 samples, 0.36%)</title><rect x="17.7" y="499.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (7 samples, 0.13%)</title><rect x="17.7" y="483.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.17%)</title><rect x="19.3" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$430/1417692320.apply (9 samples, 0.17%)</title><rect x="19.3" y="467.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.17%)</title><rect x="19.3" y="451.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.17%)</title><rect x="19.3" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/2009243314.apply (9 samples, 0.17%)</title><rect x="19.3" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 0.17%)</title><rect x="19.3" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8 samples, 0.15%)</title><rect x="19.5" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.04%)</title><rect x="19.5" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.04%)</title><rect x="19.5" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2 samples, 0.04%)</title><rect x="19.5" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$471/107687975.accept (2 samples, 0.04%)</title><rect x="19.5" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (2 samples, 0.04%)</title><rect x="19.5" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.04%)</title><rect x="19.5" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.04%)</title><rect x="19.5" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.04%)</title><rect x="19.5" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="19.5" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="19.5" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="19.5" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="19.5" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.04%)</title><rect x="19.5" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.04%)</title><rect x="19.5" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.04%)</title><rect x="19.5" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="19.5" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="19.5" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.04%)</title><rect x="19.5" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.04%)</title><rect x="19.5" y="83.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.04%)</title><rect x="19.5" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.04%)</title><rect x="19.5" y="51.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.04%)</title><rect x="19.5" y="35.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="22.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6 samples, 0.12%)</title><rect x="20.0" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (6 samples, 0.12%)</title><rect x="20.0" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.08%)</title><rect x="20.0" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (4 samples, 0.08%)</title><rect x="20.0" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (4 samples, 0.08%)</title><rect x="20.0" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (4 samples, 0.08%)</title><rect x="20.0" y="291.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="23.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2 samples, 0.04%)</title><rect x="20.9" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="20.9" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="20.9" y="307.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="23.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="21.3" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="21.3" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="21.3" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="24.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="22.0" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="22.0" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="22.2" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="22.2" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="22.2" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (300 samples, 5.75%)</title><rect x="22.7" y="515.0" width="67.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.7" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="22.7" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="22.7" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/2092258054.get$Lambda (2 samples, 0.04%)</title><rect x="22.7" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$426 (2 samples, 0.04%)</title><rect x="22.7" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (265 samples, 5.08%)</title><rect x="23.1" y="499.0" width="60.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.1" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (265 samples, 5.08%)</title><rect x="23.1" y="483.0" width="60.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.1" y="494.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (6 samples, 0.12%)</title><rect x="23.1" y="467.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="26.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/2092258054.apply (256 samples, 4.91%)</title><rect x="24.5" y="467.0" width="57.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.5" y="478.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (256 samples, 4.91%)</title><rect x="24.5" y="451.0" width="57.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.5" y="462.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.12%)</title><rect x="24.5" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.12%)</title><rect x="24.5" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$452/166605513.get$Lambda (6 samples, 0.12%)</title><rect x="24.5" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$452 (6 samples, 0.12%)</title><rect x="24.5" y="387.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="27.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.15%)</title><rect x="25.8" y="435.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.15%)</title><rect x="25.8" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.10%)</title><rect x="25.8" y="403.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="28.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="27.0" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="27.0" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="27.0" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="27.9" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="28.1" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.04%)</title><rect x="28.1" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.04%)</title><rect x="28.1" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.04%)</title><rect x="28.1" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.04%)</title><rect x="28.1" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.04%)</title><rect x="28.1" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="31.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (9 samples, 0.17%)</title><rect x="28.8" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9 samples, 0.17%)</title><rect x="28.8" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.04%)</title><rect x="28.8" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.04%)</title><rect x="28.8" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="28.8" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.04%)</title><rect x="28.8" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="31.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.13%)</title><rect x="29.2" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.13%)</title><rect x="29.2" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (4 samples, 0.08%)</title><rect x="29.2" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="32.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="30.1" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.06%)</title><rect x="30.1" y="355.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="33.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (228 samples, 4.37%)</title><rect x="30.8" y="435.0" width="51.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.8" y="446.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.10%)</title><rect x="30.8" y="419.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.08%)</title><rect x="31.9" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.9" y="430.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="31.9" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="34.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (21 samples, 0.40%)</title><rect x="32.8" y="419.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (21 samples, 0.40%)</title><rect x="32.8" y="403.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (21 samples, 0.40%)</title><rect x="32.8" y="387.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.8" y="398.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.40%)</title><rect x="32.8" y="371.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="35.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.12%)</title><rect x="37.6" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.6" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.12%)</title><rect x="37.6" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.6" y="414.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.12%)</title><rect x="37.6" y="387.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="40.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (24 samples, 0.46%)</title><rect x="39.0" y="419.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.46%)</title><rect x="39.0" y="403.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.46%)</title><rect x="39.0" y="387.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.0" y="398.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.46%)</title><rect x="39.0" y="371.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="42.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.06%)</title><rect x="44.4" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.06%)</title><rect x="44.4" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="47.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (138 samples, 2.65%)</title><rect x="45.1" y="419.0" width="31.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.1" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (65 samples, 1.25%)</title><rect x="45.3" y="403.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (30 samples, 0.58%)</title><rect x="45.3" y="387.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (30 samples, 0.58%)</title><rect x="45.3" y="371.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (30 samples, 0.58%)</title><rect x="45.3" y="355.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.58%)</title><rect x="45.3" y="339.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.3" y="350.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.58%)</title><rect x="45.3" y="323.0" width="6.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (6 samples, 0.12%)</title><rect x="52.1" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (6 samples, 0.12%)</title><rect x="52.1" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (6 samples, 0.12%)</title><rect x="52.1" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (6 samples, 0.12%)</title><rect x="52.1" y="339.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="55.1" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (8 samples, 0.15%)</title><rect x="53.4" y="387.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.4" y="398.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (3 samples, 0.06%)</title><rect x="53.4" y="371.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="56.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (5 samples, 0.10%)</title><rect x="54.1" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.1" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (5 samples, 0.10%)</title><rect x="54.1" y="355.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="57.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$457/904509051.test (21 samples, 0.40%)</title><rect x="55.2" y="387.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.2" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (21 samples, 0.40%)</title><rect x="55.2" y="371.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/812586739.test (21 samples, 0.40%)</title><rect x="55.2" y="355.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (21 samples, 0.40%)</title><rect x="55.2" y="339.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.2" y="350.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/1765795529.test (21 samples, 0.40%)</title><rect x="55.2" y="323.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (21 samples, 0.40%)</title><rect x="55.2" y="307.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1309238149.test (21 samples, 0.40%)</title><rect x="55.2" y="291.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (21 samples, 0.40%)</title><rect x="55.2" y="275.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.40%)</title><rect x="55.2" y="259.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.40%)</title><rect x="55.2" y="243.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.17%)</title><rect x="55.2" y="227.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.23%)</title><rect x="57.3" y="227.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.3" y="238.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.23%)</title><rect x="57.3" y="211.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (72 samples, 1.38%)</title><rect x="60.0" y="403.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (72 samples, 1.38%)</title><rect x="60.0" y="387.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (72 samples, 1.38%)</title><rect x="60.0" y="371.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.0" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (3 samples, 0.06%)</title><rect x="60.0" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="63.0" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="60.7" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="63.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.04%)</title><rect x="61.1" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.04%)</title><rect x="61.6" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="64.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="62.0" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="62.0" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.get$Lambda (4 samples, 0.08%)</title><rect x="62.0" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (4 samples, 0.08%)</title><rect x="62.0" y="307.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.06%)</title><rect x="62.9" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.9" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.06%)</title><rect x="62.9" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="65.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (55 samples, 1.05%)</title><rect x="63.6" y="355.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.accept (55 samples, 1.05%)</title><rect x="63.6" y="339.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (55 samples, 1.05%)</title><rect x="63.6" y="323.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.15%)</title><rect x="63.6" y="307.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.15%)</title><rect x="63.6" y="291.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.6" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.get$Lambda (8 samples, 0.15%)</title><rect x="63.6" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.6" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (8 samples, 0.15%)</title><rect x="63.6" y="259.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="66.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.08%)</title><rect x="65.4" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.accept (4 samples, 0.08%)</title><rect x="65.4" y="291.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="65.4" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="65.4" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="65.4" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="65.4" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="65.4" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="65.4" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.4" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.08%)</title><rect x="65.4" y="179.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="68.4" y="190.0"></text>
</g>
<g>
<title>java/util/List.copyOf (29 samples, 0.56%)</title><rect x="66.3" y="307.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.3" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (29 samples, 0.56%)</title><rect x="66.3" y="291.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.27%)</title><rect x="66.3" y="275.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.27%)</title><rect x="66.3" y="259.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.27%)</title><rect x="66.3" y="243.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="69.3" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (15 samples, 0.29%)</title><rect x="69.5" y="275.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (15 samples, 0.29%)</title><rect x="69.5" y="259.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="72.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.27%)</title><rect x="72.9" y="307.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.9" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (14 samples, 0.27%)</title><rect x="72.9" y="291.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.10%)</title><rect x="76.3" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.04%)</title><rect x="76.3" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.3" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="76.3" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="76.7" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.06%)</title><rect x="76.7" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1084502906.invoke (3 samples, 0.06%)</title><rect x="76.7" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="76.7" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="77.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.04%)</title><rect x="77.0" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="77.0" y="307.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="80.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.13%)</title><rect x="77.4" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.13%)</title><rect x="77.4" y="403.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="77.4" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.13%)</title><rect x="77.4" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1084502906.invoke (7 samples, 0.13%)</title><rect x="77.4" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.13%)</title><rect x="77.4" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.12%)</title><rect x="77.6" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.12%)</title><rect x="77.6" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="318.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.12%)</title><rect x="77.6" y="291.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="80.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (15 samples, 0.29%)</title><rect x="79.0" y="419.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.12%)</title><rect x="79.0" y="403.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="82.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.08%)</title><rect x="80.3" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.08%)</title><rect x="80.3" y="387.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="83.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.10%)</title><rect x="81.2" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.2" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.10%)</title><rect x="81.2" y="387.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="84.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="82.4" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="82.4" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="82.4" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (5 samples, 0.10%)</title><rect x="83.1" y="499.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (28 samples, 0.54%)</title><rect x="84.2" y="499.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="84.2" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="84.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2 samples, 0.04%)</title><rect x="84.6" y="483.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="87.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (4 samples, 0.08%)</title><rect x="85.1" y="483.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="88.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (3 samples, 0.06%)</title><rect x="86.0" y="483.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="89.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.13%)</title><rect x="86.7" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="86.7" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="86.7" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.13%)</title><rect x="86.7" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.13%)</title><rect x="86.7" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.13%)</title><rect x="86.7" y="403.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1353910922.run (7 samples, 0.13%)</title><rect x="86.7" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.13%)</title><rect x="86.7" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.13%)</title><rect x="86.7" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.04%)</title><rect x="86.9" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="89.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.08%)</title><rect x="87.4" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (4 samples, 0.08%)</title><rect x="87.4" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.06%)</title><rect x="87.6" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.06%)</title><rect x="87.6" y="291.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="90.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (9 samples, 0.17%)</title><rect x="88.3" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.04%)</title><rect x="88.3" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="91.3" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.08%)</title><rect x="88.7" y="467.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="89.6" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="89.6" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.6" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="89.6" y="435.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="90.5" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="90.5" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.08%)</title><rect x="90.5" y="579.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (160 samples, 3.07%)</title><rect x="91.7" y="643.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.7" y="654.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="91.7" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="91.7" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1857779860.get$Lambda (3 samples, 0.06%)</title><rect x="91.9" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$367 (3 samples, 0.06%)</title><rect x="91.9" y="579.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="94.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="92.6" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="92.6" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="93.0" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="93.0" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="93.0" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="93.0" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="93.0" y="563.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="96.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (152 samples, 2.91%)</title><rect x="93.5" y="627.0" width="34.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.5" y="638.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (146 samples, 2.80%)</title><rect x="93.7" y="611.0" width="33.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.7" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (146 samples, 2.80%)</title><rect x="93.7" y="595.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (142 samples, 2.72%)</title><rect x="93.7" y="579.0" width="32.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.7" y="590.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$221/322175225.apply (142 samples, 2.72%)</title><rect x="93.7" y="563.0" width="32.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.7" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (142 samples, 2.72%)</title><rect x="93.7" y="547.0" width="32.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.7" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (142 samples, 2.72%)</title><rect x="93.7" y="531.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.7" y="542.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (56 samples, 1.07%)</title><rect x="93.7" y="515.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (56 samples, 1.07%)</title><rect x="93.7" y="499.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (56 samples, 1.07%)</title><rect x="93.7" y="483.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$349/2083767881.apply (54 samples, 1.04%)</title><rect x="93.7" y="467.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (54 samples, 1.04%)</title><rect x="93.7" y="451.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (54 samples, 1.04%)</title><rect x="93.7" y="435.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (54 samples, 1.04%)</title><rect x="93.7" y="419.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (34 samples, 0.65%)</title><rect x="93.7" y="403.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (10 samples, 0.19%)</title><rect x="93.7" y="387.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="93.7" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="96.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="94.4" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.08%)</title><rect x="94.4" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.4" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="94.4" y="339.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="97.4" y="350.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.06%)</title><rect x="95.3" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.3" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="95.3" y="355.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (20 samples, 0.38%)</title><rect x="95.9" y="387.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (2 samples, 0.04%)</title><rect x="95.9" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (16 samples, 0.31%)</title><rect x="96.4" y="371.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (16 samples, 0.31%)</title><rect x="96.4" y="355.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/6444850.linkToTargetMethod (10 samples, 0.19%)</title><rect x="96.4" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.19%)</title><rect x="96.4" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1716093734.get$Lambda (10 samples, 0.19%)</title><rect x="96.4" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (10 samples, 0.19%)</title><rect x="96.4" y="291.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="99.4" y="302.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.12%)</title><rect x="98.7" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1716093734.run (6 samples, 0.12%)</title><rect x="98.7" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (6 samples, 0.12%)</title><rect x="98.7" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.7" y="318.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (6 samples, 0.12%)</title><rect x="98.7" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.12%)</title><rect x="98.7" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.12%)</title><rect x="98.7" y="259.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.04%)</title><rect x="100.0" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.04%)</title><rect x="100.0" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.0" y="366.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.04%)</title><rect x="100.0" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="103.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (4 samples, 0.08%)</title><rect x="100.5" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.5" y="398.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="100.5" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="103.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (20 samples, 0.38%)</title><rect x="101.4" y="403.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.4" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="101.4" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="104.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.17%)</title><rect x="102.1" y="387.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.17%)</title><rect x="102.1" y="371.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="105.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.15%)</title><rect x="104.1" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.15%)</title><rect x="104.1" y="371.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="105.9" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="105.9" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="105.9" y="435.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (86 samples, 1.65%)</title><rect x="106.4" y="515.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (8 samples, 0.15%)</title><rect x="106.4" y="499.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="109.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (75 samples, 1.44%)</title><rect x="108.2" y="499.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="108.6" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.6" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="108.6" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.6" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.04%)</title><rect x="108.6" y="451.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="111.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.04%)</title><rect x="109.1" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.04%)</title><rect x="109.1" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="112.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (9 samples, 0.17%)</title><rect x="109.5" y="483.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="112.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (9 samples, 0.17%)</title><rect x="111.8" y="483.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="114.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="113.8" y="483.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="116.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (18 samples, 0.35%)</title><rect x="115.4" y="483.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (3 samples, 0.06%)</title><rect x="115.4" y="467.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="118.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (4 samples, 0.08%)</title><rect x="116.3" y="467.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="119.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="117.4" y="467.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="120.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (7 samples, 0.13%)</title><rect x="117.9" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.04%)</title><rect x="118.1" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.04%)</title><rect x="118.1" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="121.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (4 samples, 0.08%)</title><rect x="118.6" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (2 samples, 0.04%)</title><rect x="118.8" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="121.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (12 samples, 0.23%)</title><rect x="119.5" y="483.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.06%)</title><rect x="119.9" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="122.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (6 samples, 0.12%)</title><rect x="120.8" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.06%)</title><rect x="121.5" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.04%)</title><rect x="121.7" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="124.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5 samples, 0.10%)</title><rect x="122.2" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (5 samples, 0.10%)</title><rect x="122.2" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (4 samples, 0.08%)</title><rect x="122.2" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="125.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (8 samples, 0.15%)</title><rect x="123.3" y="483.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/6444850.linkToTargetMethod (3 samples, 0.06%)</title><rect x="123.3" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="123.3" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$247/1766521203.get$Lambda (3 samples, 0.06%)</title><rect x="123.3" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$247 (3 samples, 0.06%)</title><rect x="123.3" y="419.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="126.3" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.10%)</title><rect x="124.0" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$247/1766521203.run (5 samples, 0.10%)</title><rect x="124.0" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.10%)</title><rect x="124.0" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.0" y="446.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.10%)</title><rect x="124.0" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.0" y="430.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (2 samples, 0.04%)</title><rect x="124.0" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="127.0" y="414.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.06%)</title><rect x="124.4" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.4" y="414.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="124.4" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.4" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="124.4" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.06%)</title><rect x="124.4" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="366.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (3 samples, 0.06%)</title><rect x="124.4" y="339.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="127.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.06%)</title><rect x="125.1" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="125.1" y="483.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="128.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="125.8" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="125.8" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.08%)</title><rect x="125.8" y="547.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="128.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.08%)</title><rect x="126.9" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.04%)</title><rect x="126.9" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.04%)</title><rect x="126.9" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2125650948.linkToTargetMethod (2 samples, 0.04%)</title><rect x="126.9" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/901903218.invoke (2 samples, 0.04%)</title><rect x="126.9" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/346726095.invoke (2 samples, 0.04%)</title><rect x="126.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="126.9" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="126.9" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.04%)</title><rect x="126.9" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.9" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="126.9" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="129.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="127.4" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="127.4" y="579.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="130.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3 samples, 0.06%)</title><rect x="127.8" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.06%)</title><rect x="127.8" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="127.8" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.8" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.06%)</title><rect x="127.8" y="643.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="130.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (6 samples, 0.12%)</title><rect x="128.5" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.5" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (6 samples, 0.12%)</title><rect x="128.5" y="675.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="131.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (746 samples, 14.30%)</title><rect x="129.9" y="755.0" width="168.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.9" y="766.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (746 samples, 14.30%)</title><rect x="129.9" y="739.0" width="168.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.9" y="750.0">java/util/concurrent/C..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$211/1094443150.accept (746 samples, 14.30%)</title><rect x="129.9" y="723.0" width="168.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.9" y="734.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (746 samples, 14.30%)</title><rect x="129.9" y="707.0" width="168.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.9" y="718.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (746 samples, 14.30%)</title><rect x="129.9" y="691.0" width="168.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.9" y="702.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (746 samples, 14.30%)</title><rect x="129.9" y="675.0" width="168.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.9" y="686.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (548 samples, 10.50%)</title><rect x="129.9" y="659.0" width="123.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.9" y="670.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (265 samples, 5.08%)</title><rect x="129.9" y="643.0" width="59.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="654.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (265 samples, 5.08%)</title><rect x="129.9" y="627.0" width="59.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.9" y="638.0">one/ni..</text>
</g>
<g>
<title>byte[] (265 samples, 5.08%)</title><rect x="129.9" y="611.0" width="59.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.9" y="622.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (283 samples, 5.42%)</title><rect x="189.8" y="643.0" width="64.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.8" y="654.0">one/nio..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (87 samples, 1.67%)</title><rect x="189.8" y="627.0" width="19.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="192.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (196 samples, 3.76%)</title><rect x="209.5" y="627.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.5" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (196 samples, 3.76%)</title><rect x="209.5" y="611.0" width="44.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.5" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (196 samples, 3.76%)</title><rect x="209.5" y="595.0" width="44.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.5" y="606.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (196 samples, 3.76%)</title><rect x="209.5" y="579.0" width="44.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.5" y="590.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (196 samples, 3.76%)</title><rect x="209.5" y="563.0" width="44.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="212.5" y="574.0">java..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (198 samples, 3.80%)</title><rect x="253.8" y="659.0" width="44.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.8" y="670.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (198 samples, 3.80%)</title><rect x="253.8" y="643.0" width="44.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.8" y="654.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (198 samples, 3.80%)</title><rect x="253.8" y="627.0" width="44.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.8" y="638.0">java..</text>
</g>
<g>
<title>java.lang.String (76 samples, 1.46%)</title><rect x="253.8" y="611.0" width="17.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="256.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 2.34%)</title><rect x="271.0" y="611.0" width="27.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.0" y="622.0">j..</text>
</g>
<g>
<title>byte[] (122 samples, 2.34%)</title><rect x="271.0" y="595.0" width="27.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="274.0" y="606.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$120/1168336161.get (877 samples, 16.81%)</title><rect x="298.6" y="771.0" width="198.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.6" y="782.0">ru/mail/polis/service/Repl..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (877 samples, 16.81%)</title><rect x="298.6" y="755.0" width="198.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.6" y="766.0">ru/mail/polis/service/Repl..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (119 samples, 2.28%)</title><rect x="298.6" y="739.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.6" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (119 samples, 2.28%)</title><rect x="298.6" y="723.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.6" y="734.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (119 samples, 2.28%)</title><rect x="298.6" y="707.0" width="26.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="301.6" y="718.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.50%)</title><rect x="325.5" y="739.0" width="5.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="328.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (170 samples, 3.26%)</title><rect x="331.4" y="739.0" width="38.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.4" y="750.0">one..</text>
</g>
<g>
<title>byte[] (63 samples, 1.21%)</title><rect x="331.4" y="723.0" width="14.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="334.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (38 samples, 0.73%)</title><rect x="345.7" y="723.0" width="8.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="348.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 1.32%)</title><rect x="354.3" y="723.0" width="15.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="357.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (415 samples, 7.95%)</title><rect x="369.9" y="739.0" width="93.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.9" y="750.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (331 samples, 6.34%)</title><rect x="369.9" y="723.0" width="74.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.9" y="734.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (331 samples, 6.34%)</title><rect x="369.9" y="707.0" width="74.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.9" y="718.0">java/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (331 samples, 6.34%)</title><rect x="369.9" y="691.0" width="74.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.9" y="702.0">java/nio..</text>
</g>
<g>
<title>byte[] (243 samples, 4.66%)</title><rect x="369.9" y="675.0" width="54.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="372.9" y="686.0">byte[]</text>
</g>
<g>
<title>byte[] (88 samples, 1.69%)</title><rect x="424.8" y="675.0" width="19.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (84 samples, 1.61%)</title><rect x="444.7" y="723.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.7" y="734.0"></text>
</g>
<g>
<title>byte[] (84 samples, 1.61%)</title><rect x="444.7" y="707.0" width="19.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="447.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (147 samples, 2.82%)</title><rect x="463.7" y="739.0" width="33.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.7" y="750.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (147 samples, 2.82%)</title><rect x="463.7" y="723.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.7" y="734.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (147 samples, 2.82%)</title><rect x="463.7" y="707.0" width="33.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.7" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (147 samples, 2.82%)</title><rect x="463.7" y="691.0" width="33.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.7" y="702.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (147 samples, 2.82%)</title><rect x="463.7" y="675.0" width="33.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.7" y="686.0">ja..</text>
</g>
<g>
<title>byte[] (147 samples, 2.82%)</title><rect x="463.7" y="659.0" width="33.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="466.7" y="670.0">by..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36 samples, 0.69%)</title><rect x="497.0" y="787.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.61%)</title><rect x="497.0" y="771.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.13%)</title><rect x="497.0" y="755.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.13%)</title><rect x="497.0" y="739.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.13%)</title><rect x="497.0" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.13%)</title><rect x="497.0" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$211/1094443150.accept (7 samples, 0.13%)</title><rect x="497.0" y="691.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (7 samples, 0.13%)</title><rect x="497.0" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (7 samples, 0.13%)</title><rect x="497.0" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.13%)</title><rect x="497.0" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.13%)</title><rect x="497.0" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.08%)</title><rect x="497.0" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.08%)</title><rect x="497.0" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.0" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="497.0" y="579.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="500.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="497.9" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="498.1" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.04%)</title><rect x="498.1" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.04%)</title><rect x="498.1" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="498.1" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="498.1" y="531.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$185/2080731899.apply (12 samples, 0.23%)</title><rect x="498.6" y="755.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$2 (12 samples, 0.23%)</title><rect x="498.6" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.6" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.10%)</title><rect x="498.6" y="723.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.13%)</title><rect x="499.7" y="723.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.10%)</title><rect x="500.1" y="707.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="503.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$208/1371486550.apply (13 samples, 0.25%)</title><rect x="501.3" y="755.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$futureHelper$3 (13 samples, 0.25%)</title><rect x="501.3" y="739.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.08%)</title><rect x="501.3" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (2 samples, 0.04%)</title><rect x="501.3" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (2 samples, 0.04%)</title><rect x="501.3" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.3" y="702.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (2 samples, 0.04%)</title><rect x="501.3" y="675.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="504.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="501.7" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.7" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.04%)</title><rect x="501.7" y="691.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="504.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.12%)</title><rect x="502.2" y="723.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.12%)</title><rect x="502.2" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.12%)</title><rect x="502.2" y="691.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/79290965.get (2 samples, 0.04%)</title><rect x="502.2" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.2" y="686.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.04%)</title><rect x="502.2" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="505.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (4 samples, 0.08%)</title><rect x="502.6" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (4 samples, 0.08%)</title><rect x="502.6" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.6" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.08%)</title><rect x="502.6" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.6" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.08%)</title><rect x="502.6" y="627.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.06%)</title><rect x="503.5" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.5" y="734.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="503.5" y="707.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="506.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.08%)</title><rect x="504.2" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.08%)</title><rect x="504.2" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$205/841366861.accept (4 samples, 0.08%)</title><rect x="504.2" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (4 samples, 0.08%)</title><rect x="504.2" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.08%)</title><rect x="504.2" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="504.2" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.2" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.08%)</title><rect x="504.2" y="675.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="507.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (116 samples, 2.22%)</title><rect x="505.1" y="787.0" width="26.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.1" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (115 samples, 2.20%)</title><rect x="505.1" y="771.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.1" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (114 samples, 2.19%)</title><rect x="505.1" y="755.0" width="25.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.1" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (114 samples, 2.19%)</title><rect x="505.1" y="739.0" width="25.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.1" y="750.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (114 samples, 2.19%)</title><rect x="505.1" y="723.0" width="25.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="508.1" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$453/1438830434.run (130 samples, 2.49%)</title><rect x="531.4" y="787.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.4" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (130 samples, 2.49%)</title><rect x="531.4" y="771.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (130 samples, 2.49%)</title><rect x="531.4" y="755.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (130 samples, 2.49%)</title><rect x="531.4" y="739.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.4" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 2.49%)</title><rect x="531.4" y="723.0" width="29.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 2.49%)</title><rect x="531.4" y="707.0" width="29.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (130 samples, 2.49%)</title><rect x="531.4" y="691.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (130 samples, 2.49%)</title><rect x="531.4" y="675.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.4" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (130 samples, 2.49%)</title><rect x="531.4" y="659.0" width="29.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.4" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (130 samples, 2.49%)</title><rect x="531.4" y="643.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.4" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (130 samples, 2.49%)</title><rect x="531.4" y="627.0" width="29.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.4" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (122 samples, 2.34%)</title><rect x="531.4" y="611.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.10%)</title><rect x="531.4" y="595.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.10%)</title><rect x="531.4" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$488/1272520209.get$Lambda (4 samples, 0.08%)</title><rect x="531.6" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$488 (4 samples, 0.08%)</title><rect x="531.6" y="547.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="534.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (117 samples, 2.24%)</title><rect x="532.5" y="595.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.5" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (9 samples, 0.17%)</title><rect x="532.5" y="579.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="535.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (108 samples, 2.07%)</title><rect x="534.5" y="579.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.5" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (108 samples, 2.07%)</title><rect x="534.5" y="563.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.5" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 2.07%)</title><rect x="534.5" y="547.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.5" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 0.42%)</title><rect x="534.5" y="531.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.10%)</title><rect x="534.5" y="515.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="537.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$475/89644160.apply (17 samples, 0.33%)</title><rect x="535.7" y="515.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (17 samples, 0.33%)</title><rect x="535.7" y="499.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (17 samples, 0.33%)</title><rect x="535.7" y="483.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.7" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.10%)</title><rect x="535.7" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.7" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.10%)</title><rect x="535.7" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.7" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.10%)</title><rect x="535.7" y="435.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="538.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (12 samples, 0.23%)</title><rect x="536.8" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="536.8" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="536.8" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$493/1518169066.get$Lambda (3 samples, 0.06%)</title><rect x="536.8" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$493 (3 samples, 0.06%)</title><rect x="536.8" y="403.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="539.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (9 samples, 0.17%)</title><rect x="537.5" y="451.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9 samples, 0.17%)</title><rect x="537.5" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (7 samples, 0.13%)</title><rect x="537.5" y="419.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="540.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="539.0" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="539.0" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="539.0" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="542.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (86 samples, 1.65%)</title><rect x="539.5" y="531.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (86 samples, 1.65%)</title><rect x="539.5" y="515.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$430/1417692320.apply (86 samples, 1.65%)</title><rect x="539.5" y="499.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (86 samples, 1.65%)</title><rect x="539.5" y="483.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (86 samples, 1.65%)</title><rect x="539.5" y="467.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$216/2009243314.apply (86 samples, 1.65%)</title><rect x="539.5" y="451.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (86 samples, 1.65%)</title><rect x="539.5" y="435.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.13%)</title><rect x="539.7" y="419.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.13%)</title><rect x="539.7" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.06%)</title><rect x="539.7" y="387.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="542.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="540.4" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.08%)</title><rect x="540.4" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.08%)</title><rect x="540.4" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="543.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (8 samples, 0.15%)</title><rect x="541.3" y="419.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.13%)</title><rect x="541.5" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.13%)</title><rect x="541.5" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.12%)</title><rect x="541.5" y="371.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="544.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (70 samples, 1.34%)</title><rect x="543.1" y="419.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (19 samples, 0.36%)</title><rect x="543.1" y="403.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (19 samples, 0.36%)</title><rect x="543.1" y="387.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (19 samples, 0.36%)</title><rect x="543.1" y="371.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$467/992259628.accept (4 samples, 0.08%)</title><rect x="543.1" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (4 samples, 0.08%)</title><rect x="543.1" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (4 samples, 0.08%)</title><rect x="543.1" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.08%)</title><rect x="543.1" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.08%)</title><rect x="543.1" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.06%)</title><rect x="543.1" y="275.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="546.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$471/107687975.accept (14 samples, 0.27%)</title><rect x="544.0" y="355.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (14 samples, 0.27%)</title><rect x="544.0" y="339.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (14 samples, 0.27%)</title><rect x="544.0" y="323.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (14 samples, 0.27%)</title><rect x="544.0" y="307.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (14 samples, 0.27%)</title><rect x="544.0" y="291.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.27%)</title><rect x="544.0" y="275.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.27%)</title><rect x="544.0" y="259.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.27%)</title><rect x="544.0" y="243.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.27%)</title><rect x="544.0" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (14 samples, 0.27%)</title><rect x="544.0" y="211.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.04%)</title><rect x="544.0" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="544.0" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (12 samples, 0.23%)</title><rect x="544.5" y="195.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (12 samples, 0.23%)</title><rect x="544.5" y="179.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.5" y="190.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.06%)</title><rect x="544.5" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.5" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.06%)</title><rect x="544.5" y="147.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="547.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.17%)</title><rect x="545.2" y="163.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (6 samples, 0.12%)</title><rect x="545.2" y="147.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="548.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="546.5" y="147.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.06%)</title><rect x="546.5" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.06%)</title><rect x="546.5" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.06%)</title><rect x="546.5" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.06%)</title><rect x="546.5" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.06%)</title><rect x="546.5" y="67.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="549.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (51 samples, 0.98%)</title><rect x="547.4" y="403.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (3 samples, 0.06%)</title><rect x="547.4" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="550.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (47 samples, 0.90%)</title><rect x="548.3" y="387.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (15 samples, 0.29%)</title><rect x="548.5" y="371.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.13%)</title><rect x="548.5" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.5" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (7 samples, 0.13%)</title><rect x="548.5" y="339.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="551.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (3 samples, 0.06%)</title><rect x="550.1" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="553.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (5 samples, 0.10%)</title><rect x="550.8" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.04%)</title><rect x="551.5" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (31 samples, 0.59%)</title><rect x="551.9" y="371.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="551.9" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="554.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.52%)</title><rect x="552.4" y="355.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="552.4" y="339.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="555.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.44%)</title><rect x="553.3" y="339.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.3" y="350.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.44%)</title><rect x="553.3" y="323.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="556.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="558.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="558.5" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="558.5" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="558.5" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="558.5" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.5" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="558.5" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="561.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (8 samples, 0.15%)</title><rect x="558.9" y="611.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (8 samples, 0.15%)</title><rect x="558.9" y="595.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (8 samples, 0.15%)</title><rect x="558.9" y="579.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (8 samples, 0.15%)</title><rect x="558.9" y="563.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (8 samples, 0.15%)</title><rect x="558.9" y="547.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.15%)</title><rect x="558.9" y="531.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.9" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (3 samples, 0.06%)</title><rect x="558.9" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.9" y="526.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (3 samples, 0.06%)</title><rect x="558.9" y="499.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="561.9" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.10%)</title><rect x="559.6" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.6" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (5 samples, 0.10%)</title><rect x="559.6" y="499.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="562.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (322 samples, 6.17%)</title><rect x="560.8" y="787.0" width="72.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.8" y="798.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (322 samples, 6.17%)</title><rect x="560.8" y="771.0" width="72.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.8" y="782.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (268 samples, 5.14%)</title><rect x="560.8" y="755.0" width="60.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.8" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1353910922.run (268 samples, 5.14%)</title><rect x="560.8" y="739.0" width="60.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.8" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (268 samples, 5.14%)</title><rect x="560.8" y="723.0" width="60.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4 samples, 0.08%)</title><rect x="560.8" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (4 samples, 0.08%)</title><rect x="560.8" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.08%)</title><rect x="560.8" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.08%)</title><rect x="560.8" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/929383713.linkToTargetMethod (3 samples, 0.06%)</title><rect x="560.8" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2033968586.invoke (3 samples, 0.06%)</title><rect x="560.8" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="560.8" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.06%)</title><rect x="560.8" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.06%)</title><rect x="560.8" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.8" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="560.8" y="563.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="563.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (264 samples, 5.06%)</title><rect x="561.7" y="707.0" width="59.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (264 samples, 5.06%)</title><rect x="561.7" y="691.0" width="59.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.7" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (264 samples, 5.06%)</title><rect x="561.7" y="675.0" width="59.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.7" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (264 samples, 5.06%)</title><rect x="561.7" y="659.0" width="59.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.7" y="670.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (125 samples, 2.40%)</title><rect x="561.7" y="643.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (125 samples, 2.40%)</title><rect x="561.7" y="627.0" width="28.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (125 samples, 2.40%)</title><rect x="561.7" y="611.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.7" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (125 samples, 2.40%)</title><rect x="561.7" y="595.0" width="28.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.7" y="606.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (125 samples, 2.40%)</title><rect x="561.7" y="579.0" width="28.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.7" y="590.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (125 samples, 2.40%)</title><rect x="561.7" y="563.0" width="28.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (125 samples, 2.40%)</title><rect x="561.7" y="547.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (123 samples, 2.36%)</title><rect x="561.7" y="531.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (123 samples, 2.36%)</title><rect x="561.7" y="515.0" width="27.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (122 samples, 2.34%)</title><rect x="561.7" y="499.0" width="27.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.7" y="510.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (4 samples, 0.08%)</title><rect x="561.7" y="483.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="564.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$479/2115062503.apply (2 samples, 0.04%)</title><rect x="562.6" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (2 samples, 0.04%)</title><rect x="562.6" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (2 samples, 0.04%)</title><rect x="562.6" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="562.6" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="562.6" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="565.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1125876473.apply (113 samples, 2.17%)</title><rect x="563.0" y="483.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.0" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (113 samples, 2.17%)</title><rect x="563.0" y="467.0" width="25.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.0" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.06%)</title><rect x="563.2" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="563.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.06%)</title><rect x="563.2" y="419.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="566.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (109 samples, 2.09%)</title><rect x="563.9" y="451.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.9" y="462.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="563.9" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="563.9" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$566/1601643625.get$Lambda (2 samples, 0.04%)</title><rect x="563.9" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$566 (2 samples, 0.04%)</title><rect x="563.9" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="564.4" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.08%)</title><rect x="564.4" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.06%)</title><rect x="564.4" y="403.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="567.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (103 samples, 1.97%)</title><rect x="565.3" y="435.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (99 samples, 1.90%)</title><rect x="565.3" y="419.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.3" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="565.3" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="565.3" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$555/1771130142.get$Lambda (2 samples, 0.04%)</title><rect x="565.3" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$555 (2 samples, 0.04%)</title><rect x="565.3" y="355.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="568.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$562/1499834081.get$Lambda (2 samples, 0.04%)</title><rect x="565.7" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$562 (2 samples, 0.04%)</title><rect x="565.7" y="355.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="568.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1789440517.linkToTargetMethod (5 samples, 0.10%)</title><rect x="566.2" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/299485304.invokeStatic (5 samples, 0.10%)</title><rect x="566.2" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$517/2017880877.get$Lambda (5 samples, 0.10%)</title><rect x="566.2" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$517 (5 samples, 0.10%)</title><rect x="566.2" y="355.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="569.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (23 samples, 0.44%)</title><rect x="567.3" y="403.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.15%)</title><rect x="567.3" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.3" y="398.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.08%)</title><rect x="567.3" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.3" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.08%)</title><rect x="567.3" y="355.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="570.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.08%)</title><rect x="568.2" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.2" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.08%)</title><rect x="568.2" y="355.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="571.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.13%)</title><rect x="569.1" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.13%)</title><rect x="569.1" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.13%)</title><rect x="569.1" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="569.1" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.06%)</title><rect x="569.1" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (3 samples, 0.06%)</title><rect x="569.1" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.1" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (3 samples, 0.06%)</title><rect x="569.1" y="291.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="572.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.06%)</title><rect x="570.0" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.06%)</title><rect x="570.0" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="334.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (3 samples, 0.06%)</title><rect x="570.0" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.0" y="318.0"></text>
</g>
<g>
<title>java.util.OptionalLong (3 samples, 0.06%)</title><rect x="570.0" y="291.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (8 samples, 0.15%)</title><rect x="570.7" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (8 samples, 0.15%)</title><rect x="570.7" y="371.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="573.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.23%)</title><rect x="572.5" y="403.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.08%)</title><rect x="572.5" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.06%)</title><rect x="572.5" y="371.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="575.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.15%)</title><rect x="573.4" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.15%)</title><rect x="573.4" y="371.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.06%)</title><rect x="573.4" y="355.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="576.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.10%)</title><rect x="574.1" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.10%)</title><rect x="574.1" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.10%)</title><rect x="574.1" y="323.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="577.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (2 samples, 0.04%)</title><rect x="575.2" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="578.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (4 samples, 0.08%)</title><rect x="575.7" y="403.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="578.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.08%)</title><rect x="576.6" y="403.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="579.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (44 samples, 0.84%)</title><rect x="577.7" y="403.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$517/2017880877.run (44 samples, 0.84%)</title><rect x="577.7" y="387.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (44 samples, 0.84%)</title><rect x="577.7" y="371.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.10%)</title><rect x="577.7" y="355.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.10%)</title><rect x="577.7" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$531/1227099400.get$Lambda (2 samples, 0.04%)</title><rect x="577.7" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$531 (2 samples, 0.04%)</title><rect x="577.7" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="580.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$543/609521131.get$Lambda (3 samples, 0.06%)</title><rect x="578.2" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$543 (3 samples, 0.06%)</title><rect x="578.2" y="307.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="581.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="578.9" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.08%)</title><rect x="578.9" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.08%)</title><rect x="578.9" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="581.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (5 samples, 0.10%)</title><rect x="580.0" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.10%)</title><rect x="580.0" y="339.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="583.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (9 samples, 0.17%)</title><rect x="581.1" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (9 samples, 0.17%)</title><rect x="581.1" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.17%)</title><rect x="581.1" y="323.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.17%)</title><rect x="581.1" y="307.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.17%)</title><rect x="581.1" y="291.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.08%)</title><rect x="581.1" y="275.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="584.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.10%)</title><rect x="582.0" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.10%)</title><rect x="582.0" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.10%)</title><rect x="582.0" y="243.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="585.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (5 samples, 0.10%)</title><rect x="583.1" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.10%)</title><rect x="583.1" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/146305349.invoke (5 samples, 0.10%)</title><rect x="583.1" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.10%)</title><rect x="583.1" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.04%)</title><rect x="583.1" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="583.1" y="275.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="586.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.06%)</title><rect x="583.6" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.06%)</title><rect x="583.6" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.6" y="286.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="583.6" y="259.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="586.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (15 samples, 0.29%)</title><rect x="584.3" y="355.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (3 samples, 0.06%)</title><rect x="584.3" y="339.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="587.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (12 samples, 0.23%)</title><rect x="585.0" y="339.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.23%)</title><rect x="585.0" y="323.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/146305349.invoke (12 samples, 0.23%)</title><rect x="585.0" y="307.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.23%)</title><rect x="585.0" y="291.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.21%)</title><rect x="585.2" y="275.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.21%)</title><rect x="585.2" y="259.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.2" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.21%)</title><rect x="585.2" y="243.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="588.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/PutBodyHandler.apply (4 samples, 0.08%)</title><rect x="587.7" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (4 samples, 0.08%)</title><rect x="587.7" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (3 samples, 0.06%)</title><rect x="587.9" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="588.1" y="371.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="591.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$433/369028509.apply (3 samples, 0.06%)</title><rect x="588.6" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.06%)</title><rect x="588.6" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.04%)</title><rect x="588.6" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.04%)</title><rect x="588.6" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="588.6" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.04%)</title><rect x="588.6" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="591.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$493/1518169066.apply (2 samples, 0.04%)</title><rect x="589.5" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.04%)</title><rect x="589.5" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (2 samples, 0.04%)</title><rect x="589.5" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="592.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (139 samples, 2.66%)</title><rect x="589.9" y="643.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.9" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.15%)</title><rect x="589.9" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.15%)</title><rect x="589.9" y="611.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.9" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.15%)</title><rect x="589.9" y="595.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.9" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.15%)</title><rect x="589.9" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.15%)</title><rect x="589.9" y="563.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.9" y="574.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="589.9" y="547.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="592.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (7 samples, 0.13%)</title><rect x="591.7" y="627.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.13%)</title><rect x="591.7" y="611.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.7" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.13%)</title><rect x="591.7" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.7" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.13%)</title><rect x="591.7" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.13%)</title><rect x="591.7" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="591.7" y="547.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.12%)</title><rect x="593.3" y="627.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="593.3" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="593.3" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="593.3" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.3" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="593.3" y="563.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="596.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="593.8" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="593.8" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.8" y="606.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="593.8" y="579.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="596.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (43 samples, 0.82%)</title><rect x="594.7" y="627.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (43 samples, 0.82%)</title><rect x="594.7" y="611.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (43 samples, 0.82%)</title><rect x="594.7" y="595.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.7" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.04%)</title><rect x="594.7" y="579.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="597.7" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="595.1" y="579.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="598.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.10%)</title><rect x="595.8" y="579.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="598.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="596.9" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="596.9" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.get$Lambda (3 samples, 0.06%)</title><rect x="596.9" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.9" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (3 samples, 0.06%)</title><rect x="596.9" y="531.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="599.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (26 samples, 0.50%)</title><rect x="597.9" y="579.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.accept (26 samples, 0.50%)</title><rect x="597.9" y="563.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.50%)</title><rect x="597.9" y="547.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.12%)</title><rect x="597.9" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.12%)</title><rect x="597.9" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.get$Lambda (6 samples, 0.12%)</title><rect x="597.9" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.9" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (6 samples, 0.12%)</title><rect x="597.9" y="483.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="600.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.06%)</title><rect x="599.2" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.accept (3 samples, 0.06%)</title><rect x="599.2" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.06%)</title><rect x="599.2" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="599.2" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="599.2" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="599.2" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="599.2" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="599.2" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="599.2" y="403.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="602.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (10 samples, 0.19%)</title><rect x="599.9" y="531.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.9" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (10 samples, 0.19%)</title><rect x="599.9" y="515.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.12%)</title><rect x="599.9" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.12%)</title><rect x="599.9" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.12%)</title><rect x="599.9" y="467.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="602.9" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.08%)</title><rect x="601.2" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.2" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.08%)</title><rect x="601.2" y="483.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="604.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.13%)</title><rect x="602.1" y="531.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.13%)</title><rect x="602.1" y="515.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="605.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.06%)</title><rect x="603.7" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.06%)</title><rect x="603.7" y="563.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="606.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (75 samples, 1.44%)</title><rect x="604.4" y="627.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.4" y="638.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.08%)</title><rect x="604.4" y="611.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="607.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.19%)</title><rect x="605.3" y="611.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.3" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.19%)</title><rect x="605.3" y="595.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.3" y="606.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="605.3" y="579.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="608.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.31%)</title><rect x="607.6" y="611.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.31%)</title><rect x="607.6" y="595.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="607.6" y="579.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="610.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="609.2" y="579.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="590.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="609.2" y="563.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="612.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (45 samples, 0.86%)</title><rect x="611.2" y="611.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.29%)</title><rect x="611.2" y="595.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.29%)</title><rect x="611.2" y="579.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.12%)</title><rect x="611.2" y="563.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="614.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="612.6" y="563.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.6" y="574.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="612.6" y="547.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="615.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.08%)</title><rect x="614.6" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.08%)</title><rect x="614.6" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="614.6" y="563.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="617.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.10%)</title><rect x="615.5" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.10%)</title><rect x="615.5" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.10%)</title><rect x="615.5" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.08%)</title><rect x="615.5" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.10%)</title><rect x="616.6" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.10%)</title><rect x="616.6" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.10%)</title><rect x="616.6" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.10%)</title><rect x="616.6" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.10%)</title><rect x="616.6" y="531.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.10%)</title><rect x="616.6" y="515.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="619.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (16 samples, 0.31%)</title><rect x="617.8" y="595.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.13%)</title><rect x="617.8" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.8" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.13%)</title><rect x="617.8" y="563.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="620.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.12%)</title><rect x="619.3" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.3" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (6 samples, 0.12%)</title><rect x="619.3" y="563.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="622.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$501/1158832366.apply (3 samples, 0.06%)</title><rect x="620.7" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.06%)</title><rect x="620.7" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.7" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="620.7" y="547.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="623.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (54 samples, 1.04%)</title><rect x="621.4" y="755.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (54 samples, 1.04%)</title><rect x="621.4" y="739.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (54 samples, 1.04%)</title><rect x="621.4" y="723.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1353910922.run (54 samples, 1.04%)</title><rect x="621.4" y="707.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (54 samples, 1.04%)</title><rect x="621.4" y="691.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (54 samples, 1.04%)</title><rect x="621.4" y="675.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (5 samples, 0.10%)</title><rect x="621.6" y="659.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="624.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (6 samples, 0.12%)</title><rect x="622.7" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (6 samples, 0.12%)</title><rect x="622.7" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.06%)</title><rect x="622.7" y="627.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.06%)</title><rect x="623.4" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.06%)</title><rect x="623.4" y="611.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="626.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (42 samples, 0.81%)</title><rect x="624.1" y="659.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (42 samples, 0.81%)</title><rect x="624.1" y="643.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$525/1690521564.run (36 samples, 0.69%)</title><rect x="624.1" y="627.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (36 samples, 0.69%)</title><rect x="624.1" y="611.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (36 samples, 0.69%)</title><rect x="624.1" y="595.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.19%)</title><rect x="624.1" y="579.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.12%)</title><rect x="624.1" y="563.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.1" y="574.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.06%)</title><rect x="624.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.06%)</title><rect x="624.1" y="531.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.06%)</title><rect x="624.8" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.06%)</title><rect x="624.8" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="627.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.08%)</title><rect x="625.4" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="625.4" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.08%)</title><rect x="625.4" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/79290965.get (2 samples, 0.04%)</title><rect x="625.4" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.4" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.04%)</title><rect x="625.4" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.04%)</title><rect x="625.9" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.04%)</title><rect x="625.9" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.04%)</title><rect x="625.9" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.04%)</title><rect x="625.9" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 0.50%)</title><rect x="626.4" y="579.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (25 samples, 0.48%)</title><rect x="626.6" y="563.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (12 samples, 0.23%)</title><rect x="626.6" y="547.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.08%)</title><rect x="626.6" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.08%)</title><rect x="626.6" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.08%)</title><rect x="626.6" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.08%)</title><rect x="626.6" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.6" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.08%)</title><rect x="626.6" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.6" y="478.0"></text>
</g>
<g>
<title>java.time.Instant (4 samples, 0.08%)</title><rect x="626.6" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="629.6" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.06%)</title><rect x="627.5" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.06%)</title><rect x="627.5" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="627.5" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.06%)</title><rect x="627.5" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.06%)</title><rect x="627.5" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.5" y="478.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.06%)</title><rect x="627.5" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="630.5" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="628.2" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.2" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="628.2" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.2" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.04%)</title><rect x="628.2" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="631.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="628.6" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.6" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="628.6" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.6" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.04%)</title><rect x="628.6" y="499.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="631.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.08%)</title><rect x="629.3" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="629.3" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.08%)</title><rect x="629.3" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.08%)</title><rect x="629.3" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.08%)</title><rect x="629.3" y="483.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="632.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.17%)</title><rect x="630.2" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (2 samples, 0.04%)</title><rect x="630.2" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="633.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.13%)</title><rect x="630.6" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.13%)</title><rect x="630.6" y="515.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.13%)</title><rect x="630.6" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (4 samples, 0.08%)</title><rect x="630.6" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="633.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="631.6" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.06%)</title><rect x="631.6" y="467.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="634.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (6 samples, 0.12%)</title><rect x="632.2" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (6 samples, 0.12%)</title><rect x="632.2" y="611.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (6 samples, 0.12%)</title><rect x="632.2" y="595.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.12%)</title><rect x="632.2" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.12%)</title><rect x="632.2" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.12%)</title><rect x="632.2" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.12%)</title><rect x="632.2" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$555/1771130142.accept (6 samples, 0.12%)</title><rect x="632.2" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (6 samples, 0.12%)</title><rect x="632.2" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.12%)</title><rect x="632.2" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.12%)</title><rect x="632.2" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.12%)</title><rect x="632.2" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$577/1173557288.apply (6 samples, 0.12%)</title><rect x="632.2" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.12%)</title><rect x="632.2" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (6 samples, 0.12%)</title><rect x="632.2" y="403.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="635.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (12 samples, 0.23%)</title><rect x="633.6" y="835.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (12 samples, 0.23%)</title><rect x="633.6" y="819.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (12 samples, 0.23%)</title><rect x="633.6" y="803.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (12 samples, 0.23%)</title><rect x="633.6" y="787.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (12 samples, 0.23%)</title><rect x="633.6" y="771.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (12 samples, 0.23%)</title><rect x="633.6" y="755.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.23%)</title><rect x="633.6" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 0.23%)</title><rect x="633.6" y="723.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.23%)</title><rect x="633.6" y="707.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 0.23%)</title><rect x="633.6" y="691.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.23%)</title><rect x="633.6" y="675.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.23%)</title><rect x="633.6" y="659.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.23%)</title><rect x="633.6" y="643.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.23%)</title><rect x="633.6" y="627.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.23%)</title><rect x="633.6" y="611.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (12 samples, 0.23%)</title><rect x="633.6" y="595.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.23%)</title><rect x="633.6" y="579.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="636.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (119 samples, 2.28%)</title><rect x="636.3" y="835.0" width="26.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.3" y="846.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="636.3" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="636.3" y="803.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$446/1085371813.get$Lambda (2 samples, 0.04%)</title><rect x="636.3" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.3" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$446 (2 samples, 0.04%)</title><rect x="636.3" y="771.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="639.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$450/1638638638.get$Lambda (2 samples, 0.04%)</title><rect x="636.8" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.8" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$450 (2 samples, 0.04%)</title><rect x="636.8" y="771.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="639.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/6444850.linkToTargetMethod (3 samples, 0.06%)</title><rect x="637.2" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="637.2" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$447/1503388224.get$Lambda (3 samples, 0.06%)</title><rect x="637.2" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.2" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$447 (3 samples, 0.06%)</title><rect x="637.2" y="771.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="640.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (16 samples, 0.31%)</title><rect x="637.9" y="819.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/486167.accept (10 samples, 0.19%)</title><rect x="637.9" y="803.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (10 samples, 0.19%)</title><rect x="637.9" y="787.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (10 samples, 0.19%)</title><rect x="637.9" y="771.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (10 samples, 0.19%)</title><rect x="637.9" y="755.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (10 samples, 0.19%)</title><rect x="637.9" y="739.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (10 samples, 0.19%)</title><rect x="637.9" y="723.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.19%)</title><rect x="637.9" y="707.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.19%)</title><rect x="637.9" y="691.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.19%)</title><rect x="637.9" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (10 samples, 0.19%)</title><rect x="637.9" y="659.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/164014358.run (10 samples, 0.19%)</title><rect x="637.9" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (10 samples, 0.19%)</title><rect x="637.9" y="627.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (4 samples, 0.08%)</title><rect x="637.9" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (4 samples, 0.08%)</title><rect x="637.9" y="595.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (4 samples, 0.08%)</title><rect x="637.9" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (4 samples, 0.08%)</title><rect x="637.9" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.08%)</title><rect x="637.9" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.08%)</title><rect x="637.9" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (4 samples, 0.08%)</title><rect x="637.9" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (4 samples, 0.08%)</title><rect x="637.9" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="640.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (5 samples, 0.10%)</title><rect x="639.0" y="611.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (5 samples, 0.10%)</title><rect x="639.0" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="639.0" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.0" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="639.0" y="563.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (2 samples, 0.04%)</title><rect x="639.7" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.7" y="590.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.04%)</title><rect x="639.7" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="574.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.04%)</title><rect x="639.7" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="642.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$451/1523524831.accept (6 samples, 0.12%)</title><rect x="640.1" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (6 samples, 0.12%)</title><rect x="640.1" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$447/1503388224.run (6 samples, 0.12%)</title><rect x="640.1" y="771.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (6 samples, 0.12%)</title><rect x="640.1" y="755.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.12%)</title><rect x="640.1" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.12%)</title><rect x="640.1" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.12%)</title><rect x="640.1" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.1" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.12%)</title><rect x="640.1" y="691.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (15 samples, 0.29%)</title><rect x="641.5" y="819.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.5" y="830.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (15 samples, 0.29%)</title><rect x="641.5" y="803.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="644.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (9 samples, 0.17%)</title><rect x="645.1" y="819.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$304/1009273761.run (7 samples, 0.13%)</title><rect x="645.1" y="803.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (7 samples, 0.13%)</title><rect x="645.1" y="787.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="645.1" y="771.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="645.1" y="755.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.13%)</title><rect x="645.1" y="739.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (7 samples, 0.13%)</title><rect x="645.1" y="723.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/164014358.run (7 samples, 0.13%)</title><rect x="645.1" y="707.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (7 samples, 0.13%)</title><rect x="645.1" y="691.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (7 samples, 0.13%)</title><rect x="645.1" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 0.13%)</title><rect x="645.1" y="659.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.13%)</title><rect x="645.1" y="643.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.13%)</title><rect x="645.1" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.13%)</title><rect x="645.1" y="611.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/929383713.linkToTargetMethod (3 samples, 0.06%)</title><rect x="645.1" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2033968586.invoke (3 samples, 0.06%)</title><rect x="645.1" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="645.1" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.06%)</title><rect x="645.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.06%)</title><rect x="645.1" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.1" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="645.1" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.08%)</title><rect x="645.8" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="645.8" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="645.8" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$462/392334249.get$Lambda (4 samples, 0.08%)</title><rect x="645.8" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$462 (4 samples, 0.08%)</title><rect x="645.8" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="648.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$319/1413996436.run (2 samples, 0.04%)</title><rect x="646.7" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2 samples, 0.04%)</title><rect x="646.7" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="646.7" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="646.7" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$453/1438830434.get$Lambda (2 samples, 0.04%)</title><rect x="646.7" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.7" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$453 (2 samples, 0.04%)</title><rect x="646.7" y="723.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="649.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (48 samples, 0.92%)</title><rect x="647.2" y="819.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.2" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.25%)</title><rect x="647.2" y="803.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.2" y="814.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.25%)</title><rect x="647.2" y="787.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.25%)</title><rect x="647.2" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.2" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.25%)</title><rect x="647.2" y="755.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.2" y="766.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.25%)</title><rect x="647.2" y="739.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="650.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (35 samples, 0.67%)</title><rect x="650.1" y="803.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.12%)</title><rect x="650.1" y="787.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.12%)</title><rect x="650.1" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$584/815239015.get$Lambda (6 samples, 0.12%)</title><rect x="650.1" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$584 (6 samples, 0.12%)</title><rect x="650.1" y="739.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="653.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (15 samples, 0.29%)</title><rect x="651.5" y="787.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.5" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (15 samples, 0.29%)</title><rect x="651.5" y="771.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="654.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (5 samples, 0.10%)</title><rect x="654.8" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="798.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.10%)</title><rect x="654.8" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.8" y="782.0"></text>
</g>
<g>
<title>java.util.Optional (5 samples, 0.10%)</title><rect x="654.8" y="755.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="657.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (9 samples, 0.17%)</title><rect x="656.0" y="787.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.0" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.08%)</title><rect x="656.0" y="771.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="659.0" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.10%)</title><rect x="656.9" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.9" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="656.9" y="755.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.9" y="766.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (5 samples, 0.10%)</title><rect x="656.9" y="739.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (13 samples, 0.25%)</title><rect x="658.0" y="819.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="658.0" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="658.0" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$445/993812259.get$Lambda (4 samples, 0.08%)</title><rect x="658.0" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.0" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$445 (4 samples, 0.08%)</title><rect x="658.0" y="755.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="661.0" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.12%)</title><rect x="658.9" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.10%)</title><rect x="659.1" y="787.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.1" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.10%)</title><rect x="659.1" y="771.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="662.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3 samples, 0.06%)</title><rect x="660.3" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.3" y="814.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (3 samples, 0.06%)</title><rect x="660.3" y="787.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 0.06%)</title><rect x="661.0" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.06%)</title><rect x="661.0" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 0.06%)</title><rect x="661.0" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.06%)</title><rect x="661.0" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.06%)</title><rect x="661.0" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.0" y="766.0"></text>
</g>
<g>
<title>java.lang.Integer (3 samples, 0.06%)</title><rect x="661.0" y="739.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="664.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (6 samples, 0.12%)</title><rect x="661.9" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.12%)</title><rect x="661.9" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.12%)</title><rect x="661.9" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.9" y="798.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.12%)</title><rect x="661.9" y="771.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="664.9" y="782.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (21 samples, 0.40%)</title><rect x="663.2" y="835.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (3 samples, 0.06%)</title><rect x="663.2" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.06%)</title><rect x="663.2" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.06%)</title><rect x="663.2" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.04%)</title><rect x="663.4" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (18 samples, 0.35%)</title><rect x="663.9" y="819.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (18 samples, 0.35%)</title><rect x="663.9" y="803.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.9" y="814.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StreamSession (14 samples, 0.27%)</title><rect x="663.9" y="787.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="666.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/StreamSession.&lt;init&gt; (4 samples, 0.08%)</title><rect x="667.1" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (4 samples, 0.08%)</title><rect x="667.1" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.1" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="667.1" y="755.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.1" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,308 samples, 44.24%)</title><rect x="668.0" y="835.0" width="522.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.0" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (151 samples, 2.89%)</title><rect x="668.0" y="819.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.0" y="830.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (64 samples, 1.23%)</title><rect x="668.0" y="803.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.0" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (23 samples, 0.44%)</title><rect x="668.0" y="787.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="671.0" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (10 samples, 0.19%)</title><rect x="673.2" y="787.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="676.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (31 samples, 0.59%)</title><rect x="675.4" y="787.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (31 samples, 0.59%)</title><rect x="675.4" y="771.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (31 samples, 0.59%)</title><rect x="675.4" y="755.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (31 samples, 0.59%)</title><rect x="675.4" y="739.0" width="7.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="678.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (87 samples, 1.67%)</title><rect x="682.4" y="803.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (87 samples, 1.67%)</title><rect x="682.4" y="787.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (87 samples, 1.67%)</title><rect x="682.4" y="771.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (87 samples, 1.67%)</title><rect x="682.4" y="755.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (64 samples, 1.23%)</title><rect x="682.4" y="739.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.4" y="750.0"></text>
</g>
<g>
<title>java.lang.Integer (64 samples, 1.23%)</title><rect x="682.4" y="723.0" width="14.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="685.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (23 samples, 0.44%)</title><rect x="696.9" y="739.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (23 samples, 0.44%)</title><rect x="696.9" y="723.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.44%)</title><rect x="696.9" y="707.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (23 samples, 0.44%)</title><rect x="696.9" y="691.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (23 samples, 0.44%)</title><rect x="696.9" y="675.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (23 samples, 0.44%)</title><rect x="696.9" y="659.0" width="5.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,157 samples, 41.35%)</title><rect x="702.1" y="819.0" width="487.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.1" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,157 samples, 41.35%)</title><rect x="702.1" y="803.0" width="487.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.1" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,117 samples, 40.58%)</title><rect x="702.1" y="787.0" width="478.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.1" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (912 samples, 17.48%)</title><rect x="702.1" y="771.0" width="206.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="782.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (912 samples, 17.48%)</title><rect x="702.1" y="755.0" width="206.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.1" y="766.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (868 samples, 16.64%)</title><rect x="702.1" y="739.0" width="196.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.1" y="750.0">RequestHandler1_entity.han..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (35 samples, 0.67%)</title><rect x="702.1" y="723.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (35 samples, 0.67%)</title><rect x="702.1" y="707.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.67%)</title><rect x="702.1" y="691.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.67%)</title><rect x="702.1" y="675.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.31%)</title><rect x="702.1" y="659.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="705.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.36%)</title><rect x="705.7" y="659.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.7" y="670.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.36%)</title><rect x="705.7" y="643.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="708.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (833 samples, 15.97%)</title><rect x="710.0" y="723.0" width="188.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.0" y="734.0">ru/mail/polis/service/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (833 samples, 15.97%)</title><rect x="710.0" y="707.0" width="188.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.0" y="718.0">ru/mail/polis/service/Re..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (47 samples, 0.90%)</title><rect x="710.0" y="691.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.90%)</title><rect x="710.0" y="675.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.90%)</title><rect x="710.0" y="659.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.48%)</title><rect x="710.0" y="643.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="713.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.42%)</title><rect x="715.7" y="643.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.7" y="654.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.42%)</title><rect x="715.7" y="627.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="718.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (48 samples, 0.92%)</title><rect x="720.7" y="691.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.35%)</title><rect x="720.7" y="675.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.35%)</title><rect x="720.7" y="659.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$120/1168336161.get$Lambda (18 samples, 0.35%)</title><rect x="720.7" y="643.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$120 (18 samples, 0.35%)</title><rect x="720.7" y="627.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="723.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (30 samples, 0.58%)</title><rect x="724.7" y="675.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (30 samples, 0.58%)</title><rect x="724.7" y="659.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.7" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (13 samples, 0.25%)</title><rect x="724.7" y="643.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="727.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (17 samples, 0.33%)</title><rect x="727.7" y="643.0" width="3.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="730.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (644 samples, 12.34%)</title><rect x="731.5" y="691.0" width="145.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.5" y="702.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="731.5" y="675.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="734.5" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (5 samples, 0.10%)</title><rect x="732.2" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (5 samples, 0.10%)</title><rect x="732.2" y="659.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="735.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="733.3" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.3" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="733.3" y="659.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="736.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.15%)</title><rect x="733.8" y="675.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.13%)</title><rect x="733.8" y="659.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.8" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.13%)</title><rect x="733.8" y="643.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="736.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (16 samples, 0.31%)</title><rect x="735.6" y="675.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (16 samples, 0.31%)</title><rect x="735.6" y="659.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (9 samples, 0.17%)</title><rect x="735.6" y="643.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="738.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="737.6" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="737.6" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="737.6" y="611.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="740.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (373 samples, 7.15%)</title><rect x="739.2" y="675.0" width="84.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="686.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (373 samples, 7.15%)</title><rect x="739.2" y="659.0" width="84.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (373 samples, 7.15%)</title><rect x="739.2" y="643.0" width="84.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.2" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (373 samples, 7.15%)</title><rect x="739.2" y="627.0" width="84.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.2" y="638.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="739.2" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="739.2" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$171/958356171.get$Lambda (4 samples, 0.08%)</title><rect x="739.2" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$171 (4 samples, 0.08%)</title><rect x="739.2" y="563.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="742.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.17%)</title><rect x="740.1" y="611.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.17%)</title><rect x="740.1" y="595.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.04%)</title><rect x="740.1" y="579.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="743.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="740.6" y="579.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="740.6" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="740.6" y="547.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="743.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (13 samples, 0.25%)</title><rect x="742.2" y="611.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.25%)</title><rect x="742.2" y="595.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.04%)</title><rect x="742.2" y="579.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="745.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.21%)</title><rect x="742.6" y="579.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.21%)</title><rect x="742.6" y="563.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.21%)</title><rect x="742.6" y="547.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="745.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (15 samples, 0.29%)</title><rect x="745.1" y="611.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="748.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (13 samples, 0.25%)</title><rect x="748.5" y="611.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="751.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (193 samples, 3.70%)</title><rect x="751.4" y="611.0" width="43.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="622.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.29%)</title><rect x="751.4" y="595.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.4" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.27%)</title><rect x="751.4" y="579.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.4" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.08%)</title><rect x="751.4" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.4" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.08%)</title><rect x="751.4" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="754.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.19%)</title><rect x="752.3" y="563.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.3" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.19%)</title><rect x="752.3" y="547.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="755.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (79 samples, 1.51%)</title><rect x="754.8" y="595.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (79 samples, 1.51%)</title><rect x="754.8" y="579.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.8" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.13%)</title><rect x="755.0" y="563.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="758.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.25%)</title><rect x="756.6" y="563.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="759.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="759.8" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.13%)</title><rect x="759.8" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.get$Lambda (7 samples, 0.13%)</title><rect x="759.8" y="531.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.8" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (7 samples, 0.13%)</title><rect x="759.8" y="515.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="762.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (32 samples, 0.61%)</title><rect x="761.4" y="563.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (32 samples, 0.61%)</title><rect x="761.4" y="547.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.accept (32 samples, 0.61%)</title><rect x="761.4" y="531.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (32 samples, 0.61%)</title><rect x="761.4" y="515.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (15 samples, 0.29%)</title><rect x="761.4" y="499.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.accept (11 samples, 0.21%)</title><rect x="761.4" y="483.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.21%)</title><rect x="761.4" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.21%)</title><rect x="761.4" y="451.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.21%)</title><rect x="761.4" y="435.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.21%)</title><rect x="761.4" y="419.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.21%)</title><rect x="761.4" y="403.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.21%)</title><rect x="761.4" y="387.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.21%)</title><rect x="761.4" y="371.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="764.4" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.08%)</title><rect x="763.9" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (4 samples, 0.08%)</title><rect x="763.9" y="467.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="766.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.12%)</title><rect x="764.8" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.12%)</title><rect x="764.8" y="483.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.get$Lambda (6 samples, 0.12%)</title><rect x="764.8" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (6 samples, 0.12%)</title><rect x="764.8" y="451.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="767.8" y="462.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.12%)</title><rect x="766.1" y="499.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.12%)</title><rect x="766.1" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.06%)</title><rect x="766.1" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="766.1" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="766.1" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="769.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.06%)</title><rect x="766.8" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.06%)</title><rect x="766.8" y="451.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="769.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.10%)</title><rect x="767.5" y="499.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.10%)</title><rect x="767.5" y="483.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="770.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.08%)</title><rect x="768.6" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.6" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.08%)</title><rect x="768.6" y="547.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="771.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (14 samples, 0.27%)</title><rect x="769.5" y="563.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.27%)</title><rect x="769.5" y="547.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="772.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (73 samples, 1.40%)</title><rect x="772.9" y="595.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.9" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (73 samples, 1.40%)</title><rect x="772.9" y="579.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.9" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (67 samples, 1.28%)</title><rect x="772.9" y="563.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.9" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (67 samples, 1.28%)</title><rect x="772.9" y="547.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.9" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (67 samples, 1.28%)</title><rect x="772.9" y="531.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.9" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.23%)</title><rect x="772.9" y="515.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="775.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.56%)</title><rect x="775.6" y="515.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.56%)</title><rect x="775.6" y="499.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.6" y="510.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.56%)</title><rect x="775.6" y="483.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="778.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (26 samples, 0.50%)</title><rect x="782.2" y="515.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.50%)</title><rect x="782.2" y="499.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.15%)</title><rect x="782.2" y="483.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="785.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.35%)</title><rect x="784.0" y="483.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.0" y="494.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.35%)</title><rect x="784.0" y="467.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="787.0" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (6 samples, 0.12%)</title><rect x="788.1" y="563.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="791.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (12 samples, 0.23%)</title><rect x="789.4" y="595.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (12 samples, 0.23%)</title><rect x="789.4" y="579.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="792.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (13 samples, 0.25%)</title><rect x="792.1" y="595.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.12%)</title><rect x="792.4" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.4" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.12%)</title><rect x="792.4" y="563.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="795.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.12%)</title><rect x="793.7" y="579.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.12%)</title><rect x="793.7" y="563.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (72 samples, 1.38%)</title><rect x="795.1" y="611.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.04%)</title><rect x="795.1" y="595.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="798.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (14 samples, 0.27%)</title><rect x="795.5" y="595.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="798.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.08%)</title><rect x="798.7" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (4 samples, 0.08%)</title><rect x="798.7" y="579.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="801.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (52 samples, 1.00%)</title><rect x="799.6" y="595.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (52 samples, 1.00%)</title><rect x="799.6" y="579.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.6" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.12%)</title><rect x="799.6" y="563.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="802.6" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.06%)</title><rect x="801.0" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="804.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (20 samples, 0.38%)</title><rect x="801.6" y="563.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (20 samples, 0.38%)</title><rect x="801.6" y="547.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.6" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (20 samples, 0.38%)</title><rect x="801.6" y="531.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.6" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (20 samples, 0.38%)</title><rect x="801.6" y="515.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.6" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (20 samples, 0.38%)</title><rect x="801.6" y="499.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="804.6" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (13 samples, 0.25%)</title><rect x="806.2" y="563.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (13 samples, 0.25%)</title><rect x="806.2" y="547.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (2 samples, 0.04%)</title><rect x="806.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (2 samples, 0.04%)</title><rect x="806.2" y="515.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="809.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (11 samples, 0.21%)</title><rect x="806.6" y="531.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (11 samples, 0.21%)</title><rect x="806.6" y="515.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="809.6" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.19%)</title><rect x="809.1" y="563.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.1" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.19%)</title><rect x="809.1" y="547.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.1" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.19%)</title><rect x="809.1" y="531.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="812.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (54 samples, 1.04%)</title><rect x="811.4" y="611.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.12%)</title><rect x="811.4" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (6 samples, 0.12%)</title><rect x="811.4" y="579.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="814.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.15%)</title><rect x="812.7" y="595.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="815.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (40 samples, 0.77%)</title><rect x="814.5" y="595.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.19%)</title><rect x="814.5" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.19%)</title><rect x="814.5" y="563.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/161472302.get$Lambda (4 samples, 0.08%)</title><rect x="814.5" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$151 (4 samples, 0.08%)</title><rect x="814.5" y="531.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="817.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1125876473.get$Lambda (6 samples, 0.12%)</title><rect x="815.4" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$159 (6 samples, 0.12%)</title><rect x="815.4" y="531.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="818.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (30 samples, 0.58%)</title><rect x="816.8" y="579.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (30 samples, 0.58%)</title><rect x="816.8" y="563.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (17 samples, 0.33%)</title><rect x="816.8" y="547.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="819.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.25%)</title><rect x="820.6" y="547.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.25%)</title><rect x="820.6" y="531.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.25%)</title><rect x="820.6" y="515.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="823.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (73 samples, 1.40%)</title><rect x="823.6" y="675.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (10 samples, 0.19%)</title><rect x="823.6" y="659.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="826.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (63 samples, 1.21%)</title><rect x="825.8" y="659.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.8" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (58 samples, 1.11%)</title><rect x="825.8" y="643.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (58 samples, 1.11%)</title><rect x="825.8" y="627.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.8" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.10%)</title><rect x="825.8" y="611.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="828.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.12%)</title><rect x="827.2" y="611.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="830.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.17%)</title><rect x="828.8" y="611.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.17%)</title><rect x="828.8" y="595.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.get$Lambda (9 samples, 0.17%)</title><rect x="828.8" y="579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.8" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (9 samples, 0.17%)</title><rect x="828.8" y="563.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="831.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.10%)</title><rect x="830.8" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.8" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (5 samples, 0.10%)</title><rect x="830.8" y="595.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="833.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (26 samples, 0.50%)</title><rect x="832.0" y="611.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/1673674116.accept (26 samples, 0.50%)</title><rect x="832.0" y="595.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.50%)</title><rect x="832.0" y="579.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.12%)</title><rect x="832.0" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.12%)</title><rect x="832.0" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.get$Lambda (6 samples, 0.12%)</title><rect x="832.0" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.0" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (6 samples, 0.12%)</title><rect x="832.0" y="515.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="835.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.08%)</title><rect x="833.3" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/2117289181.accept (4 samples, 0.08%)</title><rect x="833.3" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="833.3" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="833.3" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="833.3" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="833.3" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="833.3" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="833.3" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.08%)</title><rect x="833.3" y="435.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="836.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (9 samples, 0.17%)</title><rect x="834.2" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.2" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (9 samples, 0.17%)</title><rect x="834.2" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.12%)</title><rect x="834.2" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.12%)</title><rect x="834.2" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.12%)</title><rect x="834.2" y="499.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="837.2" y="510.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.06%)</title><rect x="835.6" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.6" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.06%)</title><rect x="835.6" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="838.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.13%)</title><rect x="836.2" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.13%)</title><rect x="836.2" y="547.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="839.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.10%)</title><rect x="837.8" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.10%)</title><rect x="837.8" y="595.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="840.8" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (5 samples, 0.10%)</title><rect x="839.0" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.0" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.10%)</title><rect x="839.0" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.0" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (5 samples, 0.10%)</title><rect x="839.0" y="611.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="842.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureHelper (45 samples, 0.86%)</title><rect x="840.1" y="675.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.08%)</title><rect x="840.1" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.08%)</title><rect x="840.1" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.04%)</title><rect x="840.1" y="627.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="843.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="840.5" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.04%)</title><rect x="840.5" y="611.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="843.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (41 samples, 0.79%)</title><rect x="841.0" y="659.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.04%)</title><rect x="841.0" y="643.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="844.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.04%)</title><rect x="841.7" y="643.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (32 samples, 0.61%)</title><rect x="842.4" y="643.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$197/1748450225.accept (32 samples, 0.61%)</title><rect x="842.4" y="627.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (32 samples, 0.61%)</title><rect x="842.4" y="611.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/32353806.linkToTargetMethod (12 samples, 0.23%)</title><rect x="842.4" y="595.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/326298949.invokeStatic (12 samples, 0.23%)</title><rect x="842.4" y="579.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$205/841366861.get$Lambda (12 samples, 0.23%)</title><rect x="842.4" y="563.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$205 (12 samples, 0.23%)</title><rect x="842.4" y="547.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="845.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (20 samples, 0.38%)</title><rect x="845.1" y="595.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.38%)</title><rect x="845.1" y="579.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.23%)</title><rect x="845.1" y="563.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="848.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="848.0" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="848.0" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="848.0" y="531.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="851.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (3 samples, 0.06%)</title><rect x="849.6" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.6" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.04%)</title><rect x="849.8" y="627.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="852.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (5 samples, 0.10%)</title><rect x="850.3" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="850.3" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="850.3" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$120/1168336161.get$Lambda (3 samples, 0.06%)</title><rect x="850.3" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$120 (3 samples, 0.06%)</title><rect x="850.3" y="611.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="853.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.04%)</title><rect x="851.0" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.04%)</title><rect x="851.0" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.04%)</title><rect x="851.0" y="627.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="854.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (114 samples, 2.19%)</title><rect x="851.4" y="675.0" width="25.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.4" y="686.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.36%)</title><rect x="851.4" y="659.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/311239812.invoke (19 samples, 0.36%)</title><rect x="851.4" y="643.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.36%)</title><rect x="851.4" y="627.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.06%)</title><rect x="851.4" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="851.4" y="595.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.31%)</title><rect x="852.1" y="611.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.31%)</title><rect x="852.1" y="595.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.1" y="606.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.31%)</title><rect x="852.1" y="579.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="855.1" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (68 samples, 1.30%)</title><rect x="855.7" y="659.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.7" y="670.0"></text>
</g>
<g>
<title>java.net.URI (16 samples, 0.31%)</title><rect x="855.7" y="643.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="858.7" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (52 samples, 1.00%)</title><rect x="859.3" y="643.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.3" y="654.0"></text>
</g>
<g>
<title>java.net.URI$Parser (4 samples, 0.08%)</title><rect x="859.3" y="627.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="862.3" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (48 samples, 0.92%)</title><rect x="860.2" y="627.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.23%)</title><rect x="860.2" y="611.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.23%)</title><rect x="860.2" y="595.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.19%)</title><rect x="860.2" y="579.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="863.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="862.5" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.5" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="862.5" y="563.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (36 samples, 0.69%)</title><rect x="862.9" y="611.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.35%)</title><rect x="862.9" y="595.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.35%)</title><rect x="862.9" y="579.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.15%)</title><rect x="862.9" y="563.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="865.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.19%)</title><rect x="864.7" y="563.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.7" y="574.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="864.7" y="547.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="867.7" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (18 samples, 0.35%)</title><rect x="867.0" y="595.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.15%)</title><rect x="867.0" y="579.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="870.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.15%)</title><rect x="867.0" y="563.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="867.0" y="547.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="870.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.12%)</title><rect x="867.5" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="870.5" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.12%)</title><rect x="867.5" y="531.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="870.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (10 samples, 0.19%)</title><rect x="868.8" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.8" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (10 samples, 0.19%)</title><rect x="868.8" y="563.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.19%)</title><rect x="868.8" y="547.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.19%)</title><rect x="868.8" y="531.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="868.8" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="871.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.13%)</title><rect x="869.5" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.5" y="526.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="869.5" y="499.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="872.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (9 samples, 0.17%)</title><rect x="871.1" y="659.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (9 samples, 0.17%)</title><rect x="871.1" y="643.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (8 samples, 0.15%)</title><rect x="871.3" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.15%)</title><rect x="871.3" y="611.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="874.3" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (9 samples, 0.17%)</title><rect x="873.1" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.1" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.create (9 samples, 0.17%)</title><rect x="873.1" y="643.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.1" y="654.0"></text>
</g>
<g>
<title>java.time.Duration (9 samples, 0.17%)</title><rect x="873.1" y="627.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="876.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (9 samples, 0.17%)</title><rect x="875.2" y="659.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (9 samples, 0.17%)</title><rect x="875.2" y="643.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.17%)</title><rect x="875.2" y="627.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.2" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="875.2" y="611.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="878.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.06%)</title><rect x="875.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="875.8" y="595.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="878.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="876.5" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.06%)</title><rect x="876.5" y="595.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="879.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (75 samples, 1.44%)</title><rect x="877.2" y="691.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.29%)</title><rect x="877.2" y="675.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.29%)</title><rect x="877.2" y="659.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$211/1094443150.get$Lambda (15 samples, 0.29%)</title><rect x="877.2" y="643.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$211 (15 samples, 0.29%)</title><rect x="877.2" y="627.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="880.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (60 samples, 1.15%)</title><rect x="880.6" y="675.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (60 samples, 1.15%)</title><rect x="880.6" y="659.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.71%)</title><rect x="880.6" y="643.0" width="8.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="883.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (23 samples, 0.44%)</title><rect x="888.9" y="643.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (23 samples, 0.44%)</title><rect x="888.9" y="627.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="891.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (19 samples, 0.36%)</title><rect x="894.2" y="691.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="894.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.2" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.04%)</title><rect x="894.2" y="659.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="897.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.33%)</title><rect x="894.6" y="675.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.33%)</title><rect x="894.6" y="659.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.33%)</title><rect x="894.6" y="643.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.13%)</title><rect x="894.6" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.6" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.13%)</title><rect x="894.6" y="611.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.19%)</title><rect x="896.2" y="627.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10 samples, 0.19%)</title><rect x="896.2" y="611.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="899.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (44 samples, 0.84%)</title><rect x="898.4" y="739.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.84%)</title><rect x="898.4" y="723.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.84%)</title><rect x="898.4" y="707.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.46%)</title><rect x="898.4" y="691.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="901.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.38%)</title><rect x="903.9" y="691.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.9" y="702.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.38%)</title><rect x="903.9" y="675.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="906.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (199 samples, 3.81%)</title><rect x="908.4" y="771.0" width="45.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.4" y="782.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.73%)</title><rect x="908.4" y="755.0" width="8.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (75 samples, 1.44%)</title><rect x="917.0" y="755.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 1.44%)</title><rect x="917.0" y="739.0" width="17.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="920.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 1.65%)</title><rect x="934.0" y="755.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 1.65%)</title><rect x="934.0" y="739.0" width="19.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.0" y="750.0"></text>
</g>
<g>
<title>char[] (37 samples, 0.71%)</title><rect x="934.0" y="723.0" width="8.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="937.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.38%)</title><rect x="942.3" y="723.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="945.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.56%)</title><rect x="946.9" y="723.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.56%)</title><rect x="946.9" y="707.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.56%)</title><rect x="946.9" y="691.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.9" y="702.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.56%)</title><rect x="946.9" y="675.0" width="6.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="949.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (234 samples, 4.49%)</title><rect x="953.4" y="771.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.4" y="782.0">one/n..</text>
</g>
<g>
<title>byte[] (234 samples, 4.49%)</title><rect x="953.4" y="755.0" width="52.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="956.4" y="766.0">byte[]</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (39 samples, 0.75%)</title><rect x="1006.3" y="771.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.75%)</title><rect x="1006.3" y="755.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.75%)</title><rect x="1006.3" y="739.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.27%)</title><rect x="1006.3" y="723.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1009.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.48%)</title><rect x="1009.5" y="723.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.5" y="734.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.48%)</title><rect x="1009.5" y="707.0" width="5.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1012.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (733 samples, 14.05%)</title><rect x="1015.2" y="771.0" width="165.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.2" y="782.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (733 samples, 14.05%)</title><rect x="1015.2" y="755.0" width="165.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.2" y="766.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (380 samples, 7.28%)</title><rect x="1015.2" y="739.0" width="85.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1018.2" y="750.0">char[]</text>
</g>
<g>
<title>java.lang.String (112 samples, 2.15%)</title><rect x="1101.1" y="739.0" width="25.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1104.1" y="750.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (241 samples, 4.62%)</title><rect x="1126.4" y="739.0" width="54.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.4" y="750.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (241 samples, 4.62%)</title><rect x="1126.4" y="723.0" width="54.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.4" y="734.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (241 samples, 4.62%)</title><rect x="1126.4" y="707.0" width="54.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.4" y="718.0">java/..</text>
</g>
<g>
<title>byte[] (241 samples, 4.62%)</title><rect x="1126.4" y="691.0" width="54.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1129.4" y="702.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 0.77%)</title><rect x="1181.0" y="787.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (40 samples, 0.77%)</title><rect x="1181.0" y="771.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.77%)</title><rect x="1181.0" y="755.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.0" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.77%)</title><rect x="1181.0" y="739.0" width="9.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1184.0" y="750.0"></text>
</g>
</g>
</svg>
