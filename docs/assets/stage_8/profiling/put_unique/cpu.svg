<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1093"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1093"> </text>
<g id="frames">
<g>
<title>all (514 samples, 100.00%)</title><rect x="10.0" y="1059.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="1070.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 1.17%)</title><rect x="10.0" y="1043.0" width="13.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 1.17%)</title><rect x="10.0" y="1027.0" width="13.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.19%)</title><rect x="10.0" y="1011.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::DeferredInitialize() (1 samples, 0.19%)</title><rect x="12.3" y="1011.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.3" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.78%)</title><rect x="14.6" y="1011.0" width="9.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.6" y="1022.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.78%)</title><rect x="14.6" y="995.0" width="9.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.6" y="1006.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.78%)</title><rect x="14.6" y="979.0" width="9.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="17.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (313 samples, 60.89%)</title><rect x="23.8" y="1043.0" width="718.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.8" y="1054.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (313 samples, 60.89%)</title><rect x="23.8" y="1027.0" width="718.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.8" y="1038.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (313 samples, 60.89%)</title><rect x="23.8" y="1011.0" width="718.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.8" y="1022.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (94 samples, 18.29%)</title><rect x="23.8" y="995.0" width="215.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.8" y="1006.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 7.98%)</title><rect x="23.8" y="979.0" width="94.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.8" y="990.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (29 samples, 5.64%)</title><rect x="23.8" y="963.0" width="66.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.8" y="974.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/309436173.apply (28 samples, 5.45%)</title><rect x="26.1" y="947.0" width="64.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.1" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (28 samples, 5.45%)</title><rect x="26.1" y="931.0" width="64.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.1" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (28 samples, 5.45%)</title><rect x="26.1" y="915.0" width="64.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.1" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (22 samples, 4.28%)</title><rect x="26.1" y="899.0" width="50.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.1" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (22 samples, 4.28%)</title><rect x="26.1" y="883.0" width="50.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.1" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (22 samples, 4.28%)</title><rect x="26.1" y="867.0" width="50.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.1" y="878.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 1.75%)</title><rect x="26.1" y="851.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 1.75%)</title><rect x="26.1" y="835.0" width="20.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 1.75%)</title><rect x="26.1" y="819.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1374872547.apply (9 samples, 1.75%)</title><rect x="26.1" y="803.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.19%)</title><rect x="26.1" y="787.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (8 samples, 1.56%)</title><rect x="28.4" y="787.0" width="18.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8 samples, 1.56%)</title><rect x="28.4" y="771.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/629584904.apply (8 samples, 1.56%)</title><rect x="28.4" y="755.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (8 samples, 1.56%)</title><rect x="28.4" y="739.0" width="18.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.19%)</title><rect x="28.4" y="723.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.19%)</title><rect x="28.4" y="707.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.19%)</title><rect x="28.4" y="691.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/259197969.apply (1 samples, 0.19%)</title><rect x="28.4" y="675.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.19%)</title><rect x="28.4" y="659.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.19%)</title><rect x="28.4" y="643.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1619277436.apply (1 samples, 0.19%)</title><rect x="28.4" y="627.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.19%)</title><rect x="28.4" y="611.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.19%)</title><rect x="28.4" y="595.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.19%)</title><rect x="28.4" y="579.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.19%)</title><rect x="28.4" y="563.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.19%)</title><rect x="28.4" y="547.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$274/25722193.accept (1 samples, 0.19%)</title><rect x="28.4" y="531.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.19%)</title><rect x="28.4" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.19%)</title><rect x="28.4" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.19%)</title><rect x="28.4" y="483.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.19%)</title><rect x="28.4" y="467.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="28.4" y="451.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="28.4" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.19%)</title><rect x="28.4" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.19%)</title><rect x="28.4" y="403.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.19%)</title><rect x="28.4" y="387.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.19%)</title><rect x="28.4" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.19%)</title><rect x="28.4" y="355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.19%)</title><rect x="28.4" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.19%)</title><rect x="28.4" y="323.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="28.4" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="28.4" y="291.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.19%)</title><rect x="28.4" y="275.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.19%)</title><rect x="28.4" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.19%)</title><rect x="28.4" y="243.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.19%)</title><rect x="28.4" y="227.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.19%)</title><rect x="28.4" y="211.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.19%)</title><rect x="28.4" y="195.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.19%)</title><rect x="28.4" y="179.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.19%)</title><rect x="28.4" y="163.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.19%)</title><rect x="28.4" y="147.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.4" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.19%)</title><rect x="28.4" y="131.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.19%)</title><rect x="28.4" y="115.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.19%)</title><rect x="28.4" y="99.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.19%)</title><rect x="28.4" y="83.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.19%)</title><rect x="28.4" y="67.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.19%)</title><rect x="28.4" y="51.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="62.0"></text>
</g>
<g>
<title>writev (1 samples, 0.19%)</title><rect x="28.4" y="35.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7 samples, 1.36%)</title><rect x="30.7" y="723.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.97%)</title><rect x="30.7" y="707.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.97%)</title><rect x="30.7" y="691.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.19%)</title><rect x="30.7" y="675.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$200/814395937.apply (4 samples, 0.78%)</title><rect x="33.0" y="675.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (4 samples, 0.78%)</title><rect x="33.0" y="659.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.19%)</title><rect x="33.0" y="643.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.19%)</title><rect x="33.0" y="627.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="33.0" y="611.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="33.0" y="595.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.19%)</title><rect x="33.0" y="579.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.19%)</title><rect x="33.0" y="563.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.19%)</title><rect x="33.0" y="547.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.19%)</title><rect x="33.0" y="531.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.19%)</title><rect x="33.0" y="515.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.19%)</title><rect x="33.0" y="499.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.19%)</title><rect x="33.0" y="483.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.19%)</title><rect x="33.0" y="467.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.19%)</title><rect x="33.0" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.0" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.19%)</title><rect x="33.0" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.19%)</title><rect x="33.0" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.19%)</title><rect x="33.0" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.19%)</title><rect x="33.0" y="387.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.19%)</title><rect x="33.0" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.19%)</title><rect x="33.0" y="355.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.0" y="366.0"></text>
</g>
<g>
<title>writev (1 samples, 0.19%)</title><rect x="33.0" y="339.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="36.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.39%)</title><rect x="35.3" y="643.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.39%)</title><rect x="35.3" y="627.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.39%)</title><rect x="35.3" y="611.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.39%)</title><rect x="35.3" y="595.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.39%)</title><rect x="35.3" y="579.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.39%)</title><rect x="35.3" y="563.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.39%)</title><rect x="35.3" y="547.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.39%)</title><rect x="35.3" y="531.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.39%)</title><rect x="35.3" y="515.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.3" y="526.0"></text>
</g>
<g>
<title>write (1 samples, 0.19%)</title><rect x="37.5" y="499.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="40.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.19%)</title><rect x="39.8" y="643.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.19%)</title><rect x="39.8" y="627.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.19%)</title><rect x="39.8" y="611.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.8" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.19%)</title><rect x="39.8" y="595.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.8" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.19%)</title><rect x="39.8" y="579.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.19%)</title><rect x="39.8" y="563.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.19%)</title><rect x="39.8" y="547.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.39%)</title><rect x="42.1" y="707.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.39%)</title><rect x="42.1" y="691.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (13 samples, 2.53%)</title><rect x="46.7" y="851.0" width="29.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.7" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (13 samples, 2.53%)</title><rect x="46.7" y="835.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (13 samples, 2.53%)</title><rect x="46.7" y="819.0" width="29.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.7" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (13 samples, 2.53%)</title><rect x="46.7" y="803.0" width="29.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 2.33%)</title><rect x="46.7" y="787.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.7" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/400135010.apply (12 samples, 2.33%)</title><rect x="46.7" y="771.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.7" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (12 samples, 2.33%)</title><rect x="46.7" y="755.0" width="27.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.7" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (12 samples, 2.33%)</title><rect x="46.7" y="739.0" width="27.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 0.97%)</title><rect x="46.7" y="723.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.97%)</title><rect x="46.7" y="707.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 0.97%)</title><rect x="46.7" y="691.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/728014953.apply (5 samples, 0.97%)</title><rect x="46.7" y="675.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5 samples, 0.97%)</title><rect x="46.7" y="659.0" width="11.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 0.97%)</title><rect x="46.7" y="643.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 0.97%)</title><rect x="46.7" y="627.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.58%)</title><rect x="46.7" y="611.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.58%)</title><rect x="46.7" y="595.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (3 samples, 0.58%)</title><rect x="46.7" y="579.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (3 samples, 0.58%)</title><rect x="46.7" y="563.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.7" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.58%)</title><rect x="46.7" y="547.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.7" y="558.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.58%)</title><rect x="46.7" y="531.0" width="6.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="49.7" y="542.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.58%)</title><rect x="46.7" y="515.0" width="6.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="49.7" y="526.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.19%)</title><rect x="46.7" y="499.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="49.7" y="510.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (2 samples, 0.39%)</title><rect x="49.0" y="499.0" width="4.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="52.0" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.19%)</title><rect x="49.0" y="483.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.0" y="494.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.19%)</title><rect x="49.0" y="467.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.0" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.19%)</title><rect x="49.0" y="451.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="52.0" y="462.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.19%)</title><rect x="49.0" y="435.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.19%)</title><rect x="49.0" y="419.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="52.0" y="430.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.19%)</title><rect x="51.3" y="483.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.3" y="494.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.19%)</title><rect x="51.3" y="467.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="54.3" y="478.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.19%)</title><rect x="51.3" y="451.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="54.3" y="462.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.19%)</title><rect x="51.3" y="435.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.39%)</title><rect x="53.6" y="611.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.39%)</title><rect x="53.6" y="595.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (7 samples, 1.36%)</title><rect x="58.2" y="723.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (6 samples, 1.17%)</title><rect x="58.2" y="707.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2 samples, 0.39%)</title><rect x="58.2" y="691.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2 samples, 0.39%)</title><rect x="58.2" y="675.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.39%)</title><rect x="58.2" y="659.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.19%)</title><rect x="58.2" y="643.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.19%)</title><rect x="58.2" y="627.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.19%)</title><rect x="58.2" y="611.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.2" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.19%)</title><rect x="58.2" y="595.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.19%)</title><rect x="60.5" y="643.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.19%)</title><rect x="60.5" y="627.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.19%)</title><rect x="60.5" y="611.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.5" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (1 samples, 0.19%)</title><rect x="60.5" y="595.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4 samples, 0.78%)</title><rect x="62.8" y="691.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.58%)</title><rect x="65.1" y="675.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.1" y="686.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.39%)</title><rect x="67.4" y="659.0" width="4.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="70.4" y="670.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.19%)</title><rect x="69.7" y="643.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="72.7" y="654.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.19%)</title><rect x="69.7" y="627.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="72.7" y="638.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.19%)</title><rect x="69.7" y="611.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="72.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.19%)</title><rect x="72.0" y="707.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.19%)</title><rect x="74.3" y="787.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.3" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="74.3" y="771.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="77.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3 samples, 0.58%)</title><rect x="76.6" y="899.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.6" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.19%)</title><rect x="76.6" y="883.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="79.6" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.19%)</title><rect x="76.6" y="867.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="79.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.19%)</title><rect x="76.6" y="851.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="79.6" y="862.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.19%)</title><rect x="78.9" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1 samples, 0.19%)</title><rect x="81.2" y="883.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.19%)</title><rect x="81.2" y="867.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.19%)</title><rect x="81.2" y="851.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.2" y="862.0"></text>
</g>
<g>
<title>write (1 samples, 0.19%)</title><rect x="81.2" y="835.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="84.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.19%)</title><rect x="83.5" y="899.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.5" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.19%)</title><rect x="83.5" y="883.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="86.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.19%)</title><rect x="83.5" y="867.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="86.5" y="878.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="83.5" y="851.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="86.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.39%)</title><rect x="85.8" y="899.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.39%)</title><rect x="85.8" y="883.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.39%)</title><rect x="85.8" y="867.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.8" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.39%)</title><rect x="85.8" y="851.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.8" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.39%)</title><rect x="85.8" y="835.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.19%)</title><rect x="88.1" y="819.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.1" y="830.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.19%)</title><rect x="88.1" y="803.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="91.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.19%)</title><rect x="88.1" y="787.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="91.1" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.19%)</title><rect x="88.1" y="771.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="91.1" y="782.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.19%)</title><rect x="88.1" y="755.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="91.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 2.33%)</title><rect x="90.4" y="963.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.4" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 2.33%)</title><rect x="90.4" y="947.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.4" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.19%)</title><rect x="92.6" y="931.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.19%)</title><rect x="92.6" y="915.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.accept (1 samples, 0.19%)</title><rect x="92.6" y="899.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.accept (10 samples, 1.95%)</title><rect x="94.9" y="931.0" width="23.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.9" y="942.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.19%)</title><rect x="94.9" y="915.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (9 samples, 1.75%)</title><rect x="97.2" y="915.0" width="20.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (9 samples, 1.75%)</title><rect x="97.2" y="899.0" width="20.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.75%)</title><rect x="97.2" y="883.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.19%)</title><rect x="97.2" y="867.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.19%)</title><rect x="97.2" y="851.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.19%)</title><rect x="97.2" y="835.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.19%)</title><rect x="97.2" y="819.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 1.56%)</title><rect x="99.5" y="867.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.56%)</title><rect x="99.5" y="851.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.56%)</title><rect x="99.5" y="835.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 1.56%)</title><rect x="99.5" y="819.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (8 samples, 1.56%)</title><rect x="99.5" y="803.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.19%)</title><rect x="99.5" y="787.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="99.5" y="771.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="99.5" y="755.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="99.5" y="739.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.19%)</title><rect x="99.5" y="723.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.19%)</title><rect x="99.5" y="707.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.19%)</title><rect x="99.5" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (7 samples, 1.36%)</title><rect x="101.8" y="787.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 1.36%)</title><rect x="101.8" y="771.0" width="16.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 1.36%)</title><rect x="101.8" y="755.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 1.36%)</title><rect x="101.8" y="739.0" width="16.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (7 samples, 1.36%)</title><rect x="101.8" y="723.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 1.36%)</title><rect x="101.8" y="707.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="718.0"></text>
</g>
<g>
<title>write (7 samples, 1.36%)</title><rect x="101.8" y="691.0" width="16.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="104.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$267/1136289734.get (53 samples, 10.31%)</title><rect x="117.9" y="979.0" width="121.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.9" y="990.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (53 samples, 10.31%)</title><rect x="117.9" y="963.0" width="121.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.9" y="974.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (52 samples, 10.12%)</title><rect x="117.9" y="947.0" width="119.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.9" y="958.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (50 samples, 9.73%)</title><rect x="117.9" y="931.0" width="114.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.9" y="942.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (50 samples, 9.73%)</title><rect x="117.9" y="915.0" width="114.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.9" y="926.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (50 samples, 9.73%)</title><rect x="117.9" y="899.0" width="114.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="120.9" y="910.0">Java_org_rocks..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (49 samples, 9.53%)</title><rect x="120.2" y="883.0" width="112.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="123.2" y="894.0">rocksdb_put_he..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.58%)</title><rect x="120.2" y="867.0" width="6.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="123.2" y="878.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.19%)</title><rect x="122.5" y="851.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="125.5" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.19%)</title><rect x="124.8" y="851.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="127.8" y="862.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.58%)</title><rect x="127.1" y="867.0" width="6.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="130.1" y="878.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.58%)</title><rect x="127.1" y="851.0" width="6.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="130.1" y="862.0"></text>
</g>
<g>
<title>malloc_zone_malloc (3 samples, 0.58%)</title><rect x="127.1" y="835.0" width="6.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="130.1" y="846.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (3 samples, 0.58%)</title><rect x="127.1" y="819.0" width="6.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="130.1" y="830.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (2 samples, 0.39%)</title><rect x="129.4" y="803.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="132.4" y="814.0"></text>
</g>
<g>
<title>tiny_malloc_from_free_list (2 samples, 0.39%)</title><rect x="129.4" y="787.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="132.4" y="798.0"></text>
</g>
<g>
<title>tiny_free_list_add_ptr (1 samples, 0.19%)</title><rect x="131.7" y="771.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="134.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (43 samples, 8.37%)</title><rect x="134.0" y="867.0" width="98.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="137.0" y="878.0">rocksdb::Com..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 8.37%)</title><rect x="134.0" y="851.0" width="98.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="137.0" y="862.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 8.37%)</title><rect x="134.0" y="835.0" width="98.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.0" y="846.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (42 samples, 8.17%)</title><rect x="134.0" y="819.0" width="96.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.0" y="830.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (42 samples, 8.17%)</title><rect x="134.0" y="803.0" width="96.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.0" y="814.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (33 samples, 6.42%)</title><rect x="134.0" y="787.0" width="75.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.0" y="798.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (33 samples, 6.42%)</title><rect x="134.0" y="771.0" width="75.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.0" y="782.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (33 samples, 6.42%)</title><rect x="134.0" y="755.0" width="75.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.0" y="766.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (29 samples, 5.64%)</title><rect x="134.0" y="739.0" width="66.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.0" y="750.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.19%)</title><rect x="134.0" y="723.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="137.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 5.45%)</title><rect x="136.3" y="723.0" width="64.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.3" y="734.0">rocksdb..</text>
</g>
<g>
<title>write (28 samples, 5.45%)</title><rect x="136.3" y="707.0" width="64.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="139.3" y="718.0">write</text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.78%)</title><rect x="200.5" y="739.0" width="9.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="203.5" y="750.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.19%)</title><rect x="202.8" y="723.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="205.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixDirectory::Fsync(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.19%)</title><rect x="205.1" y="723.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="208.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.19%)</title><rect x="207.4" y="723.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="210.4" y="734.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.19%)</title><rect x="207.4" y="707.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="210.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (5 samples, 0.97%)</title><rect x="209.7" y="787.0" width="11.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="212.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.97%)</title><rect x="209.7" y="771.0" width="11.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="212.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.97%)</title><rect x="209.7" y="755.0" width="11.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="212.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.97%)</title><rect x="209.7" y="739.0" width="11.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="212.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.78%)</title><rect x="212.0" y="723.0" width="9.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="215.0" y="734.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.19%)</title><rect x="212.0" y="707.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="215.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (3 samples, 0.58%)</title><rect x="214.3" y="707.0" width="6.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="217.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.19%)</title><rect x="221.2" y="787.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="224.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.39%)</title><rect x="223.5" y="787.0" width="4.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="226.5" y="798.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (1 samples, 0.19%)</title><rect x="228.1" y="787.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="231.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.19%)</title><rect x="230.4" y="819.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="233.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.19%)</title><rect x="230.4" y="803.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="233.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (2 samples, 0.39%)</title><rect x="232.7" y="931.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.19%)</title><rect x="232.7" y="915.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="232.7" y="899.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.19%)</title><rect x="232.7" y="883.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="232.7" y="867.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="235.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (1 samples, 0.19%)</title><rect x="235.0" y="915.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (1 samples, 0.19%)</title><rect x="235.0" y="899.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (1 samples, 0.19%)</title><rect x="237.3" y="947.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.19%)</title><rect x="237.3" y="931.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.19%)</title><rect x="237.3" y="915.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.19%)</title><rect x="237.3" y="899.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.3" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.19%)</title><rect x="237.3" y="883.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.58%)</title><rect x="239.6" y="995.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.39%)</title><rect x="239.6" y="979.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.39%)</title><rect x="239.6" y="963.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.39%)</title><rect x="239.6" y="947.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.39%)</title><rect x="239.6" y="931.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.39%)</title><rect x="239.6" y="915.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.accept (2 samples, 0.39%)</title><rect x="239.6" y="899.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (2 samples, 0.39%)</title><rect x="239.6" y="883.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (2 samples, 0.39%)</title><rect x="239.6" y="867.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.39%)</title><rect x="239.6" y="851.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.39%)</title><rect x="239.6" y="835.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.39%)</title><rect x="239.6" y="819.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.39%)</title><rect x="239.6" y="803.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.39%)</title><rect x="239.6" y="787.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.39%)</title><rect x="239.6" y="771.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.39%)</title><rect x="239.6" y="755.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.39%)</title><rect x="239.6" y="739.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.39%)</title><rect x="239.6" y="723.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.39%)</title><rect x="239.6" y="707.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.39%)</title><rect x="239.6" y="691.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.39%)</title><rect x="239.6" y="675.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.6" y="686.0"></text>
</g>
<g>
<title>write (2 samples, 0.39%)</title><rect x="239.6" y="659.0" width="4.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="242.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.19%)</title><rect x="244.2" y="979.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.19%)</title><rect x="244.2" y="963.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$133/663215790.accept (1 samples, 0.19%)</title><rect x="244.2" y="947.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (1 samples, 0.19%)</title><rect x="244.2" y="931.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.19%)</title><rect x="244.2" y="915.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.19%)</title><rect x="244.2" y="899.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (7 samples, 1.36%)</title><rect x="246.5" y="995.0" width="16.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 1.36%)</title><rect x="246.5" y="979.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 1.36%)</title><rect x="246.5" y="963.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.17%)</title><rect x="248.8" y="947.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.8" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.39%)</title><rect x="253.3" y="931.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="256.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.19%)</title><rect x="257.9" y="931.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.19%)</title><rect x="260.2" y="931.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (123 samples, 23.93%)</title><rect x="262.5" y="995.0" width="282.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.5" y="1006.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (123 samples, 23.93%)</title><rect x="262.5" y="979.0" width="282.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.5" y="990.0">java/util/concurrent/ArrayBlockingQueu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.19%)</title><rect x="267.1" y="963.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.19%)</title><rect x="267.1" y="947.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.19%)</title><rect x="267.1" y="931.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.19%)</title><rect x="267.1" y="915.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (110 samples, 21.40%)</title><rect x="269.4" y="963.0" width="252.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.4" y="974.0">java/util/concurrent/locks/Abstrac..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.39%)</title><rect x="274.0" y="947.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.39%)</title><rect x="274.0" y="931.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.39%)</title><rect x="274.0" y="915.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.19%)</title><rect x="276.3" y="899.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.3" y="910.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.19%)</title><rect x="276.3" y="883.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="279.3" y="894.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.19%)</title><rect x="276.3" y="867.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="279.3" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.19%)</title><rect x="276.3" y="851.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="279.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.97%)</title><rect x="278.6" y="947.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.97%)</title><rect x="278.6" y="931.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.78%)</title><rect x="280.9" y="915.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.78%)</title><rect x="280.9" y="899.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.78%)</title><rect x="280.9" y="883.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.9" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.78%)</title><rect x="280.9" y="867.0" width="9.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="283.9" y="878.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.78%)</title><rect x="280.9" y="851.0" width="9.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="283.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 19.65%)</title><rect x="290.1" y="947.0" width="231.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.1" y="958.0">java/util/concurrent/locks/Lock..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (100 samples, 19.46%)</title><rect x="292.4" y="931.0" width="229.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.4" y="942.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JavaThreadParkedState::~JavaThreadParkedState() (1 samples, 0.19%)</title><rect x="294.7" y="915.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="297.7" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (98 samples, 19.07%)</title><rect x="297.0" y="915.0" width="224.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="300.0" y="926.0">Unsafe_Park(JNIEnv_*, _jobject..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.19%)</title><rect x="297.0" y="899.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="300.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.19%)</title><rect x="299.3" y="899.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="302.3" y="910.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.19%)</title><rect x="299.3" y="883.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="302.3" y="894.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (1 samples, 0.19%)</title><rect x="299.3" y="867.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="302.3" y="878.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (1 samples, 0.19%)</title><rect x="299.3" y="851.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="302.3" y="862.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.19%)</title><rect x="299.3" y="835.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="302.3" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (90 samples, 17.51%)</title><rect x="301.6" y="899.0" width="206.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.6" y="910.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (2 samples, 0.39%)</title><rect x="301.6" y="883.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="304.6" y="894.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.19%)</title><rect x="301.6" y="867.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.6" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.19%)</title><rect x="303.9" y="867.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="306.9" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (85 samples, 16.54%)</title><rect x="306.1" y="883.0" width="195.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="309.1" y="894.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.58%)</title><rect x="501.3" y="883.0" width="6.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="504.3" y="894.0"></text>
</g>
<g>
<title>_pthread_testcancel (1 samples, 0.19%)</title><rect x="505.9" y="867.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="508.9" y="878.0"></text>
</g>
<g>
<title>Thread::last_handle_mark() const (1 samples, 0.19%)</title><rect x="508.2" y="899.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="511.2" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.19%)</title><rect x="510.5" y="899.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="513.5" y="910.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.19%)</title><rect x="510.5" y="883.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="513.5" y="894.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.19%)</title><rect x="510.5" y="867.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.5" y="878.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.19%)</title><rect x="510.5" y="851.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="513.5" y="862.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.19%)</title><rect x="510.5" y="835.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="513.5" y="846.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.19%)</title><rect x="510.5" y="819.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="513.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (2 samples, 0.39%)</title><rect x="512.8" y="899.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="515.8" y="910.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (2 samples, 0.39%)</title><rect x="512.8" y="883.0" width="4.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="515.8" y="894.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.19%)</title><rect x="515.1" y="867.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="518.1" y="878.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.19%)</title><rect x="517.4" y="899.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="520.4" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.19%)</title><rect x="519.6" y="899.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="522.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.58%)</title><rect x="521.9" y="963.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.58%)</title><rect x="521.9" y="947.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.58%)</title><rect x="521.9" y="931.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.58%)</title><rect x="521.9" y="915.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.58%)</title><rect x="521.9" y="899.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.58%)</title><rect x="521.9" y="883.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.9" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.58%)</title><rect x="521.9" y="867.0" width="6.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="524.9" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.58%)</title><rect x="521.9" y="851.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="524.9" y="862.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.58%)</title><rect x="521.9" y="835.0" width="6.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="524.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 1.36%)</title><rect x="528.8" y="963.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 1.36%)</title><rect x="528.8" y="947.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 1.36%)</title><rect x="528.8" y="931.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 1.36%)</title><rect x="528.8" y="915.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.17%)</title><rect x="531.1" y="899.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 1.17%)</title><rect x="531.1" y="883.0" width="13.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="534.1" y="894.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.78%)</title><rect x="531.1" y="867.0" width="9.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="534.1" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.19%)</title><rect x="540.3" y="867.0" width="2.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="543.3" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.19%)</title><rect x="542.6" y="867.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="545.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$216/963791286.run (31 samples, 6.03%)</title><rect x="544.9" y="995.0" width="71.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.9" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (31 samples, 6.03%)</title><rect x="544.9" y="979.0" width="71.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.9" y="990.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (31 samples, 6.03%)</title><rect x="544.9" y="963.0" width="71.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.9" y="974.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (31 samples, 6.03%)</title><rect x="544.9" y="947.0" width="71.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.9" y="958.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 6.03%)</title><rect x="544.9" y="931.0" width="71.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.9" y="942.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 6.03%)</title><rect x="544.9" y="915.0" width="71.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.9" y="926.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 6.03%)</title><rect x="544.9" y="899.0" width="71.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.9" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 6.03%)</title><rect x="544.9" y="883.0" width="71.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.9" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31 samples, 6.03%)</title><rect x="544.9" y="867.0" width="71.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.9" y="878.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (31 samples, 6.03%)</title><rect x="544.9" y="851.0" width="71.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.9" y="862.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (31 samples, 6.03%)</title><rect x="544.9" y="835.0" width="71.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.9" y="846.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4 samples, 0.78%)</title><rect x="544.9" y="819.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.78%)</title><rect x="544.9" y="803.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.78%)</title><rect x="544.9" y="787.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.78%)</title><rect x="544.9" y="771.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.78%)</title><rect x="544.9" y="755.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.9" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="544.9" y="739.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="547.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.39%)</title><rect x="547.2" y="739.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/1359396510.apply (2 samples, 0.39%)</title><rect x="547.2" y="723.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.39%)</title><rect x="547.2" y="707.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.39%)</title><rect x="547.2" y="691.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.39%)</title><rect x="547.2" y="675.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.39%)</title><rect x="547.2" y="659.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.19%)</title><rect x="549.5" y="643.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.19%)</title><rect x="549.5" y="627.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.19%)</title><rect x="551.8" y="739.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.19%)</title><rect x="551.8" y="723.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/259197969.apply (1 samples, 0.19%)</title><rect x="551.8" y="707.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.19%)</title><rect x="551.8" y="691.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.19%)</title><rect x="551.8" y="675.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1619277436.apply (1 samples, 0.19%)</title><rect x="551.8" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.19%)</title><rect x="551.8" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.19%)</title><rect x="551.8" y="627.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.19%)</title><rect x="551.8" y="611.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.19%)</title><rect x="554.1" y="819.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 5.06%)</title><rect x="556.4" y="819.0" width="59.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.4" y="830.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 5.06%)</title><rect x="556.4" y="803.0" width="59.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.4" y="814.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (26 samples, 5.06%)</title><rect x="556.4" y="787.0" width="59.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.4" y="798.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.19%)</title><rect x="556.4" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (25 samples, 4.86%)</title><rect x="558.7" y="771.0" width="57.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.7" y="782.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (25 samples, 4.86%)</title><rect x="558.7" y="755.0" width="57.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.7" y="766.0">jdk/in..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (24 samples, 4.67%)</title><rect x="558.7" y="739.0" width="55.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.7" y="750.0">java/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (24 samples, 4.67%)</title><rect x="558.7" y="723.0" width="55.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.7" y="734.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 4.67%)</title><rect x="558.7" y="707.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.7" y="718.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 4.67%)</title><rect x="558.7" y="691.0" width="55.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.7" y="702.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (23 samples, 4.47%)</title><rect x="558.7" y="675.0" width="52.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.7" y="686.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (21 samples, 4.09%)</title><rect x="563.3" y="659.0" width="48.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.3" y="670.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.19%)</title><rect x="563.3" y="643.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="566.3" y="654.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.19%)</title><rect x="563.3" y="627.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="566.3" y="638.0"></text>
</g>
<g>
<title>writev (20 samples, 3.89%)</title><rect x="565.6" y="643.0" width="45.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="568.6" y="654.0">writev</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.19%)</title><rect x="611.5" y="675.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.5" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.19%)</title><rect x="611.5" y="659.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.19%)</title><rect x="611.5" y="643.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.19%)</title><rect x="613.8" y="739.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (55 samples, 10.70%)</title><rect x="616.1" y="995.0" width="126.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.1" y="1006.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (55 samples, 10.70%)</title><rect x="616.1" y="979.0" width="126.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.1" y="990.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (30 samples, 5.84%)</title><rect x="616.1" y="963.0" width="68.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.1" y="974.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/127156101.run (30 samples, 5.84%)</title><rect x="616.1" y="947.0" width="68.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.1" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (30 samples, 5.84%)</title><rect x="616.1" y="931.0" width="68.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.1" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.19%)</title><rect x="616.1" y="915.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.19%)</title><rect x="616.1" y="899.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.19%)</title><rect x="616.1" y="883.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.19%)</title><rect x="616.1" y="867.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.19%)</title><rect x="616.1" y="851.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.19%)</title><rect x="616.1" y="835.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.19%)</title><rect x="616.1" y="819.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.19%)</title><rect x="616.1" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.19%)</title><rect x="616.1" y="787.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.19%)</title><rect x="616.1" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.19%)</title><rect x="616.1" y="755.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.1" y="766.0"></text>
</g>
<g>
<title>write (1 samples, 0.19%)</title><rect x="616.1" y="739.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="619.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (29 samples, 5.64%)</title><rect x="618.4" y="915.0" width="66.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.4" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (29 samples, 5.64%)</title><rect x="618.4" y="899.0" width="66.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.4" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 5.64%)</title><rect x="618.4" y="883.0" width="66.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.4" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 5.64%)</title><rect x="618.4" y="867.0" width="66.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.4" y="878.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (15 samples, 2.92%)</title><rect x="618.4" y="851.0" width="34.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.4" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 2.92%)</title><rect x="618.4" y="835.0" width="34.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.4" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 2.92%)</title><rect x="618.4" y="819.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.4" y="830.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="620.7" y="803.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="623.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 2.53%)</title><rect x="623.0" y="803.0" width="29.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.0" y="814.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 2.53%)</title><rect x="623.0" y="787.0" width="29.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.0" y="798.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (13 samples, 2.53%)</title><rect x="623.0" y="771.0" width="29.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.0" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 2.33%)</title><rect x="623.0" y="755.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11 samples, 2.14%)</title><rect x="623.0" y="739.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.0" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 2.14%)</title><rect x="623.0" y="723.0" width="25.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.0" y="734.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="623.0" y="707.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="626.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 1.56%)</title><rect x="625.3" y="707.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.19%)</title><rect x="625.3" y="691.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$204/425085055.apply (1 samples, 0.19%)</title><rect x="625.3" y="675.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1244729437.apply (7 samples, 1.36%)</title><rect x="627.5" y="691.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (7 samples, 1.36%)</title><rect x="627.5" y="675.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.19%)</title><rect x="627.5" y="659.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.19%)</title><rect x="627.5" y="643.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.19%)</title><rect x="627.5" y="627.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="627.5" y="611.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="630.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (6 samples, 1.17%)</title><rect x="629.8" y="659.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (6 samples, 1.17%)</title><rect x="629.8" y="643.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.97%)</title><rect x="629.8" y="627.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.39%)</title><rect x="629.8" y="611.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.19%)</title><rect x="629.8" y="595.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.19%)</title><rect x="632.1" y="595.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.19%)</title><rect x="632.1" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.19%)</title><rect x="632.1" y="563.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.19%)</title><rect x="632.1" y="547.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.19%)</title><rect x="632.1" y="531.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.58%)</title><rect x="634.4" y="611.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$239/1412023901.run (3 samples, 0.58%)</title><rect x="634.4" y="595.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.58%)</title><rect x="634.4" y="579.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.4" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.19%)</title><rect x="636.7" y="563.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="639.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.19%)</title><rect x="639.0" y="563.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.19%)</title><rect x="639.0" y="547.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.19%)</title><rect x="639.0" y="531.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.19%)</title><rect x="639.0" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.19%)</title><rect x="639.0" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.19%)</title><rect x="639.0" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.0" y="494.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.19%)</title><rect x="639.0" y="467.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.0" y="478.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.19%)</title><rect x="639.0" y="451.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="642.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/PutBodyHandler.apply (1 samples, 0.19%)</title><rect x="641.3" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (1 samples, 0.19%)</title><rect x="641.3" y="611.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (1 samples, 0.19%)</title><rect x="641.3" y="595.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.39%)</title><rect x="643.6" y="707.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.19%)</title><rect x="645.9" y="691.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.19%)</title><rect x="645.9" y="675.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$230/1575049250.apply (1 samples, 0.19%)</title><rect x="648.2" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.19%)</title><rect x="648.2" y="723.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.19%)</title><rect x="648.2" y="707.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.19%)</title><rect x="648.2" y="691.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.19%)</title><rect x="648.2" y="675.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.19%)</title><rect x="648.2" y="659.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.19%)</title><rect x="650.5" y="755.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.19%)</title><rect x="650.5" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.19%)</title><rect x="650.5" y="723.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (14 samples, 2.72%)</title><rect x="652.8" y="851.0" width="32.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.19%)</title><rect x="659.7" y="835.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.19%)</title><rect x="662.0" y="835.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.19%)</title><rect x="662.0" y="819.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.19%)</title><rect x="662.0" y="803.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (2 samples, 0.39%)</title><rect x="664.3" y="835.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.39%)</title><rect x="664.3" y="819.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.3" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.39%)</title><rect x="664.3" y="803.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.39%)</title><rect x="664.3" y="787.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (2 samples, 0.39%)</title><rect x="664.3" y="771.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.39%)</title><rect x="664.3" y="755.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.19%)</title><rect x="664.3" y="739.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.19%)</title><rect x="664.3" y="723.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.3" y="734.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.19%)</title><rect x="666.6" y="739.0" width="2.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="669.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (7 samples, 1.36%)</title><rect x="668.9" y="835.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (7 samples, 1.36%)</title><rect x="668.9" y="819.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="668.9" y="803.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.19%)</title><rect x="668.9" y="787.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.19%)</title><rect x="668.9" y="771.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.78%)</title><rect x="671.2" y="803.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.19%)</title><rect x="678.1" y="787.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.19%)</title><rect x="680.4" y="803.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.19%)</title><rect x="680.4" y="787.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.19%)</title><rect x="682.6" y="803.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$231/898661855.apply (1 samples, 0.19%)</title><rect x="682.6" y="787.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.19%)</title><rect x="682.6" y="771.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (25 samples, 4.86%)</title><rect x="684.9" y="963.0" width="57.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (25 samples, 4.86%)</title><rect x="684.9" y="947.0" width="57.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.9" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (25 samples, 4.86%)</title><rect x="684.9" y="931.0" width="57.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.9" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/127156101.run (24 samples, 4.67%)</title><rect x="687.2" y="915.0" width="55.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.2" y="926.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (24 samples, 4.67%)</title><rect x="687.2" y="899.0" width="55.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.2" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (24 samples, 4.67%)</title><rect x="687.2" y="883.0" width="55.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.2" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (23 samples, 4.47%)</title><rect x="689.5" y="867.0" width="52.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.5" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (23 samples, 4.47%)</title><rect x="689.5" y="851.0" width="52.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.5" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/826455082.run (14 samples, 2.72%)</title><rect x="689.5" y="835.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.5" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (14 samples, 2.72%)</title><rect x="689.5" y="819.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.5" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (14 samples, 2.72%)</title><rect x="689.5" y="803.0" width="32.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.5" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (14 samples, 2.72%)</title><rect x="689.5" y="787.0" width="32.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.5" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (14 samples, 2.72%)</title><rect x="689.5" y="771.0" width="32.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.5" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.19%)</title><rect x="691.8" y="755.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.19%)</title><rect x="691.8" y="739.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.19%)</title><rect x="691.8" y="723.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.8" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.19%)</title><rect x="691.8" y="707.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.19%)</title><rect x="691.8" y="691.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.19%)</title><rect x="694.1" y="755.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.19%)</title><rect x="694.1" y="739.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.19%)</title><rect x="694.1" y="723.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.19%)</title><rect x="694.1" y="707.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.1" y="718.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.19%)</title><rect x="694.1" y="691.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.19%)</title><rect x="694.1" y="675.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (11 samples, 2.14%)</title><rect x="696.4" y="755.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.4" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 2.14%)</title><rect x="696.4" y="739.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.4" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.58%)</title><rect x="696.4" y="723.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.58%)</title><rect x="696.4" y="707.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.58%)</title><rect x="696.4" y="691.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.39%)</title><rect x="696.4" y="675.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.39%)</title><rect x="696.4" y="659.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.39%)</title><rect x="696.4" y="643.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.19%)</title><rect x="698.7" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="638.0"></text>
</g>
<g>
<title>write (1 samples, 0.19%)</title><rect x="698.7" y="611.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="701.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.19%)</title><rect x="701.0" y="675.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.0" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.19%)</title><rect x="701.0" y="659.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="704.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.19%)</title><rect x="701.0" y="643.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="704.0" y="654.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.19%)</title><rect x="701.0" y="627.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="704.0" y="638.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.19%)</title><rect x="701.0" y="611.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="704.0" y="622.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.19%)</title><rect x="701.0" y="595.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="704.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 1.56%)</title><rect x="703.3" y="723.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 1.56%)</title><rect x="703.3" y="707.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 1.36%)</title><rect x="703.3" y="691.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.78%)</title><rect x="703.3" y="675.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.78%)</title><rect x="703.3" y="659.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.39%)</title><rect x="703.3" y="643.0" width="4.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="706.3" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.39%)</title><rect x="703.3" y="627.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="706.3" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.19%)</title><rect x="703.3" y="611.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="706.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.19%)</title><rect x="703.3" y="595.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="706.3" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.19%)</title><rect x="705.6" y="611.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="708.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.39%)</title><rect x="707.9" y="643.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.19%)</title><rect x="710.2" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.2" y="638.0"></text>
</g>
<g>
<title>write (1 samples, 0.19%)</title><rect x="710.2" y="611.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="713.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (3 samples, 0.58%)</title><rect x="712.5" y="675.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.58%)</title><rect x="712.5" y="659.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="715.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.58%)</title><rect x="712.5" y="643.0" width="6.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="715.5" y="654.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.39%)</title><rect x="712.5" y="627.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="715.5" y="638.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.19%)</title><rect x="717.1" y="627.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.1" y="638.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.19%)</title><rect x="717.1" y="611.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="720.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.19%)</title><rect x="719.4" y="691.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.19%)</title><rect x="719.4" y="675.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$243/1226749486.accept (2 samples, 0.39%)</title><rect x="721.7" y="835.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (2 samples, 0.39%)</title><rect x="721.7" y="819.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (2 samples, 0.39%)</title><rect x="721.7" y="803.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.39%)</title><rect x="721.7" y="787.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.39%)</title><rect x="721.7" y="771.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.39%)</title><rect x="721.7" y="755.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.39%)</title><rect x="721.7" y="739.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.19%)</title><rect x="721.7" y="723.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.19%)</title><rect x="721.7" y="707.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/1671017494.accept (1 samples, 0.19%)</title><rect x="721.7" y="691.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$248/1439928752.accept (1 samples, 0.19%)</title><rect x="724.0" y="723.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.19%)</title><rect x="724.0" y="707.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.19%)</title><rect x="724.0" y="691.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.0" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.19%)</title><rect x="724.0" y="675.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.0" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.19%)</title><rect x="724.0" y="659.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (7 samples, 1.36%)</title><rect x="726.3" y="835.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (7 samples, 1.36%)</title><rect x="726.3" y="819.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (7 samples, 1.36%)</title><rect x="726.3" y="803.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 1.36%)</title><rect x="726.3" y="787.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 1.36%)</title><rect x="726.3" y="771.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 1.36%)</title><rect x="726.3" y="755.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 1.36%)</title><rect x="726.3" y="739.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1034512206.accept (7 samples, 1.36%)</title><rect x="726.3" y="723.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (7 samples, 1.36%)</title><rect x="726.3" y="707.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 1.36%)</title><rect x="726.3" y="691.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 1.36%)</title><rect x="726.3" y="675.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 1.36%)</title><rect x="726.3" y="659.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 1.17%)</title><rect x="728.6" y="643.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.97%)</title><rect x="728.6" y="627.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.97%)</title><rect x="728.6" y="611.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.97%)</title><rect x="728.6" y="595.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.97%)</title><rect x="728.6" y="579.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.97%)</title><rect x="728.6" y="563.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.97%)</title><rect x="728.6" y="547.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.78%)</title><rect x="730.9" y="531.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.9" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.78%)</title><rect x="730.9" y="515.0" width="9.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="733.9" y="526.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list() (1 samples, 0.19%)</title><rect x="730.9" y="499.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="733.9" y="510.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.58%)</title><rect x="733.2" y="499.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="736.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.19%)</title><rect x="740.0" y="627.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (37 samples, 7.20%)</title><rect x="742.3" y="1043.0" width="85.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.3" y="1054.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (37 samples, 7.20%)</title><rect x="742.3" y="1027.0" width="85.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.3" y="1038.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (8 samples, 1.56%)</title><rect x="742.3" y="1011.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (1 samples, 0.19%)</title><rect x="742.3" y="995.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (1 samples, 0.19%)</title><rect x="742.3" y="979.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.3" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.19%)</title><rect x="742.3" y="963.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.3" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="947.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="745.3" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="931.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="745.3" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="915.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="745.3" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="899.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="745.3" y="910.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="883.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="745.3" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="867.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="745.3" y="878.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, methodHandle const&amp;, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="851.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="745.3" y="862.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.19%)</title><rect x="742.3" y="835.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="745.3" y="846.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.19%)</title><rect x="742.3" y="819.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="745.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (7 samples, 1.36%)</title><rect x="744.6" y="995.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (7 samples, 1.36%)</title><rect x="744.6" y="979.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (7 samples, 1.36%)</title><rect x="744.6" y="963.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 1.36%)</title><rect x="744.6" y="947.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 1.17%)</title><rect x="744.6" y="931.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 1.17%)</title><rect x="744.6" y="915.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 1.17%)</title><rect x="744.6" y="899.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.6" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="746.9" y="883.0" width="2.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="749.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.78%)</title><rect x="749.2" y="883.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.78%)</title><rect x="749.2" y="867.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.78%)</title><rect x="749.2" y="851.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.39%)</title><rect x="749.2" y="835.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.39%)</title><rect x="749.2" y="819.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.39%)</title><rect x="749.2" y="803.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.39%)</title><rect x="749.2" y="787.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.39%)</title><rect x="749.2" y="771.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.39%)</title><rect x="749.2" y="755.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.19%)</title><rect x="751.5" y="739.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="754.5" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.19%)</title><rect x="751.5" y="723.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="754.5" y="734.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.19%)</title><rect x="751.5" y="707.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="754.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.39%)</title><rect x="753.8" y="835.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.39%)</title><rect x="753.8" y="819.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.39%)</title><rect x="753.8" y="803.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.39%)</title><rect x="753.8" y="787.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.39%)</title><rect x="753.8" y="771.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.39%)</title><rect x="753.8" y="755.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="756.8" y="766.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="753.8" y="739.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="756.8" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.19%)</title><rect x="756.1" y="739.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="759.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.19%)</title><rect x="758.4" y="931.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (29 samples, 5.64%)</title><rect x="760.7" y="1011.0" width="66.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.7" y="1022.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.19%)</title><rect x="760.7" y="995.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.7" y="1006.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.19%)</title><rect x="760.7" y="979.0" width="2.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="763.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 5.45%)</title><rect x="763.0" y="995.0" width="64.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.0" y="1006.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (23 samples, 4.47%)</title><rect x="774.5" y="979.0" width="52.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="777.5" y="990.0">Unsaf..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.19%)</title><rect x="774.5" y="963.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="777.5" y="974.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.19%)</title><rect x="774.5" y="947.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="777.5" y="958.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.19%)</title><rect x="776.8" y="963.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="779.8" y="974.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (1 samples, 0.19%)</title><rect x="776.8" y="947.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="779.8" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (21 samples, 4.09%)</title><rect x="779.1" y="963.0" width="48.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="782.1" y="974.0">Park..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.19%)</title><rect x="779.1" y="947.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="782.1" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.19%)</title><rect x="779.1" y="931.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="782.1" y="942.0"></text>
</g>
<g>
<title>__gettimeofday (3 samples, 0.58%)</title><rect x="781.4" y="947.0" width="6.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="784.4" y="958.0"></text>
</g>
<g>
<title>__psynch_cvwait (16 samples, 3.11%)</title><rect x="788.2" y="947.0" width="36.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="791.2" y="958.0">__p..</text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.19%)</title><rect x="825.0" y="947.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="828.0" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.19%)</title><rect x="825.0" y="931.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="828.0" y="942.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.19%)</title><rect x="825.0" y="915.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="828.0" y="926.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.19%)</title><rect x="825.0" y="899.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="828.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (69 samples, 13.42%)</title><rect x="827.3" y="1043.0" width="158.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="1054.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.19%)</title><rect x="829.6" y="1027.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="832.6" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.19%)</title><rect x="829.6" y="1011.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="832.6" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.19%)</title><rect x="829.6" y="995.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="832.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.19%)</title><rect x="831.9" y="1027.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.19%)</title><rect x="831.9" y="1011.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.19%)</title><rect x="834.2" y="1027.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.2" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.78%)</title><rect x="836.5" y="1027.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$211/577911578.accept (4 samples, 0.78%)</title><rect x="836.5" y="1011.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (4 samples, 0.78%)</title><rect x="836.5" y="995.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (4 samples, 0.78%)</title><rect x="836.5" y="979.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (4 samples, 0.78%)</title><rect x="836.5" y="963.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (4 samples, 0.78%)</title><rect x="836.5" y="947.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.19%)</title><rect x="836.5" y="931.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.19%)</title><rect x="836.5" y="915.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.19%)</title><rect x="836.5" y="899.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.19%)</title><rect x="836.5" y="883.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.19%)</title><rect x="836.5" y="867.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.19%)</title><rect x="836.5" y="851.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (3 samples, 0.58%)</title><rect x="838.8" y="931.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.58%)</title><rect x="838.8" y="915.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.58%)</title><rect x="838.8" y="899.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.58%)</title><rect x="838.8" y="883.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3 samples, 0.58%)</title><rect x="838.8" y="867.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/237920033.run (3 samples, 0.58%)</title><rect x="838.8" y="851.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (3 samples, 0.58%)</title><rect x="838.8" y="835.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.19%)</title><rect x="838.8" y="819.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.19%)</title><rect x="838.8" y="803.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1 samples, 0.19%)</title><rect x="838.8" y="787.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="838.8" y="771.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.19%)</title><rect x="838.8" y="755.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.19%)</title><rect x="838.8" y="739.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.19%)</title><rect x="838.8" y="723.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.19%)</title><rect x="838.8" y="707.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.19%)</title><rect x="838.8" y="691.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.19%)</title><rect x="838.8" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.19%)</title><rect x="838.8" y="659.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.19%)</title><rect x="838.8" y="643.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.19%)</title><rect x="838.8" y="627.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2 samples, 0.39%)</title><rect x="841.1" y="819.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.39%)</title><rect x="841.1" y="803.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.39%)</title><rect x="841.1" y="787.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.39%)</title><rect x="841.1" y="771.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.39%)</title><rect x="841.1" y="755.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.39%)</title><rect x="841.1" y="739.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.39%)</title><rect x="841.1" y="723.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.1" y="734.0"></text>
</g>
<g>
<title>rpc_errlist (2 samples, 0.39%)</title><rect x="841.1" y="707.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="844.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.19%)</title><rect x="845.6" y="1027.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.6" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.19%)</title><rect x="847.9" y="1027.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.19%)</title><rect x="847.9" y="1011.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.9" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.19%)</title><rect x="847.9" y="995.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.9" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.19%)</title><rect x="847.9" y="979.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.19%)</title><rect x="847.9" y="963.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.19%)</title><rect x="847.9" y="947.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.19%)</title><rect x="847.9" y="931.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.9" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.19%)</title><rect x="847.9" y="915.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.9" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.19%)</title><rect x="847.9" y="899.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$208/154787494.accept (1 samples, 0.19%)</title><rect x="847.9" y="883.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.19%)</title><rect x="847.9" y="867.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.19%)</title><rect x="847.9" y="851.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.9" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.19%)</title><rect x="847.9" y="835.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.9" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.19%)</title><rect x="847.9" y="819.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.9" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.19%)</title><rect x="847.9" y="803.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (5 samples, 0.97%)</title><rect x="850.2" y="1027.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$165/36808983.run (4 samples, 0.78%)</title><rect x="850.2" y="1011.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (4 samples, 0.78%)</title><rect x="850.2" y="995.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.78%)</title><rect x="850.2" y="979.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.78%)</title><rect x="850.2" y="963.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.78%)</title><rect x="850.2" y="947.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4 samples, 0.78%)</title><rect x="850.2" y="931.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/237920033.run (4 samples, 0.78%)</title><rect x="850.2" y="915.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4 samples, 0.78%)</title><rect x="850.2" y="899.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (4 samples, 0.78%)</title><rect x="850.2" y="883.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.78%)</title><rect x="850.2" y="867.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (4 samples, 0.78%)</title><rect x="850.2" y="851.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.19%)</title><rect x="850.2" y="835.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.58%)</title><rect x="852.5" y="835.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.58%)</title><rect x="852.5" y="819.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.58%)</title><rect x="852.5" y="803.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.58%)</title><rect x="852.5" y="787.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.58%)</title><rect x="852.5" y="771.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.19%)</title><rect x="852.5" y="755.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.19%)</title><rect x="852.5" y="739.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.19%)</title><rect x="852.5" y="723.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.19%)</title><rect x="852.5" y="707.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.39%)</title><rect x="854.8" y="755.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.39%)</title><rect x="854.8" y="739.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.39%)</title><rect x="854.8" y="723.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.39%)</title><rect x="854.8" y="707.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.39%)</title><rect x="854.8" y="691.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.39%)</title><rect x="854.8" y="675.0" width="4.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="857.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::ThreadInVMfromNative(JavaThread*) (1 samples, 0.19%)</title><rect x="854.8" y="659.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="857.8" y="670.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="857.1" y="659.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="860.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$168/1154275978.run (1 samples, 0.19%)</title><rect x="859.4" y="1011.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1 samples, 0.19%)</title><rect x="859.4" y="995.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.19%)</title><rect x="859.4" y="979.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.19%)</title><rect x="859.4" y="963.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.19%)</title><rect x="859.4" y="947.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.19%)</title><rect x="859.4" y="931.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.19%)</title><rect x="859.4" y="915.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.19%)</title><rect x="859.4" y="899.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.19%)</title><rect x="859.4" y="883.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.19%)</title><rect x="859.4" y="867.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.4" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.19%)</title><rect x="859.4" y="851.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="862.4" y="862.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="859.4" y="835.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="862.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.19%)</title><rect x="861.7" y="1027.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.7" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.19%)</title><rect x="861.7" y="1011.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.7" y="1022.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.19%)</title><rect x="861.7" y="995.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.19%)</title><rect x="861.7" y="979.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.7" y="990.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.19%)</title><rect x="861.7" y="963.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="864.7" y="974.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.19%)</title><rect x="861.7" y="947.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="864.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3 samples, 0.58%)</title><rect x="864.0" y="1027.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.39%)</title><rect x="866.3" y="1011.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.39%)</title><rect x="866.3" y="995.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.19%)</title><rect x="868.6" y="979.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.19%)</title><rect x="868.6" y="963.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (49 samples, 9.53%)</title><rect x="870.9" y="1027.0" width="112.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="1038.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (49 samples, 9.53%)</title><rect x="870.9" y="1011.0" width="112.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.9" y="1022.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (49 samples, 9.53%)</title><rect x="870.9" y="995.0" width="112.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.9" y="1006.0">sun/nio/ch/KQu..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (41 samples, 7.98%)</title><rect x="870.9" y="979.0" width="94.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.9" y="990.0">sun/nio/ch/..</text>
</g>
<g>
<title>kevent (38 samples, 7.39%)</title><rect x="877.8" y="963.0" width="87.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="880.8" y="974.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 1.36%)</title><rect x="965.0" y="979.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.19%)</title><rect x="965.0" y="963.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.19%)</title><rect x="965.0" y="947.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (6 samples, 1.17%)</title><rect x="967.3" y="963.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (6 samples, 1.17%)</title><rect x="967.3" y="947.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.3" y="958.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 0.97%)</title><rect x="969.6" y="931.0" width="11.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="972.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.19%)</title><rect x="981.1" y="979.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.1" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.19%)</title><rect x="981.1" y="963.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.1" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.19%)</title><rect x="981.1" y="947.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.1" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.19%)</title><rect x="981.1" y="931.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.1" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.19%)</title><rect x="981.1" y="915.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.19%)</title><rect x="983.4" y="1027.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.19%)</title><rect x="983.4" y="1011.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.19%)</title><rect x="983.4" y="995.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (1 samples, 0.19%)</title><rect x="983.4" y="979.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.4" y="990.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.19%)</title><rect x="983.4" y="963.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="986.4" y="974.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (81 samples, 15.76%)</title><rect x="985.7" y="1043.0" width="185.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="988.7" y="1054.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (37 samples, 7.20%)</title><rect x="985.7" y="1027.0" width="84.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.7" y="1038.0">one/nio/ne..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (37 samples, 7.20%)</title><rect x="985.7" y="1011.0" width="84.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.7" y="1022.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 7.20%)</title><rect x="985.7" y="995.0" width="84.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.7" y="1006.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (37 samples, 7.20%)</title><rect x="985.7" y="979.0" width="84.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.7" y="990.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (36 samples, 7.00%)</title><rect x="985.7" y="963.0" width="82.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.7" y="974.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.19%)</title><rect x="992.6" y="947.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="995.6" y="958.0"></text>
</g>
<g>
<title>kevent (32 samples, 6.23%)</title><rect x="994.9" y="947.0" width="73.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="997.9" y="958.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.19%)</title><rect x="1068.3" y="963.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (1 samples, 0.19%)</title><rect x="1068.3" y="947.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (44 samples, 8.56%)</title><rect x="1070.6" y="1027.0" width="101.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.6" y="1038.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (44 samples, 8.56%)</title><rect x="1070.6" y="1011.0" width="101.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.6" y="1022.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 7.39%)</title><rect x="1070.6" y="995.0" width="87.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.6" y="1006.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 6.23%)</title><rect x="1077.5" y="979.0" width="73.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1080.5" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 6.23%)</title><rect x="1077.5" y="963.0" width="73.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.5" y="974.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (32 samples, 6.23%)</title><rect x="1077.5" y="947.0" width="73.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.5" y="958.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="1077.5" y="931.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.19%)</title><rect x="1079.8" y="931.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.19%)</title><rect x="1079.8" y="915.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.19%)</title><rect x="1079.8" y="899.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.19%)</title><rect x="1079.8" y="883.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (30 samples, 5.84%)</title><rect x="1082.1" y="931.0" width="68.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.1" y="942.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (30 samples, 5.84%)</title><rect x="1082.1" y="915.0" width="68.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.1" y="926.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (3 samples, 0.58%)</title><rect x="1082.1" y="899.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.58%)</title><rect x="1082.1" y="883.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.58%)</title><rect x="1082.1" y="867.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.39%)</title><rect x="1084.4" y="851.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.39%)</title><rect x="1084.4" y="835.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.39%)</title><rect x="1084.4" y="819.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.39%)</title><rect x="1084.4" y="803.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.39%)</title><rect x="1084.4" y="787.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.39%)</title><rect x="1084.4" y="771.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.39%)</title><rect x="1084.4" y="755.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.39%)</title><rect x="1084.4" y="739.0" width="4.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1087.4" y="750.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="1084.4" y="723.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1087.4" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.19%)</title><rect x="1086.7" y="723.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (2 samples, 0.39%)</title><rect x="1089.0" y="899.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1 samples, 0.19%)</title><rect x="1091.3" y="883.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (25 samples, 4.86%)</title><rect x="1093.6" y="899.0" width="57.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.6" y="910.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1093.6" y="883.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.19%)</title><rect x="1095.9" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.19%)</title><rect x="1095.9" y="867.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (15 samples, 2.92%)</title><rect x="1098.2" y="883.0" width="34.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.2" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15 samples, 2.92%)</title><rect x="1098.2" y="867.0" width="34.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.2" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15 samples, 2.92%)</title><rect x="1098.2" y="851.0" width="34.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.2" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15 samples, 2.92%)</title><rect x="1098.2" y="835.0" width="34.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.2" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.39%)</title><rect x="1100.5" y="819.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.19%)</title><rect x="1102.8" y="803.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.19%)</title><rect x="1102.8" y="787.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.19%)</title><rect x="1102.8" y="771.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7 samples, 1.36%)</title><rect x="1105.1" y="819.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.1" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.39%)</title><rect x="1105.1" y="803.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.19%)</title><rect x="1107.4" y="787.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.4" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="1107.4" y="771.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1110.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (5 samples, 0.97%)</title><rect x="1109.6" y="803.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.6" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (5 samples, 0.97%)</title><rect x="1109.6" y="787.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.6" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.97%)</title><rect x="1109.6" y="771.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.6" y="782.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.19%)</title><rect x="1109.6" y="755.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.6" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.39%)</title><rect x="1111.9" y="755.0" width="4.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.9" y="766.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.19%)</title><rect x="1111.9" y="739.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.9" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.19%)</title><rect x="1114.2" y="739.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.2" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.19%)</title><rect x="1114.2" y="723.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.2" y="734.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.19%)</title><rect x="1114.2" y="707.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.2" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.39%)</title><rect x="1116.5" y="755.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.5" y="766.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.39%)</title><rect x="1116.5" y="739.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.5" y="750.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.19%)</title><rect x="1118.8" y="723.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1121.1" y="819.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.19%)</title><rect x="1121.1" y="803.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.19%)</title><rect x="1121.1" y="787.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.19%)</title><rect x="1121.1" y="771.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (4 samples, 0.78%)</title><rect x="1123.4" y="819.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.58%)</title><rect x="1123.4" y="803.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.58%)</title><rect x="1123.4" y="787.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.58%)</title><rect x="1123.4" y="771.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.58%)</title><rect x="1123.4" y="755.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.58%)</title><rect x="1123.4" y="739.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.58%)</title><rect x="1123.4" y="723.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.58%)</title><rect x="1123.4" y="707.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.58%)</title><rect x="1123.4" y="691.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.58%)</title><rect x="1123.4" y="675.0" width="6.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1126.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.19%)</title><rect x="1123.4" y="659.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.4" y="670.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.19%)</title><rect x="1123.4" y="643.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.4" y="654.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.39%)</title><rect x="1125.7" y="659.0" width="4.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1128.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.19%)</title><rect x="1130.3" y="803.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.19%)</title><rect x="1130.3" y="787.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.19%)</title><rect x="1130.3" y="771.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.58%)</title><rect x="1132.6" y="883.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3 samples, 0.58%)</title><rect x="1132.6" y="867.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.58%)</title><rect x="1132.6" y="851.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.58%)</title><rect x="1132.6" y="835.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="1134.9" y="819.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1137.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.19%)</title><rect x="1137.2" y="819.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (1 samples, 0.19%)</title><rect x="1137.2" y="803.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.19%)</title><rect x="1137.2" y="787.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.2" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.19%)</title><rect x="1137.2" y="771.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.2" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.19%)</title><rect x="1137.2" y="755.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1140.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (3 samples, 0.58%)</title><rect x="1139.5" y="883.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.58%)</title><rect x="1139.5" y="867.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.58%)</title><rect x="1139.5" y="851.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.58%)</title><rect x="1139.5" y="835.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.58%)</title><rect x="1139.5" y="819.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.58%)</title><rect x="1139.5" y="803.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.58%)</title><rect x="1139.5" y="787.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.58%)</title><rect x="1139.5" y="771.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.58%)</title><rect x="1139.5" y="755.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.58%)</title><rect x="1139.5" y="739.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.5" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.58%)</title><rect x="1139.5" y="723.0" width="6.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1142.5" y="734.0"></text>
</g>
<g>
<title>Thread::current_or_null() (1 samples, 0.19%)</title><rect x="1139.5" y="707.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.5" y="718.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.19%)</title><rect x="1141.8" y="707.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1144.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.19%)</title><rect x="1144.1" y="707.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1147.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (2 samples, 0.39%)</title><rect x="1146.4" y="883.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.19%)</title><rect x="1146.4" y="867.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.4" y="878.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1146.4" y="851.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.19%)</title><rect x="1146.4" y="835.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.4" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.19%)</title><rect x="1146.4" y="819.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.4" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.19%)</title><rect x="1146.4" y="803.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.4" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.19%)</title><rect x="1146.4" y="787.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.19%)</title><rect x="1148.7" y="867.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.19%)</title><rect x="1148.7" y="851.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.19%)</title><rect x="1148.7" y="835.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/370370379.test (1 samples, 0.19%)</title><rect x="1148.7" y="819.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.19%)</title><rect x="1148.7" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.7" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.19%)</title><rect x="1148.7" y="787.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.19%)</title><rect x="1148.7" y="771.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.19%)</title><rect x="1148.7" y="755.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.19%)</title><rect x="1148.7" y="739.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.19%)</title><rect x="1148.7" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.19%)</title><rect x="1148.7" y="707.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.19%)</title><rect x="1148.7" y="691.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.19%)</title><rect x="1148.7" y="675.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.19%)</title><rect x="1148.7" y="659.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.19%)</title><rect x="1148.7" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.19%)</title><rect x="1151.0" y="979.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.0" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.39%)</title><rect x="1153.3" y="979.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1156.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.39%)</title><rect x="1153.3" y="963.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1155.6" y="947.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1155.6" y="931.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.19%)</title><rect x="1155.6" y="915.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.19%)</title><rect x="1155.6" y="899.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.6" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.19%)</title><rect x="1155.6" y="883.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.19%)</title><rect x="1155.6" y="867.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.6" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.19%)</title><rect x="1155.6" y="851.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.19%)</title><rect x="1155.6" y="835.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.19%)</title><rect x="1155.6" y="819.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.6" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (1 samples, 0.19%)</title><rect x="1155.6" y="803.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.17%)</title><rect x="1157.9" y="995.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 0.97%)</title><rect x="1157.9" y="979.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (5 samples, 0.97%)</title><rect x="1157.9" y="963.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.97%)</title><rect x="1157.9" y="947.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.97%)</title><rect x="1157.9" y="931.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.9" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.78%)</title><rect x="1157.9" y="915.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 0.78%)</title><rect x="1157.9" y="899.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.58%)</title><rect x="1160.2" y="883.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.2" y="894.0"></text>
</g>
<g>
<title>rpc_errlist (3 samples, 0.58%)</title><rect x="1160.2" y="867.0" width="6.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1163.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.19%)</title><rect x="1167.0" y="915.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.0" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.19%)</title><rect x="1167.0" y="899.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.0" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.19%)</title><rect x="1167.0" y="883.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.19%)</title><rect x="1169.3" y="979.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.listen (1 samples, 0.19%)</title><rect x="1169.3" y="963.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.3" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.19%)</title><rect x="1169.3" y="947.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.3" y="958.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.19%)</title><rect x="1169.3" y="931.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1172.3" y="942.0"></text>
</g>
<g>
<title>thread_start (8 samples, 1.56%)</title><rect x="1171.6" y="1043.0" width="18.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1174.6" y="1054.0"></text>
</g>
<g>
<title>_pthread_start (8 samples, 1.56%)</title><rect x="1171.6" y="1027.0" width="18.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1174.6" y="1038.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 1.56%)</title><rect x="1171.6" y="1011.0" width="18.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1174.6" y="1022.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 1.56%)</title><rect x="1171.6" y="995.0" width="18.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.6" y="1006.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.19%)</title><rect x="1171.6" y="979.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.6" y="990.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.19%)</title><rect x="1171.6" y="963.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.6" y="974.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.19%)</title><rect x="1171.6" y="947.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.6" y="958.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.19%)</title><rect x="1171.6" y="931.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.6" y="942.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.19%)</title><rect x="1171.6" y="915.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.6" y="926.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.19%)</title><rect x="1171.6" y="899.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.6" y="910.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.19%)</title><rect x="1171.6" y="883.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.19%)</title><rect x="1171.6" y="867.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.6" y="878.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 1.36%)</title><rect x="1173.9" y="979.0" width="16.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.9" y="990.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 1.36%)</title><rect x="1173.9" y="963.0" width="16.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.9" y="974.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.17%)</title><rect x="1173.9" y="947.0" width="13.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.9" y="958.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 1.17%)</title><rect x="1173.9" y="931.0" width="13.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.9" y="942.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 1.17%)</title><rect x="1173.9" y="915.0" width="13.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.9" y="926.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (6 samples, 1.17%)</title><rect x="1173.9" y="899.0" width="13.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.9" y="910.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.58%)</title><rect x="1173.9" y="883.0" width="6.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.9" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.58%)</title><rect x="1173.9" y="867.0" width="6.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.58%)</title><rect x="1173.9" y="851.0" width="6.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.19%)</title><rect x="1173.9" y="835.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.9" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.19%)</title><rect x="1176.2" y="835.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.2" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.19%)</title><rect x="1176.2" y="819.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.2" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.19%)</title><rect x="1178.5" y="835.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.5" y="846.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.19%)</title><rect x="1178.5" y="819.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.5" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.58%)</title><rect x="1180.8" y="883.0" width="6.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.8" y="894.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.19%)</title><rect x="1180.8" y="867.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.19%)</title><rect x="1180.8" y="851.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.19%)</title><rect x="1180.8" y="835.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.19%)</title><rect x="1180.8" y="819.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.19%)</title><rect x="1183.1" y="867.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.19%)</title><rect x="1183.1" y="851.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;PointsToNode*&gt;::append(PointsToNode* const&amp;) (1 samples, 0.19%)</title><rect x="1183.1" y="835.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.1" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.19%)</title><rect x="1185.4" y="867.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.4" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.19%)</title><rect x="1185.4" y="851.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.4" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.19%)</title><rect x="1185.4" y="835.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="846.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.19%)</title><rect x="1185.4" y="819.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.19%)</title><rect x="1185.4" y="803.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.4" y="814.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.19%)</title><rect x="1187.7" y="947.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.19%)</title><rect x="1187.7" y="931.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
</g>
</svg>
