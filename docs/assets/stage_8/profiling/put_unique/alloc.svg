<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (545 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.18%)</title><rect x="10.0" y="803.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="10.0" y="787.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (245 samples, 44.95%)</title><rect x="12.2" y="803.0" width="530.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (245 samples, 44.95%)</title><rect x="12.2" y="787.0" width="530.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (245 samples, 44.95%)</title><rect x="12.2" y="771.0" width="530.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.2" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (192 samples, 35.23%)</title><rect x="12.2" y="755.0" width="415.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.2" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 13.03%)</title><rect x="12.2" y="739.0" width="153.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="750.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (48 samples, 8.81%)</title><rect x="12.2" y="723.0" width="103.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="734.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/309436173.apply (48 samples, 8.81%)</title><rect x="12.2" y="707.0" width="103.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.2" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (48 samples, 8.81%)</title><rect x="12.2" y="691.0" width="103.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.2" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (48 samples, 8.81%)</title><rect x="12.2" y="675.0" width="103.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="686.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (48 samples, 8.81%)</title><rect x="12.2" y="659.0" width="103.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.2" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (48 samples, 8.81%)</title><rect x="12.2" y="643.0" width="103.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.2" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (48 samples, 8.81%)</title><rect x="12.2" y="627.0" width="103.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.2" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (35 samples, 6.42%)</title><rect x="12.2" y="611.0" width="75.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (35 samples, 6.42%)</title><rect x="12.2" y="595.0" width="75.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (34 samples, 6.24%)</title><rect x="12.2" y="579.0" width="73.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.2" y="590.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1374872547.apply (34 samples, 6.24%)</title><rect x="12.2" y="563.0" width="73.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.2" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (34 samples, 6.24%)</title><rect x="12.2" y="547.0" width="73.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.2" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (34 samples, 6.24%)</title><rect x="12.2" y="531.0" width="73.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.2" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/629584904.apply (34 samples, 6.24%)</title><rect x="12.2" y="515.0" width="73.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (34 samples, 6.24%)</title><rect x="12.2" y="499.0" width="73.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.2" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.37%)</title><rect x="12.2" y="483.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.37%)</title><rect x="12.2" y="467.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.18%)</title><rect x="12.2" y="451.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.18%)</title><rect x="14.3" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/259197969.apply (1 samples, 0.18%)</title><rect x="14.3" y="435.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.18%)</title><rect x="14.3" y="419.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.18%)</title><rect x="14.3" y="403.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1619277436.apply (1 samples, 0.18%)</title><rect x="14.3" y="387.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.18%)</title><rect x="14.3" y="371.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.18%)</title><rect x="14.3" y="355.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.18%)</title><rect x="14.3" y="339.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/1359396510.apply (1 samples, 0.18%)</title><rect x="14.3" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.18%)</title><rect x="14.3" y="307.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.18%)</title><rect x="14.3" y="291.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.18%)</title><rect x="14.3" y="275.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="14.3" y="259.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="14.3" y="243.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$230/1575049250.get$Lambda (1 samples, 0.18%)</title><rect x="14.3" y="227.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$230 (1 samples, 0.18%)</title><rect x="14.3" y="211.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="17.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (32 samples, 5.87%)</title><rect x="16.5" y="483.0" width="69.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (25 samples, 4.59%)</title><rect x="16.5" y="467.0" width="54.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (25 samples, 4.59%)</title><rect x="16.5" y="451.0" width="54.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.18%)</title><rect x="16.5" y="435.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$200/814395937.apply (23 samples, 4.22%)</title><rect x="18.7" y="435.0" width="49.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.7" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (23 samples, 4.22%)</title><rect x="18.7" y="419.0" width="49.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.7" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (23 samples, 4.22%)</title><rect x="18.7" y="403.0" width="49.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.7" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.55%)</title><rect x="18.7" y="387.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.55%)</title><rect x="18.7" y="371.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.55%)</title><rect x="18.7" y="355.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.7" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.55%)</title><rect x="18.7" y="339.0" width="6.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.37%)</title><rect x="25.2" y="387.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.37%)</title><rect x="25.2" y="371.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="25.2" y="355.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.2" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="25.2" y="339.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="28.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (14 samples, 2.57%)</title><rect x="29.5" y="387.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.5" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4 samples, 0.73%)</title><rect x="29.5" y="371.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.18%)</title><rect x="29.5" y="355.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.18%)</title><rect x="29.5" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.18%)</title><rect x="29.5" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="29.5" y="307.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.5" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="29.5" y="291.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="32.5" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$218/1837240959.test (3 samples, 0.55%)</title><rect x="31.7" y="355.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.7" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.55%)</title><rect x="31.7" y="339.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (3 samples, 0.55%)</title><rect x="31.7" y="323.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.55%)</title><rect x="31.7" y="307.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.7" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (3 samples, 0.55%)</title><rect x="31.7" y="291.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.55%)</title><rect x="31.7" y="275.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (3 samples, 0.55%)</title><rect x="31.7" y="259.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.55%)</title><rect x="31.7" y="243.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.55%)</title><rect x="31.7" y="227.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.55%)</title><rect x="31.7" y="211.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.37%)</title><rect x="31.7" y="195.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.18%)</title><rect x="36.0" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.0" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="36.0" y="179.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="39.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (10 samples, 1.83%)</title><rect x="38.1" y="371.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.1" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 1.83%)</title><rect x="38.1" y="355.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 1.83%)</title><rect x="38.1" y="339.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 1.83%)</title><rect x="38.1" y="323.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.1" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (10 samples, 1.83%)</title><rect x="38.1" y="307.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.1" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 1.83%)</title><rect x="38.1" y="291.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.1" y="302.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="38.1" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="38.1" y="259.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1295748493.get$Lambda (1 samples, 0.18%)</title><rect x="38.1" y="243.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.1" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.18%)</title><rect x="38.1" y="227.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="41.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.18%)</title><rect x="40.3" y="275.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1295748493.accept (1 samples, 0.18%)</title><rect x="40.3" y="259.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.18%)</title><rect x="40.3" y="243.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.18%)</title><rect x="40.3" y="227.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.18%)</title><rect x="40.3" y="211.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.18%)</title><rect x="40.3" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.18%)</title><rect x="40.3" y="179.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="40.3" y="163.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.18%)</title><rect x="40.3" y="147.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="43.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.37%)</title><rect x="42.5" y="275.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.37%)</title><rect x="42.5" y="259.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.37%)</title><rect x="42.5" y="243.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.37%)</title><rect x="42.5" y="227.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.37%)</title><rect x="42.5" y="211.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 1.10%)</title><rect x="46.8" y="275.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 1.10%)</title><rect x="46.8" y="259.0" width="13.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.18%)</title><rect x="59.8" y="387.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="59.8" y="371.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.18%)</title><rect x="59.8" y="355.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (1 samples, 0.18%)</title><rect x="59.8" y="339.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="59.8" y="323.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.18%)</title><rect x="59.8" y="307.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.18%)</title><rect x="59.8" y="291.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.8" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="59.8" y="275.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.37%)</title><rect x="62.0" y="387.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.37%)</title><rect x="62.0" y="371.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.37%)</title><rect x="62.0" y="355.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.37%)</title><rect x="62.0" y="339.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (2 samples, 0.37%)</title><rect x="62.0" y="323.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.37%)</title><rect x="62.0" y="307.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.18%)</title><rect x="62.0" y="291.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="62.0" y="275.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.18%)</title><rect x="64.1" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.18%)</title><rect x="64.1" y="275.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.1" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="64.1" y="259.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="67.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.18%)</title><rect x="66.3" y="387.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.18%)</title><rect x="66.3" y="371.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="69.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="68.5" y="435.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="68.5" y="419.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="68.5" y="403.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="71.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1 samples, 0.18%)</title><rect x="70.6" y="467.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="72.8" y="467.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="75.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.92%)</title><rect x="75.0" y="467.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="75.0" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="75.0" y="435.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$189/142830673.get$Lambda (1 samples, 0.18%)</title><rect x="75.0" y="419.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$189 (1 samples, 0.18%)</title><rect x="75.0" y="403.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.55%)</title><rect x="77.1" y="451.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.55%)</title><rect x="77.1" y="435.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.55%)</title><rect x="77.1" y="419.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.55%)</title><rect x="77.1" y="403.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.55%)</title><rect x="77.1" y="387.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.55%)</title><rect x="77.1" y="371.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/127156101.run (3 samples, 0.55%)</title><rect x="77.1" y="355.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.55%)</title><rect x="77.1" y="339.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.55%)</title><rect x="77.1" y="323.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.18%)</title><rect x="77.1" y="307.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.37%)</title><rect x="79.3" y="307.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.37%)</title><rect x="79.3" y="291.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.18%)</title><rect x="79.3" y="275.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="82.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.18%)</title><rect x="81.4" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.18%)</title><rect x="81.4" y="259.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="84.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.18%)</title><rect x="83.6" y="451.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.6" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.18%)</title><rect x="83.6" y="435.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="85.8" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="85.8" y="563.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="85.8" y="547.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="88.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (13 samples, 2.39%)</title><rect x="87.9" y="611.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (13 samples, 2.39%)</title><rect x="87.9" y="595.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.9" y="606.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (12 samples, 2.20%)</title><rect x="87.9" y="579.0" width="26.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (12 samples, 2.20%)</title><rect x="87.9" y="563.0" width="26.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 2.20%)</title><rect x="87.9" y="547.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.9" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/400135010.apply (12 samples, 2.20%)</title><rect x="87.9" y="531.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (12 samples, 2.20%)</title><rect x="87.9" y="515.0" width="26.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (12 samples, 2.20%)</title><rect x="87.9" y="499.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.9" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.37%)</title><rect x="87.9" y="483.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.37%)</title><rect x="87.9" y="467.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.37%)</title><rect x="87.9" y="451.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/728014953.apply (2 samples, 0.37%)</title><rect x="87.9" y="435.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.37%)</title><rect x="87.9" y="419.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.37%)</title><rect x="87.9" y="403.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.37%)</title><rect x="87.9" y="387.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.18%)</title><rect x="87.9" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.9" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.18%)</title><rect x="87.9" y="355.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.18%)</title><rect x="87.9" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.9" y="350.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="87.9" y="323.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.18%)</title><rect x="90.1" y="371.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.18%)</title><rect x="90.1" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.18%)</title><rect x="90.1" y="339.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="93.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (10 samples, 1.83%)</title><rect x="92.3" y="483.0" width="21.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.3" y="494.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1 samples, 0.18%)</title><rect x="92.3" y="467.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="95.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (8 samples, 1.47%)</title><rect x="94.4" y="467.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.18%)</title><rect x="94.4" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.18%)</title><rect x="94.4" y="435.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="97.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1 samples, 0.18%)</title><rect x="96.6" y="451.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1 samples, 0.18%)</title><rect x="98.8" y="451.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="101.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.37%)</title><rect x="100.9" y="451.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.18%)</title><rect x="100.9" y="435.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.18%)</title><rect x="100.9" y="419.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.18%)</title><rect x="103.1" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.18%)</title><rect x="103.1" y="419.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="106.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.37%)</title><rect x="105.3" y="451.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.18%)</title><rect x="105.3" y="435.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.18%)</title><rect x="105.3" y="419.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="108.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.18%)</title><rect x="107.4" y="435.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.18%)</title><rect x="107.4" y="419.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.18%)</title><rect x="107.4" y="403.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="110.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.18%)</title><rect x="109.6" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.6" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.18%)</title><rect x="109.6" y="435.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/540518633.run (1 samples, 0.18%)</title><rect x="109.6" y="419.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.18%)</title><rect x="109.6" y="403.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.6" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.18%)</title><rect x="109.6" y="387.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.6" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.18%)</title><rect x="109.6" y="371.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.18%)</title><rect x="109.6" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.18%)</title><rect x="109.6" y="339.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.18%)</title><rect x="109.6" y="323.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.6" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.18%)</title><rect x="109.6" y="307.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="112.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.18%)</title><rect x="111.8" y="467.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="111.8" y="451.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="114.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.18%)</title><rect x="113.9" y="579.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.18%)</title><rect x="113.9" y="563.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.18%)</title><rect x="113.9" y="547.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/11331426.linkToTargetMethod (1 samples, 0.18%)</title><rect x="113.9" y="531.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1898357708.invoke (1 samples, 0.18%)</title><rect x="113.9" y="515.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/539071139.invoke (1 samples, 0.18%)</title><rect x="113.9" y="499.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="113.9" y="483.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.18%)</title><rect x="113.9" y="467.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.18%)</title><rect x="113.9" y="451.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.9" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="113.9" y="435.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="116.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 4.22%)</title><rect x="116.1" y="723.0" width="49.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.1" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 4.22%)</title><rect x="116.1" y="707.0" width="49.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.1" y="718.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.accept (23 samples, 4.22%)</title><rect x="116.1" y="691.0" width="49.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.1" y="702.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (23 samples, 4.22%)</title><rect x="116.1" y="675.0" width="49.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.1" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (23 samples, 4.22%)</title><rect x="116.1" y="659.0" width="49.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.1" y="670.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (23 samples, 4.22%)</title><rect x="116.1" y="643.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.1" y="654.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 3.49%)</title><rect x="116.1" y="627.0" width="41.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.1" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 2.57%)</title><rect x="116.1" y="611.0" width="30.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.1" y="622.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 2.57%)</title><rect x="116.1" y="595.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.1" y="606.0">on..</text>
</g>
<g>
<title>byte[] (14 samples, 2.57%)</title><rect x="116.1" y="579.0" width="30.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="119.1" y="590.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.92%)</title><rect x="146.4" y="611.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.92%)</title><rect x="146.4" y="595.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.92%)</title><rect x="146.4" y="579.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (5 samples, 0.92%)</title><rect x="146.4" y="563.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.92%)</title><rect x="146.4" y="547.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.92%)</title><rect x="146.4" y="531.0" width="10.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="149.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.73%)</title><rect x="157.2" y="627.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.73%)</title><rect x="157.2" y="611.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.73%)</title><rect x="157.2" y="595.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="157.2" y="579.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="160.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.55%)</title><rect x="159.4" y="579.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.55%)</title><rect x="159.4" y="563.0" width="6.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="162.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$267/1136289734.get (121 samples, 22.20%)</title><rect x="165.9" y="739.0" width="262.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.9" y="750.0">ru/mail/polis/service/ReplicationHa..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (121 samples, 22.20%)</title><rect x="165.9" y="723.0" width="262.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.9" y="734.0">ru/mail/polis/service/ReplicationHa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 1.47%)</title><rect x="165.9" y="707.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 1.47%)</title><rect x="165.9" y="691.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 1.47%)</title><rect x="165.9" y="675.0" width="17.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="168.9" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.37%)</title><rect x="183.2" y="707.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="186.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 3.30%)</title><rect x="187.5" y="707.0" width="39.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.5" y="718.0">one..</text>
</g>
<g>
<title>byte[] (3 samples, 0.55%)</title><rect x="187.5" y="691.0" width="6.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="190.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 1.28%)</title><rect x="194.0" y="691.0" width="15.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="197.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.92%)</title><rect x="209.2" y="691.0" width="10.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="212.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.37%)</title><rect x="220.0" y="691.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.0" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.37%)</title><rect x="220.0" y="675.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.0" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.37%)</title><rect x="220.0" y="659.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.37%)</title><rect x="220.0" y="643.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.0" y="654.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="220.0" y="627.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="223.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.18%)</title><rect x="224.3" y="691.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.18%)</title><rect x="224.3" y="675.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="224.3" y="659.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="227.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (70 samples, 12.84%)</title><rect x="226.5" y="707.0" width="151.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.5" y="718.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (60 samples, 11.01%)</title><rect x="226.5" y="691.0" width="129.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.5" y="702.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 8.62%)</title><rect x="226.5" y="675.0" width="101.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.5" y="686.0">java/nio/Byt..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 1.28%)</title><rect x="226.5" y="659.0" width="15.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="229.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 7.34%)</title><rect x="241.7" y="659.0" width="86.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.7" y="670.0">java/nio/H..</text>
</g>
<g>
<title>byte[] (25 samples, 4.59%)</title><rect x="241.7" y="643.0" width="54.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="244.7" y="654.0">byte[]</text>
</g>
<g>
<title>byte[] (15 samples, 2.75%)</title><rect x="295.8" y="643.0" width="32.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.8" y="654.0">by..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 2.39%)</title><rect x="328.3" y="675.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.3" y="686.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 2.39%)</title><rect x="328.3" y="659.0" width="28.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="331.3" y="670.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveExistingValue (4 samples, 0.73%)</title><rect x="356.4" y="691.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.4" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (4 samples, 0.73%)</title><rect x="356.4" y="675.0" width="8.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="359.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (6 samples, 1.10%)</title><rect x="365.1" y="691.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.1" y="702.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.10%)</title><rect x="365.1" y="675.0" width="13.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="368.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (23 samples, 4.22%)</title><rect x="378.1" y="707.0" width="49.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.1" y="718.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 1.10%)</title><rect x="378.1" y="691.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 1.10%)</title><rect x="378.1" y="675.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 1.10%)</title><rect x="378.1" y="659.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 1.10%)</title><rect x="378.1" y="643.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.1" y="654.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.10%)</title><rect x="378.1" y="627.0" width="13.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="381.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 3.12%)</title><rect x="391.1" y="691.0" width="36.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.1" y="702.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 3.12%)</title><rect x="391.1" y="675.0" width="36.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.1" y="686.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 3.12%)</title><rect x="391.1" y="659.0" width="36.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="394.1" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.92%)</title><rect x="427.9" y="755.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.92%)</title><rect x="427.9" y="739.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.18%)</title><rect x="427.9" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.18%)</title><rect x="427.9" y="707.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.18%)</title><rect x="427.9" y="691.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.18%)</title><rect x="427.9" y="675.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.accept (1 samples, 0.18%)</title><rect x="427.9" y="659.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (1 samples, 0.18%)</title><rect x="427.9" y="643.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (1 samples, 0.18%)</title><rect x="427.9" y="627.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.18%)</title><rect x="427.9" y="611.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.18%)</title><rect x="427.9" y="595.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.18%)</title><rect x="427.9" y="579.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.18%)</title><rect x="427.9" y="563.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.9" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="427.9" y="547.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="430.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$268/564410932.apply (3 samples, 0.55%)</title><rect x="430.0" y="723.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$2 (3 samples, 0.55%)</title><rect x="430.0" y="707.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.55%)</title><rect x="430.0" y="691.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.0" y="702.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.18%)</title><rect x="430.0" y="675.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="433.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.18%)</title><rect x="432.2" y="675.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="435.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.18%)</title><rect x="434.4" y="675.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.18%)</title><rect x="434.4" y="659.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.18%)</title><rect x="434.4" y="643.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.4" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="434.4" y="627.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="437.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$269/1322312277.apply (1 samples, 0.18%)</title><rect x="436.5" y="723.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$futureHelper$3 (1 samples, 0.18%)</title><rect x="436.5" y="707.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.18%)</title><rect x="436.5" y="691.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.18%)</title><rect x="436.5" y="675.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.18%)</title><rect x="436.5" y="659.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (1 samples, 0.18%)</title><rect x="436.5" y="643.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.18%)</title><rect x="436.5" y="627.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="439.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 1.28%)</title><rect x="438.7" y="755.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 1.28%)</title><rect x="438.7" y="739.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.28%)</title><rect x="438.7" y="723.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 1.28%)</title><rect x="438.7" y="707.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 1.28%)</title><rect x="438.7" y="691.0" width="15.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="441.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$216/963791286.run (10 samples, 1.83%)</title><rect x="453.9" y="755.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.9" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (10 samples, 1.83%)</title><rect x="453.9" y="739.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.9" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (10 samples, 1.83%)</title><rect x="453.9" y="723.0" width="21.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (10 samples, 1.83%)</title><rect x="453.9" y="707.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 1.83%)</title><rect x="453.9" y="691.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 1.83%)</title><rect x="453.9" y="675.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.9" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 1.83%)</title><rect x="453.9" y="659.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.9" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 1.83%)</title><rect x="453.9" y="643.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.9" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 1.83%)</title><rect x="453.9" y="627.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 1.83%)</title><rect x="453.9" y="611.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.9" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (10 samples, 1.83%)</title><rect x="453.9" y="595.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.9" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (9 samples, 1.65%)</title><rect x="453.9" y="579.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 1.65%)</title><rect x="453.9" y="563.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 1.65%)</title><rect x="453.9" y="547.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9 samples, 1.65%)</title><rect x="453.9" y="531.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 1.65%)</title><rect x="453.9" y="515.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 1.65%)</title><rect x="453.9" y="499.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 1.65%)</title><rect x="453.9" y="483.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/259197969.apply (9 samples, 1.65%)</title><rect x="453.9" y="467.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 1.65%)</title><rect x="453.9" y="451.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 1.65%)</title><rect x="453.9" y="435.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1619277436.apply (9 samples, 1.65%)</title><rect x="453.9" y="419.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 1.65%)</title><rect x="453.9" y="403.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.18%)</title><rect x="453.9" y="387.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.18%)</title><rect x="453.9" y="371.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.18%)</title><rect x="453.9" y="355.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="453.9" y="339.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="453.9" y="323.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="453.9" y="307.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="456.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8 samples, 1.47%)</title><rect x="456.0" y="387.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="456.0" y="371.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="456.0" y="355.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$274/25722193.get$Lambda (1 samples, 0.18%)</title><rect x="456.0" y="339.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$274 (1 samples, 0.18%)</title><rect x="456.0" y="323.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="459.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.18%)</title><rect x="458.2" y="371.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.18%)</title><rect x="458.2" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.18%)</title><rect x="458.2" y="339.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$274/25722193.accept (1 samples, 0.18%)</title><rect x="458.2" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.18%)</title><rect x="458.2" y="307.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.18%)</title><rect x="458.2" y="291.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.18%)</title><rect x="458.2" y="275.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.18%)</title><rect x="458.2" y="259.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.18%)</title><rect x="458.2" y="243.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.18%)</title><rect x="458.2" y="227.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.18%)</title><rect x="458.2" y="211.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.18%)</title><rect x="458.2" y="195.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.18%)</title><rect x="458.2" y="179.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.18%)</title><rect x="458.2" y="163.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.18%)</title><rect x="458.2" y="147.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.18%)</title><rect x="458.2" y="131.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.18%)</title><rect x="458.2" y="115.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.18%)</title><rect x="458.2" y="99.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.18%)</title><rect x="458.2" y="83.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.18%)</title><rect x="458.2" y="67.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.18%)</title><rect x="458.2" y="51.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.18%)</title><rect x="458.2" y="35.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="461.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6 samples, 1.10%)</title><rect x="460.3" y="371.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.18%)</title><rect x="460.3" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.18%)</title><rect x="460.3" y="339.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="460.3" y="323.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="463.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5 samples, 0.92%)</title><rect x="462.5" y="355.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2 samples, 0.37%)</title><rect x="462.5" y="339.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (1 samples, 0.18%)</title><rect x="462.5" y="323.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="465.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.18%)</title><rect x="464.7" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.18%)</title><rect x="464.7" y="307.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.18%)</title><rect x="464.7" y="291.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="467.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.55%)</title><rect x="466.8" y="339.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.37%)</title><rect x="466.8" y="323.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.37%)</title><rect x="466.8" y="307.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.8" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="466.8" y="291.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="469.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.18%)</title><rect x="471.2" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.18%)</title><rect x="471.2" y="307.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.18%)</title><rect x="471.2" y="291.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.18%)</title><rect x="471.2" y="275.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="471.2" y="259.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="471.2" y="243.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.18%)</title><rect x="471.2" y="227.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="474.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.18%)</title><rect x="473.3" y="579.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.18%)</title><rect x="473.3" y="563.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.18%)</title><rect x="473.3" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.18%)</title><rect x="473.3" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.18%)</title><rect x="473.3" y="515.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.18%)</title><rect x="473.3" y="499.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.18%)</title><rect x="473.3" y="483.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.18%)</title><rect x="473.3" y="467.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="476.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 5.69%)</title><rect x="475.5" y="755.0" width="67.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.5" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31 samples, 5.69%)</title><rect x="475.5" y="739.0" width="67.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.5" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (29 samples, 5.32%)</title><rect x="475.5" y="723.0" width="62.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.5" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/127156101.run (29 samples, 5.32%)</title><rect x="475.5" y="707.0" width="62.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.5" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (29 samples, 5.32%)</title><rect x="475.5" y="691.0" width="62.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.5" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.18%)</title><rect x="475.5" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.18%)</title><rect x="475.5" y="659.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.18%)</title><rect x="475.5" y="643.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.18%)</title><rect x="475.5" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.18%)</title><rect x="475.5" y="611.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="475.5" y="595.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="475.5" y="579.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$217/1394754188.get$Lambda (1 samples, 0.18%)</title><rect x="475.5" y="563.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$217 (1 samples, 0.18%)</title><rect x="475.5" y="547.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="478.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (28 samples, 5.14%)</title><rect x="477.7" y="675.0" width="60.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.7" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (28 samples, 5.14%)</title><rect x="477.7" y="659.0" width="60.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.7" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (28 samples, 5.14%)</title><rect x="477.7" y="643.0" width="60.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.7" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (28 samples, 5.14%)</title><rect x="477.7" y="627.0" width="60.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.7" y="638.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 2.20%)</title><rect x="477.7" y="611.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.7" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 2.20%)</title><rect x="477.7" y="595.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.7" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 2.20%)</title><rect x="477.7" y="579.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 2.20%)</title><rect x="477.7" y="563.0" width="26.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.7" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 2.20%)</title><rect x="477.7" y="547.0" width="26.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (12 samples, 2.20%)</title><rect x="477.7" y="531.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 2.20%)</title><rect x="477.7" y="515.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 2.20%)</title><rect x="477.7" y="499.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 2.20%)</title><rect x="477.7" y="483.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.7" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12 samples, 2.20%)</title><rect x="477.7" y="467.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.7" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1244729437.apply (12 samples, 2.20%)</title><rect x="477.7" y="451.0" width="26.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.7" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12 samples, 2.20%)</title><rect x="477.7" y="435.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (12 samples, 2.20%)</title><rect x="477.7" y="419.0" width="26.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.18%)</title><rect x="477.7" y="403.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.18%)</title><rect x="477.7" y="387.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="477.7" y="371.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="477.7" y="355.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="477.7" y="339.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="480.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (11 samples, 2.02%)</title><rect x="479.8" y="403.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.8" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (11 samples, 2.02%)</title><rect x="479.8" y="387.0" width="23.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.8" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="479.8" y="371.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="479.8" y="355.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1958621018.get$Lambda (1 samples, 0.18%)</title><rect x="479.8" y="339.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$253 (1 samples, 0.18%)</title><rect x="479.8" y="323.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="482.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.73%)</title><rect x="482.0" y="371.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.18%)</title><rect x="482.0" y="355.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.18%)</title><rect x="482.0" y="339.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.18%)</title><rect x="482.0" y="323.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="485.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.55%)</title><rect x="484.2" y="355.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.55%)</title><rect x="484.2" y="339.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.55%)</title><rect x="484.2" y="323.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.18%)</title><rect x="484.2" y="307.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.18%)</title><rect x="484.2" y="291.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.18%)</title><rect x="484.2" y="275.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.18%)</title><rect x="484.2" y="259.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="487.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$236/1212004647.get (1 samples, 0.18%)</title><rect x="486.3" y="307.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1 samples, 0.18%)</title><rect x="486.3" y="291.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="489.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.18%)</title><rect x="488.5" y="307.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.18%)</title><rect x="488.5" y="291.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.5" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.18%)</title><rect x="488.5" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.5" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1 samples, 0.18%)</title><rect x="488.5" y="259.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="491.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (2 samples, 0.37%)</title><rect x="490.7" y="371.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="493.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.73%)</title><rect x="495.0" y="371.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$239/1412023901.run (4 samples, 0.73%)</title><rect x="495.0" y="355.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.73%)</title><rect x="495.0" y="339.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="495.0" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="495.0" y="307.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/1671017494.get$Lambda (1 samples, 0.18%)</title><rect x="495.0" y="291.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$246 (1 samples, 0.18%)</title><rect x="495.0" y="275.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="498.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.18%)</title><rect x="497.2" y="323.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.18%)</title><rect x="497.2" y="307.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="497.2" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="497.2" y="275.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="497.2" y="259.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="500.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.18%)</title><rect x="499.3" y="323.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="499.3" y="307.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (1 samples, 0.18%)</title><rect x="499.3" y="291.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="499.3" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.18%)</title><rect x="499.3" y="259.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.18%)</title><rect x="499.3" y="243.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.3" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="499.3" y="227.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="502.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.18%)</title><rect x="501.5" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1 samples, 0.18%)</title><rect x="501.5" y="307.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="504.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (16 samples, 2.94%)</title><rect x="503.7" y="611.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.7" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.18%)</title><rect x="503.7" y="595.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.18%)</title><rect x="503.7" y="579.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.18%)</title><rect x="503.7" y="563.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.18%)</title><rect x="503.7" y="547.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="503.7" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="503.7" y="515.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="506.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.18%)</title><rect x="505.8" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.18%)</title><rect x="505.8" y="579.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.18%)</title><rect x="505.8" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.18%)</title><rect x="505.8" y="547.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="505.8" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.8" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="505.8" y="515.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="508.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4 samples, 0.73%)</title><rect x="508.0" y="595.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.73%)</title><rect x="508.0" y="579.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.73%)</title><rect x="508.0" y="563.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.18%)</title><rect x="508.0" y="547.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="511.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.55%)</title><rect x="510.1" y="547.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (3 samples, 0.55%)</title><rect x="510.1" y="531.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.55%)</title><rect x="510.1" y="515.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.1" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.18%)</title><rect x="510.1" y="499.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.18%)</title><rect x="510.1" y="483.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.18%)</title><rect x="510.1" y="467.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.18%)</title><rect x="510.1" y="451.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.18%)</title><rect x="510.1" y="435.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="513.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.37%)</title><rect x="512.3" y="499.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.37%)</title><rect x="512.3" y="483.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="515.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (10 samples, 1.83%)</title><rect x="516.6" y="595.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.6" y="606.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.37%)</title><rect x="516.6" y="579.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.37%)</title><rect x="516.6" y="563.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="516.6" y="547.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.6" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="516.6" y="531.0" width="4.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 1.47%)</title><rect x="521.0" y="579.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.55%)</title><rect x="521.0" y="563.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.55%)</title><rect x="521.0" y="547.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="521.0" y="531.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="524.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="523.1" y="531.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.1" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="523.1" y="515.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="526.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.37%)</title><rect x="527.5" y="563.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.37%)</title><rect x="527.5" y="547.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.5" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="527.5" y="531.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="530.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.18%)</title><rect x="531.8" y="563.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.18%)</title><rect x="531.8" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.18%)</title><rect x="531.8" y="531.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="531.8" y="515.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="534.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.37%)</title><rect x="534.0" y="563.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.18%)</title><rect x="534.0" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.18%)</title><rect x="534.0" y="531.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="537.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.18%)</title><rect x="536.1" y="547.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.18%)</title><rect x="536.1" y="531.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="539.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.37%)</title><rect x="538.3" y="723.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.37%)</title><rect x="538.3" y="707.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.37%)</title><rect x="538.3" y="691.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$175/127156101.run (2 samples, 0.37%)</title><rect x="538.3" y="675.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.37%)</title><rect x="538.3" y="659.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.37%)</title><rect x="538.3" y="643.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.37%)</title><rect x="538.3" y="627.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.37%)</title><rect x="538.3" y="611.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/826455082.run (2 samples, 0.37%)</title><rect x="538.3" y="595.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.37%)</title><rect x="538.3" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.37%)</title><rect x="538.3" y="563.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.37%)</title><rect x="538.3" y="547.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.37%)</title><rect x="538.3" y="531.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.18%)</title><rect x="538.3" y="515.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.18%)</title><rect x="538.3" y="499.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (1 samples, 0.18%)</title><rect x="538.3" y="483.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="541.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.18%)</title><rect x="540.5" y="515.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (1 samples, 0.18%)</title><rect x="540.5" y="499.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="543.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2 samples, 0.37%)</title><rect x="542.6" y="803.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2 samples, 0.37%)</title><rect x="542.6" y="787.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2 samples, 0.37%)</title><rect x="542.6" y="771.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2 samples, 0.37%)</title><rect x="542.6" y="755.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2 samples, 0.37%)</title><rect x="542.6" y="739.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2 samples, 0.37%)</title><rect x="542.6" y="723.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.37%)</title><rect x="542.6" y="707.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.37%)</title><rect x="542.6" y="691.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.37%)</title><rect x="542.6" y="675.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.37%)</title><rect x="542.6" y="659.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.37%)</title><rect x="542.6" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.37%)</title><rect x="542.6" y="627.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.37%)</title><rect x="542.6" y="611.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.37%)</title><rect x="542.6" y="595.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.37%)</title><rect x="542.6" y="579.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.37%)</title><rect x="542.6" y="563.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.37%)</title><rect x="542.6" y="547.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="545.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (12 samples, 2.20%)</title><rect x="547.0" y="803.0" width="25.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.0" y="814.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.55%)</title><rect x="547.0" y="787.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$211/577911578.accept (2 samples, 0.37%)</title><rect x="547.0" y="771.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2 samples, 0.37%)</title><rect x="547.0" y="755.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2 samples, 0.37%)</title><rect x="547.0" y="739.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2 samples, 0.37%)</title><rect x="547.0" y="723.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2 samples, 0.37%)</title><rect x="547.0" y="707.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2 samples, 0.37%)</title><rect x="547.0" y="691.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.37%)</title><rect x="547.0" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.37%)</title><rect x="547.0" y="659.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.37%)</title><rect x="547.0" y="643.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.37%)</title><rect x="547.0" y="627.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/237920033.run (2 samples, 0.37%)</title><rect x="547.0" y="611.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.37%)</title><rect x="547.0" y="595.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2 samples, 0.37%)</title><rect x="547.0" y="579.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.37%)</title><rect x="547.0" y="563.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$157/120106117.get (2 samples, 0.37%)</title><rect x="547.0" y="547.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (2 samples, 0.37%)</title><rect x="547.0" y="531.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.37%)</title><rect x="547.0" y="515.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.37%)</title><rect x="547.0" y="499.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.0" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="547.0" y="483.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1981377679.accept (1 samples, 0.18%)</title><rect x="551.3" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.18%)</title><rect x="551.3" y="755.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$210/1736941292.run (1 samples, 0.18%)</title><rect x="551.3" y="739.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.18%)</title><rect x="551.3" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.18%)</title><rect x="551.3" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.18%)</title><rect x="551.3" y="691.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.18%)</title><rect x="551.3" y="675.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.18%)</title><rect x="551.3" y="659.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="554.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 0.73%)</title><rect x="553.4" y="787.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.4" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4 samples, 0.73%)</title><rect x="553.4" y="771.0" width="8.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="556.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.73%)</title><rect x="562.1" y="787.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.18%)</title><rect x="562.1" y="771.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.18%)</title><rect x="562.1" y="755.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.18%)</title><rect x="562.1" y="739.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.18%)</title><rect x="562.1" y="723.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.18%)</title><rect x="562.1" y="707.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="565.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.55%)</title><rect x="564.3" y="771.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (2 samples, 0.37%)</title><rect x="564.3" y="755.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.3" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.37%)</title><rect x="564.3" y="739.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.3" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.37%)</title><rect x="564.3" y="723.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="567.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.18%)</title><rect x="568.6" y="755.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.6" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.18%)</title><rect x="568.6" y="739.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="571.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.18%)</title><rect x="570.8" y="787.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.8" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.18%)</title><rect x="570.8" y="771.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1 samples, 0.18%)</title><rect x="570.8" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (1 samples, 0.18%)</title><rect x="570.8" y="739.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (15 samples, 2.75%)</title><rect x="572.9" y="803.0" width="32.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.9" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (4 samples, 0.73%)</title><rect x="572.9" y="787.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (4 samples, 0.73%)</title><rect x="572.9" y="771.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (4 samples, 0.73%)</title><rect x="572.9" y="755.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (4 samples, 0.73%)</title><rect x="572.9" y="739.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.9" y="750.0"></text>
</g>
<g>
<title>java.io.FileDescriptor (1 samples, 0.18%)</title><rect x="572.9" y="723.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="575.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (3 samples, 0.55%)</title><rect x="575.1" y="723.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (2 samples, 0.37%)</title><rect x="575.1" y="707.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2 samples, 0.37%)</title><rect x="575.1" y="691.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="578.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.18%)</title><rect x="579.4" y="707.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (1 samples, 0.18%)</title><rect x="579.4" y="691.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.4" y="702.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.18%)</title><rect x="579.4" y="675.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="582.4" y="686.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (2 samples, 0.37%)</title><rect x="581.6" y="787.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.register (2 samples, 0.37%)</title><rect x="581.6" y="771.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.enable (2 samples, 0.37%)</title><rect x="581.6" y="755.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (2 samples, 0.37%)</title><rect x="581.6" y="739.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (2 samples, 0.37%)</title><rect x="581.6" y="723.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.6" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (2 samples, 0.37%)</title><rect x="581.6" y="707.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="584.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (9 samples, 1.65%)</title><rect x="585.9" y="787.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (9 samples, 1.65%)</title><rect x="585.9" y="771.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/StreamSession.&lt;init&gt; (9 samples, 1.65%)</title><rect x="585.9" y="755.0" width="19.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (9 samples, 1.65%)</title><rect x="585.9" y="739.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="750.0"></text>
</g>
<g>
<title>byte[] (8 samples, 1.47%)</title><rect x="585.9" y="723.0" width="17.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="588.9" y="734.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="603.2" y="723.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.2" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (270 samples, 49.54%)</title><rect x="605.4" y="803.0" width="584.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.4" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (19 samples, 3.49%)</title><rect x="605.4" y="787.0" width="41.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.4" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (10 samples, 1.83%)</title><rect x="605.4" y="771.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.4" y="782.0">o..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (2 samples, 0.37%)</title><rect x="605.4" y="755.0" width="4.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="608.4" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (1 samples, 0.18%)</title><rect x="609.7" y="755.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="612.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 1.28%)</title><rect x="611.9" y="755.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 1.28%)</title><rect x="611.9" y="739.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 1.28%)</title><rect x="611.9" y="723.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.9" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 1.28%)</title><rect x="611.9" y="707.0" width="15.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="614.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.18%)</title><rect x="627.1" y="771.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.1" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.18%)</title><rect x="627.1" y="755.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.18%)</title><rect x="627.1" y="739.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.1" y="750.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.18%)</title><rect x="627.1" y="723.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="630.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (8 samples, 1.47%)</title><rect x="629.2" y="771.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 1.47%)</title><rect x="629.2" y="755.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (8 samples, 1.47%)</title><rect x="629.2" y="739.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 1.47%)</title><rect x="629.2" y="723.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.73%)</title><rect x="629.2" y="707.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.2" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (4 samples, 0.73%)</title><rect x="629.2" y="691.0" width="8.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="632.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.73%)</title><rect x="637.9" y="707.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.73%)</title><rect x="637.9" y="691.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.73%)</title><rect x="637.9" y="675.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.73%)</title><rect x="637.9" y="659.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.73%)</title><rect x="637.9" y="643.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4 samples, 0.73%)</title><rect x="637.9" y="627.0" width="8.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="640.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (251 samples, 46.06%)</title><rect x="646.6" y="787.0" width="543.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.6" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (251 samples, 46.06%)</title><rect x="646.6" y="771.0" width="543.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.6" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (246 samples, 45.14%)</title><rect x="646.6" y="755.0" width="532.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.6" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (100 samples, 18.35%)</title><rect x="646.6" y="739.0" width="216.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.6" y="750.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (100 samples, 18.35%)</title><rect x="646.6" y="723.0" width="216.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.6" y="734.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (98 samples, 17.98%)</title><rect x="646.6" y="707.0" width="212.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.6" y="718.0">RequestHandler1_entity.handl..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.73%)</title><rect x="646.6" y="691.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.73%)</title><rect x="646.6" y="675.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.73%)</title><rect x="646.6" y="659.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.73%)</title><rect x="646.6" y="643.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.37%)</title><rect x="646.6" y="627.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="649.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="650.9" y="627.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.9" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="650.9" y="611.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="653.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (94 samples, 17.25%)</title><rect x="655.2" y="691.0" width="203.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.2" y="702.0">ru/mail/polis/service/Repli..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (94 samples, 17.25%)</title><rect x="655.2" y="675.0" width="203.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.2" y="686.0">ru/mail/polis/service/Repli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.92%)</title><rect x="655.2" y="659.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.92%)</title><rect x="655.2" y="643.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.92%)</title><rect x="655.2" y="627.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.55%)</title><rect x="655.2" y="611.0" width="6.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="658.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="661.7" y="611.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.7" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="661.7" y="595.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="664.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (9 samples, 1.65%)</title><rect x="666.0" y="659.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.73%)</title><rect x="666.0" y="643.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.73%)</title><rect x="666.0" y="627.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$267/1136289734.get$Lambda (4 samples, 0.73%)</title><rect x="666.0" y="611.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$267 (4 samples, 0.73%)</title><rect x="666.0" y="595.0" width="8.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="669.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.92%)</title><rect x="674.7" y="643.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.92%)</title><rect x="674.7" y="627.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (4 samples, 0.73%)</title><rect x="674.7" y="611.0" width="8.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="677.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.18%)</title><rect x="683.4" y="611.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="686.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (74 samples, 13.58%)</title><rect x="685.5" y="659.0" width="160.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.5" y="670.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.18%)</title><rect x="685.5" y="643.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.18%)</title><rect x="685.5" y="627.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.5" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.18%)</title><rect x="685.5" y="611.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.37%)</title><rect x="687.7" y="643.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.37%)</title><rect x="687.7" y="627.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.37%)</title><rect x="687.7" y="611.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="690.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (46 samples, 8.44%)</title><rect x="692.0" y="643.0" width="99.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.0" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (46 samples, 8.44%)</title><rect x="692.0" y="627.0" width="99.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.0" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (46 samples, 8.44%)</title><rect x="692.0" y="611.0" width="99.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.0" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (46 samples, 8.44%)</title><rect x="692.0" y="595.0" width="99.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.0" y="606.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.37%)</title><rect x="692.0" y="579.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.37%)</title><rect x="692.0" y="563.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.37%)</title><rect x="692.0" y="547.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="695.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.37%)</title><rect x="696.3" y="579.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="699.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (4 samples, 0.73%)</title><rect x="700.7" y="579.0" width="8.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="703.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (26 samples, 4.77%)</title><rect x="709.3" y="579.0" width="56.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.3" y="590.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.37%)</title><rect x="709.3" y="563.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.18%)</title><rect x="709.3" y="547.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.18%)</title><rect x="709.3" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.3" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.18%)</title><rect x="709.3" y="515.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="712.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.18%)</title><rect x="711.5" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.18%)</title><rect x="711.5" y="531.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.18%)</title><rect x="711.5" y="515.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (1 samples, 0.18%)</title><rect x="711.5" y="499.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.18%)</title><rect x="711.5" y="483.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="714.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 1.28%)</title><rect x="713.7" y="563.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 1.28%)</title><rect x="713.7" y="547.0" width="15.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.18%)</title><rect x="713.7" y="531.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="716.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.18%)</title><rect x="715.8" y="531.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="718.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.92%)</title><rect x="718.0" y="531.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.92%)</title><rect x="718.0" y="515.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (5 samples, 0.92%)</title><rect x="718.0" y="499.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.92%)</title><rect x="718.0" y="483.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.73%)</title><rect x="718.0" y="467.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1295748493.accept (3 samples, 0.55%)</title><rect x="718.0" y="451.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.55%)</title><rect x="718.0" y="435.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.55%)</title><rect x="718.0" y="419.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.55%)</title><rect x="718.0" y="403.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.55%)</title><rect x="718.0" y="387.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.55%)</title><rect x="718.0" y="371.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.55%)</title><rect x="718.0" y="355.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.55%)</title><rect x="718.0" y="339.0" width="6.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="721.0" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.18%)</title><rect x="724.5" y="451.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.5" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.18%)</title><rect x="724.5" y="435.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="727.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="726.7" y="467.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="726.7" y="451.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1295748493.get$Lambda (1 samples, 0.18%)</title><rect x="726.7" y="435.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.18%)</title><rect x="726.7" y="419.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="729.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (12 samples, 2.20%)</title><rect x="728.8" y="563.0" width="26.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.8" y="574.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (12 samples, 2.20%)</title><rect x="728.8" y="547.0" width="26.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.8" y="558.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 1.83%)</title><rect x="728.8" y="531.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.8" y="542.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 1.83%)</title><rect x="728.8" y="515.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.8" y="526.0">s..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 1.83%)</title><rect x="728.8" y="499.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.8" y="510.0">s..</text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.37%)</title><rect x="728.8" y="483.0" width="4.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="731.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.37%)</title><rect x="733.2" y="483.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.2" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.37%)</title><rect x="733.2" y="467.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.2" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="733.2" y="451.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="736.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 1.10%)</title><rect x="737.5" y="483.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 1.10%)</title><rect x="737.5" y="467.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.73%)</title><rect x="737.5" y="451.0" width="8.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="740.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.37%)</title><rect x="746.1" y="451.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.1" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.37%)</title><rect x="746.1" y="435.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="749.1" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (2 samples, 0.37%)</title><rect x="750.5" y="531.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="753.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.55%)</title><rect x="754.8" y="563.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.55%)</title><rect x="754.8" y="547.0" width="6.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="757.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.37%)</title><rect x="761.3" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.3" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.18%)</title><rect x="761.3" y="547.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="764.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.18%)</title><rect x="763.5" y="547.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.18%)</title><rect x="763.5" y="531.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="766.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 1.65%)</title><rect x="765.6" y="579.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (3 samples, 0.55%)</title><rect x="765.6" y="563.0" width="6.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="768.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 1.10%)</title><rect x="772.1" y="563.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (6 samples, 1.10%)</title><rect x="772.1" y="547.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.73%)</title><rect x="772.1" y="531.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.73%)</title><rect x="772.1" y="515.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (4 samples, 0.73%)</title><rect x="772.1" y="499.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (4 samples, 0.73%)</title><rect x="772.1" y="483.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.1" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (4 samples, 0.73%)</title><rect x="772.1" y="467.0" width="8.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="775.1" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.37%)</title><rect x="780.8" y="531.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.37%)</title><rect x="780.8" y="515.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.18%)</title><rect x="780.8" y="499.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (1 samples, 0.18%)</title><rect x="780.8" y="483.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="783.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.18%)</title><rect x="783.0" y="499.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1 samples, 0.18%)</title><rect x="783.0" y="483.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="786.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3 samples, 0.55%)</title><rect x="785.1" y="579.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.55%)</title><rect x="785.1" y="563.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.55%)</title><rect x="785.1" y="547.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.55%)</title><rect x="785.1" y="531.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.37%)</title><rect x="785.1" y="515.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="788.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="789.4" y="515.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.18%)</title><rect x="789.4" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.18%)</title><rect x="789.4" y="483.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="792.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9 samples, 1.65%)</title><rect x="791.6" y="643.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1 samples, 0.18%)</title><rect x="791.6" y="627.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="794.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (8 samples, 1.47%)</title><rect x="793.8" y="627.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 1.47%)</title><rect x="793.8" y="611.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.8" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 1.47%)</title><rect x="793.8" y="595.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.8" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.18%)</title><rect x="793.8" y="579.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="796.8" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.18%)</title><rect x="795.9" y="579.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="798.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.18%)</title><rect x="798.1" y="579.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="801.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.37%)</title><rect x="800.3" y="579.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.3" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.37%)</title><rect x="800.3" y="563.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="803.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.37%)</title><rect x="804.6" y="579.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/1472325619.accept (2 samples, 0.37%)</title><rect x="804.6" y="563.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.37%)</title><rect x="804.6" y="547.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.18%)</title><rect x="804.6" y="531.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.6" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.18%)</title><rect x="804.6" y="515.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.18%)</title><rect x="804.6" y="499.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.6" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.18%)</title><rect x="804.6" y="483.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="807.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.18%)</title><rect x="806.8" y="531.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.18%)</title><rect x="806.8" y="515.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="809.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.18%)</title><rect x="808.9" y="579.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.18%)</title><rect x="808.9" y="563.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="811.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureHelper (4 samples, 0.73%)</title><rect x="811.1" y="643.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (4 samples, 0.73%)</title><rect x="811.1" y="627.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.37%)</title><rect x="811.1" y="611.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/770133368.accept (2 samples, 0.37%)</title><rect x="811.1" y="595.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (2 samples, 0.37%)</title><rect x="811.1" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1149588382.linkToTargetMethod (2 samples, 0.37%)</title><rect x="811.1" y="563.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1786364562.invokeStatic (2 samples, 0.37%)</title><rect x="811.1" y="547.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$133/663215790.get$Lambda (2 samples, 0.37%)</title><rect x="811.1" y="531.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$133 (2 samples, 0.37%)</title><rect x="811.1" y="515.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="814.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.37%)</title><rect x="815.4" y="611.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.37%)</title><rect x="815.4" y="595.0" width="4.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="818.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (1 samples, 0.18%)</title><rect x="819.8" y="643.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.18%)</title><rect x="819.8" y="627.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.18%)</title><rect x="819.8" y="611.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$267/1136289734.get$Lambda (1 samples, 0.18%)</title><rect x="819.8" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.8" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$267 (1 samples, 0.18%)</title><rect x="819.8" y="579.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="822.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (11 samples, 2.02%)</title><rect x="821.9" y="643.0" width="23.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.9" y="654.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.37%)</title><rect x="821.9" y="627.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (2 samples, 0.37%)</title><rect x="821.9" y="611.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.37%)</title><rect x="821.9" y="595.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.18%)</title><rect x="821.9" y="579.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="821.9" y="563.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="824.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.18%)</title><rect x="824.1" y="579.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.18%)</title><rect x="824.1" y="563.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.1" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="824.1" y="547.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="827.1" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (5 samples, 0.92%)</title><rect x="826.3" y="627.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.3" y="638.0"></text>
</g>
<g>
<title>java.net.URI (4 samples, 0.73%)</title><rect x="826.3" y="611.0" width="8.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="829.3" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.18%)</title><rect x="834.9" y="611.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.9" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.18%)</title><rect x="834.9" y="595.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.9" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.18%)</title><rect x="834.9" y="579.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.18%)</title><rect x="834.9" y="563.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.18%)</title><rect x="834.9" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.18%)</title><rect x="834.9" y="531.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.9" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="834.9" y="515.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="837.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2 samples, 0.37%)</title><rect x="837.1" y="627.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.37%)</title><rect x="837.1" y="611.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (1 samples, 0.18%)</title><rect x="837.1" y="595.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="840.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.18%)</title><rect x="839.2" y="595.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.18%)</title><rect x="839.2" y="579.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="842.2" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (1 samples, 0.18%)</title><rect x="841.4" y="627.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.4" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.18%)</title><rect x="841.4" y="611.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.4" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (1 samples, 0.18%)</title><rect x="841.4" y="595.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="844.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.18%)</title><rect x="843.6" y="627.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.18%)</title><rect x="843.6" y="611.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.18%)</title><rect x="843.6" y="595.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.18%)</title><rect x="843.6" y="579.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.6" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.18%)</title><rect x="843.6" y="563.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (4 samples, 0.73%)</title><rect x="845.7" y="659.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.37%)</title><rect x="845.7" y="643.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.37%)</title><rect x="845.7" y="627.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/1056729984.get$Lambda (2 samples, 0.37%)</title><rect x="845.7" y="611.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$140 (2 samples, 0.37%)</title><rect x="845.7" y="595.0" width="4.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="848.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.37%)</title><rect x="850.1" y="643.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.37%)</title><rect x="850.1" y="627.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.37%)</title><rect x="850.1" y="611.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="853.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (2 samples, 0.37%)</title><rect x="854.4" y="659.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.37%)</title><rect x="854.4" y="643.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.37%)</title><rect x="854.4" y="627.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.37%)</title><rect x="854.4" y="611.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.37%)</title><rect x="854.4" y="595.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.4" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.37%)</title><rect x="854.4" y="579.0" width="4.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="857.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.37%)</title><rect x="858.7" y="707.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.37%)</title><rect x="858.7" y="691.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.37%)</title><rect x="858.7" y="675.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.18%)</title><rect x="858.7" y="659.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="861.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.18%)</title><rect x="860.9" y="659.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.9" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.18%)</title><rect x="860.9" y="643.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="863.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24 samples, 4.40%)</title><rect x="863.1" y="739.0" width="51.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.1" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.18%)</title><rect x="863.1" y="723.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="866.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 1.83%)</title><rect x="865.2" y="723.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.2" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (10 samples, 1.83%)</title><rect x="865.2" y="707.0" width="21.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="868.2" y="718.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 2.39%)</title><rect x="886.9" y="723.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.9" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 2.39%)</title><rect x="886.9" y="707.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.9" y="718.0">on..</text>
</g>
<g>
<title>char[] (5 samples, 0.92%)</title><rect x="886.9" y="691.0" width="10.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="889.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.55%)</title><rect x="897.7" y="691.0" width="6.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="900.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.92%)</title><rect x="904.2" y="691.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.92%)</title><rect x="904.2" y="675.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.92%)</title><rect x="904.2" y="659.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.2" y="670.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.92%)</title><rect x="904.2" y="643.0" width="10.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="907.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (32 samples, 5.87%)</title><rect x="915.0" y="739.0" width="69.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.0" y="750.0">one/nio..</text>
</g>
<g>
<title>byte[] (32 samples, 5.87%)</title><rect x="915.0" y="723.0" width="69.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="918.0" y="734.0">byte[]</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.37%)</title><rect x="984.3" y="739.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.37%)</title><rect x="984.3" y="723.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.37%)</title><rect x="984.3" y="707.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.37%)</title><rect x="984.3" y="691.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="987.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 16.15%)</title><rect x="988.6" y="739.0" width="190.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.6" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 16.15%)</title><rect x="988.6" y="723.0" width="190.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.6" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (38 samples, 6.97%)</title><rect x="988.6" y="707.0" width="82.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="991.6" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (16 samples, 2.94%)</title><rect x="1070.9" y="707.0" width="34.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1073.9" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 6.24%)</title><rect x="1105.6" y="707.0" width="73.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.6" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 6.24%)</title><rect x="1105.6" y="691.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.6" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 6.24%)</title><rect x="1105.6" y="675.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.6" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (34 samples, 6.24%)</title><rect x="1105.6" y="659.0" width="73.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1108.6" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.92%)</title><rect x="1179.2" y="755.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 0.92%)</title><rect x="1179.2" y="739.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.92%)</title><rect x="1179.2" y="723.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.92%)</title><rect x="1179.2" y="707.0" width="10.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1182.2" y="718.0"></text>
</g>
</g>
</svg>
