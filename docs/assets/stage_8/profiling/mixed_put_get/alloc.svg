<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (2,719 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (1,336 samples, 49.14%)</title><rect x="10.0" y="803.0" width="579.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,336 samples, 49.14%)</title><rect x="10.0" y="787.0" width="579.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,336 samples, 49.14%)</title><rect x="10.0" y="771.0" width="579.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,090 samples, 40.09%)</title><rect x="10.0" y="755.0" width="473.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (510 samples, 18.76%)</title><rect x="10.0" y="739.0" width="221.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (220 samples, 8.09%)</title><rect x="10.0" y="723.0" width="95.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (219 samples, 8.05%)</title><rect x="10.4" y="707.0" width="95.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (219 samples, 8.05%)</title><rect x="10.4" y="691.0" width="95.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (219 samples, 8.05%)</title><rect x="10.4" y="675.0" width="95.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.4" y="686.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.11%)</title><rect x="10.4" y="659.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.11%)</title><rect x="10.4" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.07%)</title><rect x="10.4" y="627.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="11.3" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="11.3" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="11.3" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="14.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.26%)</title><rect x="11.7" y="659.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.26%)</title><rect x="11.7" y="643.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (5 samples, 0.18%)</title><rect x="11.7" y="627.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="13.9" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="13.9" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="13.9" y="595.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="16.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (204 samples, 7.50%)</title><rect x="14.8" y="659.0" width="88.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.8" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (204 samples, 7.50%)</title><rect x="14.8" y="643.0" width="88.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.8" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (204 samples, 7.50%)</title><rect x="14.8" y="627.0" width="88.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.8" y="638.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.11%)</title><rect x="14.8" y="611.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="14.8" y="595.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.get$Lambda (2 samples, 0.07%)</title><rect x="14.8" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (2 samples, 0.07%)</title><rect x="14.8" y="563.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="17.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.get$Lambda (1 samples, 0.04%)</title><rect x="15.6" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$183 (1 samples, 0.04%)</title><rect x="15.6" y="563.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (126 samples, 4.63%)</title><rect x="16.1" y="611.0" width="54.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.1" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (126 samples, 4.63%)</title><rect x="16.1" y="595.0" width="54.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="606.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (126 samples, 4.63%)</title><rect x="16.1" y="579.0" width="54.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.1" y="590.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (126 samples, 4.63%)</title><rect x="16.1" y="563.0" width="54.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.1" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (126 samples, 4.63%)</title><rect x="16.1" y="547.0" width="54.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (126 samples, 4.63%)</title><rect x="16.1" y="531.0" width="54.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.1" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (126 samples, 4.63%)</title><rect x="16.1" y="515.0" width="54.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.1" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (126 samples, 4.63%)</title><rect x="16.1" y="499.0" width="54.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.04%)</title><rect x="16.1" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.04%)</title><rect x="16.1" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="16.1" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="16.1" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="16.1" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="19.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.15%)</title><rect x="16.5" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.15%)</title><rect x="16.5" y="467.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.11%)</title><rect x="16.5" y="451.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="17.8" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="17.8" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="17.8" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="20.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (121 samples, 4.45%)</title><rect x="18.2" y="483.0" width="52.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.2" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (104 samples, 3.82%)</title><rect x="18.2" y="467.0" width="45.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.2" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (104 samples, 3.82%)</title><rect x="18.2" y="451.0" width="45.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.2" y="462.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.07%)</title><rect x="18.2" y="435.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (100 samples, 3.68%)</title><rect x="19.1" y="435.0" width="43.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.1" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (100 samples, 3.68%)</title><rect x="19.1" y="419.0" width="43.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.1" y="430.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="19.1" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="19.1" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$217/247294231.get$Lambda (2 samples, 0.07%)</title><rect x="19.1" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$217 (2 samples, 0.07%)</title><rect x="19.1" y="355.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="22.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.07%)</title><rect x="20.0" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.07%)</title><rect x="20.0" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="20.0" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="20.0" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="20.0" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="20.8" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="23.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="21.3" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="21.3" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="21.3" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="21.3" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="21.3" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="21.3" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.04%)</title><rect x="21.3" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.04%)</title><rect x="21.3" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.04%)</title><rect x="21.3" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.04%)</title><rect x="21.3" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.04%)</title><rect x="21.3" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.04%)</title><rect x="21.3" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.04%)</title><rect x="21.3" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.3" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="21.3" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.3" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="21.3" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.04%)</title><rect x="21.3" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="24.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (4 samples, 0.15%)</title><rect x="21.7" y="403.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.15%)</title><rect x="21.7" y="387.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.15%)</title><rect x="21.7" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.15%)</title><rect x="21.7" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (3 samples, 0.11%)</title><rect x="21.7" y="339.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="24.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="23.0" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.04%)</title><rect x="23.0" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (90 samples, 3.31%)</title><rect x="23.5" y="403.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.5" y="414.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="23.5" y="387.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="26.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.22%)</title><rect x="23.9" y="387.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.22%)</title><rect x="23.9" y="371.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6 samples, 0.22%)</title><rect x="23.9" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.22%)</title><rect x="23.9" y="339.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="26.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="26.5" y="387.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.5" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="26.5" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.5" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="26.5" y="355.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="29.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.44%)</title><rect x="27.8" y="387.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.44%)</title><rect x="27.8" y="371.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.44%)</title><rect x="27.8" y="355.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="366.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.44%)</title><rect x="27.8" y="339.0" width="5.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.11%)</title><rect x="33.0" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.11%)</title><rect x="33.0" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.11%)</title><rect x="33.0" y="355.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="36.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.04%)</title><rect x="34.3" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.04%)</title><rect x="34.3" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="37.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (53 samples, 1.95%)</title><rect x="34.7" y="387.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.7" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (23 samples, 0.85%)</title><rect x="34.7" y="371.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.55%)</title><rect x="34.7" y="355.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.55%)</title><rect x="34.7" y="339.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (15 samples, 0.55%)</title><rect x="34.7" y="323.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.55%)</title><rect x="34.7" y="307.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.7" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.55%)</title><rect x="34.7" y="291.0" width="6.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="37.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.04%)</title><rect x="41.2" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.2" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="41.2" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="41.2" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.04%)</title><rect x="41.2" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="44.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.test (7 samples, 0.26%)</title><rect x="41.7" y="355.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.7" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (7 samples, 0.26%)</title><rect x="41.7" y="339.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (7 samples, 0.26%)</title><rect x="41.7" y="323.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (7 samples, 0.26%)</title><rect x="41.7" y="307.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.7" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (7 samples, 0.26%)</title><rect x="41.7" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (7 samples, 0.26%)</title><rect x="41.7" y="275.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (7 samples, 0.26%)</title><rect x="41.7" y="259.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (7 samples, 0.26%)</title><rect x="41.7" y="243.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.26%)</title><rect x="41.7" y="227.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.26%)</title><rect x="41.7" y="211.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="41.7" y="195.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.18%)</title><rect x="42.5" y="195.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.5" y="206.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.18%)</title><rect x="42.5" y="179.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="45.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (30 samples, 1.10%)</title><rect x="44.7" y="371.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30 samples, 1.10%)</title><rect x="44.7" y="355.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30 samples, 1.10%)</title><rect x="44.7" y="339.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.11%)</title><rect x="44.7" y="323.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="47.7" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.07%)</title><rect x="46.0" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.0" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.07%)</title><rect x="46.0" y="307.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="49.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (24 samples, 0.88%)</title><rect x="46.9" y="323.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (24 samples, 0.88%)</title><rect x="46.9" y="307.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (24 samples, 0.88%)</title><rect x="46.9" y="291.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.18%)</title><rect x="46.9" y="275.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.18%)</title><rect x="46.9" y="259.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (5 samples, 0.18%)</title><rect x="46.9" y="243.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (5 samples, 0.18%)</title><rect x="46.9" y="227.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="49.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.11%)</title><rect x="49.1" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (3 samples, 0.11%)</title><rect x="49.1" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.11%)</title><rect x="49.1" y="243.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.11%)</title><rect x="49.1" y="227.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.11%)</title><rect x="49.1" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.11%)</title><rect x="49.1" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.11%)</title><rect x="49.1" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.11%)</title><rect x="49.1" y="163.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.11%)</title><rect x="49.1" y="147.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="52.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (6 samples, 0.22%)</title><rect x="50.4" y="275.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (6 samples, 0.22%)</title><rect x="50.4" y="259.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.18%)</title><rect x="50.4" y="243.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.18%)</title><rect x="50.4" y="227.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.18%)</title><rect x="50.4" y="211.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="53.4" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.04%)</title><rect x="52.5" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.04%)</title><rect x="52.5" y="227.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="55.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.37%)</title><rect x="53.0" y="275.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.37%)</title><rect x="53.0" y="259.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="56.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="57.3" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.04%)</title><rect x="57.3" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.07%)</title><rect x="57.7" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="57.7" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.07%)</title><rect x="57.7" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (2 samples, 0.07%)</title><rect x="57.7" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="57.7" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="57.7" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="57.7" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="60.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="58.2" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="58.2" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.2" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="58.2" y="275.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="61.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.04%)</title><rect x="58.6" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.04%)</title><rect x="58.6" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="58.6" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.04%)</title><rect x="58.6" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (1 samples, 0.04%)</title><rect x="58.6" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="58.6" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="58.6" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="58.6" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.6" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="58.6" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="61.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.29%)</title><rect x="59.0" y="387.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.0" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.15%)</title><rect x="59.0" y="371.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="60.8" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="60.8" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="63.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.11%)</title><rect x="61.2" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.2" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.11%)</title><rect x="61.2" y="355.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="64.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="62.5" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="62.5" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="62.5" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="65.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (3 samples, 0.11%)</title><rect x="63.4" y="467.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="66.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="64.7" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="67.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (13 samples, 0.48%)</title><rect x="65.1" y="467.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (1 samples, 0.04%)</title><rect x="65.1" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (1 samples, 0.04%)</title><rect x="65.5" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.18%)</title><rect x="66.0" y="451.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.18%)</title><rect x="66.0" y="435.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.18%)</title><rect x="66.0" y="419.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.18%)</title><rect x="66.0" y="403.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.18%)</title><rect x="66.0" y="387.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.18%)</title><rect x="66.0" y="371.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (5 samples, 0.18%)</title><rect x="66.0" y="355.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.18%)</title><rect x="66.0" y="339.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.18%)</title><rect x="66.0" y="323.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="66.0" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="66.0" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$191/1544493240.get$Lambda (1 samples, 0.04%)</title><rect x="66.0" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$191 (1 samples, 0.04%)</title><rect x="66.0" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="69.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$193/1820787950.get$Lambda (1 samples, 0.04%)</title><rect x="66.4" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$193 (1 samples, 0.04%)</title><rect x="66.4" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="69.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.11%)</title><rect x="66.9" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.11%)</title><rect x="66.9" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.04%)</title><rect x="66.9" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="69.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.07%)</title><rect x="67.3" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.07%)</title><rect x="67.3" y="259.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="70.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5 samples, 0.18%)</title><rect x="68.2" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.2" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="68.2" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="71.2" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.07%)</title><rect x="68.6" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="71.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="69.5" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="69.5" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="69.5" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1 samples, 0.04%)</title><rect x="70.3" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="70.3" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="73.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="70.8" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="70.8" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="70.8" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="70.8" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="70.8" y="547.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="73.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (74 samples, 2.72%)</title><rect x="71.2" y="611.0" width="32.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.2" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.11%)</title><rect x="71.2" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="71.2" y="579.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/2053941083.get$Lambda (1 samples, 0.04%)</title><rect x="71.2" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (1 samples, 0.04%)</title><rect x="71.2" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="74.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1879978457.get$Lambda (2 samples, 0.07%)</title><rect x="71.6" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$181 (2 samples, 0.07%)</title><rect x="71.6" y="547.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="72.5" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="72.5" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1879978457.apply (1 samples, 0.04%)</title><rect x="72.5" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.04%)</title><rect x="72.5" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.04%)</title><rect x="72.5" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="72.5" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="75.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="72.9" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="72.9" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="72.9" y="531.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (69 samples, 2.54%)</title><rect x="73.4" y="595.0" width="29.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="73.4" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="73.4" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.get$Lambda (1 samples, 0.04%)</title><rect x="73.4" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (1 samples, 0.04%)</title><rect x="73.4" y="531.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (64 samples, 2.35%)</title><rect x="73.8" y="579.0" width="27.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (64 samples, 2.35%)</title><rect x="73.8" y="563.0" width="27.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.8" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (63 samples, 2.32%)</title><rect x="73.8" y="547.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (63 samples, 2.32%)</title><rect x="73.8" y="531.0" width="27.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (63 samples, 2.32%)</title><rect x="73.8" y="515.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (63 samples, 2.32%)</title><rect x="73.8" y="499.0" width="27.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (19 samples, 0.70%)</title><rect x="73.8" y="483.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (19 samples, 0.70%)</title><rect x="73.8" y="467.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (19 samples, 0.70%)</title><rect x="73.8" y="451.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (18 samples, 0.66%)</title><rect x="73.8" y="435.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (18 samples, 0.66%)</title><rect x="73.8" y="419.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (18 samples, 0.66%)</title><rect x="73.8" y="403.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (18 samples, 0.66%)</title><rect x="73.8" y="387.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (11 samples, 0.40%)</title><rect x="73.8" y="371.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.8" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.07%)</title><rect x="73.8" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="73.8" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="73.8" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.8" y="334.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="73.8" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="76.8" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.04%)</title><rect x="74.2" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.2" y="350.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="74.2" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (8 samples, 0.29%)</title><rect x="74.7" y="355.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (5 samples, 0.18%)</title><rect x="74.7" y="339.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (5 samples, 0.18%)</title><rect x="74.7" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (3 samples, 0.11%)</title><rect x="74.7" y="307.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="74.7" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.get$Lambda (3 samples, 0.11%)</title><rect x="74.7" y="275.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (3 samples, 0.11%)</title><rect x="74.7" y="259.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="77.7" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.07%)</title><rect x="76.0" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.run (2 samples, 0.07%)</title><rect x="76.0" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.07%)</title><rect x="76.0" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.07%)</title><rect x="76.0" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.07%)</title><rect x="76.0" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.07%)</title><rect x="76.0" y="227.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.11%)</title><rect x="76.8" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.11%)</title><rect x="76.8" y="323.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.8" y="334.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.11%)</title><rect x="76.8" y="307.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="79.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.04%)</title><rect x="78.1" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.1" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="78.1" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.26%)</title><rect x="78.6" y="371.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.6" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.11%)</title><rect x="78.6" y="355.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="81.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="79.9" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="79.9" y="339.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="82.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="80.7" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.07%)</title><rect x="80.7" y="339.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="81.6" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="81.6" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="81.6" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="84.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (44 samples, 1.62%)</title><rect x="82.0" y="483.0" width="19.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (3 samples, 0.11%)</title><rect x="82.0" y="467.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="85.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (41 samples, 1.51%)</title><rect x="83.3" y="467.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.3" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.04%)</title><rect x="83.3" y="451.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.04%)</title><rect x="83.8" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="86.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.15%)</title><rect x="84.2" y="451.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.15%)</title><rect x="84.2" y="435.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.2" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.15%)</title><rect x="84.2" y="419.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="87.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (4 samples, 0.15%)</title><rect x="85.9" y="451.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (3 samples, 0.11%)</title><rect x="87.7" y="451.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (2 samples, 0.07%)</title><rect x="89.0" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.11%)</title><rect x="89.9" y="451.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (11 samples, 0.40%)</title><rect x="91.2" y="451.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (2 samples, 0.07%)</title><rect x="91.2" y="435.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.04%)</title><rect x="92.0" y="435.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="95.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (2 samples, 0.07%)</title><rect x="92.5" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="95.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (6 samples, 0.22%)</title><rect x="93.3" y="435.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.04%)</title><rect x="93.3" y="419.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="96.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.07%)</title><rect x="93.8" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="96.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.11%)</title><rect x="94.6" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (1 samples, 0.04%)</title><rect x="94.6" y="403.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="97.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.07%)</title><rect x="95.1" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="98.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (10 samples, 0.37%)</title><rect x="95.9" y="451.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (1 samples, 0.04%)</title><rect x="95.9" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (1 samples, 0.04%)</title><rect x="96.4" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.04%)</title><rect x="96.8" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.04%)</title><rect x="96.8" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (7 samples, 0.26%)</title><rect x="97.2" y="435.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (2 samples, 0.07%)</title><rect x="97.2" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="100.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.11%)</title><rect x="98.1" y="419.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="101.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.07%)</title><rect x="99.4" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.07%)</title><rect x="99.4" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="102.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.07%)</title><rect x="100.3" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (1 samples, 0.04%)</title><rect x="100.3" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="100.3" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.get$Lambda (1 samples, 0.04%)</title><rect x="100.3" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$149 (1 samples, 0.04%)</title><rect x="100.3" y="387.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.3" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.04%)</title><rect x="100.7" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.run (1 samples, 0.04%)</title><rect x="100.7" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.04%)</title><rect x="100.7" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.7" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.04%)</title><rect x="100.7" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.7" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.04%)</title><rect x="100.7" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.04%)</title><rect x="100.7" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.04%)</title><rect x="100.7" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.04%)</title><rect x="100.7" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.04%)</title><rect x="100.7" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="101.1" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="101.1" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="101.1" y="515.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="104.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="101.6" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="101.6" y="563.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="101.6" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.07%)</title><rect x="101.6" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="101.6" y="515.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="104.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.07%)</title><rect x="102.4" y="579.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.07%)</title><rect x="102.4" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.07%)</title><rect x="102.4" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1077689464.linkToTargetMethod (2 samples, 0.07%)</title><rect x="102.4" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20537605.invoke (2 samples, 0.07%)</title><rect x="102.4" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647528812.invoke (2 samples, 0.07%)</title><rect x="102.4" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="102.4" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="102.4" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="102.4" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="105.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="102.9" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="102.9" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="102.9" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="105.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2 samples, 0.07%)</title><rect x="103.3" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.07%)</title><rect x="103.3" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="103.3" y="627.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.07%)</title><rect x="103.3" y="611.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="106.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.11%)</title><rect x="104.2" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2 samples, 0.07%)</title><rect x="104.2" y="643.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.04%)</title><rect x="105.0" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.04%)</title><rect x="105.0" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="105.0" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.0" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.04%)</title><rect x="105.0" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="105.0" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="105.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.04%)</title><rect x="105.0" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="105.0" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="105.0" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="105.0" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.0" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.04%)</title><rect x="105.0" y="483.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="108.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (290 samples, 10.67%)</title><rect x="105.5" y="723.0" width="125.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (290 samples, 10.67%)</title><rect x="105.5" y="707.0" width="125.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.5" y="718.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (290 samples, 10.67%)</title><rect x="105.5" y="691.0" width="125.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.5" y="702.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (290 samples, 10.67%)</title><rect x="105.5" y="675.0" width="125.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="686.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (290 samples, 10.67%)</title><rect x="105.5" y="659.0" width="125.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.5" y="670.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (290 samples, 10.67%)</title><rect x="105.5" y="643.0" width="125.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="654.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (234 samples, 8.61%)</title><rect x="105.5" y="627.0" width="101.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.5" y="638.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (171 samples, 6.29%)</title><rect x="105.5" y="611.0" width="74.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.5" y="622.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (171 samples, 6.29%)</title><rect x="105.5" y="595.0" width="74.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.5" y="606.0">one/nio/..</text>
</g>
<g>
<title>byte[] (114 samples, 4.19%)</title><rect x="105.5" y="579.0" width="49.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.5" y="590.0">byte[]</text>
</g>
<g>
<title>byte[] (57 samples, 2.10%)</title><rect x="155.0" y="579.0" width="24.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.0" y="590.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 2.32%)</title><rect x="179.7" y="611.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.7" y="622.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (29 samples, 1.07%)</title><rect x="179.7" y="595.0" width="12.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="182.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.25%)</title><rect x="192.3" y="595.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 1.25%)</title><rect x="192.3" y="579.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (34 samples, 1.25%)</title><rect x="192.3" y="563.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 1.25%)</title><rect x="192.3" y="547.0" width="14.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 1.25%)</title><rect x="192.3" y="531.0" width="14.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="195.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (56 samples, 2.06%)</title><rect x="207.0" y="627.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.0" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 2.06%)</title><rect x="207.0" y="611.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.0" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 2.06%)</title><rect x="207.0" y="595.0" width="24.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (20 samples, 0.74%)</title><rect x="207.0" y="579.0" width="8.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="210.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 1.32%)</title><rect x="215.7" y="579.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.7" y="590.0"></text>
</g>
<g>
<title>byte[] (36 samples, 1.32%)</title><rect x="215.7" y="563.0" width="15.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="218.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (4 samples, 0.15%)</title><rect x="231.3" y="739.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (4 samples, 0.15%)</title><rect x="231.3" y="723.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (4 samples, 0.15%)</title><rect x="231.3" y="707.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (4 samples, 0.15%)</title><rect x="231.3" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.3" y="702.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="231.3" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.3" y="686.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="231.3" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.04%)</title><rect x="231.3" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="231.3" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="231.3" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="231.3" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.3" y="606.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.04%)</title><rect x="231.3" y="579.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="234.3" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.07%)</title><rect x="231.8" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.07%)</title><rect x="231.8" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.8" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="231.8" y="643.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="234.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (1 samples, 0.04%)</title><rect x="232.6" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.6" y="686.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="232.6" y="659.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="235.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (383 samples, 14.09%)</title><rect x="233.1" y="739.0" width="166.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.1" y="750.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (383 samples, 14.09%)</title><rect x="233.1" y="723.0" width="166.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.1" y="734.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (185 samples, 6.80%)</title><rect x="233.1" y="707.0" width="80.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.1" y="718.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (162 samples, 5.96%)</title><rect x="233.1" y="691.0" width="70.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.1" y="702.0">ru/mail/..</text>
</g>
<g>
<title>java.util.NoSuchElementException (3 samples, 0.11%)</title><rect x="233.1" y="675.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="236.1" y="686.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (43 samples, 1.58%)</title><rect x="234.4" y="675.0" width="18.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.4" y="686.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (43 samples, 1.58%)</title><rect x="234.4" y="659.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (43 samples, 1.58%)</title><rect x="234.4" y="643.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (43 samples, 1.58%)</title><rect x="234.4" y="627.0" width="18.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (43 samples, 1.58%)</title><rect x="234.4" y="611.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (43 samples, 1.58%)</title><rect x="234.4" y="595.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.4" y="606.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.22%)</title><rect x="234.4" y="579.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="237.4" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.44%)</title><rect x="237.0" y="579.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="240.0" y="590.0"></text>
</g>
<g>
<title>long[] (15 samples, 0.55%)</title><rect x="242.2" y="579.0" width="6.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="245.2" y="590.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.07%)</title><rect x="248.7" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.7" y="590.0"></text>
</g>
<g>
<title>short[] (8 samples, 0.29%)</title><rect x="249.6" y="579.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="252.6" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (105 samples, 3.86%)</title><rect x="253.0" y="675.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.0" y="686.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (105 samples, 3.86%)</title><rect x="253.0" y="659.0" width="45.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.0" y="670.0">org/..</text>
</g>
<g>
<title>byte[] (64 samples, 2.35%)</title><rect x="253.0" y="643.0" width="27.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="256.0" y="654.0">b..</text>
</g>
<g>
<title>byte[] (41 samples, 1.51%)</title><rect x="280.8" y="643.0" width="17.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (11 samples, 0.40%)</title><rect x="298.6" y="675.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.6" y="686.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.40%)</title><rect x="298.6" y="659.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="301.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.composeFromBytes (22 samples, 0.81%)</title><rect x="303.4" y="691.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.74%)</title><rect x="303.4" y="675.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.74%)</title><rect x="303.4" y="659.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.74%)</title><rect x="303.4" y="643.0" width="8.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="306.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (2 samples, 0.07%)</title><rect x="312.1" y="675.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="315.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (1 samples, 0.04%)</title><rect x="312.9" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.9" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (1 samples, 0.04%)</title><rect x="312.9" y="675.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="315.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (160 samples, 5.88%)</title><rect x="313.4" y="707.0" width="69.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.4" y="718.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (15 samples, 0.55%)</title><rect x="313.4" y="691.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/582782738.invoke (15 samples, 0.55%)</title><rect x="313.4" y="675.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.55%)</title><rect x="313.4" y="659.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.26%)</title><rect x="313.4" y="643.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.26%)</title><rect x="313.4" y="627.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="316.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.29%)</title><rect x="316.4" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.29%)</title><rect x="316.4" y="627.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.4" y="638.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.29%)</title><rect x="316.4" y="611.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="319.4" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.26%)</title><rect x="319.9" y="691.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="322.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 1.03%)</title><rect x="322.9" y="691.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.9" y="702.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.51%)</title><rect x="322.9" y="675.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="325.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.44%)</title><rect x="329.0" y="675.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="332.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="334.2" y="675.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="337.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getBytes (110 samples, 4.05%)</title><rect x="335.1" y="691.0" width="47.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.1" y="702.0">ru/m..</text>
</g>
<g>
<title>byte[] (82 samples, 3.02%)</title><rect x="335.1" y="675.0" width="35.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="338.1" y="686.0">byt..</text>
</g>
<g>
<title>byte[] (28 samples, 1.03%)</title><rect x="370.6" y="675.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (38 samples, 1.40%)</title><rect x="382.8" y="707.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.59%)</title><rect x="382.8" y="691.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.59%)</title><rect x="382.8" y="675.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.59%)</title><rect x="382.8" y="659.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.59%)</title><rect x="382.8" y="643.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.8" y="654.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.59%)</title><rect x="382.8" y="627.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="385.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.81%)</title><rect x="389.7" y="691.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.81%)</title><rect x="389.7" y="675.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.7" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.81%)</title><rect x="389.7" y="659.0" width="9.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="392.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$276/894924664.get (193 samples, 7.10%)</title><rect x="399.3" y="739.0" width="83.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.3" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (193 samples, 7.10%)</title><rect x="399.3" y="723.0" width="83.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.3" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.77%)</title><rect x="399.3" y="707.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.77%)</title><rect x="399.3" y="691.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.3" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.77%)</title><rect x="399.3" y="675.0" width="9.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="402.3" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.44%)</title><rect x="408.4" y="707.0" width="5.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="411.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (36 samples, 1.32%)</title><rect x="413.6" y="707.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.6" y="718.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.59%)</title><rect x="413.6" y="691.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="416.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.33%)</title><rect x="420.5" y="691.0" width="4.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="423.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.40%)</title><rect x="424.5" y="691.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="427.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (108 samples, 3.97%)</title><rect x="429.2" y="707.0" width="46.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.2" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (97 samples, 3.57%)</title><rect x="429.2" y="691.0" width="42.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.2" y="702.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (97 samples, 3.57%)</title><rect x="429.2" y="675.0" width="42.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.2" y="686.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 3.57%)</title><rect x="429.2" y="659.0" width="42.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.2" y="670.0">java..</text>
</g>
<g>
<title>byte[] (71 samples, 2.61%)</title><rect x="429.2" y="643.0" width="30.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="432.2" y="654.0">by..</text>
</g>
<g>
<title>byte[] (26 samples, 0.96%)</title><rect x="460.0" y="643.0" width="11.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="463.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (11 samples, 0.40%)</title><rect x="471.3" y="691.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.3" y="702.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.40%)</title><rect x="471.3" y="675.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="474.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (16 samples, 0.59%)</title><rect x="476.1" y="707.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.59%)</title><rect x="476.1" y="691.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.59%)</title><rect x="476.1" y="675.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.59%)</title><rect x="476.1" y="659.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.59%)</title><rect x="476.1" y="643.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.1" y="654.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.59%)</title><rect x="476.1" y="627.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="479.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (15 samples, 0.55%)</title><rect x="483.0" y="755.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.18%)</title><rect x="483.0" y="739.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$277/1523797275.apply (3 samples, 0.11%)</title><rect x="483.0" y="723.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$2 (3 samples, 0.11%)</title><rect x="483.0" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.0" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.07%)</title><rect x="483.0" y="691.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="486.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="483.9" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.9" y="702.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="483.9" y="675.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$278/1038159068.apply (2 samples, 0.07%)</title><rect x="484.3" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$futureHelper$3 (2 samples, 0.07%)</title><rect x="484.3" y="707.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.04%)</title><rect x="484.3" y="691.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="487.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="484.8" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.04%)</title><rect x="484.8" y="675.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="487.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.37%)</title><rect x="485.2" y="739.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.37%)</title><rect x="485.2" y="723.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (10 samples, 0.37%)</title><rect x="485.2" y="707.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (10 samples, 0.37%)</title><rect x="485.2" y="691.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.33%)</title><rect x="485.2" y="675.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.33%)</title><rect x="485.2" y="659.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.22%)</title><rect x="485.2" y="643.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.22%)</title><rect x="485.2" y="627.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$138/1868095322.apply (6 samples, 0.22%)</title><rect x="485.2" y="611.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$1 (6 samples, 0.22%)</title><rect x="485.2" y="595.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.mergeValues (2 samples, 0.07%)</title><rect x="485.2" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.2" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="485.2" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="485.2" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.2" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.04%)</title><rect x="485.2" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="488.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.04%)</title><rect x="485.6" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1 samples, 0.04%)</title><rect x="485.6" y="547.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="488.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (4 samples, 0.15%)</title><rect x="486.1" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.04%)</title><rect x="486.1" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/582782738.invoke (1 samples, 0.04%)</title><rect x="486.1" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="486.1" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="486.1" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="486.1" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.1" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="486.1" y="483.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="489.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="486.5" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.5" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="486.5" y="547.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="489.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getBytes (2 samples, 0.07%)</title><rect x="486.9" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.9" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="486.9" y="547.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="489.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.11%)</title><rect x="487.8" y="643.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.11%)</title><rect x="487.8" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (3 samples, 0.11%)</title><rect x="487.8" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (3 samples, 0.11%)</title><rect x="487.8" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (3 samples, 0.11%)</title><rect x="487.8" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.11%)</title><rect x="487.8" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.11%)</title><rect x="487.8" y="547.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="487.8" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="487.8" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.8" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="487.8" y="499.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="490.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.04%)</title><rect x="489.1" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="489.1" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="489.1" y="643.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="492.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 1.29%)</title><rect x="489.6" y="755.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (35 samples, 1.29%)</title><rect x="489.6" y="739.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 1.25%)</title><rect x="489.6" y="723.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (34 samples, 1.25%)</title><rect x="489.6" y="707.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (34 samples, 1.25%)</title><rect x="489.6" y="691.0" width="14.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="492.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="504.3" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="504.3" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="504.3" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="504.3" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="504.3" y="659.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="507.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (34 samples, 1.25%)</title><rect x="504.7" y="755.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (34 samples, 1.25%)</title><rect x="504.7" y="739.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (34 samples, 1.25%)</title><rect x="504.7" y="723.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (34 samples, 1.25%)</title><rect x="504.7" y="707.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 1.25%)</title><rect x="504.7" y="691.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 1.25%)</title><rect x="504.7" y="675.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 1.25%)</title><rect x="504.7" y="659.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (34 samples, 1.25%)</title><rect x="504.7" y="643.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (34 samples, 1.25%)</title><rect x="504.7" y="627.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (34 samples, 1.25%)</title><rect x="504.7" y="611.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (34 samples, 1.25%)</title><rect x="504.7" y="595.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (31 samples, 1.14%)</title><rect x="504.7" y="579.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="504.7" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="504.7" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/404578839.get$Lambda (2 samples, 0.07%)</title><rect x="504.7" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (2 samples, 0.07%)</title><rect x="504.7" y="515.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="507.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (29 samples, 1.07%)</title><rect x="505.6" y="563.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.11%)</title><rect x="505.6" y="547.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="508.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.96%)</title><rect x="506.9" y="547.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (26 samples, 0.96%)</title><rect x="506.9" y="531.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (26 samples, 0.96%)</title><rect x="506.9" y="515.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4 samples, 0.15%)</title><rect x="506.9" y="499.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.07%)</title><rect x="506.9" y="483.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/540628327.apply (2 samples, 0.07%)</title><rect x="507.8" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.07%)</title><rect x="507.8" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.07%)</title><rect x="507.8" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.07%)</title><rect x="507.8" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.07%)</title><rect x="507.8" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.07%)</title><rect x="507.8" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.04%)</title><rect x="507.8" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="508.2" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="508.2" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="508.2" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="511.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (22 samples, 0.81%)</title><rect x="508.6" y="499.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (22 samples, 0.81%)</title><rect x="508.6" y="483.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (22 samples, 0.81%)</title><rect x="508.6" y="467.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (22 samples, 0.81%)</title><rect x="508.6" y="451.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (22 samples, 0.81%)</title><rect x="508.6" y="435.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (22 samples, 0.81%)</title><rect x="508.6" y="419.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (22 samples, 0.81%)</title><rect x="508.6" y="403.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.11%)</title><rect x="508.6" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.11%)</title><rect x="508.6" y="371.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.07%)</title><rect x="508.6" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="511.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="509.5" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="509.5" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="509.5" y="323.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="512.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.04%)</title><rect x="509.9" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="509.9" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="509.9" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="509.9" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="509.9" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="509.9" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="512.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (18 samples, 0.66%)</title><rect x="510.4" y="387.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (5 samples, 0.18%)</title><rect x="510.4" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (5 samples, 0.18%)</title><rect x="510.4" y="355.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (5 samples, 0.18%)</title><rect x="510.4" y="339.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$279/319263252.accept (2 samples, 0.07%)</title><rect x="510.4" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (2 samples, 0.07%)</title><rect x="510.4" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (2 samples, 0.07%)</title><rect x="510.4" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="510.4" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="510.4" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$282/1009122913.get$Lambda (2 samples, 0.07%)</title><rect x="510.4" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$282 (2 samples, 0.07%)</title><rect x="510.4" y="227.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="513.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/1256228167.accept (3 samples, 0.11%)</title><rect x="511.3" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3 samples, 0.11%)</title><rect x="511.3" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.11%)</title><rect x="511.3" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.11%)</title><rect x="511.3" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3 samples, 0.11%)</title><rect x="511.3" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.11%)</title><rect x="511.3" y="243.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.11%)</title><rect x="511.3" y="227.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.11%)</title><rect x="511.3" y="211.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.11%)</title><rect x="511.3" y="195.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.11%)</title><rect x="511.3" y="179.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.07%)</title><rect x="511.3" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.07%)</title><rect x="511.3" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.04%)</title><rect x="511.3" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="514.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="511.7" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="511.7" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="511.7" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="511.7" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.04%)</title><rect x="511.7" y="67.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.7" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.04%)</title><rect x="511.7" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="514.7" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="512.1" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="512.1" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="512.1" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="512.1" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="512.1" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="512.1" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="512.1" y="67.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.04%)</title><rect x="512.1" y="51.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.04%)</title><rect x="512.1" y="35.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="515.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1 samples, 0.04%)</title><rect x="512.6" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="512.6" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.04%)</title><rect x="512.6" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="512.6" y="323.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="515.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="513.0" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="513.0" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="513.0" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="513.0" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="513.0" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.04%)</title><rect x="513.0" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.04%)</title><rect x="513.0" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="516.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (11 samples, 0.40%)</title><rect x="513.4" y="371.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (11 samples, 0.40%)</title><rect x="513.4" y="355.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.15%)</title><rect x="513.4" y="339.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.04%)</title><rect x="513.4" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.4" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1 samples, 0.04%)</title><rect x="513.4" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="516.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (1 samples, 0.04%)</title><rect x="513.9" y="323.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="516.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (2 samples, 0.07%)</title><rect x="514.3" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.04%)</title><rect x="514.3" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.04%)</title><rect x="514.3" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="517.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.04%)</title><rect x="514.7" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.04%)</title><rect x="514.7" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="517.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (7 samples, 0.26%)</title><rect x="515.2" y="339.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.26%)</title><rect x="515.2" y="323.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.11%)</title><rect x="515.2" y="307.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="518.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="516.5" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.5" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="516.5" y="291.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.11%)</title><rect x="518.2" y="579.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.11%)</title><rect x="518.2" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.11%)</title><rect x="518.2" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.11%)</title><rect x="518.2" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.11%)</title><rect x="518.2" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.11%)</title><rect x="518.2" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.04%)</title><rect x="518.2" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.2" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (1 samples, 0.04%)</title><rect x="518.2" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="521.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.07%)</title><rect x="518.6" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.6" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.07%)</title><rect x="518.6" y="467.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="521.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (162 samples, 5.96%)</title><rect x="519.5" y="755.0" width="70.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.5" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (162 samples, 5.96%)</title><rect x="519.5" y="739.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.5" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (130 samples, 4.78%)</title><rect x="519.5" y="723.0" width="56.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.5" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (130 samples, 4.78%)</title><rect x="519.5" y="707.0" width="56.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (130 samples, 4.78%)</title><rect x="519.5" y="691.0" width="56.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.5" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.04%)</title><rect x="519.5" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.04%)</title><rect x="519.5" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.04%)</title><rect x="519.5" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.04%)</title><rect x="519.5" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.04%)</title><rect x="519.5" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.04%)</title><rect x="519.5" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="519.5" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="519.5" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="519.5" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="519.5" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="522.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (129 samples, 4.74%)</title><rect x="519.9" y="675.0" width="56.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.9" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (129 samples, 4.74%)</title><rect x="519.9" y="659.0" width="56.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.9" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (129 samples, 4.74%)</title><rect x="519.9" y="643.0" width="56.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.9" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (129 samples, 4.74%)</title><rect x="519.9" y="627.0" width="56.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.9" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 1.54%)</title><rect x="519.9" y="611.0" width="18.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 1.54%)</title><rect x="519.9" y="595.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 1.54%)</title><rect x="519.9" y="579.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (42 samples, 1.54%)</title><rect x="519.9" y="563.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 1.54%)</title><rect x="519.9" y="547.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (42 samples, 1.54%)</title><rect x="519.9" y="531.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 1.54%)</title><rect x="519.9" y="515.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 1.51%)</title><rect x="519.9" y="499.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 1.51%)</title><rect x="519.9" y="483.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (41 samples, 1.51%)</title><rect x="519.9" y="467.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.04%)</title><rect x="519.9" y="451.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (39 samples, 1.43%)</title><rect x="520.4" y="451.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (39 samples, 1.43%)</title><rect x="520.4" y="435.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="520.4" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="520.4" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.get$Lambda (1 samples, 0.04%)</title><rect x="520.4" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$266 (1 samples, 0.04%)</title><rect x="520.4" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="523.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 0.18%)</title><rect x="520.8" y="419.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.18%)</title><rect x="520.8" y="403.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.18%)</title><rect x="520.8" y="387.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="523.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (33 samples, 1.21%)</title><rect x="523.0" y="419.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="523.0" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="523.0" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.04%)</title><rect x="523.0" y="371.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="526.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (32 samples, 1.18%)</title><rect x="523.4" y="403.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (27 samples, 0.99%)</title><rect x="523.4" y="387.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="523.4" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="523.4" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.get$Lambda (1 samples, 0.04%)</title><rect x="523.4" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$260 (1 samples, 0.04%)</title><rect x="523.4" y="323.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="526.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.18%)</title><rect x="523.8" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.11%)</title><rect x="523.8" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="523.8" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.04%)</title><rect x="523.8" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="526.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.07%)</title><rect x="524.3" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.07%)</title><rect x="524.3" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="527.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.07%)</title><rect x="525.1" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.07%)</title><rect x="525.1" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.07%)</title><rect x="525.1" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="525.1" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="525.1" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="525.1" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.04%)</title><rect x="525.1" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="525.1" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.04%)</title><rect x="525.1" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (1 samples, 0.04%)</title><rect x="525.1" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.1" y="222.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="525.1" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.1" y="206.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="525.1" y="179.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="528.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.04%)</title><rect x="525.6" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.04%)</title><rect x="525.6" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.6" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.04%)</title><rect x="525.6" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.6" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1 samples, 0.04%)</title><rect x="525.6" y="259.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="528.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.07%)</title><rect x="526.0" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="526.0" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.04%)</title><rect x="526.0" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="529.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="526.4" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="526.4" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="526.4" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="526.4" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="526.4" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (1 samples, 0.04%)</title><rect x="526.9" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="529.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (1 samples, 0.04%)</title><rect x="527.3" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="530.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.63%)</title><rect x="527.7" y="371.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (17 samples, 0.63%)</title><rect x="527.7" y="355.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 0.63%)</title><rect x="527.7" y="339.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="527.7" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="527.7" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.get$Lambda (2 samples, 0.07%)</title><rect x="527.7" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$253 (2 samples, 0.07%)</title><rect x="527.7" y="275.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="530.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="528.6" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="528.6" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.04%)</title><rect x="528.6" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="531.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (1 samples, 0.04%)</title><rect x="529.0" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="532.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.07%)</title><rect x="529.5" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="529.5" y="307.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="532.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.11%)</title><rect x="530.3" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.11%)</title><rect x="530.3" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.11%)</title><rect x="530.3" y="291.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.11%)</title><rect x="530.3" y="275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.11%)</title><rect x="530.3" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.07%)</title><rect x="530.3" y="243.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="533.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="531.2" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="531.2" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="531.2" y="211.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="534.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.04%)</title><rect x="531.6" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="531.6" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (1 samples, 0.04%)</title><rect x="531.6" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="531.6" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="531.6" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="531.6" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.6" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="531.6" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="534.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (7 samples, 0.26%)</title><rect x="532.1" y="323.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1 samples, 0.04%)</title><rect x="532.1" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="535.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (6 samples, 0.22%)</title><rect x="532.5" y="307.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.22%)</title><rect x="532.5" y="291.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (6 samples, 0.22%)</title><rect x="532.5" y="275.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.22%)</title><rect x="532.5" y="259.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="532.5" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="532.5" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="535.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.18%)</title><rect x="532.9" y="243.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.18%)</title><rect x="532.9" y="227.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.9" y="238.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.18%)</title><rect x="532.9" y="211.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="535.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (5 samples, 0.18%)</title><rect x="535.1" y="387.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.07%)</title><rect x="535.1" y="371.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="535.1" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="535.1" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.1" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.04%)</title><rect x="535.1" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="538.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.04%)</title><rect x="535.6" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="535.6" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.04%)</title><rect x="535.6" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="535.6" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="535.6" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.04%)</title><rect x="535.6" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.6" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.04%)</title><rect x="535.6" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="538.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (1 samples, 0.04%)</title><rect x="536.0" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (1 samples, 0.04%)</title><rect x="536.0" y="355.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="539.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.07%)</title><rect x="536.4" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.07%)</title><rect x="536.4" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="536.4" y="339.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="539.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (1 samples, 0.04%)</title><rect x="537.3" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.04%)</title><rect x="537.3" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.04%)</title><rect x="537.3" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.04%)</title><rect x="537.3" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="537.3" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.3" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.04%)</title><rect x="537.3" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="540.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/885673150.apply (1 samples, 0.04%)</title><rect x="537.7" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.04%)</title><rect x="537.7" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (1 samples, 0.04%)</title><rect x="537.7" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="540.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (87 samples, 3.20%)</title><rect x="538.2" y="611.0" width="37.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.2" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.11%)</title><rect x="538.2" y="595.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.11%)</title><rect x="538.2" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.11%)</title><rect x="538.2" y="563.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.11%)</title><rect x="538.2" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.11%)</title><rect x="538.2" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="538.2" y="515.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="541.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.15%)</title><rect x="539.5" y="595.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.15%)</title><rect x="539.5" y="579.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.15%)</title><rect x="539.5" y="563.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.15%)</title><rect x="539.5" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.15%)</title><rect x="539.5" y="531.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.5" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="539.5" y="515.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="542.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (7 samples, 0.26%)</title><rect x="541.2" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.2" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.07%)</title><rect x="541.2" y="579.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="544.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="542.1" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="542.1" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="542.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.1" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="542.1" y="531.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="545.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.15%)</title><rect x="542.5" y="579.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="542.5" y="563.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.11%)</title><rect x="542.5" y="547.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="545.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="543.8" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.8" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="543.8" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="546.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (18 samples, 0.66%)</title><rect x="544.2" y="595.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.66%)</title><rect x="544.2" y="579.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.66%)</title><rect x="544.2" y="563.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.2" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="544.2" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="547.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.04%)</title><rect x="544.7" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="547.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.04%)</title><rect x="545.1" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="548.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.11%)</title><rect x="545.5" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.5" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.11%)</title><rect x="545.5" y="531.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="548.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (12 samples, 0.44%)</title><rect x="546.8" y="547.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (12 samples, 0.44%)</title><rect x="546.8" y="531.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.44%)</title><rect x="546.8" y="515.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="546.8" y="499.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="546.8" y="483.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (4 samples, 0.15%)</title><rect x="546.8" y="467.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (4 samples, 0.15%)</title><rect x="546.8" y="451.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="549.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.18%)</title><rect x="548.6" y="499.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (5 samples, 0.18%)</title><rect x="548.6" y="483.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.18%)</title><rect x="548.6" y="467.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.18%)</title><rect x="548.6" y="451.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.18%)</title><rect x="548.6" y="435.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.18%)</title><rect x="548.6" y="419.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.18%)</title><rect x="548.6" y="403.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.18%)</title><rect x="548.6" y="387.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.18%)</title><rect x="548.6" y="371.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="551.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.07%)</title><rect x="550.7" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.07%)</title><rect x="550.7" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.07%)</title><rect x="550.7" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.07%)</title><rect x="550.7" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="550.7" y="435.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="553.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="551.6" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.04%)</title><rect x="551.6" y="483.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="554.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (55 samples, 2.02%)</title><rect x="552.0" y="595.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.0" y="606.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.07%)</title><rect x="552.0" y="579.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="555.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="552.9" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="552.9" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.9" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="552.9" y="547.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="555.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.33%)</title><rect x="553.8" y="579.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.33%)</title><rect x="553.8" y="563.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.11%)</title><rect x="553.8" y="547.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="556.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.22%)</title><rect x="555.1" y="547.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.1" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.22%)</title><rect x="555.1" y="531.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="558.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (42 samples, 1.54%)</title><rect x="557.7" y="579.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.51%)</title><rect x="557.7" y="563.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.51%)</title><rect x="557.7" y="547.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.29%)</title><rect x="557.7" y="531.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="560.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.22%)</title><rect x="561.2" y="531.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.2" y="542.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.22%)</title><rect x="561.2" y="515.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="564.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.15%)</title><rect x="563.8" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.15%)</title><rect x="563.8" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.8" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="563.8" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="566.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.11%)</title><rect x="564.2" y="531.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="567.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.22%)</title><rect x="565.5" y="563.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.22%)</title><rect x="565.5" y="547.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.22%)</title><rect x="565.5" y="531.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="565.5" y="515.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="568.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="567.2" y="515.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.2" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="567.2" y="499.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="570.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.40%)</title><rect x="568.1" y="563.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.40%)</title><rect x="568.1" y="547.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.40%)</title><rect x="568.1" y="531.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.40%)</title><rect x="568.1" y="515.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.40%)</title><rect x="568.1" y="499.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.40%)</title><rect x="568.1" y="483.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (7 samples, 0.26%)</title><rect x="572.9" y="563.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.07%)</title><rect x="572.9" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.07%)</title><rect x="572.9" y="531.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="575.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.11%)</title><rect x="573.7" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.11%)</title><rect x="573.7" y="531.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="576.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$241/654001490.apply (2 samples, 0.07%)</title><rect x="575.0" y="547.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.07%)</title><rect x="575.0" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.07%)</title><rect x="575.0" y="515.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="578.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (32 samples, 1.18%)</title><rect x="575.9" y="723.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (32 samples, 1.18%)</title><rect x="575.9" y="707.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (32 samples, 1.18%)</title><rect x="575.9" y="691.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (32 samples, 1.18%)</title><rect x="575.9" y="675.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (32 samples, 1.18%)</title><rect x="575.9" y="659.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (17 samples, 0.63%)</title><rect x="575.9" y="643.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.11%)</title><rect x="575.9" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="575.9" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$191/1544493240.get$Lambda (2 samples, 0.07%)</title><rect x="575.9" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$191 (2 samples, 0.07%)</title><rect x="575.9" y="579.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$193/1820787950.get$Lambda (1 samples, 0.04%)</title><rect x="576.8" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="579.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$193 (1 samples, 0.04%)</title><rect x="576.8" y="579.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="579.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.04%)</title><rect x="577.2" y="627.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="577.6" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="577.6" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.04%)</title><rect x="577.6" y="595.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="580.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (12 samples, 0.44%)</title><rect x="578.1" y="627.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (12 samples, 0.44%)</title><rect x="578.1" y="611.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (9 samples, 0.33%)</title><rect x="578.1" y="595.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (9 samples, 0.33%)</title><rect x="578.1" y="579.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (9 samples, 0.33%)</title><rect x="578.1" y="563.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.07%)</title><rect x="578.1" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.07%)</title><rect x="578.1" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.07%)</title><rect x="578.1" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.07%)</title><rect x="578.1" y="499.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="581.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.26%)</title><rect x="579.0" y="547.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7 samples, 0.26%)</title><rect x="579.0" y="531.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3 samples, 0.11%)</title><rect x="579.0" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="579.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.04%)</title><rect x="579.0" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="579.0" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="579.0" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="579.0" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.0" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.04%)</title><rect x="579.0" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="582.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (1 samples, 0.04%)</title><rect x="579.4" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (1 samples, 0.04%)</title><rect x="579.4" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.04%)</title><rect x="579.4" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="582.4" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.04%)</title><rect x="579.8" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.04%)</title><rect x="579.8" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.04%)</title><rect x="579.8" y="467.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="582.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.04%)</title><rect x="580.3" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="580.3" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="580.3" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.04%)</title><rect x="580.3" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="580.3" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="583.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3 samples, 0.11%)</title><rect x="580.7" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.11%)</title><rect x="580.7" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.11%)</title><rect x="580.7" y="483.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.11%)</title><rect x="580.7" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.07%)</title><rect x="580.7" y="451.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="583.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="581.6" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.04%)</title><rect x="581.6" y="435.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="584.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (3 samples, 0.11%)</title><rect x="582.0" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (3 samples, 0.11%)</title><rect x="582.0" y="579.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (3 samples, 0.11%)</title><rect x="582.0" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.11%)</title><rect x="582.0" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.11%)</title><rect x="582.0" y="531.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.11%)</title><rect x="582.0" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.11%)</title><rect x="582.0" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (3 samples, 0.11%)</title><rect x="582.0" y="483.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (3 samples, 0.11%)</title><rect x="582.0" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.11%)</title><rect x="582.0" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.11%)</title><rect x="582.0" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.11%)</title><rect x="582.0" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.apply (3 samples, 0.11%)</title><rect x="582.0" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.11%)</title><rect x="582.0" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (3 samples, 0.11%)</title><rect x="582.0" y="371.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="585.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (15 samples, 0.55%)</title><rect x="583.3" y="643.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (15 samples, 0.55%)</title><rect x="583.3" y="627.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (15 samples, 0.55%)</title><rect x="583.3" y="611.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (15 samples, 0.55%)</title><rect x="583.3" y="595.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (15 samples, 0.55%)</title><rect x="583.3" y="579.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (15 samples, 0.55%)</title><rect x="583.3" y="563.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.07%)</title><rect x="583.3" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.07%)</title><rect x="583.3" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.3" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.07%)</title><rect x="583.3" y="515.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="586.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (5 samples, 0.18%)</title><rect x="584.2" y="547.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5 samples, 0.18%)</title><rect x="584.2" y="531.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5 samples, 0.18%)</title><rect x="584.2" y="515.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.18%)</title><rect x="584.2" y="499.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.04%)</title><rect x="584.2" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.2" y="494.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.04%)</title><rect x="584.2" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="584.2" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="584.2" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.04%)</title><rect x="584.2" y="419.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="587.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.15%)</title><rect x="584.6" y="483.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.07%)</title><rect x="584.6" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="584.6" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.6" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.04%)</title><rect x="584.6" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.6" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="584.6" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.6" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="584.6" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.6" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="584.6" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.6" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.04%)</title><rect x="584.6" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="587.6" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.04%)</title><rect x="585.0" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.04%)</title><rect x="585.0" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.04%)</title><rect x="585.0" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="588.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.07%)</title><rect x="585.5" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.07%)</title><rect x="585.5" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.04%)</title><rect x="585.5" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.04%)</title><rect x="585.5" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="585.5" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1 samples, 0.04%)</title><rect x="585.5" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="588.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.04%)</title><rect x="585.9" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.04%)</title><rect x="585.9" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1 samples, 0.04%)</title><rect x="585.9" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="588.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (5 samples, 0.18%)</title><rect x="586.3" y="547.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (5 samples, 0.18%)</title><rect x="586.3" y="531.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (5 samples, 0.18%)</title><rect x="586.3" y="515.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (5 samples, 0.18%)</title><rect x="586.3" y="499.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.07%)</title><rect x="586.3" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.07%)</title><rect x="586.3" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.07%)</title><rect x="586.3" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler$$Lambda$288/1459965272.apply (2 samples, 0.07%)</title><rect x="586.3" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.lambda$apply$0 (2 samples, 0.07%)</title><rect x="586.3" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="586.3" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="586.3" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.04%)</title><rect x="586.3" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="589.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveExistingValue (1 samples, 0.04%)</title><rect x="586.8" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (1 samples, 0.04%)</title><rect x="586.8" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="589.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.11%)</title><rect x="587.2" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.2" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="587.2" y="467.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="590.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.07%)</title><rect x="588.5" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.07%)</title><rect x="588.5" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="588.5" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.5" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="588.5" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.04%)</title><rect x="588.5" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="591.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="588.9" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="588.9" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="588.9" y="403.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="591.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (1 samples, 0.04%)</title><rect x="589.4" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (1 samples, 0.04%)</title><rect x="589.4" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.4" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="589.4" y="515.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (7 samples, 0.26%)</title><rect x="589.8" y="803.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (7 samples, 0.26%)</title><rect x="589.8" y="787.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (7 samples, 0.26%)</title><rect x="589.8" y="771.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (7 samples, 0.26%)</title><rect x="589.8" y="755.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (7 samples, 0.26%)</title><rect x="589.8" y="739.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (7 samples, 0.26%)</title><rect x="589.8" y="723.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.26%)</title><rect x="589.8" y="707.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.26%)</title><rect x="589.8" y="691.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.26%)</title><rect x="589.8" y="675.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.26%)</title><rect x="589.8" y="659.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.26%)</title><rect x="589.8" y="643.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.26%)</title><rect x="589.8" y="627.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.26%)</title><rect x="589.8" y="611.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.26%)</title><rect x="589.8" y="595.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.26%)</title><rect x="589.8" y="579.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (7 samples, 0.26%)</title><rect x="589.8" y="563.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.26%)</title><rect x="589.8" y="547.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="592.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (70 samples, 2.57%)</title><rect x="592.8" y="803.0" width="30.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.8" y="814.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="592.8" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="592.8" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$213/2024194184.get$Lambda (1 samples, 0.04%)</title><rect x="592.8" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$213 (1 samples, 0.04%)</title><rect x="592.8" y="739.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="595.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.get$Lambda (1 samples, 0.04%)</title><rect x="593.3" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$215 (1 samples, 0.04%)</title><rect x="593.3" y="739.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="596.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (2 samples, 0.07%)</title><rect x="593.7" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="593.7" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/1809208039.get$Lambda (2 samples, 0.07%)</title><rect x="593.7" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$214 (2 samples, 0.07%)</title><rect x="593.7" y="739.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="596.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.48%)</title><rect x="594.6" y="787.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (13 samples, 0.48%)</title><rect x="594.6" y="771.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (13 samples, 0.48%)</title><rect x="594.6" y="755.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (13 samples, 0.48%)</title><rect x="594.6" y="739.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (13 samples, 0.48%)</title><rect x="594.6" y="723.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (13 samples, 0.48%)</title><rect x="594.6" y="707.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (13 samples, 0.48%)</title><rect x="594.6" y="691.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.48%)</title><rect x="594.6" y="675.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.48%)</title><rect x="594.6" y="659.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.48%)</title><rect x="594.6" y="643.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (13 samples, 0.48%)</title><rect x="594.6" y="627.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (13 samples, 0.48%)</title><rect x="594.6" y="611.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 0.48%)</title><rect x="594.6" y="595.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.04%)</title><rect x="594.6" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.04%)</title><rect x="594.6" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1 samples, 0.04%)</title><rect x="594.6" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.04%)</title><rect x="594.6" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="594.6" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="594.6" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.04%)</title><rect x="594.6" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.04%)</title><rect x="594.6" y="467.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="597.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.04%)</title><rect x="595.0" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="595.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="595.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221/1525410965.get$Lambda (1 samples, 0.04%)</title><rect x="595.0" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221 (1 samples, 0.04%)</title><rect x="595.0" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="598.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (11 samples, 0.40%)</title><rect x="595.4" y="579.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (2 samples, 0.07%)</title><rect x="595.4" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="595.4" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.04%)</title><rect x="595.4" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="598.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1 samples, 0.04%)</title><rect x="595.9" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.04%)</title><rect x="595.9" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.9" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.04%)</title><rect x="595.9" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="598.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (9 samples, 0.33%)</title><rect x="596.3" y="563.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$157/2092403297.get (9 samples, 0.33%)</title><rect x="596.3" y="547.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (9 samples, 0.33%)</title><rect x="596.3" y="531.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.33%)</title><rect x="596.3" y="515.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.33%)</title><rect x="596.3" y="499.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.3" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="596.3" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="599.3" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.29%)</title><rect x="596.7" y="483.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (6 samples, 0.22%)</title><rect x="600.2" y="787.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.2" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (6 samples, 0.22%)</title><rect x="600.2" y="771.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="603.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.11%)</title><rect x="602.8" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="602.8" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.04%)</title><rect x="602.8" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.04%)</title><rect x="602.8" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="602.8" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="602.8" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.04%)</title><rect x="602.8" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.04%)</title><rect x="602.8" y="675.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="605.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (2 samples, 0.07%)</title><rect x="603.3" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.3" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (2 samples, 0.07%)</title><rect x="603.3" y="755.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="606.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (5 samples, 0.18%)</title><rect x="604.1" y="787.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/283242345.run (5 samples, 0.18%)</title><rect x="604.1" y="771.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (5 samples, 0.18%)</title><rect x="604.1" y="755.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.18%)</title><rect x="604.1" y="739.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.18%)</title><rect x="604.1" y="723.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.18%)</title><rect x="604.1" y="707.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (5 samples, 0.18%)</title><rect x="604.1" y="691.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (5 samples, 0.18%)</title><rect x="604.1" y="675.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5 samples, 0.18%)</title><rect x="604.1" y="659.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (5 samples, 0.18%)</title><rect x="604.1" y="643.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.18%)</title><rect x="604.1" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.18%)</title><rect x="604.1" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.18%)</title><rect x="604.1" y="595.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.18%)</title><rect x="604.1" y="579.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (3 samples, 0.11%)</title><rect x="604.1" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (3 samples, 0.11%)</title><rect x="604.1" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="604.1" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.11%)</title><rect x="604.1" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.11%)</title><rect x="604.1" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.1" y="510.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="604.1" y="483.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="607.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.07%)</title><rect x="605.4" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="605.4" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="605.4" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221/1525410965.get$Lambda (2 samples, 0.07%)</title><rect x="605.4" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221 (2 samples, 0.07%)</title><rect x="605.4" y="499.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="608.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (26 samples, 0.96%)</title><rect x="606.3" y="787.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.15%)</title><rect x="606.3" y="771.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.15%)</title><rect x="606.3" y="755.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.15%)</title><rect x="606.3" y="739.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.15%)</title><rect x="606.3" y="723.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (4 samples, 0.15%)</title><rect x="606.3" y="707.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="609.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (22 samples, 0.81%)</title><rect x="608.0" y="771.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="608.0" y="755.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="608.0" y="739.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$275/1282806889.get$Lambda (4 samples, 0.15%)</title><rect x="608.0" y="723.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$275 (4 samples, 0.15%)</title><rect x="608.0" y="707.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="611.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (6 samples, 0.22%)</title><rect x="609.8" y="755.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (6 samples, 0.22%)</title><rect x="609.8" y="739.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="612.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1 samples, 0.04%)</title><rect x="612.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.4" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.04%)</title><rect x="612.4" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.4" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (1 samples, 0.04%)</title><rect x="612.4" y="723.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="615.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (11 samples, 0.40%)</title><rect x="612.8" y="755.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.22%)</title><rect x="612.8" y="739.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="615.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.18%)</title><rect x="615.4" y="739.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.18%)</title><rect x="615.4" y="723.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.4" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (5 samples, 0.18%)</title><rect x="615.4" y="707.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="618.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (5 samples, 0.18%)</title><rect x="617.6" y="787.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="617.6" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="617.6" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$212/201705584.get$Lambda (1 samples, 0.04%)</title><rect x="617.6" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.6" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$212 (1 samples, 0.04%)</title><rect x="617.6" y="723.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="620.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="618.0" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="618.0" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.0" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.04%)</title><rect x="618.0" y="739.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="621.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3 samples, 0.11%)</title><rect x="618.4" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (3 samples, 0.11%)</title><rect x="618.4" y="755.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="621.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2 samples, 0.07%)</title><rect x="619.7" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.07%)</title><rect x="619.7" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2 samples, 0.07%)</title><rect x="619.7" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.07%)</title><rect x="619.7" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.07%)</title><rect x="619.7" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.7" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.07%)</title><rect x="619.7" y="707.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="622.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.04%)</title><rect x="620.6" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.04%)</title><rect x="620.6" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.04%)</title><rect x="620.6" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.04%)</title><rect x="620.6" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.04%)</title><rect x="620.6" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.6" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.04%)</title><rect x="620.6" y="707.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (5 samples, 0.18%)</title><rect x="621.0" y="787.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.18%)</title><rect x="621.0" y="771.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.18%)</title><rect x="621.0" y="755.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (5 samples, 0.18%)</title><rect x="621.0" y="739.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="624.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (18 samples, 0.66%)</title><rect x="623.2" y="803.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (3 samples, 0.11%)</title><rect x="623.2" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.11%)</title><rect x="623.2" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (3 samples, 0.11%)</title><rect x="623.2" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.2" y="766.0"></text>
</g>
<g>
<title>one.nio.net.JavaSocket (1 samples, 0.04%)</title><rect x="623.2" y="739.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="626.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.07%)</title><rect x="623.7" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.04%)</title><rect x="623.7" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.04%)</title><rect x="623.7" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.7" y="718.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.04%)</title><rect x="623.7" y="691.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="626.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="624.1" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (1 samples, 0.04%)</title><rect x="624.1" y="707.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="627.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (15 samples, 0.55%)</title><rect x="624.5" y="787.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (15 samples, 0.55%)</title><rect x="624.5" y="771.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/StreamSession.&lt;init&gt; (15 samples, 0.55%)</title><rect x="624.5" y="755.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (15 samples, 0.55%)</title><rect x="624.5" y="739.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.5" y="750.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.18%)</title><rect x="624.5" y="723.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="627.5" y="734.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.37%)</title><rect x="626.7" y="723.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="629.7" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,288 samples, 47.37%)</title><rect x="631.0" y="803.0" width="559.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (99 samples, 3.64%)</title><rect x="631.0" y="787.0" width="43.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.0" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (50 samples, 1.84%)</title><rect x="631.0" y="771.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.0" y="782.0">o..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (12 samples, 0.44%)</title><rect x="631.0" y="755.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="634.0" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (11 samples, 0.40%)</title><rect x="636.2" y="755.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="639.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (27 samples, 0.99%)</title><rect x="641.0" y="755.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (27 samples, 0.99%)</title><rect x="641.0" y="739.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (27 samples, 0.99%)</title><rect x="641.0" y="723.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.0" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (27 samples, 0.99%)</title><rect x="641.0" y="707.0" width="11.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="644.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.04%)</title><rect x="652.7" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.7" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="652.7" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.04%)</title><rect x="652.7" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.7" y="750.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.04%)</title><rect x="652.7" y="723.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="655.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (48 samples, 1.77%)</title><rect x="653.2" y="771.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (48 samples, 1.77%)</title><rect x="653.2" y="755.0" width="20.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (48 samples, 1.77%)</title><rect x="653.2" y="739.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (48 samples, 1.77%)</title><rect x="653.2" y="723.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (27 samples, 0.99%)</title><rect x="653.2" y="707.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.2" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (27 samples, 0.99%)</title><rect x="653.2" y="691.0" width="11.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="656.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.77%)</title><rect x="664.9" y="707.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.77%)</title><rect x="664.9" y="691.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.77%)</title><rect x="664.9" y="675.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.77%)</title><rect x="664.9" y="659.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (21 samples, 0.77%)</title><rect x="664.9" y="643.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (21 samples, 0.77%)</title><rect x="664.9" y="627.0" width="9.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="667.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,189 samples, 43.73%)</title><rect x="674.0" y="787.0" width="516.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.0" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,189 samples, 43.73%)</title><rect x="674.0" y="771.0" width="516.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.0" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,168 samples, 42.96%)</title><rect x="674.0" y="755.0" width="506.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.0" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (514 samples, 18.90%)</title><rect x="674.0" y="739.0" width="223.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.0" y="750.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (514 samples, 18.90%)</title><rect x="674.0" y="723.0" width="223.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.0" y="734.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (487 samples, 17.91%)</title><rect x="674.0" y="707.0" width="211.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="718.0">RequestHandler2_entity.handl..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.74%)</title><rect x="674.0" y="691.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.74%)</title><rect x="674.0" y="675.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.74%)</title><rect x="674.0" y="659.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.74%)</title><rect x="674.0" y="643.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.0" y="654.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.51%)</title><rect x="674.0" y="627.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="677.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.22%)</title><rect x="680.1" y="627.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.1" y="638.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.22%)</title><rect x="680.1" y="611.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="683.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (467 samples, 17.18%)</title><rect x="682.7" y="691.0" width="202.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.7" y="702.0">ru/mail/polis/service/Repl..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (467 samples, 17.18%)</title><rect x="682.7" y="675.0" width="202.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.7" y="686.0">ru/mail/polis/service/Repl..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.77%)</title><rect x="682.7" y="659.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.77%)</title><rect x="682.7" y="643.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.77%)</title><rect x="682.7" y="627.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.51%)</title><rect x="682.7" y="611.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="685.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.26%)</title><rect x="688.7" y="611.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.7" y="622.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.26%)</title><rect x="688.7" y="595.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="691.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (28 samples, 1.03%)</title><rect x="691.8" y="659.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.40%)</title><rect x="691.8" y="643.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.40%)</title><rect x="691.8" y="627.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get$Lambda (5 samples, 0.18%)</title><rect x="691.8" y="611.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$230 (5 samples, 0.18%)</title><rect x="691.8" y="595.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="694.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$276/894924664.get$Lambda (6 samples, 0.22%)</title><rect x="694.0" y="611.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$276 (6 samples, 0.22%)</title><rect x="694.0" y="595.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (17 samples, 0.63%)</title><rect x="696.6" y="643.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (17 samples, 0.63%)</title><rect x="696.6" y="627.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (6 samples, 0.22%)</title><rect x="696.6" y="611.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="699.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (11 samples, 0.40%)</title><rect x="699.2" y="611.0" width="4.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="702.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (181 samples, 6.66%)</title><rect x="703.9" y="659.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.9" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="703.9" y="643.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="706.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="704.4" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="704.4" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get$Lambda (1 samples, 0.04%)</title><rect x="704.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$119 (1 samples, 0.04%)</title><rect x="704.4" y="595.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="707.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="704.8" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="704.8" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.8" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.04%)</title><rect x="704.8" y="611.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.07%)</title><rect x="705.2" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.07%)</title><rect x="705.2" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.04%)</title><rect x="705.2" y="611.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="708.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="705.7" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1 samples, 0.04%)</title><rect x="705.7" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="708.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.07%)</title><rect x="706.1" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.07%)</title><rect x="706.1" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.07%)</title><rect x="706.1" y="611.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="709.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.11%)</title><rect x="707.0" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.11%)</title><rect x="707.0" y="627.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.07%)</title><rect x="707.0" y="611.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="707.8" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="707.8" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="707.8" y="579.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="710.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (107 samples, 3.94%)</title><rect x="708.3" y="643.0" width="46.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.3" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (107 samples, 3.94%)</title><rect x="708.3" y="627.0" width="46.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (107 samples, 3.94%)</title><rect x="708.3" y="611.0" width="46.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.3" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (107 samples, 3.94%)</title><rect x="708.3" y="595.0" width="46.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.3" y="606.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="708.3" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="708.3" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$128/673918529.get$Lambda (2 samples, 0.07%)</title><rect x="708.3" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$128 (2 samples, 0.07%)</title><rect x="708.3" y="531.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="711.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.11%)</title><rect x="709.1" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.11%)</title><rect x="709.1" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="709.1" y="547.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="709.1" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.11%)</title><rect x="709.1" y="515.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="712.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.07%)</title><rect x="710.4" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.07%)</title><rect x="710.4" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.04%)</title><rect x="710.4" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="713.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="710.9" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="710.9" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="710.9" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="713.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.07%)</title><rect x="711.3" y="579.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="714.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (7 samples, 0.26%)</title><rect x="712.2" y="579.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="715.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (49 samples, 1.80%)</title><rect x="715.2" y="579.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.2" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.15%)</title><rect x="715.2" y="563.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.2" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.15%)</title><rect x="715.2" y="547.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.2" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="715.2" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.2" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.04%)</title><rect x="715.2" y="515.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="718.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.11%)</title><rect x="715.7" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.11%)</title><rect x="715.7" y="515.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="718.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.81%)</title><rect x="717.0" y="563.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.81%)</title><rect x="717.0" y="547.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.0" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.07%)</title><rect x="717.0" y="531.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="720.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.15%)</title><rect x="717.8" y="531.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="720.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.04%)</title><rect x="719.6" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="722.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.40%)</title><rect x="720.0" y="531.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.40%)</title><rect x="720.0" y="515.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (11 samples, 0.40%)</title><rect x="720.0" y="499.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.40%)</title><rect x="720.0" y="483.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.18%)</title><rect x="720.0" y="467.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (3 samples, 0.11%)</title><rect x="720.0" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.11%)</title><rect x="720.0" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.11%)</title><rect x="720.0" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.11%)</title><rect x="720.0" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.11%)</title><rect x="720.0" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.11%)</title><rect x="720.0" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.11%)</title><rect x="720.0" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.11%)</title><rect x="720.0" y="339.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="723.0" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.07%)</title><rect x="721.3" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.3" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.07%)</title><rect x="721.3" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="724.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.07%)</title><rect x="722.2" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.07%)</title><rect x="722.2" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.07%)</title><rect x="722.2" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.07%)</title><rect x="722.2" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="722.2" y="403.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="725.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.15%)</title><rect x="723.0" y="467.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.15%)</title><rect x="723.0" y="451.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="726.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="724.8" y="531.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.15%)</title><rect x="724.8" y="515.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="727.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (17 samples, 0.63%)</title><rect x="726.5" y="563.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.5" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (17 samples, 0.63%)</title><rect x="726.5" y="547.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.5" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.63%)</title><rect x="726.5" y="531.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.5" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.63%)</title><rect x="726.5" y="515.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.5" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.63%)</title><rect x="726.5" y="499.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.5" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.15%)</title><rect x="726.5" y="483.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="729.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.15%)</title><rect x="728.2" y="483.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.2" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.15%)</title><rect x="728.2" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.2" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="728.2" y="451.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.33%)</title><rect x="730.0" y="483.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.33%)</title><rect x="730.0" y="467.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="730.0" y="451.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="733.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.26%)</title><rect x="730.8" y="451.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.8" y="462.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.26%)</title><rect x="730.8" y="435.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="733.9" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.07%)</title><rect x="733.9" y="547.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.15%)</title><rect x="734.8" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.8" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.07%)</title><rect x="734.8" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="737.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="735.6" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="735.6" y="531.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="738.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (29 samples, 1.07%)</title><rect x="736.5" y="579.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (5 samples, 0.18%)</title><rect x="736.5" y="563.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="739.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.04%)</title><rect x="738.7" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (1 samples, 0.04%)</title><rect x="738.7" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (23 samples, 0.85%)</title><rect x="739.1" y="563.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (23 samples, 0.85%)</title><rect x="739.1" y="547.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.04%)</title><rect x="739.1" y="531.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="742.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="739.5" y="531.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="742.5" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.11%)</title><rect x="740.4" y="531.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="743.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.15%)</title><rect x="741.7" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.15%)</title><rect x="741.7" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.7" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (4 samples, 0.15%)</title><rect x="741.7" y="499.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (4 samples, 0.15%)</title><rect x="741.7" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.7" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (4 samples, 0.15%)</title><rect x="741.7" y="467.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="744.7" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (9 samples, 0.33%)</title><rect x="743.4" y="531.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (9 samples, 0.33%)</title><rect x="743.4" y="515.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (3 samples, 0.11%)</title><rect x="743.4" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (3 samples, 0.11%)</title><rect x="743.4" y="483.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="746.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (6 samples, 0.22%)</title><rect x="744.7" y="499.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (6 samples, 0.22%)</title><rect x="744.7" y="483.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="747.7" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.15%)</title><rect x="747.3" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.3" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.15%)</title><rect x="747.3" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.3" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.15%)</title><rect x="747.3" y="499.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="750.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (13 samples, 0.48%)</title><rect x="749.1" y="579.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.04%)</title><rect x="749.1" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1 samples, 0.04%)</title><rect x="749.1" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="752.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.18%)</title><rect x="749.5" y="563.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="752.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.26%)</title><rect x="751.7" y="563.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="751.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="751.7" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.get$Lambda (1 samples, 0.04%)</title><rect x="751.7" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$126 (1 samples, 0.04%)</title><rect x="751.7" y="499.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.22%)</title><rect x="752.1" y="547.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.22%)</title><rect x="752.1" y="531.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3 samples, 0.11%)</title><rect x="752.1" y="515.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="755.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="753.4" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="753.4" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.11%)</title><rect x="753.4" y="483.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="756.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (12 samples, 0.44%)</title><rect x="754.7" y="643.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1 samples, 0.04%)</title><rect x="754.7" y="627.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="757.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (11 samples, 0.40%)</title><rect x="755.1" y="627.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.1" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.40%)</title><rect x="755.1" y="611.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.1" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.40%)</title><rect x="755.1" y="595.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.1" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.07%)</title><rect x="755.1" y="579.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="758.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.07%)</title><rect x="756.0" y="579.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="759.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.04%)</title><rect x="756.9" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.9" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.04%)</title><rect x="756.9" y="563.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="759.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.15%)</title><rect x="757.3" y="579.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (4 samples, 0.15%)</title><rect x="757.3" y="563.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.15%)</title><rect x="757.3" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="757.3" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (1 samples, 0.04%)</title><rect x="757.3" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="757.3" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="757.3" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="757.3" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="757.3" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="757.3" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="757.3" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="757.3" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="760.3" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.04%)</title><rect x="757.8" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.8" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.04%)</title><rect x="757.8" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.04%)</title><rect x="757.8" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="757.8" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="757.8" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="760.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="758.2" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.07%)</title><rect x="758.2" y="515.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="761.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="759.1" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.07%)</title><rect x="759.1" y="563.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="762.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (11 samples, 0.40%)</title><rect x="759.9" y="643.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.37%)</title><rect x="759.9" y="627.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/1737771959.accept (10 samples, 0.37%)</title><rect x="759.9" y="611.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (10 samples, 0.37%)</title><rect x="759.9" y="595.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/326626244.linkToTargetMethod (2 samples, 0.07%)</title><rect x="759.9" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1786364562.invokeStatic (2 samples, 0.07%)</title><rect x="759.9" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.get$Lambda (2 samples, 0.07%)</title><rect x="759.9" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$135 (2 samples, 0.07%)</title><rect x="759.9" y="531.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="762.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (8 samples, 0.29%)</title><rect x="760.8" y="579.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.29%)</title><rect x="760.8" y="563.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.18%)</title><rect x="760.8" y="547.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="763.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="763.0" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.11%)</title><rect x="763.0" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.11%)</title><rect x="763.0" y="515.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="766.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="764.3" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="764.3" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="767.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (38 samples, 1.40%)</title><rect x="764.7" y="643.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="764.7" y="627.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (4 samples, 0.15%)</title><rect x="764.7" y="611.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.15%)</title><rect x="764.7" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.07%)</title><rect x="764.7" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.7" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="764.7" y="563.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="767.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.07%)</title><rect x="765.6" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.07%)</title><rect x="765.6" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.6" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="765.6" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="768.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (22 samples, 0.81%)</title><rect x="766.4" y="627.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.4" y="638.0"></text>
</g>
<g>
<title>java.net.URI (5 samples, 0.18%)</title><rect x="766.4" y="611.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="769.4" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (17 samples, 0.63%)</title><rect x="768.6" y="611.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.6" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (2 samples, 0.07%)</title><rect x="768.6" y="595.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="771.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (15 samples, 0.55%)</title><rect x="769.5" y="595.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="769.5" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="769.5" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="769.5" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="772.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.11%)</title><rect x="769.9" y="547.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.9" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="769.9" y="531.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="772.9" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (11 samples, 0.40%)</title><rect x="771.2" y="579.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="771.2" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="771.2" y="547.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="771.2" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="774.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.11%)</title><rect x="771.6" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.6" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="771.6" y="515.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="774.6" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (7 samples, 0.26%)</title><rect x="772.9" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="772.9" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="772.9" y="531.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="772.9" y="515.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="775.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="773.8" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.8" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="773.8" y="499.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="776.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.11%)</title><rect x="774.7" y="547.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.7" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.11%)</title><rect x="774.7" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="774.7" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="774.7" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="774.7" y="483.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="777.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="775.1" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.1" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="775.1" y="467.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="778.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.18%)</title><rect x="776.0" y="627.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1 samples, 0.04%)</title><rect x="776.0" y="611.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="779.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.15%)</title><rect x="776.4" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (3 samples, 0.11%)</title><rect x="776.4" y="595.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="779.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="777.7" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.04%)</title><rect x="777.7" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="780.7" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (3 samples, 0.11%)</title><rect x="778.2" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.2" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (3 samples, 0.11%)</title><rect x="778.2" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.2" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (3 samples, 0.11%)</title><rect x="778.2" y="595.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="781.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (4 samples, 0.15%)</title><rect x="779.5" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (4 samples, 0.15%)</title><rect x="779.5" y="611.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.15%)</title><rect x="779.5" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.5" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="779.5" y="579.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="782.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.11%)</title><rect x="779.9" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.11%)</title><rect x="779.9" y="563.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="782.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (3 samples, 0.11%)</title><rect x="781.2" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.11%)</title><rect x="781.2" y="627.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.11%)</title><rect x="781.2" y="611.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.11%)</title><rect x="781.2" y="595.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="784.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (173 samples, 6.36%)</title><rect x="782.5" y="659.0" width="75.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.5" y="670.0">ru/mail/..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="782.5" y="643.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="785.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1 samples, 0.04%)</title><rect x="782.9" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (1 samples, 0.04%)</title><rect x="782.9" y="627.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="783.4" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="783.4" y="627.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="786.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.07%)</title><rect x="784.2" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="784.2" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.2" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.04%)</title><rect x="784.2" y="611.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="787.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="784.7" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (1 samples, 0.04%)</title><rect x="784.7" y="611.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="787.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.04%)</title><rect x="785.1" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.04%)</title><rect x="785.1" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.04%)</title><rect x="785.1" y="611.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="788.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (102 samples, 3.75%)</title><rect x="785.5" y="643.0" width="44.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.5" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (102 samples, 3.75%)</title><rect x="785.5" y="627.0" width="44.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.5" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (102 samples, 3.75%)</title><rect x="785.5" y="611.0" width="44.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.5" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (102 samples, 3.75%)</title><rect x="785.5" y="595.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.5" y="606.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.15%)</title><rect x="785.5" y="579.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.15%)</title><rect x="785.5" y="563.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.11%)</title><rect x="785.5" y="547.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="786.8" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="786.8" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.04%)</title><rect x="786.8" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.18%)</title><rect x="787.3" y="579.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.18%)</title><rect x="787.3" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.18%)</title><rect x="787.3" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.18%)</title><rect x="787.3" y="531.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.18%)</title><rect x="787.3" y="515.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="790.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2 samples, 0.07%)</title><rect x="789.4" y="579.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="792.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (7 samples, 0.26%)</title><rect x="790.3" y="579.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (50 samples, 1.84%)</title><rect x="793.3" y="579.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.3" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.18%)</title><rect x="793.3" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.15%)</title><rect x="793.3" y="547.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="793.3" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.3" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.04%)</title><rect x="793.3" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.11%)</title><rect x="793.8" y="531.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.8" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.11%)</title><rect x="793.8" y="515.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="796.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.04%)</title><rect x="795.1" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="795.1" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.04%)</title><rect x="795.1" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (1 samples, 0.04%)</title><rect x="795.1" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1 samples, 0.04%)</title><rect x="795.1" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="798.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.85%)</title><rect x="795.5" y="563.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.85%)</title><rect x="795.5" y="547.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="795.5" y="531.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="798.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.15%)</title><rect x="795.9" y="531.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="798.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="797.7" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="797.7" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (1 samples, 0.04%)</title><rect x="797.7" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.7" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.04%)</title><rect x="797.7" y="483.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="800.7" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.40%)</title><rect x="798.1" y="531.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.40%)</title><rect x="798.1" y="515.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (11 samples, 0.40%)</title><rect x="798.1" y="499.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.40%)</title><rect x="798.1" y="483.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.22%)</title><rect x="798.1" y="467.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (4 samples, 0.15%)</title><rect x="798.1" y="451.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.15%)</title><rect x="798.1" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.15%)</title><rect x="798.1" y="419.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.15%)</title><rect x="798.1" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.15%)</title><rect x="798.1" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.15%)</title><rect x="798.1" y="371.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.15%)</title><rect x="798.1" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.15%)</title><rect x="798.1" y="339.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="801.1" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.07%)</title><rect x="799.8" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.8" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2 samples, 0.07%)</title><rect x="799.8" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="802.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="800.7" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="800.7" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (1 samples, 0.04%)</title><rect x="800.7" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.7" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.04%)</title><rect x="800.7" y="419.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="803.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.04%)</title><rect x="801.2" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.04%)</title><rect x="801.2" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.04%)</title><rect x="801.2" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="801.2" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="801.2" y="403.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="804.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.11%)</title><rect x="801.6" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.11%)</title><rect x="801.6" y="451.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="804.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.07%)</title><rect x="802.9" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.9" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.07%)</title><rect x="802.9" y="515.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="803.8" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.15%)</title><rect x="803.8" y="515.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="806.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (2 samples, 0.07%)</title><rect x="805.5" y="563.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="808.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (14 samples, 0.51%)</title><rect x="806.4" y="563.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.4" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (14 samples, 0.51%)</title><rect x="806.4" y="547.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.51%)</title><rect x="806.4" y="531.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.51%)</title><rect x="806.4" y="515.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.4" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.51%)</title><rect x="806.4" y="499.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.4" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="806.4" y="483.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="809.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.29%)</title><rect x="806.8" y="483.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.8" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.29%)</title><rect x="806.8" y="467.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.8" y="478.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.29%)</title><rect x="806.8" y="451.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="809.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.18%)</title><rect x="810.3" y="483.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.18%)</title><rect x="810.3" y="467.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="810.3" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="813.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.15%)</title><rect x="810.7" y="451.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.7" y="462.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="810.7" y="435.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="813.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4 samples, 0.15%)</title><rect x="812.4" y="563.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.15%)</title><rect x="812.4" y="547.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.07%)</title><rect x="814.2" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="814.2" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.07%)</title><rect x="814.2" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="817.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (19 samples, 0.70%)</title><rect x="815.0" y="579.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.04%)</title><rect x="815.0" y="563.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="818.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (3 samples, 0.11%)</title><rect x="815.5" y="563.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="818.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (15 samples, 0.55%)</title><rect x="816.8" y="563.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (15 samples, 0.55%)</title><rect x="816.8" y="547.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (2 samples, 0.07%)</title><rect x="816.8" y="531.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="819.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="817.6" y="531.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="820.6" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.04%)</title><rect x="818.1" y="531.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="821.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.33%)</title><rect x="818.5" y="531.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (9 samples, 0.33%)</title><rect x="818.5" y="515.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (9 samples, 0.33%)</title><rect x="818.5" y="499.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (9 samples, 0.33%)</title><rect x="818.5" y="483.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.5" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (9 samples, 0.33%)</title><rect x="818.5" y="467.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="821.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.04%)</title><rect x="822.4" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.04%)</title><rect x="822.4" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.04%)</title><rect x="822.4" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1 samples, 0.04%)</title><rect x="822.4" y="483.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="825.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.04%)</title><rect x="822.9" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.9" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.04%)</title><rect x="822.9" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.9" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.04%)</title><rect x="822.9" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="825.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (15 samples, 0.55%)</title><rect x="823.3" y="579.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.11%)</title><rect x="823.3" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2 samples, 0.07%)</title><rect x="823.3" y="547.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="826.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="824.2" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="824.2" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="824.2" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="824.2" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="824.2" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="824.2" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="827.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.07%)</title><rect x="824.6" y="563.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="827.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (10 samples, 0.37%)</title><rect x="825.5" y="563.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.37%)</title><rect x="825.5" y="547.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10 samples, 0.37%)</title><rect x="825.5" y="531.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (5 samples, 0.18%)</title><rect x="825.5" y="515.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="828.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.18%)</title><rect x="827.6" y="515.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.18%)</title><rect x="827.6" y="499.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.18%)</title><rect x="827.6" y="483.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="830.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20 samples, 0.74%)</title><rect x="829.8" y="643.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1 samples, 0.04%)</title><rect x="829.8" y="627.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="832.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (19 samples, 0.70%)</title><rect x="830.2" y="627.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.59%)</title><rect x="830.2" y="611.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.59%)</title><rect x="830.2" y="595.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.2" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.04%)</title><rect x="830.2" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="833.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="830.7" y="579.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="833.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.11%)</title><rect x="831.1" y="579.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="834.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.04%)</title><rect x="832.4" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="835.4" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.11%)</title><rect x="832.8" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.8" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.11%)</title><rect x="832.8" y="563.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="835.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.18%)</title><rect x="834.1" y="579.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (5 samples, 0.18%)</title><rect x="834.1" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.18%)</title><rect x="834.1" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="834.1" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="834.1" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (1 samples, 0.04%)</title><rect x="834.1" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.1" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.04%)</title><rect x="834.1" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="837.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="834.6" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (1 samples, 0.04%)</title><rect x="834.6" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="834.6" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="834.6" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="834.6" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="834.6" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="834.6" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="834.6" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="834.6" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="837.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.11%)</title><rect x="835.0" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.0" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.11%)</title><rect x="835.0" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.04%)</title><rect x="835.0" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="835.0" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="835.0" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="838.0" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.07%)</title><rect x="835.4" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.4" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.07%)</title><rect x="835.4" y="483.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="838.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="836.3" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.3" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.07%)</title><rect x="836.3" y="563.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="839.3" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.11%)</title><rect x="837.2" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.2" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.11%)</title><rect x="837.2" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.2" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (3 samples, 0.11%)</title><rect x="837.2" y="579.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="840.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureHelper (7 samples, 0.26%)</title><rect x="838.5" y="643.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.07%)</title><rect x="838.5" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.07%)</title><rect x="838.5" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.07%)</title><rect x="838.5" y="595.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="841.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (5 samples, 0.18%)</title><rect x="839.3" y="627.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.11%)</title><rect x="839.3" y="611.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/1737771959.accept (3 samples, 0.11%)</title><rect x="839.3" y="595.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (3 samples, 0.11%)</title><rect x="839.3" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/326626244.linkToTargetMethod (1 samples, 0.04%)</title><rect x="839.3" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1786364562.invokeStatic (1 samples, 0.04%)</title><rect x="839.3" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.get$Lambda (1 samples, 0.04%)</title><rect x="839.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$135 (1 samples, 0.04%)</title><rect x="839.3" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="842.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.07%)</title><rect x="839.8" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.07%)</title><rect x="839.8" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.07%)</title><rect x="839.8" y="531.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="842.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="840.6" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="840.6" y="595.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="843.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (1 samples, 0.04%)</title><rect x="841.5" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="841.5" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="841.5" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$276/894924664.get$Lambda (1 samples, 0.04%)</title><rect x="841.5" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.5" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$276 (1 samples, 0.04%)</title><rect x="841.5" y="579.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="844.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (36 samples, 1.32%)</title><rect x="841.9" y="643.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.11%)</title><rect x="841.9" y="627.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (3 samples, 0.11%)</title><rect x="841.9" y="611.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="841.9" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="841.9" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="841.9" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="844.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.07%)</title><rect x="842.4" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.07%)</title><rect x="842.4" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.4" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="842.4" y="547.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="845.4" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (24 samples, 0.88%)</title><rect x="843.2" y="627.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.2" y="638.0"></text>
</g>
<g>
<title>java.net.URI (6 samples, 0.22%)</title><rect x="843.2" y="611.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="846.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (18 samples, 0.66%)</title><rect x="845.9" y="611.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.9" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (1 samples, 0.04%)</title><rect x="845.9" y="595.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="848.9" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (17 samples, 0.63%)</title><rect x="846.3" y="595.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="846.3" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="846.3" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="846.3" y="547.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="849.3" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (15 samples, 0.55%)</title><rect x="847.2" y="579.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="847.2" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="847.2" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.11%)</title><rect x="847.2" y="531.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="850.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (12 samples, 0.44%)</title><rect x="848.5" y="563.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.37%)</title><rect x="848.5" y="547.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.37%)</title><rect x="848.5" y="531.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.15%)</title><rect x="848.5" y="515.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="851.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.22%)</title><rect x="850.2" y="515.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.2" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.22%)</title><rect x="850.2" y="499.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="853.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.07%)</title><rect x="852.8" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.8" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.07%)</title><rect x="852.8" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="852.8" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="852.8" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="852.8" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.8" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="852.8" y="467.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.18%)</title><rect x="853.7" y="627.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (2 samples, 0.07%)</title><rect x="853.7" y="611.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="856.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.11%)</title><rect x="854.5" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="854.5" y="595.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.11%)</title><rect x="854.5" y="579.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="857.5" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (2 samples, 0.07%)</title><rect x="855.8" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.8" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (2 samples, 0.07%)</title><rect x="855.8" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.8" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (2 samples, 0.07%)</title><rect x="855.8" y="595.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="858.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (2 samples, 0.07%)</title><rect x="856.7" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (2 samples, 0.07%)</title><rect x="856.7" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.07%)</title><rect x="856.7" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="856.7" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.07%)</title><rect x="856.7" y="563.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="859.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (51 samples, 1.88%)</title><rect x="857.6" y="659.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.6" y="670.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.66%)</title><rect x="857.6" y="643.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.66%)</title><rect x="857.6" y="627.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.get$Lambda (18 samples, 0.66%)</title><rect x="857.6" y="611.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$140 (18 samples, 0.66%)</title><rect x="857.6" y="595.0" width="7.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="860.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 1.21%)</title><rect x="865.4" y="643.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 1.21%)</title><rect x="865.4" y="627.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.66%)</title><rect x="865.4" y="611.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="868.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (15 samples, 0.55%)</title><rect x="873.2" y="611.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.55%)</title><rect x="873.2" y="595.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="876.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (13 samples, 0.48%)</title><rect x="879.7" y="659.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashSet (1 samples, 0.04%)</title><rect x="879.7" y="643.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="882.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (12 samples, 0.44%)</title><rect x="880.1" y="643.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.44%)</title><rect x="880.1" y="627.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.44%)</title><rect x="880.1" y="611.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.33%)</title><rect x="880.1" y="595.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.1" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.33%)</title><rect x="880.1" y="579.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="883.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.11%)</title><rect x="884.0" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.11%)</title><rect x="884.0" y="579.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="887.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (27 samples, 0.99%)</title><rect x="885.3" y="707.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (27 samples, 0.99%)</title><rect x="885.3" y="691.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.99%)</title><rect x="885.3" y="675.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.33%)</title><rect x="885.3" y="659.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="888.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.66%)</title><rect x="889.2" y="659.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.2" y="670.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.66%)</title><rect x="889.2" y="643.0" width="7.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="892.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (116 samples, 4.27%)</title><rect x="897.1" y="739.0" width="50.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.1" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.70%)</title><rect x="897.1" y="723.0" width="8.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="900.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 1.36%)</title><rect x="905.3" y="723.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 1.36%)</title><rect x="905.3" y="707.0" width="16.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="908.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 2.21%)</title><rect x="921.4" y="723.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.4" y="734.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 2.21%)</title><rect x="921.4" y="707.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.4" y="718.0">o..</text>
</g>
<g>
<title>char[] (24 samples, 0.88%)</title><rect x="921.4" y="691.0" width="10.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="924.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.63%)</title><rect x="931.8" y="691.0" width="7.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="934.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.70%)</title><rect x="939.2" y="691.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.70%)</title><rect x="939.2" y="675.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.70%)</title><rect x="939.2" y="659.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.2" y="670.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.70%)</title><rect x="939.2" y="643.0" width="8.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="942.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (75 samples, 2.76%)</title><rect x="947.4" y="739.0" width="32.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.4" y="750.0">on..</text>
</g>
<g>
<title>byte[] (71 samples, 2.61%)</title><rect x="947.4" y="723.0" width="30.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="950.4" y="734.0">by..</text>
</g>
<g>
<title>byte[] (4 samples, 0.15%)</title><rect x="978.2" y="723.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.70%)</title><rect x="980.0" y="739.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.70%)</title><rect x="980.0" y="723.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.70%)</title><rect x="980.0" y="707.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.33%)</title><rect x="980.0" y="691.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="983.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.37%)</title><rect x="983.9" y="691.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="986.9" y="702.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.37%)</title><rect x="983.9" y="675.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="986.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (444 samples, 16.33%)</title><rect x="988.2" y="739.0" width="192.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (444 samples, 16.33%)</title><rect x="988.2" y="723.0" width="192.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (242 samples, 8.90%)</title><rect x="988.2" y="707.0" width="105.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="991.2" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (62 samples, 2.28%)</title><rect x="1093.2" y="707.0" width="26.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1096.2" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (140 samples, 5.15%)</title><rect x="1120.1" y="707.0" width="60.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.1" y="718.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (140 samples, 5.15%)</title><rect x="1120.1" y="691.0" width="60.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.1" y="702.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (140 samples, 5.15%)</title><rect x="1120.1" y="675.0" width="60.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.1" y="686.0">java/l..</text>
</g>
<g>
<title>byte[] (140 samples, 5.15%)</title><rect x="1120.1" y="659.0" width="60.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1123.1" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.77%)</title><rect x="1180.9" y="755.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (21 samples, 0.77%)</title><rect x="1180.9" y="739.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.77%)</title><rect x="1180.9" y="723.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.77%)</title><rect x="1180.9" y="707.0" width="9.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1183.9" y="718.0"></text>
</g>
</g>
</svg>
