<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (502 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 1.20%)</title><rect x="10.0" y="723.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 1.20%)</title><rect x="10.0" y="707.0" width="14.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 1.20%)</title><rect x="10.0" y="691.0" width="14.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.20%)</title><rect x="10.0" y="675.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 1.00%)</title><rect x="12.4" y="675.0" width="11.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.4" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 1.00%)</title><rect x="12.4" y="659.0" width="11.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="15.4" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.20%)</title><rect x="24.1" y="723.0" width="2.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="27.1" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.20%)</title><rect x="24.1" y="707.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (353 samples, 70.32%)</title><rect x="26.5" y="723.0" width="829.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.5" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (353 samples, 70.32%)</title><rect x="26.5" y="707.0" width="829.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.5" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (353 samples, 70.32%)</title><rect x="26.5" y="691.0" width="829.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.5" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (93 samples, 18.53%)</title><rect x="28.8" y="675.0" width="218.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.8" y="686.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 8.96%)</title><rect x="28.8" y="659.0" width="105.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.8" y="670.0">java/util/con..</text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="31.2" y="643.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="34.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (26 samples, 5.18%)</title><rect x="33.5" y="643.0" width="61.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.5" y="654.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (26 samples, 5.18%)</title><rect x="33.5" y="627.0" width="61.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.5" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (26 samples, 5.18%)</title><rect x="33.5" y="611.0" width="61.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.5" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (26 samples, 5.18%)</title><rect x="33.5" y="595.0" width="61.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.5" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (20 samples, 3.98%)</title><rect x="33.5" y="579.0" width="47.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.5" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (20 samples, 3.98%)</title><rect x="33.5" y="563.0" width="47.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.5" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (20 samples, 3.98%)</title><rect x="33.5" y="547.0" width="47.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.5" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 2.19%)</title><rect x="33.5" y="531.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.5" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 2.19%)</title><rect x="33.5" y="515.0" width="25.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.5" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 2.19%)</title><rect x="33.5" y="499.0" width="25.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.5" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (11 samples, 2.19%)</title><rect x="33.5" y="483.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (11 samples, 2.19%)</title><rect x="33.5" y="467.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.5" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11 samples, 2.19%)</title><rect x="33.5" y="451.0" width="25.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.5" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (1 samples, 0.20%)</title><rect x="33.5" y="435.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.20%)</title><rect x="33.5" y="419.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.20%)</title><rect x="33.5" y="403.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.20%)</title><rect x="33.5" y="387.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.20%)</title><rect x="33.5" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.20%)</title><rect x="33.5" y="355.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.20%)</title><rect x="33.5" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="33.5" y="323.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="33.5" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (10 samples, 1.99%)</title><rect x="35.9" y="435.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.9" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10 samples, 1.99%)</title><rect x="35.9" y="419.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.20%)</title><rect x="35.9" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.20%)</title><rect x="35.9" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.20%)</title><rect x="35.9" y="371.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.20%)</title><rect x="35.9" y="355.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9 samples, 1.79%)</title><rect x="38.2" y="403.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 1.39%)</title><rect x="38.2" y="387.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 1.39%)</title><rect x="38.2" y="371.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.20%)</title><rect x="38.2" y="355.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (1 samples, 0.20%)</title><rect x="38.2" y="339.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (6 samples, 1.20%)</title><rect x="40.6" y="355.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6 samples, 1.20%)</title><rect x="40.6" y="339.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2 samples, 0.40%)</title><rect x="40.6" y="323.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.40%)</title><rect x="40.6" y="307.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.40%)</title><rect x="40.6" y="291.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.40%)</title><rect x="40.6" y="275.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.40%)</title><rect x="40.6" y="259.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.40%)</title><rect x="40.6" y="243.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.40%)</title><rect x="40.6" y="227.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="40.6" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="40.6" y="195.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.20%)</title><rect x="40.6" y="179.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.20%)</title><rect x="40.6" y="163.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.6" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="40.6" y="147.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="43.6" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.20%)</title><rect x="40.6" y="131.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="43.6" y="142.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="40.6" y="115.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.20%)</title><rect x="42.9" y="211.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.20%)</title><rect x="42.9" y="195.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.9" y="206.0"></text>
</g>
<g>
<title>write (1 samples, 0.20%)</title><rect x="42.9" y="179.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="45.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (4 samples, 0.80%)</title><rect x="45.3" y="323.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3 samples, 0.60%)</title><rect x="45.3" y="307.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.20%)</title><rect x="45.3" y="291.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.3" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.test (1 samples, 0.20%)</title><rect x="45.3" y="275.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.3" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.20%)</title><rect x="45.3" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (1 samples, 0.20%)</title><rect x="45.3" y="243.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.20%)</title><rect x="45.3" y="227.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (1 samples, 0.20%)</title><rect x="45.3" y="211.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.3" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.20%)</title><rect x="45.3" y="195.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (1 samples, 0.20%)</title><rect x="45.3" y="179.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.20%)</title><rect x="45.3" y="163.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.20%)</title><rect x="45.3" y="147.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="45.3" y="131.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.20%)</title><rect x="45.3" y="115.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.40%)</title><rect x="47.6" y="291.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.6" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.40%)</title><rect x="47.6" y="275.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.40%)</title><rect x="47.6" y="259.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.6" y="270.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="47.6" y="243.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="50.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.20%)</title><rect x="50.0" y="243.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (1 samples, 0.20%)</title><rect x="50.0" y="227.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.0" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.20%)</title><rect x="50.0" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.20%)</title><rect x="50.0" y="195.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.0" y="206.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="50.0" y="179.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="53.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.20%)</title><rect x="52.3" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="52.3" y="291.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="52.3" y="275.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.40%)</title><rect x="54.7" y="387.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.40%)</title><rect x="54.7" y="371.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.40%)</title><rect x="54.7" y="355.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.40%)</title><rect x="54.7" y="339.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.40%)</title><rect x="54.7" y="323.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.40%)</title><rect x="54.7" y="307.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.20%)</title><rect x="54.7" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (1 samples, 0.20%)</title><rect x="54.7" y="275.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.20%)</title><rect x="54.7" y="259.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.20%)</title><rect x="54.7" y="243.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.20%)</title><rect x="54.7" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.20%)</title><rect x="57.0" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.20%)</title><rect x="57.0" y="275.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (9 samples, 1.79%)</title><rect x="59.4" y="531.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.4" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (9 samples, 1.79%)</title><rect x="59.4" y="515.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 1.79%)</title><rect x="59.4" y="499.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 1.79%)</title><rect x="59.4" y="483.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 1.79%)</title><rect x="59.4" y="467.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.4" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (9 samples, 1.79%)</title><rect x="59.4" y="451.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9 samples, 1.79%)</title><rect x="59.4" y="435.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.4" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9 samples, 1.79%)</title><rect x="59.4" y="419.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 1.00%)</title><rect x="59.4" y="403.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 1.00%)</title><rect x="59.4" y="387.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 1.00%)</title><rect x="59.4" y="371.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (5 samples, 1.00%)</title><rect x="59.4" y="355.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5 samples, 1.00%)</title><rect x="59.4" y="339.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 1.00%)</title><rect x="59.4" y="323.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 1.00%)</title><rect x="59.4" y="307.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5 samples, 1.00%)</title><rect x="59.4" y="291.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (5 samples, 1.00%)</title><rect x="59.4" y="275.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (5 samples, 1.00%)</title><rect x="59.4" y="259.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (5 samples, 1.00%)</title><rect x="59.4" y="243.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.4" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 1.00%)</title><rect x="59.4" y="227.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.4" y="238.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (5 samples, 1.00%)</title><rect x="59.4" y="211.0" width="11.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="62.4" y="222.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.20%)</title><rect x="59.4" y="195.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="62.4" y="206.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.20%)</title><rect x="59.4" y="179.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="62.4" y="190.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.20%)</title><rect x="59.4" y="163.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="62.4" y="174.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="61.7" y="195.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="64.7" y="206.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.20%)</title><rect x="61.7" y="179.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="64.7" y="190.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.60%)</title><rect x="64.1" y="195.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="67.1" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (3 samples, 0.60%)</title><rect x="64.1" y="179.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="67.1" y="190.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.20%)</title><rect x="64.1" y="163.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.1" y="174.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.20%)</title><rect x="64.1" y="147.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.1" y="158.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.20%)</title><rect x="64.1" y="131.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="67.1" y="142.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.20%)</title><rect x="64.1" y="115.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="67.1" y="126.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.20%)</title><rect x="64.1" y="99.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="67.1" y="110.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (2 samples, 0.40%)</title><rect x="66.4" y="163.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="69.4" y="174.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (2 samples, 0.40%)</title><rect x="66.4" y="147.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="69.4" y="158.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.40%)</title><rect x="66.4" y="131.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4 samples, 0.80%)</title><rect x="71.1" y="403.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4 samples, 0.80%)</title><rect x="71.1" y="387.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 0.80%)</title><rect x="71.1" y="371.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 0.80%)</title><rect x="71.1" y="355.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.60%)</title><rect x="71.1" y="339.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="74.1" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.60%)</title><rect x="71.1" y="323.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="74.1" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.60%)</title><rect x="71.1" y="307.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="74.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.40%)</title><rect x="73.5" y="291.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="76.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.20%)</title><rect x="78.2" y="339.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.20%)</title><rect x="78.2" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (6 samples, 1.20%)</title><rect x="80.5" y="579.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.20%)</title><rect x="80.5" y="563.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.20%)</title><rect x="80.5" y="547.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.20%)</title><rect x="80.5" y="531.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.20%)</title><rect x="80.5" y="515.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.20%)</title><rect x="80.5" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (5 samples, 1.00%)</title><rect x="82.9" y="563.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (5 samples, 1.00%)</title><rect x="82.9" y="547.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 1.00%)</title><rect x="82.9" y="531.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.9" y="542.0"></text>
</g>
<g>
<title>write (5 samples, 1.00%)</title><rect x="82.9" y="515.0" width="11.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 3.39%)</title><rect x="94.6" y="643.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.6" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 3.39%)</title><rect x="94.6" y="627.0" width="40.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.6" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.20%)</title><rect x="94.6" y="611.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="94.6" y="595.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="94.6" y="579.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="94.6" y="563.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="94.6" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="94.6" y="531.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="94.6" y="515.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="94.6" y="499.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.6" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="94.6" y="483.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="97.6" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="94.6" y="467.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="97.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (16 samples, 3.19%)</title><rect x="97.0" y="611.0" width="37.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.0" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (15 samples, 2.99%)</title><rect x="99.3" y="595.0" width="35.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.3" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (15 samples, 2.99%)</title><rect x="99.3" y="579.0" width="35.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.3" y="590.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 2.99%)</title><rect x="99.3" y="563.0" width="35.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.3" y="574.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 2.79%)</title><rect x="99.3" y="547.0" width="32.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.3" y="558.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.20%)</title><rect x="99.3" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 2.59%)</title><rect x="101.7" y="531.0" width="30.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.7" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 2.59%)</title><rect x="101.7" y="515.0" width="30.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.7" y="526.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 2.59%)</title><rect x="101.7" y="499.0" width="30.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.7" y="510.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (13 samples, 2.59%)</title><rect x="101.7" y="483.0" width="30.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.7" y="494.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (13 samples, 2.59%)</title><rect x="101.7" y="467.0" width="30.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.7" y="478.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 2.59%)</title><rect x="101.7" y="451.0" width="30.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.7" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 2.59%)</title><rect x="101.7" y="435.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.7" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (13 samples, 2.59%)</title><rect x="101.7" y="419.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.7" y="430.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (13 samples, 2.59%)</title><rect x="101.7" y="403.0" width="30.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.7" y="414.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (13 samples, 2.59%)</title><rect x="101.7" y="387.0" width="30.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.7" y="398.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.20%)</title><rect x="104.0" y="371.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="107.0" y="382.0"></text>
</g>
<g>
<title>write (11 samples, 2.19%)</title><rect x="106.4" y="371.0" width="25.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="109.4" y="382.0">w..</text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.20%)</title><rect x="132.2" y="547.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (1 samples, 0.20%)</title><rect x="132.2" y="531.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.20%)</title><rect x="132.2" y="515.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (1 samples, 0.20%)</title><rect x="132.2" y="499.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.20%)</title><rect x="132.2" y="483.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.20%)</title><rect x="132.2" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (7 samples, 1.39%)</title><rect x="134.6" y="659.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (7 samples, 1.39%)</title><rect x="134.6" y="643.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (7 samples, 1.39%)</title><rect x="134.6" y="627.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (7 samples, 1.39%)</title><rect x="134.6" y="611.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.6" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 1.39%)</title><rect x="134.6" y="595.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.6" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 1.39%)</title><rect x="134.6" y="579.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.6" y="590.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.39%)</title><rect x="134.6" y="563.0" width="16.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="137.6" y="574.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 1.39%)</title><rect x="134.6" y="547.0" width="16.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.6" y="558.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (1 samples, 0.20%)</title><rect x="134.6" y="531.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="137.6" y="542.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.20%)</title><rect x="134.6" y="515.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="137.6" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.20%)</title><rect x="134.6" y="499.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="137.6" y="510.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.20%)</title><rect x="136.9" y="531.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="139.9" y="542.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.20%)</title><rect x="136.9" y="515.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="139.9" y="526.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.20%)</title><rect x="136.9" y="499.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="139.9" y="510.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.20%)</title><rect x="136.9" y="483.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="139.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (5 samples, 1.00%)</title><rect x="139.3" y="531.0" width="11.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="142.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (5 samples, 1.00%)</title><rect x="139.3" y="515.0" width="11.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="142.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (5 samples, 1.00%)</title><rect x="139.3" y="499.0" width="11.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="142.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (5 samples, 1.00%)</title><rect x="139.3" y="483.0" width="11.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.20%)</title><rect x="139.3" y="467.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (4 samples, 0.80%)</title><rect x="141.6" y="467.0" width="9.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.20%)</title><rect x="141.6" y="451.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="144.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.60%)</title><rect x="144.0" y="451.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="147.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (3 samples, 0.60%)</title><rect x="144.0" y="435.0" width="7.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="147.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (17 samples, 3.39%)</title><rect x="151.0" y="659.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.0" y="670.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (17 samples, 3.39%)</title><rect x="151.0" y="643.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.0" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (14 samples, 2.79%)</title><rect x="151.0" y="627.0" width="32.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.0" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (14 samples, 2.79%)</title><rect x="151.0" y="611.0" width="32.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.0" y="622.0">ru..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.40%)</title><rect x="151.0" y="595.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.0" y="606.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.40%)</title><rect x="151.0" y="579.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.40%)</title><rect x="151.0" y="563.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.40%)</title><rect x="151.0" y="547.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.40%)</title><rect x="151.0" y="531.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.40%)</title><rect x="151.0" y="515.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.0" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.40%)</title><rect x="151.0" y="499.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="154.0" y="510.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.40%)</title><rect x="151.0" y="483.0" width="4.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="154.0" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.40%)</title><rect x="151.0" y="467.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="154.0" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.40%)</title><rect x="151.0" y="451.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="154.0" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.20%)</title><rect x="153.4" y="435.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="156.4" y="446.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.20%)</title><rect x="153.4" y="419.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="156.4" y="430.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.20%)</title><rect x="153.4" y="403.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="156.4" y="414.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 2.19%)</title><rect x="155.7" y="595.0" width="25.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.7" y="606.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 2.19%)</title><rect x="155.7" y="579.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.7" y="590.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (11 samples, 2.19%)</title><rect x="155.7" y="563.0" width="25.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="158.7" y="574.0">J..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="155.7" y="547.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="158.7" y="558.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.20%)</title><rect x="158.1" y="547.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="161.1" y="558.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (9 samples, 1.79%)</title><rect x="160.4" y="547.0" width="21.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="163.4" y="558.0">r..</text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (2 samples, 0.40%)</title><rect x="160.4" y="531.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="163.4" y="542.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.40%)</title><rect x="160.4" y="515.0" width="4.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="163.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="160.4" y="499.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="163.4" y="510.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.20%)</title><rect x="160.4" y="483.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="163.4" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.20%)</title><rect x="162.8" y="499.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="165.8" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.20%)</title><rect x="162.8" y="483.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="165.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (7 samples, 1.39%)</title><rect x="165.1" y="531.0" width="16.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="168.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (7 samples, 1.39%)</title><rect x="165.1" y="515.0" width="16.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="168.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (7 samples, 1.39%)</title><rect x="165.1" y="499.0" width="16.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="168.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (7 samples, 1.39%)</title><rect x="165.1" y="483.0" width="16.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="168.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (7 samples, 1.39%)</title><rect x="165.1" y="467.0" width="16.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="168.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.40%)</title><rect x="167.5" y="451.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="170.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.20%)</title><rect x="169.8" y="435.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="172.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.60%)</title><rect x="172.2" y="451.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="175.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (3 samples, 0.60%)</title><rect x="172.2" y="435.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="175.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.40%)</title><rect x="174.5" y="419.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="177.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.20%)</title><rect x="179.2" y="451.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="182.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.20%)</title><rect x="179.2" y="435.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (1 samples, 0.20%)</title><rect x="181.6" y="595.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.20%)</title><rect x="181.6" y="579.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="184.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.20%)</title><rect x="181.6" y="563.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="184.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (2 samples, 0.40%)</title><rect x="183.9" y="627.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.20%)</title><rect x="183.9" y="611.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getBytes (1 samples, 0.20%)</title><rect x="186.3" y="611.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.20%)</title><rect x="186.3" y="595.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.20%)</title><rect x="186.3" y="579.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.20%)</title><rect x="186.3" y="563.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (1 samples, 0.20%)</title><rect x="188.6" y="627.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="188.6" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="188.6" y="595.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (1 samples, 0.20%)</title><rect x="188.6" y="579.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$276/894924664.get (24 samples, 4.78%)</title><rect x="191.0" y="659.0" width="56.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$7 (24 samples, 4.78%)</title><rect x="191.0" y="643.0" width="56.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.0" y="654.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (24 samples, 4.78%)</title><rect x="191.0" y="627.0" width="56.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.0" y="638.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (23 samples, 4.58%)</title><rect x="191.0" y="611.0" width="54.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="622.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (23 samples, 4.58%)</title><rect x="191.0" y="595.0" width="54.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.0" y="606.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (23 samples, 4.58%)</title><rect x="191.0" y="579.0" width="54.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="194.0" y="590.0">Java_..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.20%)</title><rect x="191.0" y="563.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="194.0" y="574.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (22 samples, 4.38%)</title><rect x="193.3" y="563.0" width="51.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="196.3" y="574.0">rocks..</text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.20%)</title><rect x="193.3" y="547.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="196.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 4.18%)</title><rect x="195.7" y="547.0" width="49.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="198.7" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 4.18%)</title><rect x="195.7" y="531.0" width="49.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="198.7" y="542.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 4.18%)</title><rect x="195.7" y="515.0" width="49.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="198.7" y="526.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (19 samples, 3.78%)</title><rect x="195.7" y="499.0" width="44.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="198.7" y="510.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (19 samples, 3.78%)</title><rect x="195.7" y="483.0" width="44.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="198.7" y="494.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.20%)</title><rect x="195.7" y="467.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="198.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (16 samples, 3.19%)</title><rect x="198.0" y="467.0" width="37.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="201.0" y="478.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (16 samples, 3.19%)</title><rect x="198.0" y="451.0" width="37.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="201.0" y="462.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (16 samples, 3.19%)</title><rect x="198.0" y="435.0" width="37.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="201.0" y="446.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="198.0" y="419.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="201.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (13 samples, 2.59%)</title><rect x="200.4" y="419.0" width="30.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="203.4" y="430.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (12 samples, 2.39%)</title><rect x="202.7" y="403.0" width="28.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="205.7" y="414.0">ro..</text>
</g>
<g>
<title>write (12 samples, 2.39%)</title><rect x="202.7" y="387.0" width="28.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="205.7" y="398.0">wr..</text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.40%)</title><rect x="231.0" y="419.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="234.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.40%)</title><rect x="235.7" y="467.0" width="4.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="238.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.40%)</title><rect x="235.7" y="451.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="238.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.40%)</title><rect x="235.7" y="435.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="238.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.20%)</title><rect x="238.0" y="419.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="241.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="240.4" y="499.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="243.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="240.4" y="483.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="243.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.20%)</title><rect x="242.7" y="499.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="245.7" y="510.0"></text>
</g>
<g>
<title>free (1 samples, 0.20%)</title><rect x="242.7" y="483.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (1 samples, 0.20%)</title><rect x="245.1" y="611.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.20%)</title><rect x="245.1" y="595.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="245.1" y="579.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="245.1" y="563.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.1" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="245.1" y="547.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.20%)</title><rect x="245.1" y="531.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.20%)</title><rect x="245.1" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.1" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.20%)</title><rect x="245.1" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.1" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="245.1" y="483.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="248.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (11 samples, 2.19%)</title><rect x="247.4" y="675.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.4" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.40%)</title><rect x="247.4" y="659.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.40%)</title><rect x="247.4" y="643.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="247.4" y="627.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="247.4" y="611.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="247.4" y="595.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (2 samples, 0.40%)</title><rect x="247.4" y="579.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (2 samples, 0.40%)</title><rect x="247.4" y="563.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (2 samples, 0.40%)</title><rect x="247.4" y="547.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.40%)</title><rect x="247.4" y="531.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.40%)</title><rect x="247.4" y="515.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="247.4" y="499.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="247.4" y="483.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.40%)</title><rect x="247.4" y="467.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.40%)</title><rect x="247.4" y="451.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.40%)</title><rect x="247.4" y="435.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.40%)</title><rect x="247.4" y="419.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.40%)</title><rect x="247.4" y="403.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.40%)</title><rect x="247.4" y="387.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.40%)</title><rect x="247.4" y="371.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.40%)</title><rect x="247.4" y="355.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.4" y="366.0"></text>
</g>
<g>
<title>write (2 samples, 0.40%)</title><rect x="247.4" y="339.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="250.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 1.79%)</title><rect x="252.1" y="659.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.1" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 1.79%)</title><rect x="252.1" y="643.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.1" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.20%)</title><rect x="252.1" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.20%)</title><rect x="252.1" y="611.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.20%)</title><rect x="252.1" y="595.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.1" y="606.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="252.1" y="579.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="255.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (8 samples, 1.59%)</title><rect x="254.5" y="627.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (7 samples, 1.39%)</title><rect x="256.8" y="611.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 1.39%)</title><rect x="256.8" y="595.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 1.39%)</title><rect x="256.8" y="579.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.20%)</title><rect x="256.8" y="563.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.8" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="256.8" y="547.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="259.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.80%)</title><rect x="259.2" y="563.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.80%)</title><rect x="259.2" y="547.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.20%)</title><rect x="259.2" y="531.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.20%)</title><rect x="259.2" y="515.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.2" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="259.2" y="499.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="262.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$138/1868095322.apply (3 samples, 0.60%)</title><rect x="261.5" y="531.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$1 (3 samples, 0.60%)</title><rect x="261.5" y="515.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.mergeValues (2 samples, 0.40%)</title><rect x="261.5" y="499.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (1 samples, 0.20%)</title><rect x="261.5" y="483.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.20%)</title><rect x="261.5" y="467.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="261.5" y="451.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$272/278645488.get$Lambda (1 samples, 0.20%)</title><rect x="261.5" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.20%)</title><rect x="263.9" y="483.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.20%)</title><rect x="263.9" y="467.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.20%)</title><rect x="263.9" y="451.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.20%)</title><rect x="263.9" y="435.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.20%)</title><rect x="263.9" y="419.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.9" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="263.9" y="403.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="266.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (1 samples, 0.20%)</title><rect x="266.2" y="499.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.20%)</title><rect x="266.2" y="483.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.2" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="266.2" y="467.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="269.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="268.6" y="563.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="268.6" y="547.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (2 samples, 0.40%)</title><rect x="268.6" y="531.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (2 samples, 0.40%)</title><rect x="268.6" y="515.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (2 samples, 0.40%)</title><rect x="268.6" y="499.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.40%)</title><rect x="268.6" y="483.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.40%)</title><rect x="268.6" y="467.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="268.6" y="451.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.40%)</title><rect x="268.6" y="435.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.40%)</title><rect x="268.6" y="419.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.40%)</title><rect x="268.6" y="403.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.40%)</title><rect x="268.6" y="387.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.40%)</title><rect x="268.6" y="371.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.40%)</title><rect x="268.6" y="355.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.40%)</title><rect x="268.6" y="339.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.40%)</title><rect x="268.6" y="323.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.40%)</title><rect x="268.6" y="307.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.6" y="318.0"></text>
</g>
<g>
<title>write (2 samples, 0.40%)</title><rect x="268.6" y="291.0" width="4.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="271.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.40%)</title><rect x="273.3" y="675.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.40%)</title><rect x="273.3" y="659.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.40%)</title><rect x="273.3" y="643.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.20%)</title><rect x="273.3" y="627.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.20%)</title><rect x="275.6" y="627.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.20%)</title><rect x="275.6" y="611.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.20%)</title><rect x="275.6" y="595.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (141 samples, 28.09%)</title><rect x="278.0" y="675.0" width="331.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.0" y="686.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (140 samples, 27.89%)</title><rect x="280.3" y="659.0" width="329.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.3" y="670.0">java/util/concurrent/ArrayBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (128 samples, 25.50%)</title><rect x="280.3" y="643.0" width="300.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.3" y="654.0">java/util/concurrent/locks/AbstractQueue..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.20%)</title><rect x="280.3" y="627.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (8 samples, 1.59%)</title><rect x="282.7" y="627.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 1.59%)</title><rect x="282.7" y="611.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 1.59%)</title><rect x="282.7" y="595.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 1.59%)</title><rect x="282.7" y="579.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 1.59%)</title><rect x="282.7" y="563.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.7" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 1.20%)</title><rect x="287.4" y="547.0" width="14.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="290.4" y="558.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.20%)</title><rect x="289.7" y="531.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="292.7" y="542.0"></text>
</g>
<g>
<title>Chunk::next() const (1 samples, 0.20%)</title><rect x="289.7" y="515.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="292.7" y="526.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.40%)</title><rect x="292.1" y="531.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.20%)</title><rect x="296.8" y="531.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="299.8" y="542.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.20%)</title><rect x="296.8" y="515.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="299.8" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="299.1" y="531.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="302.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (119 samples, 23.71%)</title><rect x="301.5" y="627.0" width="279.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.5" y="638.0">java/util/concurrent/locks/LockSuppor..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (119 samples, 23.71%)</title><rect x="301.5" y="611.0" width="279.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.5" y="622.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="325.0" y="595.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="328.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (108 samples, 21.51%)</title><rect x="327.3" y="595.0" width="253.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="330.3" y="606.0">Unsafe_Park(JNIEnv_*, _jobject*, u..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.20%)</title><rect x="327.3" y="579.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="330.3" y="590.0"></text>
</g>
<g>
<title>in_bytes(int) (1 samples, 0.20%)</title><rect x="327.3" y="563.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="330.3" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (101 samples, 20.12%)</title><rect x="329.7" y="579.0" width="237.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="332.7" y="590.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.20%)</title><rect x="329.7" y="563.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.60%)</title><rect x="332.0" y="563.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="335.0" y="574.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.20%)</title><rect x="336.7" y="547.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="339.7" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (93 samples, 18.53%)</title><rect x="339.1" y="563.0" width="218.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="342.1" y="574.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.60%)</title><rect x="557.7" y="563.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>_pthread_testcancel (2 samples, 0.40%)</title><rect x="560.0" y="547.0" width="4.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="563.0" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="564.7" y="563.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="567.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (2 samples, 0.40%)</title><rect x="567.1" y="579.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="570.1" y="590.0"></text>
</g>
<g>
<title>JavaThread::is_suspend_after_native() const (1 samples, 0.20%)</title><rect x="567.1" y="563.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="570.1" y="574.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.20%)</title><rect x="569.4" y="563.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="572.4" y="574.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.20%)</title><rect x="569.4" y="547.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="572.4" y="558.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.20%)</title><rect x="569.4" y="531.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="572.4" y="542.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.20%)</title><rect x="569.4" y="515.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="572.4" y="526.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.20%)</title><rect x="571.8" y="579.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="574.8" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.40%)</title><rect x="574.1" y="579.0" width="4.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="577.1" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.20%)</title><rect x="578.8" y="579.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="581.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.60%)</title><rect x="581.2" y="643.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.60%)</title><rect x="581.2" y="627.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.60%)</title><rect x="581.2" y="611.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.60%)</title><rect x="581.2" y="595.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.60%)</title><rect x="581.2" y="579.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.60%)</title><rect x="581.2" y="563.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.2" y="574.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.60%)</title><rect x="581.2" y="547.0" width="7.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="584.2" y="558.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.60%)</title><rect x="581.2" y="531.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="584.2" y="542.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.60%)</title><rect x="581.2" y="515.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="584.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 1.59%)</title><rect x="588.2" y="643.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 1.59%)</title><rect x="588.2" y="627.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 1.59%)</title><rect x="588.2" y="611.0" width="18.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 1.59%)</title><rect x="588.2" y="595.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 1.59%)</title><rect x="588.2" y="579.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.2" y="590.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.20%)</title><rect x="590.6" y="563.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="593.6" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 1.20%)</title><rect x="592.9" y="563.0" width="14.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="595.9" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.20%)</title><rect x="592.9" y="547.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="595.9" y="558.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (1 samples, 0.20%)</title><rect x="592.9" y="531.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="595.9" y="542.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.40%)</title><rect x="595.3" y="547.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="598.3" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.20%)</title><rect x="600.0" y="547.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="603.0" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="602.4" y="547.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="605.4" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.20%)</title><rect x="604.7" y="547.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="607.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="607.1" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (22 samples, 4.38%)</title><rect x="609.4" y="675.0" width="51.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (22 samples, 4.38%)</title><rect x="609.4" y="659.0" width="51.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.4" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (22 samples, 4.38%)</title><rect x="609.4" y="643.0" width="51.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.4" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (22 samples, 4.38%)</title><rect x="609.4" y="627.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.4" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 4.38%)</title><rect x="609.4" y="611.0" width="51.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 4.38%)</title><rect x="609.4" y="595.0" width="51.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 4.38%)</title><rect x="609.4" y="579.0" width="51.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.4" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 4.38%)</title><rect x="609.4" y="563.0" width="51.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.4" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (22 samples, 4.38%)</title><rect x="609.4" y="547.0" width="51.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (22 samples, 4.38%)</title><rect x="609.4" y="531.0" width="51.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.4" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (22 samples, 4.38%)</title><rect x="609.4" y="515.0" width="51.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4 samples, 0.80%)</title><rect x="609.4" y="499.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.40%)</title><rect x="609.4" y="483.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.40%)</title><rect x="609.4" y="467.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.40%)</title><rect x="609.4" y="451.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="609.4" y="435.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.40%)</title><rect x="609.4" y="419.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.40%)</title><rect x="609.4" y="403.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (2 samples, 0.40%)</title><rect x="609.4" y="387.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.40%)</title><rect x="609.4" y="371.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.40%)</title><rect x="609.4" y="355.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (2 samples, 0.40%)</title><rect x="609.4" y="339.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.40%)</title><rect x="609.4" y="323.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.40%)</title><rect x="609.4" y="307.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.40%)</title><rect x="609.4" y="291.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.40%)</title><rect x="609.4" y="275.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2 samples, 0.40%)</title><rect x="609.4" y="259.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/1256228167.accept (2 samples, 0.40%)</title><rect x="609.4" y="243.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (2 samples, 0.40%)</title><rect x="609.4" y="227.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.40%)</title><rect x="609.4" y="211.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.40%)</title><rect x="609.4" y="195.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.40%)</title><rect x="609.4" y="179.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.40%)</title><rect x="609.4" y="163.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.40%)</title><rect x="609.4" y="147.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.40%)</title><rect x="609.4" y="131.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.40%)</title><rect x="609.4" y="115.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.20%)</title><rect x="609.4" y="99.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.20%)</title><rect x="609.4" y="83.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="94.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.20%)</title><rect x="611.8" y="99.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="614.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (1 samples, 0.20%)</title><rect x="614.1" y="483.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.20%)</title><rect x="614.1" y="467.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.20%)</title><rect x="614.1" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.20%)</title><rect x="616.5" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="616.5" y="467.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.20%)</title><rect x="618.8" y="499.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.20%)</title><rect x="618.8" y="483.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.20%)</title><rect x="618.8" y="467.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 3.39%)</title><rect x="621.2" y="499.0" width="39.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.2" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (17 samples, 3.39%)</title><rect x="621.2" y="483.0" width="39.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.2" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (17 samples, 3.39%)</title><rect x="621.2" y="467.0" width="39.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.2" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (17 samples, 3.39%)</title><rect x="621.2" y="451.0" width="39.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.2" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$229/1981321319.run (1 samples, 0.20%)</title><rect x="621.2" y="435.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1 samples, 0.20%)</title><rect x="621.2" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.20%)</title><rect x="621.2" y="403.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.20%)</title><rect x="621.2" y="387.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.20%)</title><rect x="621.2" y="371.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (16 samples, 3.19%)</title><rect x="623.5" y="435.0" width="37.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.5" y="446.0">jdk..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (15 samples, 2.99%)</title><rect x="623.5" y="419.0" width="35.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.5" y="430.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (15 samples, 2.99%)</title><rect x="623.5" y="403.0" width="35.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.5" y="414.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (15 samples, 2.99%)</title><rect x="623.5" y="387.0" width="35.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.5" y="398.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (15 samples, 2.99%)</title><rect x="623.5" y="371.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.5" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (14 samples, 2.79%)</title><rect x="623.5" y="355.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.5" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (14 samples, 2.79%)</title><rect x="623.5" y="339.0" width="32.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.5" y="350.0">su..</text>
</g>
<g>
<title>writev (14 samples, 2.79%)</title><rect x="623.5" y="323.0" width="32.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="626.5" y="334.0">wr..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.20%)</title><rect x="656.4" y="355.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.20%)</title><rect x="656.4" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.20%)</title><rect x="658.8" y="419.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.8" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.20%)</title><rect x="658.8" y="403.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (83 samples, 16.53%)</title><rect x="661.1" y="675.0" width="195.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.1" y="686.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (83 samples, 16.53%)</title><rect x="661.1" y="659.0" width="195.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.1" y="670.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (40 samples, 7.97%)</title><rect x="663.5" y="643.0" width="94.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.5" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (40 samples, 7.97%)</title><rect x="663.5" y="627.0" width="94.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.5" y="638.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (40 samples, 7.97%)</title><rect x="663.5" y="611.0" width="94.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.5" y="622.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.40%)</title><rect x="663.5" y="595.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.40%)</title><rect x="663.5" y="579.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.40%)</title><rect x="663.5" y="563.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.40%)</title><rect x="663.5" y="547.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.40%)</title><rect x="663.5" y="531.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.40%)</title><rect x="663.5" y="515.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.20%)</title><rect x="663.5" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.20%)</title><rect x="663.5" y="483.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.20%)</title><rect x="663.5" y="467.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.5" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="663.5" y="451.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="666.5" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.20%)</title><rect x="663.5" y="435.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="666.5" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="663.5" y="419.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="666.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.20%)</title><rect x="665.8" y="499.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (38 samples, 7.57%)</title><rect x="668.2" y="595.0" width="89.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.2" y="606.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (38 samples, 7.57%)</title><rect x="668.2" y="579.0" width="89.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.2" y="590.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (38 samples, 7.57%)</title><rect x="668.2" y="563.0" width="89.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.2" y="574.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (38 samples, 7.57%)</title><rect x="668.2" y="547.0" width="89.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.2" y="558.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (23 samples, 4.58%)</title><rect x="668.2" y="531.0" width="54.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.2" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23 samples, 4.58%)</title><rect x="668.2" y="515.0" width="54.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.2" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (23 samples, 4.58%)</title><rect x="668.2" y="499.0" width="54.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.2" y="510.0">java/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="668.2" y="483.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="671.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (22 samples, 4.38%)</title><rect x="670.5" y="483.0" width="51.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.5" y="494.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 4.38%)</title><rect x="670.5" y="467.0" width="51.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.5" y="478.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (21 samples, 4.18%)</title><rect x="670.5" y="451.0" width="49.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.5" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 3.78%)</title><rect x="670.5" y="435.0" width="44.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.5" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19 samples, 3.78%)</title><rect x="670.5" y="419.0" width="44.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.5" y="430.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 3.78%)</title><rect x="670.5" y="403.0" width="44.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.5" y="414.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (15 samples, 2.99%)</title><rect x="672.9" y="387.0" width="35.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.9" y="398.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (12 samples, 2.39%)</title><rect x="672.9" y="371.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12 samples, 2.39%)</title><rect x="672.9" y="355.0" width="28.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.9" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (12 samples, 2.39%)</title><rect x="672.9" y="339.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.9" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (12 samples, 2.39%)</title><rect x="672.9" y="323.0" width="28.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.9" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8 samples, 1.59%)</title><rect x="672.9" y="307.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.60%)</title><rect x="672.9" y="291.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.9" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.40%)</title><rect x="672.9" y="275.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.40%)</title><rect x="672.9" y="259.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.40%)</title><rect x="672.9" y="243.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.40%)</title><rect x="672.9" y="227.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.40%)</title><rect x="672.9" y="211.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.20%)</title><rect x="675.2" y="195.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.20%)</title><rect x="675.2" y="179.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.20%)</title><rect x="675.2" y="163.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.20%)</title><rect x="677.6" y="275.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.20%)</title><rect x="677.6" y="259.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 1.00%)</title><rect x="679.9" y="291.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (5 samples, 1.00%)</title><rect x="679.9" y="275.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 1.00%)</title><rect x="679.9" y="259.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.20%)</title><rect x="679.9" y="243.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="679.9" y="227.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.get$Lambda (1 samples, 0.20%)</title><rect x="679.9" y="211.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.&lt;init&gt; (1 samples, 0.20%)</title><rect x="679.9" y="195.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.80%)</title><rect x="682.3" y="243.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (4 samples, 0.80%)</title><rect x="682.3" y="227.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.80%)</title><rect x="682.3" y="211.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/948980208.invoke (4 samples, 0.80%)</title><rect x="682.3" y="195.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/820192556.invoke (4 samples, 0.80%)</title><rect x="682.3" y="179.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="190.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.40%)</title><rect x="682.3" y="163.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="687.0" y="163.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.20%)</title><rect x="687.0" y="147.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.20%)</title><rect x="687.0" y="131.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1169146729.invoke (1 samples, 0.20%)</title><rect x="689.3" y="163.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="689.3" y="147.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.20%)</title><rect x="689.3" y="131.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.toString (1 samples, 0.20%)</title><rect x="689.3" y="115.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.dbgString (1 samples, 0.20%)</title><rect x="689.3" y="99.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.3" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.20%)</title><rect x="689.3" y="83.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.3" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.20%)</title><rect x="689.3" y="67.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.3" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="689.3" y="51.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.20%)</title><rect x="689.3" y="35.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (4 samples, 0.80%)</title><rect x="691.7" y="307.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.60%)</title><rect x="694.0" y="291.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.0" y="302.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="694.0" y="275.0" width="2.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="697.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.20%)</title><rect x="696.4" y="275.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.20%)</title><rect x="696.4" y="259.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.20%)</title><rect x="696.4" y="243.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.20%)</title><rect x="696.4" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.20%)</title><rect x="696.4" y="211.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.4" y="222.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.20%)</title><rect x="698.7" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.20%)</title><rect x="698.7" y="259.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.20%)</title><rect x="698.7" y="243.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.20%)</title><rect x="698.7" y="227.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.20%)</title><rect x="698.7" y="211.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.20%)</title><rect x="698.7" y="195.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (3 samples, 0.60%)</title><rect x="701.1" y="371.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.60%)</title><rect x="701.1" y="355.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.60%)</title><rect x="701.1" y="339.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (3 samples, 0.60%)</title><rect x="701.1" y="323.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.60%)</title><rect x="701.1" y="307.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.1" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.20%)</title><rect x="703.4" y="291.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="706.4" y="302.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.20%)</title><rect x="705.8" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.8" y="302.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.20%)</title><rect x="705.8" y="275.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.20%)</title><rect x="705.8" y="259.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.8" y="270.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.20%)</title><rect x="705.8" y="243.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="708.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.60%)</title><rect x="708.1" y="387.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.60%)</title><rect x="708.1" y="371.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.40%)</title><rect x="708.1" y="355.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.40%)</title><rect x="708.1" y="339.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$210/616773831.apply (2 samples, 0.40%)</title><rect x="708.1" y="323.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$210/616773831.apply (1 samples, 0.20%)</title><rect x="712.8" y="355.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.20%)</title><rect x="712.8" y="339.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.20%)</title><rect x="712.8" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1 samples, 0.20%)</title><rect x="712.8" y="307.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="715.2" y="435.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="715.2" y="419.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.40%)</title><rect x="715.2" y="403.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.40%)</title><rect x="715.2" y="387.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.40%)</title><rect x="715.2" y="371.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="719.9" y="451.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.20%)</title><rect x="719.9" y="435.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="719.9" y="419.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="719.9" y="403.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="719.9" y="387.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.9" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="719.9" y="371.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="722.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (14 samples, 2.79%)</title><rect x="722.2" y="531.0" width="32.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.2" y="542.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.40%)</title><rect x="724.6" y="515.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.60%)</title><rect x="729.3" y="515.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.40%)</title><rect x="731.6" y="499.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.40%)</title><rect x="731.6" y="483.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (8 samples, 1.59%)</title><rect x="736.3" y="515.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 1.59%)</title><rect x="736.3" y="499.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.40%)</title><rect x="736.3" y="483.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.40%)</title><rect x="736.3" y="467.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.40%)</title><rect x="736.3" y="451.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.80%)</title><rect x="741.0" y="483.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.0" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.20%)</title><rect x="748.1" y="467.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="751.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.40%)</title><rect x="750.4" y="483.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.40%)</title><rect x="750.4" y="467.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.40%)</title><rect x="750.4" y="451.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.40%)</title><rect x="750.4" y="435.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$187/1164590468.accept (1 samples, 0.20%)</title><rect x="755.1" y="531.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.20%)</title><rect x="755.1" y="515.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (42 samples, 8.37%)</title><rect x="757.5" y="643.0" width="98.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.5" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42 samples, 8.37%)</title><rect x="757.5" y="627.0" width="98.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.5" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 8.37%)</title><rect x="757.5" y="611.0" width="98.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.5" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (41 samples, 8.17%)</title><rect x="759.8" y="595.0" width="96.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.8" y="606.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (41 samples, 8.17%)</title><rect x="759.8" y="579.0" width="96.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.8" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (19 samples, 3.78%)</title><rect x="759.8" y="563.0" width="44.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.8" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (18 samples, 3.59%)</title><rect x="759.8" y="547.0" width="42.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.8" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (18 samples, 3.59%)</title><rect x="759.8" y="531.0" width="42.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.8" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (14 samples, 2.79%)</title><rect x="759.8" y="515.0" width="32.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (14 samples, 2.79%)</title><rect x="759.8" y="499.0" width="32.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.8" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (14 samples, 2.79%)</title><rect x="759.8" y="483.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.8" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (14 samples, 2.79%)</title><rect x="759.8" y="467.0" width="32.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.8" y="478.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.20%)</title><rect x="759.8" y="451.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.8" y="462.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.20%)</title><rect x="759.8" y="435.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.20%)</title><rect x="759.8" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.8" y="430.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.20%)</title><rect x="759.8" y="403.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="762.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13 samples, 2.59%)</title><rect x="762.2" y="451.0" width="30.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="462.0">jd..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="762.2" y="435.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="765.2" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.20%)</title><rect x="762.2" y="419.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="765.2" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.20%)</title><rect x="762.2" y="403.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="765.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (8 samples, 1.59%)</title><rect x="764.5" y="435.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.5" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.60%)</title><rect x="764.5" y="419.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.60%)</title><rect x="764.5" y="403.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.5" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.60%)</title><rect x="764.5" y="387.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.5" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.20%)</title><rect x="769.2" y="371.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.20%)</title><rect x="769.2" y="355.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.20%)</title><rect x="769.2" y="339.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (3 samples, 0.60%)</title><rect x="771.6" y="419.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (3 samples, 0.60%)</title><rect x="771.6" y="403.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (2 samples, 0.40%)</title><rect x="778.6" y="419.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.80%)</title><rect x="783.3" y="435.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.80%)</title><rect x="783.3" y="419.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.80%)</title><rect x="783.3" y="403.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.80%)</title><rect x="783.3" y="387.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4 samples, 0.80%)</title><rect x="783.3" y="371.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.80%)</title><rect x="783.3" y="355.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.80%)</title><rect x="783.3" y="339.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.60%)</title><rect x="785.7" y="323.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.60%)</title><rect x="785.7" y="307.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.7" y="318.0"></text>
</g>
<g>
<title>write (3 samples, 0.60%)</title><rect x="785.7" y="291.0" width="7.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="788.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.accept (1 samples, 0.20%)</title><rect x="792.7" y="515.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (1 samples, 0.20%)</title><rect x="792.7" y="499.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (1 samples, 0.20%)</title><rect x="792.7" y="483.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.20%)</title><rect x="792.7" y="467.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.20%)</title><rect x="792.7" y="451.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.20%)</title><rect x="792.7" y="435.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.20%)</title><rect x="792.7" y="419.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.20%)</title><rect x="792.7" y="403.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.20%)</title><rect x="792.7" y="387.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$258/1539664908.accept (1 samples, 0.20%)</title><rect x="792.7" y="371.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.40%)</title><rect x="795.1" y="515.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.40%)</title><rect x="795.1" y="499.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (2 samples, 0.40%)</title><rect x="795.1" y="483.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.40%)</title><rect x="795.1" y="467.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="795.1" y="451.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="795.1" y="435.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="795.1" y="419.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (2 samples, 0.40%)</title><rect x="795.1" y="403.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.40%)</title><rect x="795.1" y="387.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.40%)</title><rect x="795.1" y="371.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="795.1" y="355.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="795.1" y="339.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="795.1" y="323.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.40%)</title><rect x="795.1" y="307.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.40%)</title><rect x="795.1" y="291.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.40%)</title><rect x="795.1" y="275.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.40%)</title><rect x="795.1" y="259.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.40%)</title><rect x="795.1" y="243.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="795.1" y="227.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="795.1" y="211.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.1" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.20%)</title><rect x="795.1" y="195.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="798.1" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="797.5" y="195.0" width="2.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="800.5" y="206.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="797.5" y="179.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="800.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.20%)</title><rect x="799.8" y="515.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onSubscribe (1 samples, 0.20%)</title><rect x="799.8" y="499.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.20%)</title><rect x="799.8" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.20%)</title><rect x="802.2" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (22 samples, 4.38%)</title><rect x="804.5" y="563.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (22 samples, 4.38%)</title><rect x="804.5" y="547.0" width="51.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (22 samples, 4.38%)</title><rect x="804.5" y="531.0" width="51.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.5" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (22 samples, 4.38%)</title><rect x="804.5" y="515.0" width="51.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.5" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (22 samples, 4.38%)</title><rect x="804.5" y="499.0" width="51.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.5" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (22 samples, 4.38%)</title><rect x="804.5" y="483.0" width="51.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.5" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (19 samples, 3.78%)</title><rect x="804.5" y="467.0" width="44.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.5" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (19 samples, 3.78%)</title><rect x="804.5" y="451.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.5" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (19 samples, 3.78%)</title><rect x="804.5" y="435.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.5" y="446.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.40%)</title><rect x="804.5" y="419.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.40%)</title><rect x="804.5" y="403.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.40%)</title><rect x="804.5" y="387.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.20%)</title><rect x="806.9" y="371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (17 samples, 3.39%)</title><rect x="809.2" y="419.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.2" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (17 samples, 3.39%)</title><rect x="809.2" y="403.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.2" y="414.0">jdk..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.40%)</title><rect x="809.2" y="387.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="812.2" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.40%)</title><rect x="809.2" y="371.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="812.2" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.40%)</title><rect x="809.2" y="355.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="812.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (11 samples, 2.19%)</title><rect x="813.9" y="387.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.9" y="398.0">j..</text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 1.00%)</title><rect x="813.9" y="371.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.9" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (5 samples, 1.00%)</title><rect x="813.9" y="355.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 1.00%)</title><rect x="813.9" y="339.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.20%)</title><rect x="825.7" y="371.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.7" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.20%)</title><rect x="825.7" y="355.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.7" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.20%)</title><rect x="825.7" y="339.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.20%)</title><rect x="825.7" y="323.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.20%)</title><rect x="825.7" y="307.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (3 samples, 0.60%)</title><rect x="828.0" y="371.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.0" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (3 samples, 0.60%)</title><rect x="828.0" y="355.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (2 samples, 0.40%)</title><rect x="835.1" y="371.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.80%)</title><rect x="839.8" y="387.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.80%)</title><rect x="839.8" y="371.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.80%)</title><rect x="839.8" y="355.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.80%)</title><rect x="839.8" y="339.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4 samples, 0.80%)</title><rect x="839.8" y="323.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.80%)</title><rect x="839.8" y="307.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.80%)</title><rect x="839.8" y="291.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="839.8" y="275.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.8" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.20%)</title><rect x="839.8" y="259.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.20%)</title><rect x="839.8" y="243.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.20%)</title><rect x="839.8" y="227.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.8" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="839.8" y="211.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="842.8" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.20%)</title><rect x="839.8" y="195.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="842.8" y="206.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="839.8" y="179.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="842.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.60%)</title><rect x="842.1" y="275.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.60%)</title><rect x="842.1" y="259.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.1" y="270.0"></text>
</g>
<g>
<title>write (1 samples, 0.20%)</title><rect x="846.8" y="243.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="849.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.40%)</title><rect x="849.2" y="467.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.40%)</title><rect x="849.2" y="451.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (2 samples, 0.40%)</title><rect x="849.2" y="435.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.40%)</title><rect x="849.2" y="419.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.40%)</title><rect x="849.2" y="403.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="849.2" y="387.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="849.2" y="371.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="849.2" y="355.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (2 samples, 0.40%)</title><rect x="849.2" y="339.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.40%)</title><rect x="849.2" y="323.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.40%)</title><rect x="849.2" y="307.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.40%)</title><rect x="849.2" y="291.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.40%)</title><rect x="849.2" y="275.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.40%)</title><rect x="849.2" y="259.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.40%)</title><rect x="849.2" y="243.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.20%)</title><rect x="849.2" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.20%)</title><rect x="849.2" y="211.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.20%)</title><rect x="849.2" y="195.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.20%)</title><rect x="849.2" y="179.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="849.2" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="849.2" y="147.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.2" y="158.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="849.2" y="131.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="852.2" y="142.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="849.2" y="115.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="852.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.20%)</title><rect x="851.5" y="227.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.5" y="238.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.20%)</title><rect x="851.5" y="211.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="854.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (1 samples, 0.20%)</title><rect x="853.9" y="467.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (9 samples, 1.79%)</title><rect x="856.2" y="723.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.2" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (9 samples, 1.79%)</title><rect x="856.2" y="707.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.2" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.60%)</title><rect x="856.2" y="691.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.60%)</title><rect x="856.2" y="675.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.2" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.60%)</title><rect x="856.2" y="659.0" width="7.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="859.2" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.60%)</title><rect x="856.2" y="643.0" width="7.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="859.2" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.60%)</title><rect x="856.2" y="627.0" width="7.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="859.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (6 samples, 1.20%)</title><rect x="863.3" y="691.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.20%)</title><rect x="863.3" y="675.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (5 samples, 1.00%)</title><rect x="865.6" y="659.0" width="11.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="868.6" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 1.00%)</title><rect x="865.6" y="643.0" width="11.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="868.6" y="654.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.20%)</title><rect x="865.6" y="627.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="868.6" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.20%)</title><rect x="865.6" y="611.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.6" y="622.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.20%)</title><rect x="865.6" y="595.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="868.6" y="606.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.20%)</title><rect x="865.6" y="579.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="868.6" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.80%)</title><rect x="868.0" y="627.0" width="9.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="871.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (74 samples, 14.74%)</title><rect x="877.4" y="723.0" width="173.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.4" y="734.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.20%)</title><rect x="879.7" y="707.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.20%)</title><rect x="879.7" y="691.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.get$Lambda (1 samples, 0.20%)</title><rect x="879.7" y="675.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.&lt;init&gt; (1 samples, 0.20%)</title><rect x="879.7" y="659.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.20%)</title><rect x="879.7" y="643.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.7" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.20%)</title><rect x="882.1" y="707.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.1" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.20%)</title><rect x="882.1" y="691.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.80%)</title><rect x="884.4" y="707.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (4 samples, 0.80%)</title><rect x="884.4" y="691.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (4 samples, 0.80%)</title><rect x="884.4" y="675.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (4 samples, 0.80%)</title><rect x="884.4" y="659.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (4 samples, 0.80%)</title><rect x="884.4" y="643.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (4 samples, 0.80%)</title><rect x="884.4" y="627.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.20%)</title><rect x="884.4" y="611.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (3 samples, 0.60%)</title><rect x="886.8" y="611.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.60%)</title><rect x="886.8" y="595.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.60%)</title><rect x="886.8" y="579.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.60%)</title><rect x="886.8" y="563.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3 samples, 0.60%)</title><rect x="886.8" y="547.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (3 samples, 0.60%)</title><rect x="886.8" y="531.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (3 samples, 0.60%)</title><rect x="886.8" y="515.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3 samples, 0.60%)</title><rect x="886.8" y="499.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3 samples, 0.60%)</title><rect x="886.8" y="483.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (3 samples, 0.60%)</title><rect x="886.8" y="467.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.60%)</title><rect x="886.8" y="451.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.60%)</title><rect x="886.8" y="435.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.60%)</title><rect x="886.8" y="419.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.60%)</title><rect x="886.8" y="403.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.60%)</title><rect x="886.8" y="387.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.60%)</title><rect x="886.8" y="371.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.60%)</title><rect x="886.8" y="355.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.60%)</title><rect x="886.8" y="339.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.60%)</title><rect x="886.8" y="323.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.60%)</title><rect x="886.8" y="307.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.8" y="318.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (1 samples, 0.20%)</title><rect x="886.8" y="291.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="889.8" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.40%)</title><rect x="889.1" y="291.0" width="4.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="892.1" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.40%)</title><rect x="889.1" y="275.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.20%)</title><rect x="893.8" y="707.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.20%)</title><rect x="893.8" y="691.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.20%)</title><rect x="893.8" y="675.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.20%)</title><rect x="893.8" y="659.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.20%)</title><rect x="893.8" y="643.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.20%)</title><rect x="893.8" y="627.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (11 samples, 2.19%)</title><rect x="896.2" y="707.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.2" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/283242345.run (8 samples, 1.59%)</title><rect x="896.2" y="691.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (8 samples, 1.59%)</title><rect x="896.2" y="675.0" width="18.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 1.59%)</title><rect x="896.2" y="659.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 1.59%)</title><rect x="896.2" y="643.0" width="18.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 1.59%)</title><rect x="896.2" y="627.0" width="18.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (8 samples, 1.59%)</title><rect x="896.2" y="611.0" width="18.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (8 samples, 1.59%)</title><rect x="896.2" y="595.0" width="18.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (8 samples, 1.59%)</title><rect x="896.2" y="579.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (7 samples, 1.39%)</title><rect x="896.2" y="563.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 1.39%)</title><rect x="896.2" y="547.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.20%)</title><rect x="896.2" y="531.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.20%)</title><rect x="896.2" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.20%)</title><rect x="896.2" y="499.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.20%)</title><rect x="896.2" y="483.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.20%)</title><rect x="896.2" y="467.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.20%)</title><rect x="896.2" y="451.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.20%)</title><rect x="896.2" y="435.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.20%)</title><rect x="896.2" y="419.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (6 samples, 1.20%)</title><rect x="898.5" y="531.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.20%)</title><rect x="898.5" y="515.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.20%)</title><rect x="898.5" y="499.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 1.20%)</title><rect x="898.5" y="483.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 1.20%)</title><rect x="898.5" y="467.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 1.20%)</title><rect x="898.5" y="451.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.20%)</title><rect x="898.5" y="435.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="898.5" y="419.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.00%)</title><rect x="900.9" y="435.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.00%)</title><rect x="900.9" y="419.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.00%)</title><rect x="900.9" y="403.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.00%)</title><rect x="900.9" y="387.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.00%)</title><rect x="900.9" y="371.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.9" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 1.00%)</title><rect x="900.9" y="355.0" width="11.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="903.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.80%)</title><rect x="900.9" y="339.0" width="9.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="903.9" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="910.3" y="339.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="913.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.20%)</title><rect x="912.6" y="563.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.20%)</title><rect x="912.6" y="547.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$168/650042043.run (3 samples, 0.60%)</title><rect x="915.0" y="691.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (3 samples, 0.60%)</title><rect x="915.0" y="675.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.40%)</title><rect x="915.0" y="659.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="915.0" y="643.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.40%)</title><rect x="915.0" y="627.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.20%)</title><rect x="915.0" y="611.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="915.0" y="595.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.20%)</title><rect x="915.0" y="579.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="915.0" y="563.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="915.0" y="547.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="915.0" y="531.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="917.3" y="611.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="917.3" y="595.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="917.3" y="579.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="917.3" y="563.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="917.3" y="547.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.3" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="917.3" y="531.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="920.3" y="542.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.20%)</title><rect x="917.3" y="515.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="920.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.20%)</title><rect x="919.7" y="659.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.60%)</title><rect x="922.0" y="707.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.60%)</title><rect x="922.0" y="691.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.0" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.60%)</title><rect x="922.0" y="675.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="925.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.60%)</title><rect x="922.0" y="659.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="925.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.40%)</title><rect x="924.4" y="643.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="927.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.20%)</title><rect x="926.7" y="627.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="929.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.40%)</title><rect x="929.1" y="707.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.40%)</title><rect x="929.1" y="691.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.40%)</title><rect x="929.1" y="675.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.20%)</title><rect x="931.4" y="659.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4 samples, 0.80%)</title><rect x="933.8" y="707.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.8" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.40%)</title><rect x="933.8" y="691.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.8" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.40%)</title><rect x="933.8" y="675.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.40%)</title><rect x="933.8" y="659.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.8" y="670.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.40%)</title><rect x="933.8" y="643.0" width="4.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="936.8" y="654.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.40%)</title><rect x="933.8" y="627.0" width="4.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.8" y="638.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.20%)</title><rect x="933.8" y="611.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="936.8" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.20%)</title><rect x="936.1" y="611.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="939.1" y="622.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.20%)</title><rect x="936.1" y="595.0" width="2.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="939.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.20%)</title><rect x="938.5" y="691.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.20%)</title><rect x="938.5" y="675.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.20%)</title><rect x="938.5" y="659.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.20%)</title><rect x="940.8" y="691.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.20%)</title><rect x="940.8" y="675.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.20%)</title><rect x="940.8" y="659.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.20%)</title><rect x="940.8" y="643.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (45 samples, 8.96%)</title><rect x="943.2" y="707.0" width="105.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.2" y="718.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (45 samples, 8.96%)</title><rect x="943.2" y="691.0" width="105.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.2" y="702.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (45 samples, 8.96%)</title><rect x="943.2" y="675.0" width="105.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.2" y="686.0">sun/nio/ch/KQ..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (43 samples, 8.57%)</title><rect x="943.2" y="659.0" width="101.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.2" y="670.0">sun/nio/ch/K..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.20%)</title><rect x="945.5" y="643.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="948.5" y="654.0"></text>
</g>
<g>
<title>kevent (41 samples, 8.17%)</title><rect x="947.9" y="643.0" width="96.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="950.9" y="654.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.40%)</title><rect x="1044.3" y="659.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (2 samples, 0.40%)</title><rect x="1044.3" y="643.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.40%)</title><rect x="1044.3" y="627.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.3" y="638.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.20%)</title><rect x="1046.6" y="611.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1049.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.20%)</title><rect x="1049.0" y="707.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.20%)</title><rect x="1049.0" y="691.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1052.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.20%)</title><rect x="1049.0" y="675.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.20%)</title><rect x="1049.0" y="659.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.20%)</title><rect x="1049.0" y="643.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (1 samples, 0.20%)</title><rect x="1049.0" y="627.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.20%)</title><rect x="1049.0" y="611.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.20%)</title><rect x="1049.0" y="595.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.0" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (54 samples, 10.76%)</title><rect x="1051.3" y="723.0" width="126.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.3" y="734.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (11 samples, 2.19%)</title><rect x="1053.7" y="707.0" width="25.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.7" y="718.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11 samples, 2.19%)</title><rect x="1053.7" y="691.0" width="25.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.7" y="702.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 2.19%)</title><rect x="1053.7" y="675.0" width="25.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.7" y="686.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (10 samples, 1.99%)</title><rect x="1056.0" y="659.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.0" y="670.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (8 samples, 1.59%)</title><rect x="1056.0" y="643.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.0" y="654.0"></text>
</g>
<g>
<title>kevent (6 samples, 1.20%)</title><rect x="1060.7" y="627.0" width="14.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1063.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.40%)</title><rect x="1074.8" y="643.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.20%)</title><rect x="1077.2" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.20%)</title><rect x="1077.2" y="611.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (42 samples, 8.37%)</title><rect x="1079.5" y="707.0" width="98.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.5" y="718.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (42 samples, 8.37%)</title><rect x="1079.5" y="691.0" width="98.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.5" y="702.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 7.57%)</title><rect x="1079.5" y="675.0" width="89.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.5" y="686.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 7.37%)</title><rect x="1079.5" y="659.0" width="87.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.5" y="670.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37 samples, 7.37%)</title><rect x="1079.5" y="643.0" width="87.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.5" y="654.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (36 samples, 7.17%)</title><rect x="1079.5" y="627.0" width="84.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.5" y="638.0">RequestHan..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (36 samples, 7.17%)</title><rect x="1079.5" y="611.0" width="84.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.5" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (36 samples, 7.17%)</title><rect x="1079.5" y="595.0" width="84.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.5" y="606.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (5 samples, 1.00%)</title><rect x="1079.5" y="579.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 1.00%)</title><rect x="1079.5" y="563.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.80%)</title><rect x="1079.5" y="547.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.80%)</title><rect x="1079.5" y="531.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.80%)</title><rect x="1079.5" y="515.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.80%)</title><rect x="1079.5" y="499.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.80%)</title><rect x="1079.5" y="483.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.80%)</title><rect x="1079.5" y="467.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.80%)</title><rect x="1079.5" y="451.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.80%)</title><rect x="1079.5" y="435.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.5" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.80%)</title><rect x="1079.5" y="419.0" width="9.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1082.5" y="430.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.20%)</title><rect x="1079.5" y="403.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1082.5" y="414.0"></text>
</g>
<g>
<title>Thread::current_or_null() (1 samples, 0.20%)</title><rect x="1079.5" y="387.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1082.5" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.60%)</title><rect x="1081.9" y="403.0" width="7.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1084.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.screenExecutor (1 samples, 0.20%)</title><rect x="1088.9" y="547.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (18 samples, 3.59%)</title><rect x="1091.3" y="579.0" width="42.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.3" y="590.0">ru/m..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.40%)</title><rect x="1091.3" y="563.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.40%)</title><rect x="1091.3" y="547.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.20%)</title><rect x="1096.0" y="563.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.20%)</title><rect x="1096.0" y="547.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1096.0" y="531.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1096.0" y="515.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.20%)</title><rect x="1098.3" y="563.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.20%)</title><rect x="1098.3" y="547.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1098.3" y="531.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1098.3" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.20%)</title><rect x="1100.7" y="563.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.20%)</title><rect x="1100.7" y="547.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.20%)</title><rect x="1100.7" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="1100.7" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (9 samples, 1.79%)</title><rect x="1103.0" y="563.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9 samples, 1.79%)</title><rect x="1103.0" y="547.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.0" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9 samples, 1.79%)</title><rect x="1103.0" y="531.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.0" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9 samples, 1.79%)</title><rect x="1103.0" y="515.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.0" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5 samples, 1.00%)</title><rect x="1103.0" y="499.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.20%)</title><rect x="1103.0" y="483.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.20%)</title><rect x="1103.0" y="467.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.20%)</title><rect x="1103.0" y="451.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.20%)</title><rect x="1103.0" y="435.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4 samples, 0.80%)</title><rect x="1105.4" y="483.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.4" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4 samples, 0.80%)</title><rect x="1105.4" y="467.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.4" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.80%)</title><rect x="1105.4" y="451.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.4" y="462.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.60%)</title><rect x="1105.4" y="435.0" width="7.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1108.4" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.20%)</title><rect x="1105.4" y="419.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.4" y="430.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.20%)</title><rect x="1107.7" y="419.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1110.7" y="430.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.20%)</title><rect x="1110.1" y="419.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1113.1" y="430.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (1 samples, 0.20%)</title><rect x="1110.1" y="403.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1113.1" y="414.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_compiled_frame(int) (1 samples, 0.20%)</title><rect x="1110.1" y="387.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1113.1" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.20%)</title><rect x="1112.4" y="435.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2 samples, 0.40%)</title><rect x="1114.8" y="499.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.20%)</title><rect x="1117.1" y="483.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.20%)</title><rect x="1117.1" y="467.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.20%)</title><rect x="1117.1" y="451.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getReflectionFactory (1 samples, 0.20%)</title><rect x="1117.1" y="435.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2 samples, 0.40%)</title><rect x="1119.5" y="499.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2 samples, 0.40%)</title><rect x="1119.5" y="483.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="1119.5" y="467.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.40%)</title><rect x="1119.5" y="451.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.20%)</title><rect x="1119.5" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.20%)</title><rect x="1119.5" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.20%)</title><rect x="1119.5" y="403.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.20%)</title><rect x="1119.5" y="387.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="1121.8" y="435.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="1121.8" y="419.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="1121.8" y="403.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="1121.8" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="1121.8" y="371.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="1121.8" y="355.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1124.8" y="366.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::ThreadInVMfromNative(JavaThread*) (1 samples, 0.20%)</title><rect x="1121.8" y="339.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (1 samples, 0.20%)</title><rect x="1124.2" y="563.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1124.2" y="547.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (3 samples, 0.60%)</title><rect x="1126.5" y="563.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (2 samples, 0.40%)</title><rect x="1126.5" y="547.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2 samples, 0.40%)</title><rect x="1126.5" y="531.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.40%)</title><rect x="1126.5" y="515.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.40%)</title><rect x="1126.5" y="499.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.20%)</title><rect x="1126.5" y="483.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.20%)</title><rect x="1126.5" y="467.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1126.5" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.5" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1 samples, 0.20%)</title><rect x="1128.9" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.20%)</title><rect x="1128.9" y="467.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.20%)</title><rect x="1128.9" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.20%)</title><rect x="1131.2" y="547.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.20%)</title><rect x="1131.2" y="531.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.20%)</title><rect x="1131.2" y="515.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.2" y="526.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.20%)</title><rect x="1131.2" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (12 samples, 2.39%)</title><rect x="1133.6" y="579.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.6" y="590.0">ru..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (8 samples, 1.59%)</title><rect x="1133.6" y="563.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 1.59%)</title><rect x="1133.6" y="547.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 1.59%)</title><rect x="1133.6" y="531.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8 samples, 1.59%)</title><rect x="1133.6" y="515.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.6" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.20%)</title><rect x="1133.6" y="499.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1136.6" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.20%)</title><rect x="1133.6" y="483.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.6" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.20%)</title><rect x="1133.6" y="467.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.6" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.20%)</title><rect x="1133.6" y="451.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.6" y="462.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.20%)</title><rect x="1133.6" y="435.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1136.6" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.20%)</title><rect x="1133.6" y="419.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.6" y="430.0"></text>
</g>
<g>
<title>G1ContiguousSpace::free() const (1 samples, 0.20%)</title><rect x="1133.6" y="403.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.20%)</title><rect x="1135.9" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.20%)</title><rect x="1135.9" y="483.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1138.3" y="499.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.3" y="510.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.20%)</title><rect x="1138.3" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1140.6" y="499.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.20%)</title><rect x="1140.6" y="483.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.20%)</title><rect x="1140.6" y="467.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (4 samples, 0.80%)</title><rect x="1143.0" y="499.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.80%)</title><rect x="1143.0" y="483.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.80%)</title><rect x="1143.0" y="467.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.80%)</title><rect x="1143.0" y="451.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.80%)</title><rect x="1143.0" y="435.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.80%)</title><rect x="1143.0" y="419.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.80%)</title><rect x="1143.0" y="403.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.80%)</title><rect x="1143.0" y="387.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.80%)</title><rect x="1143.0" y="371.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.0" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.80%)</title><rect x="1143.0" y="355.0" width="9.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1146.0" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.20%)</title><rect x="1143.0" y="339.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.0" y="350.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.20%)</title><rect x="1143.0" y="323.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.0" y="334.0"></text>
</g>
<g>
<title>SafepointMechanism::poll_bit() (1 samples, 0.20%)</title><rect x="1143.0" y="307.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.0" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.40%)</title><rect x="1145.3" y="339.0" width="4.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1148.3" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="1150.0" y="339.0" width="2.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1153.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.40%)</title><rect x="1152.4" y="563.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.40%)</title><rect x="1152.4" y="547.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.40%)</title><rect x="1152.4" y="531.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.40%)</title><rect x="1152.4" y="515.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.20%)</title><rect x="1154.7" y="499.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (1 samples, 0.20%)</title><rect x="1154.7" y="483.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.20%)</title><rect x="1154.7" y="467.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.20%)</title><rect x="1154.7" y="451.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (2 samples, 0.40%)</title><rect x="1157.1" y="563.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.40%)</title><rect x="1157.1" y="547.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.40%)</title><rect x="1157.1" y="531.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.40%)</title><rect x="1157.1" y="515.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.40%)</title><rect x="1157.1" y="499.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.20%)</title><rect x="1157.1" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.20%)</title><rect x="1157.1" y="467.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.20%)</title><rect x="1157.1" y="451.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.20%)</title><rect x="1157.1" y="435.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.20%)</title><rect x="1159.4" y="483.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="1159.4" y="467.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="1159.4" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="1159.4" y="435.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.20%)</title><rect x="1159.4" y="419.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.4" y="430.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.20%)</title><rect x="1159.4" y="403.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1162.4" y="414.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.20%)</title><rect x="1159.4" y="387.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1162.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (1 samples, 0.20%)</title><rect x="1161.8" y="579.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.20%)</title><rect x="1161.8" y="563.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.20%)</title><rect x="1161.8" y="547.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.20%)</title><rect x="1161.8" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.20%)</title><rect x="1161.8" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.20%)</title><rect x="1164.1" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.20%)</title><rect x="1164.1" y="611.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.20%)</title><rect x="1164.1" y="595.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1164.1" y="579.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.1" y="590.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1 samples, 0.20%)</title><rect x="1164.1" y="563.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.20%)</title><rect x="1166.5" y="659.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1166.5" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1166.5" y="627.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.80%)</title><rect x="1168.8" y="675.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (4 samples, 0.80%)</title><rect x="1168.8" y="659.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 0.80%)</title><rect x="1168.8" y="643.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.80%)</title><rect x="1168.8" y="627.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.80%)</title><rect x="1168.8" y="611.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.80%)</title><rect x="1168.8" y="595.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 0.80%)</title><rect x="1168.8" y="579.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 0.80%)</title><rect x="1168.8" y="563.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.8" y="574.0"></text>
</g>
<g>
<title>rpc_errlist (4 samples, 0.80%)</title><rect x="1168.8" y="547.0" width="9.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1171.8" y="558.0"></text>
</g>
<g>
<title>thread_start (5 samples, 1.00%)</title><rect x="1178.2" y="723.0" width="11.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>_pthread_start (5 samples, 1.00%)</title><rect x="1178.2" y="707.0" width="11.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1181.2" y="718.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.00%)</title><rect x="1178.2" y="691.0" width="11.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.00%)</title><rect x="1178.2" y="675.0" width="11.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.2" y="686.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 1.00%)</title><rect x="1178.2" y="659.0" width="11.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.2" y="670.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 1.00%)</title><rect x="1178.2" y="643.0" width="11.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.2" y="654.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.80%)</title><rect x="1178.2" y="627.0" width="9.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.2" y="638.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.80%)</title><rect x="1178.2" y="611.0" width="9.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.2" y="622.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.80%)</title><rect x="1178.2" y="595.0" width="9.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.2" y="606.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.80%)</title><rect x="1178.2" y="579.0" width="9.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.2" y="590.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.40%)</title><rect x="1178.2" y="563.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.2" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.20%)</title><rect x="1178.2" y="547.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.2" y="558.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.20%)</title><rect x="1178.2" y="531.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.2" y="542.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.20%)</title><rect x="1178.2" y="515.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.2" y="526.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.20%)</title><rect x="1178.2" y="499.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.2" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.20%)</title><rect x="1180.6" y="547.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.6" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.20%)</title><rect x="1180.6" y="531.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.6" y="542.0"></text>
</g>
<g>
<title>RegMask::find_first_elem() const (1 samples, 0.20%)</title><rect x="1180.6" y="515.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.6" y="526.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.20%)</title><rect x="1180.6" y="499.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1183.6" y="510.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.40%)</title><rect x="1182.9" y="563.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.9" y="574.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.20%)</title><rect x="1182.9" y="547.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.20%)</title><rect x="1182.9" y="531.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="542.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.20%)</title><rect x="1182.9" y="515.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="526.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.20%)</title><rect x="1182.9" y="499.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1185.9" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.20%)</title><rect x="1185.3" y="547.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.20%)</title><rect x="1185.3" y="531.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.20%)</title><rect x="1187.6" y="627.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.6" y="638.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.20%)</title><rect x="1187.6" y="611.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1190.6" y="622.0"></text>
</g>
</g>
</svg>
