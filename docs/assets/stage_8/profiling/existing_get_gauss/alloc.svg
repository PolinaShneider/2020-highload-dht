<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (738 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.27%)</title><rect x="10.0" y="691.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="10.0" y="675.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (558 samples, 75.61%)</title><rect x="13.2" y="691.0" width="892.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.2" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (558 samples, 75.61%)</title><rect x="13.2" y="675.0" width="892.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.2" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (558 samples, 75.61%)</title><rect x="13.2" y="659.0" width="892.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.2" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (360 samples, 48.78%)</title><rect x="13.2" y="643.0" width="575.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.2" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (260 samples, 35.23%)</title><rect x="13.2" y="627.0" width="415.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.2" y="638.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (251 samples, 34.01%)</title><rect x="13.2" y="611.0" width="401.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.2" y="622.0">java/util/concurrent/CompletableFuture$UniCompose.tryFire</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.27%)</title><rect x="13.2" y="595.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (249 samples, 33.74%)</title><rect x="16.4" y="595.0" width="398.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.4" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$125/864963..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (249 samples, 33.74%)</title><rect x="16.4" y="579.0" width="398.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.4" y="590.0">jdk/internal/net/http/MultiExchange.lambda$responseAsy..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (249 samples, 33.74%)</title><rect x="16.4" y="563.0" width="398.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.4" y="574.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.41%)</title><rect x="16.4" y="547.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.41%)</title><rect x="16.4" y="531.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.get$Lambda (3 samples, 0.41%)</title><rect x="16.4" y="515.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$208 (3 samples, 0.41%)</title><rect x="16.4" y="499.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.41%)</title><rect x="21.2" y="547.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.41%)</title><rect x="21.2" y="531.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.41%)</title><rect x="21.2" y="515.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.54%)</title><rect x="26.0" y="547.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.54%)</title><rect x="26.0" y="531.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.14%)</title><rect x="26.0" y="515.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.41%)</title><rect x="27.6" y="515.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.41%)</title><rect x="27.6" y="499.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.41%)</title><rect x="27.6" y="483.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="30.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (230 samples, 31.17%)</title><rect x="32.4" y="547.0" width="367.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.4" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (230 samples, 31.17%)</title><rect x="32.4" y="531.0" width="367.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.4" y="542.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (230 samples, 31.17%)</title><rect x="32.4" y="515.0" width="367.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.4" y="526.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="32.4" y="499.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="32.4" y="483.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.get$Lambda (1 samples, 0.14%)</title><rect x="32.4" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (1 samples, 0.14%)</title><rect x="32.4" y="451.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="35.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.get$Lambda (1 samples, 0.14%)</title><rect x="34.0" y="467.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$183 (1 samples, 0.14%)</title><rect x="34.0" y="451.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="37.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (149 samples, 20.19%)</title><rect x="35.6" y="499.0" width="238.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.6" y="510.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (149 samples, 20.19%)</title><rect x="35.6" y="483.0" width="238.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.6" y="494.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (148 samples, 20.05%)</title><rect x="35.6" y="467.0" width="236.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.6" y="478.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (148 samples, 20.05%)</title><rect x="35.6" y="451.0" width="236.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.6" y="462.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (148 samples, 20.05%)</title><rect x="35.6" y="435.0" width="236.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.6" y="446.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (148 samples, 20.05%)</title><rect x="35.6" y="419.0" width="236.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.6" y="430.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (148 samples, 20.05%)</title><rect x="35.6" y="403.0" width="236.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.6" y="414.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (148 samples, 20.05%)</title><rect x="35.6" y="387.0" width="236.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.6" y="398.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.41%)</title><rect x="35.6" y="371.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.41%)</title><rect x="35.6" y="355.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1 samples, 0.14%)</title><rect x="35.6" y="339.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.27%)</title><rect x="37.2" y="339.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (2 samples, 0.27%)</title><rect x="37.2" y="323.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.27%)</title><rect x="37.2" y="307.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.27%)</title><rect x="37.2" y="291.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (2 samples, 0.27%)</title><rect x="37.2" y="275.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.27%)</title><rect x="37.2" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.14%)</title><rect x="37.2" y="243.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.14%)</title><rect x="37.2" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.14%)</title><rect x="37.2" y="211.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.14%)</title><rect x="38.8" y="243.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.14%)</title><rect x="38.8" y="227.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.14%)</title><rect x="38.8" y="211.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.14%)</title><rect x="38.8" y="195.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="41.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.41%)</title><rect x="40.4" y="371.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.41%)</title><rect x="40.4" y="355.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.14%)</title><rect x="40.4" y="339.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="43.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="42.0" y="339.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="42.0" y="323.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.27%)</title><rect x="42.0" y="307.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="45.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (142 samples, 19.24%)</title><rect x="45.2" y="371.0" width="227.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.2" y="382.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="45.2" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="45.2" y="339.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.get$Lambda (1 samples, 0.14%)</title><rect x="45.2" y="323.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$201 (1 samples, 0.14%)</title><rect x="45.2" y="307.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (124 samples, 16.80%)</title><rect x="46.8" y="355.0" width="198.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.8" y="366.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (124 samples, 16.80%)</title><rect x="46.8" y="339.0" width="198.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.8" y="350.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.14%)</title><rect x="46.8" y="323.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="49.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (120 samples, 16.26%)</title><rect x="48.4" y="323.0" width="191.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.4" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (120 samples, 16.26%)</title><rect x="48.4" y="307.0" width="191.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="318.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="48.4" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="48.4" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$217/247294231.get$Lambda (1 samples, 0.14%)</title><rect x="48.4" y="259.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$217 (1 samples, 0.14%)</title><rect x="48.4" y="243.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="51.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.14%)</title><rect x="50.0" y="291.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="50.0" y="275.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="50.0" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="50.0" y="243.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="50.0" y="227.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="53.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="51.6" y="291.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.14%)</title><rect x="53.2" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.14%)</title><rect x="53.2" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.14%)</title><rect x="53.2" y="259.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.14%)</title><rect x="53.2" y="243.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.14%)</title><rect x="53.2" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.14%)</title><rect x="53.2" y="211.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="56.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (116 samples, 15.72%)</title><rect x="54.8" y="291.0" width="185.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.8" y="302.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.41%)</title><rect x="54.8" y="275.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="57.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.95%)</title><rect x="59.6" y="275.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.95%)</title><rect x="59.6" y="259.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (7 samples, 0.95%)</title><rect x="59.6" y="243.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.6" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.95%)</title><rect x="59.6" y="227.0" width="11.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="62.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.68%)</title><rect x="70.8" y="275.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.68%)</title><rect x="70.8" y="259.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.8" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.68%)</title><rect x="70.8" y="243.0" width="8.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="73.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 1.63%)</title><rect x="78.8" y="275.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 1.63%)</title><rect x="78.8" y="259.0" width="19.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 1.63%)</title><rect x="78.8" y="243.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.8" y="254.0"></text>
</g>
<g>
<title>byte[] (12 samples, 1.63%)</title><rect x="78.8" y="227.0" width="19.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="81.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="97.9" y="275.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="97.9" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.14%)</title><rect x="97.9" y="243.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="100.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.14%)</title><rect x="99.5" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.14%)</title><rect x="99.5" y="259.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (76 samples, 10.30%)</title><rect x="101.1" y="275.0" width="121.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.1" y="286.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.81%)</title><rect x="101.1" y="259.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.1" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (6 samples, 0.81%)</title><rect x="101.1" y="243.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.1" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (6 samples, 0.81%)</title><rect x="101.1" y="227.0" width="9.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="104.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (41 samples, 5.56%)</title><rect x="110.7" y="259.0" width="65.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.7" y="270.0">jdk/int..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 2.85%)</title><rect x="110.7" y="243.0" width="33.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.7" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 2.85%)</title><rect x="110.7" y="227.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.7" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (21 samples, 2.85%)</title><rect x="110.7" y="211.0" width="33.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.7" y="222.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 2.85%)</title><rect x="110.7" y="195.0" width="33.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="206.0">ja..</text>
</g>
<g>
<title>byte[] (21 samples, 2.85%)</title><rect x="110.7" y="179.0" width="33.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.7" y="190.0">by..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (5 samples, 0.68%)</title><rect x="144.3" y="243.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (5 samples, 0.68%)</title><rect x="144.3" y="227.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5 samples, 0.68%)</title><rect x="144.3" y="211.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (5 samples, 0.68%)</title><rect x="144.3" y="195.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.14%)</title><rect x="152.3" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.14%)</title><rect x="152.3" y="227.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.14%)</title><rect x="152.3" y="211.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="155.3" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.test (14 samples, 1.90%)</title><rect x="153.9" y="243.0" width="22.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="254.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (14 samples, 1.90%)</title><rect x="153.9" y="227.0" width="22.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.9" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (14 samples, 1.90%)</title><rect x="153.9" y="211.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.9" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (14 samples, 1.90%)</title><rect x="153.9" y="195.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.9" y="206.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (14 samples, 1.90%)</title><rect x="153.9" y="179.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.9" y="190.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (14 samples, 1.90%)</title><rect x="153.9" y="163.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.9" y="174.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (14 samples, 1.90%)</title><rect x="153.9" y="147.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.9" y="158.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (14 samples, 1.90%)</title><rect x="153.9" y="131.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.9" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 1.90%)</title><rect x="153.9" y="115.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.9" y="126.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 1.90%)</title><rect x="153.9" y="99.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.9" y="110.0">j..</text>
</g>
<g>
<title>java.lang.String (4 samples, 0.54%)</title><rect x="153.9" y="83.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="156.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 1.36%)</title><rect x="160.3" y="83.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.3" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 1.36%)</title><rect x="160.3" y="67.0" width="16.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="163.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (29 samples, 3.93%)</title><rect x="176.3" y="259.0" width="46.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.3" y="270.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (29 samples, 3.93%)</title><rect x="176.3" y="243.0" width="46.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.3" y="254.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (29 samples, 3.93%)</title><rect x="176.3" y="227.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.3" y="238.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (1 samples, 0.14%)</title><rect x="176.3" y="211.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="179.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.14%)</title><rect x="177.9" y="211.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="180.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.41%)</title><rect x="179.5" y="211.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.41%)</title><rect x="179.5" y="195.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (3 samples, 0.41%)</title><rect x="179.5" y="179.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.5" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (3 samples, 0.41%)</title><rect x="179.5" y="163.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="182.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (23 samples, 3.12%)</title><rect x="184.3" y="211.0" width="36.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.3" y="222.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (23 samples, 3.12%)</title><rect x="184.3" y="195.0" width="36.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.3" y="206.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (23 samples, 3.12%)</title><rect x="184.3" y="179.0" width="36.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.3" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.41%)</title><rect x="184.3" y="163.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.41%)</title><rect x="184.3" y="147.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (3 samples, 0.41%)</title><rect x="184.3" y="131.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.41%)</title><rect x="184.3" y="115.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.54%)</title><rect x="189.1" y="163.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (4 samples, 0.54%)</title><rect x="189.1" y="147.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.54%)</title><rect x="189.1" y="131.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.54%)</title><rect x="189.1" y="115.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.54%)</title><rect x="189.1" y="99.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.54%)</title><rect x="189.1" y="83.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.54%)</title><rect x="189.1" y="67.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.54%)</title><rect x="189.1" y="51.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.54%)</title><rect x="189.1" y="35.0" width="6.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="192.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (11 samples, 1.49%)</title><rect x="195.5" y="163.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (11 samples, 1.49%)</title><rect x="195.5" y="147.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.68%)</title><rect x="195.5" y="131.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.68%)</title><rect x="195.5" y="115.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.68%)</title><rect x="195.5" y="99.0" width="8.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="198.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.81%)</title><rect x="203.5" y="131.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.5" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.81%)</title><rect x="203.5" y="115.0" width="9.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="206.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.68%)</title><rect x="213.1" y="163.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.68%)</title><rect x="213.1" y="147.0" width="8.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="216.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.14%)</title><rect x="221.1" y="211.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.14%)</title><rect x="221.1" y="195.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="224.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.41%)</title><rect x="222.7" y="275.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="225.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.27%)</title><rect x="222.7" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.7" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="222.7" y="243.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="225.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="224.3" y="243.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="227.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="225.9" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.14%)</title><rect x="225.9" y="243.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (1 samples, 0.14%)</title><rect x="225.9" y="227.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="225.9" y="211.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.14%)</title><rect x="225.9" y="195.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="225.9" y="179.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="228.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.41%)</title><rect x="227.5" y="275.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.41%)</title><rect x="227.5" y="259.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.41%)</title><rect x="227.5" y="243.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.41%)</title><rect x="227.5" y="227.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (3 samples, 0.41%)</title><rect x="227.5" y="211.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.41%)</title><rect x="227.5" y="195.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.41%)</title><rect x="227.5" y="179.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.41%)</title><rect x="227.5" y="163.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.5" y="174.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.41%)</title><rect x="227.5" y="147.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="230.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.68%)</title><rect x="232.2" y="275.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.2" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.14%)</title><rect x="232.2" y="259.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="235.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.14%)</title><rect x="233.8" y="259.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="233.8" y="243.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="236.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.41%)</title><rect x="235.4" y="259.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.41%)</title><rect x="235.4" y="243.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="238.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.41%)</title><rect x="240.2" y="323.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.41%)</title><rect x="240.2" y="307.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.41%)</title><rect x="240.2" y="291.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2 samples, 0.27%)</title><rect x="245.0" y="355.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="248.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="248.2" y="355.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="251.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (14 samples, 1.90%)</title><rect x="249.8" y="355.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.8" y="366.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2 samples, 0.27%)</title><rect x="249.8" y="339.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="252.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (3 samples, 0.41%)</title><rect x="253.0" y="339.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="256.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2 samples, 0.27%)</title><rect x="257.8" y="339.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="260.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.27%)</title><rect x="261.0" y="339.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.27%)</title><rect x="261.0" y="323.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.27%)</title><rect x="261.0" y="307.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.27%)</title><rect x="261.0" y="291.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.27%)</title><rect x="261.0" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.27%)</title><rect x="261.0" y="259.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (2 samples, 0.27%)</title><rect x="261.0" y="243.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.27%)</title><rect x="261.0" y="227.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.27%)</title><rect x="261.0" y="211.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="261.0" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="261.0" y="179.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$193/1820787950.get$Lambda (1 samples, 0.14%)</title><rect x="261.0" y="163.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$193 (1 samples, 0.14%)</title><rect x="261.0" y="147.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="264.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.14%)</title><rect x="262.6" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.14%)</title><rect x="262.6" y="179.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.14%)</title><rect x="262.6" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.14%)</title><rect x="262.6" y="147.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="265.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5 samples, 0.68%)</title><rect x="264.2" y="339.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.14%)</title><rect x="264.2" y="323.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="267.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.27%)</title><rect x="265.8" y="323.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="268.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.27%)</title><rect x="269.0" y="323.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.27%)</title><rect x="269.0" y="307.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.0" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="269.0" y="291.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="272.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="272.2" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="272.2" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="272.2" y="435.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="275.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.27%)</title><rect x="273.8" y="499.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.27%)</title><rect x="273.8" y="483.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.14%)</title><rect x="273.8" y="467.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="276.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="275.4" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="275.4" y="451.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="275.4" y="435.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="278.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (77 samples, 10.43%)</title><rect x="277.0" y="499.0" width="123.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.0" y="510.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="277.0" y="483.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="277.0" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/2053941083.get$Lambda (1 samples, 0.14%)</title><rect x="277.0" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (1 samples, 0.14%)</title><rect x="277.0" y="435.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="280.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.27%)</title><rect x="278.6" y="483.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.27%)</title><rect x="278.6" y="467.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1879978457.apply (1 samples, 0.14%)</title><rect x="278.6" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.14%)</title><rect x="278.6" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.14%)</title><rect x="278.6" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="278.6" y="403.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="281.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="280.2" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="280.2" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="280.2" y="419.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="283.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (74 samples, 10.03%)</title><rect x="281.8" y="483.0" width="118.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.8" y="494.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="281.8" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="281.8" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.get$Lambda (1 samples, 0.14%)</title><rect x="281.8" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (1 samples, 0.14%)</title><rect x="281.8" y="419.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="284.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (69 samples, 9.35%)</title><rect x="283.4" y="467.0" width="110.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.4" y="478.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (69 samples, 9.35%)</title><rect x="283.4" y="451.0" width="110.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.4" y="462.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (69 samples, 9.35%)</title><rect x="283.4" y="435.0" width="110.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.4" y="446.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (69 samples, 9.35%)</title><rect x="283.4" y="419.0" width="110.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.4" y="430.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (69 samples, 9.35%)</title><rect x="283.4" y="403.0" width="110.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.4" y="414.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (69 samples, 9.35%)</title><rect x="283.4" y="387.0" width="110.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.4" y="398.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (29 samples, 3.93%)</title><rect x="283.4" y="371.0" width="46.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.4" y="382.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (29 samples, 3.93%)</title><rect x="283.4" y="355.0" width="46.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.4" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (29 samples, 3.93%)</title><rect x="283.4" y="339.0" width="46.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.4" y="350.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (29 samples, 3.93%)</title><rect x="283.4" y="323.0" width="46.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (29 samples, 3.93%)</title><rect x="283.4" y="307.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="318.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (29 samples, 3.93%)</title><rect x="283.4" y="291.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="302.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (29 samples, 3.93%)</title><rect x="283.4" y="275.0" width="46.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="286.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (14 samples, 1.90%)</title><rect x="283.4" y="259.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.4" y="270.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.27%)</title><rect x="283.4" y="243.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="283.4" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="283.4" y="211.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.4" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="283.4" y="195.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="286.4" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.14%)</title><rect x="285.0" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.0" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="285.0" y="211.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="288.0" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (1 samples, 0.14%)</title><rect x="286.6" y="243.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.6" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (1 samples, 0.14%)</title><rect x="286.6" y="227.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="289.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (6 samples, 0.81%)</title><rect x="288.2" y="243.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (1 samples, 0.14%)</title><rect x="288.2" y="227.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="291.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (5 samples, 0.68%)</title><rect x="289.8" y="227.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (5 samples, 0.68%)</title><rect x="289.8" y="211.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1373419525.linkToTargetMethod (5 samples, 0.68%)</title><rect x="289.8" y="195.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.68%)</title><rect x="289.8" y="179.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.get$Lambda (5 samples, 0.68%)</title><rect x="289.8" y="163.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (5 samples, 0.68%)</title><rect x="289.8" y="147.0" width="8.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="292.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (5 samples, 0.68%)</title><rect x="297.8" y="243.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.8" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="297.8" y="227.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="300.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.41%)</title><rect x="301.0" y="227.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.41%)</title><rect x="301.0" y="211.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.41%)</title><rect x="301.0" y="195.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="304.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (15 samples, 2.03%)</title><rect x="305.8" y="259.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.8" y="270.0">j..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.68%)</title><rect x="305.8" y="243.0" width="8.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="308.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.41%)</title><rect x="313.8" y="243.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.41%)</title><rect x="313.8" y="227.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="316.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.95%)</title><rect x="318.6" y="243.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.95%)</title><rect x="318.6" y="227.0" width="11.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="321.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (40 samples, 5.42%)</title><rect x="329.8" y="371.0" width="63.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.8" y="382.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1 samples, 0.14%)</title><rect x="329.8" y="355.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="332.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (39 samples, 5.28%)</title><rect x="331.4" y="355.0" width="62.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.4" y="366.0">jdk/in..</text>
</g>
<g>
<title>java.util.LinkedList (1 samples, 0.14%)</title><rect x="331.4" y="339.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="334.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.68%)</title><rect x="333.0" y="339.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.68%)</title><rect x="333.0" y="323.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.68%)</title><rect x="333.0" y="307.0" width="8.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="336.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (6 samples, 0.81%)</title><rect x="341.0" y="339.0" width="9.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="344.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (2 samples, 0.27%)</title><rect x="350.6" y="339.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="353.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1 samples, 0.14%)</title><rect x="353.8" y="339.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="356.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.27%)</title><rect x="355.4" y="339.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="358.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (12 samples, 1.63%)</title><rect x="358.6" y="339.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (2 samples, 0.27%)</title><rect x="358.6" y="323.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="361.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.27%)</title><rect x="361.8" y="323.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="364.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="365.0" y="323.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="365.0" y="307.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$174/1979050677.get$Lambda (1 samples, 0.14%)</title><rect x="365.0" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$174 (1 samples, 0.14%)</title><rect x="365.0" y="275.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="368.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.get$Lambda (1 samples, 0.14%)</title><rect x="366.6" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$176 (1 samples, 0.14%)</title><rect x="366.6" y="275.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="369.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.14%)</title><rect x="368.2" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.14%)</title><rect x="368.2" y="307.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="371.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="369.8" y="323.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="372.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.54%)</title><rect x="371.4" y="323.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.14%)</title><rect x="371.4" y="307.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="374.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.14%)</title><rect x="373.0" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.14%)</title><rect x="373.0" y="291.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="376.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.27%)</title><rect x="374.6" y="307.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (1 samples, 0.14%)</title><rect x="374.6" y="291.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="377.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (1 samples, 0.14%)</title><rect x="376.2" y="291.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (7 samples, 0.95%)</title><rect x="377.8" y="339.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="377.8" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="377.8" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$146/531273174.get$Lambda (1 samples, 0.14%)</title><rect x="377.8" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$146 (1 samples, 0.14%)</title><rect x="377.8" y="275.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="380.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.14%)</title><rect x="379.3" y="323.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="382.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.14%)</title><rect x="380.9" y="323.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.14%)</title><rect x="380.9" y="307.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="383.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.54%)</title><rect x="382.5" y="323.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1 samples, 0.14%)</title><rect x="382.5" y="307.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="385.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.27%)</title><rect x="384.1" y="307.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="387.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.14%)</title><rect x="387.3" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.14%)</title><rect x="387.3" y="291.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2 samples, 0.27%)</title><rect x="388.9" y="339.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2 samples, 0.27%)</title><rect x="388.9" y="323.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (1 samples, 0.14%)</title><rect x="388.9" y="307.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="391.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.14%)</title><rect x="390.5" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.14%)</title><rect x="390.5" y="291.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.5" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.14%)</title><rect x="390.5" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.14%)</title><rect x="390.5" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="390.5" y="243.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="393.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.14%)</title><rect x="392.1" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.1" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.14%)</title><rect x="392.1" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.run (1 samples, 0.14%)</title><rect x="392.1" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.14%)</title><rect x="392.1" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.1" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.14%)</title><rect x="392.1" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.1" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.14%)</title><rect x="392.1" y="259.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.14%)</title><rect x="392.1" y="243.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.1" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.14%)</title><rect x="392.1" y="227.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.1" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.14%)</title><rect x="392.1" y="211.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.14%)</title><rect x="392.1" y="195.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.14%)</title><rect x="392.1" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$KeyIterator (1 samples, 0.14%)</title><rect x="392.1" y="163.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="395.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.14%)</title><rect x="393.7" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.14%)</title><rect x="393.7" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="393.7" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="393.7" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="393.7" y="403.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="396.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.41%)</title><rect x="395.3" y="467.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (3 samples, 0.41%)</title><rect x="395.3" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.41%)</title><rect x="395.3" y="435.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1077689464.linkToTargetMethod (3 samples, 0.41%)</title><rect x="395.3" y="419.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20537605.invoke (3 samples, 0.41%)</title><rect x="395.3" y="403.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647528812.invoke (3 samples, 0.41%)</title><rect x="395.3" y="387.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.41%)</title><rect x="395.3" y="371.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.14%)</title><rect x="395.3" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="395.3" y="339.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="398.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.27%)</title><rect x="396.9" y="355.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.27%)</title><rect x="396.9" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.9" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="396.9" y="323.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="399.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (1 samples, 0.14%)</title><rect x="400.1" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.14%)</title><rect x="400.1" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.14%)</title><rect x="400.1" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.14%)</title><rect x="400.1" y="499.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="403.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (2 samples, 0.27%)</title><rect x="401.7" y="547.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.7" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.27%)</title><rect x="401.7" y="531.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.7" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.27%)</title><rect x="401.7" y="515.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="404.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (4 samples, 0.54%)</title><rect x="404.9" y="547.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.41%)</title><rect x="404.9" y="531.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="407.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1 samples, 0.14%)</title><rect x="409.7" y="531.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.14%)</title><rect x="409.7" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.14%)</title><rect x="409.7" y="499.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.7" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.14%)</title><rect x="409.7" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.7" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.14%)</title><rect x="409.7" y="467.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.7" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.14%)</title><rect x="409.7" y="451.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.27%)</title><rect x="411.3" y="547.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.27%)</title><rect x="411.3" y="531.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.27%)</title><rect x="411.3" y="515.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.27%)</title><rect x="411.3" y="499.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.3" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.27%)</title><rect x="411.3" y="483.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.27%)</title><rect x="411.3" y="467.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.27%)</title><rect x="411.3" y="451.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.3" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.27%)</title><rect x="411.3" y="435.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="414.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 1.22%)</title><rect x="414.5" y="611.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 1.22%)</title><rect x="414.5" y="595.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (9 samples, 1.22%)</title><rect x="414.5" y="579.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (9 samples, 1.22%)</title><rect x="414.5" y="563.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (9 samples, 1.22%)</title><rect x="414.5" y="547.0" width="14.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.22%)</title><rect x="414.5" y="531.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.41%)</title><rect x="414.5" y="515.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.41%)</title><rect x="414.5" y="499.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.41%)</title><rect x="414.5" y="483.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.5" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.41%)</title><rect x="414.5" y="467.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="417.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.81%)</title><rect x="419.3" y="515.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.81%)</title><rect x="419.3" y="499.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.81%)</title><rect x="419.3" y="483.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="419.3" y="467.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="422.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.54%)</title><rect x="422.5" y="467.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.5" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.54%)</title><rect x="422.5" y="451.0" width="6.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="425.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (21 samples, 2.85%)</title><rect x="428.9" y="627.0" width="33.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.9" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (21 samples, 2.85%)</title><rect x="428.9" y="611.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.9" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (21 samples, 2.85%)</title><rect x="428.9" y="595.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="606.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (19 samples, 2.57%)</title><rect x="428.9" y="579.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.9" y="590.0">ru..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (18 samples, 2.44%)</title><rect x="428.9" y="563.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (18 samples, 2.44%)</title><rect x="428.9" y="547.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.9" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (18 samples, 2.44%)</title><rect x="428.9" y="531.0" width="28.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.9" y="542.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (18 samples, 2.44%)</title><rect x="428.9" y="515.0" width="28.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.9" y="526.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 2.44%)</title><rect x="428.9" y="499.0" width="28.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.9" y="510.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 2.44%)</title><rect x="428.9" y="483.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.9" y="494.0">ja..</text>
</g>
<g>
<title>int[] (5 samples, 0.68%)</title><rect x="428.9" y="467.0" width="8.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="431.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.54%)</title><rect x="436.9" y="467.0" width="6.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="439.9" y="478.0"></text>
</g>
<g>
<title>long[] (9 samples, 1.22%)</title><rect x="443.3" y="467.0" width="14.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="446.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (1 samples, 0.14%)</title><rect x="457.7" y="563.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.7" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="457.7" y="547.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="460.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (2 samples, 0.27%)</title><rect x="459.3" y="579.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.3" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (2 samples, 0.27%)</title><rect x="459.3" y="563.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="462.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (79 samples, 10.70%)</title><rect x="462.5" y="627.0" width="126.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.5" y="638.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (79 samples, 10.70%)</title><rect x="462.5" y="611.0" width="126.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.5" y="622.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (57 samples, 7.72%)</title><rect x="462.5" y="595.0" width="91.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="606.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (53 samples, 7.18%)</title><rect x="462.5" y="579.0" width="84.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.5" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>java.util.NoSuchElementException (3 samples, 0.41%)</title><rect x="462.5" y="563.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="465.5" y="574.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (50 samples, 6.78%)</title><rect x="467.3" y="563.0" width="79.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.3" y="574.0">java/util..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (50 samples, 6.78%)</title><rect x="467.3" y="547.0" width="79.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.3" y="558.0">java/lang..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (50 samples, 6.78%)</title><rect x="467.3" y="531.0" width="79.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.3" y="542.0">java/lang..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (50 samples, 6.78%)</title><rect x="467.3" y="515.0" width="79.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.3" y="526.0">java/lang..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (50 samples, 6.78%)</title><rect x="467.3" y="499.0" width="79.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.3" y="510.0">java/lang..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (50 samples, 6.78%)</title><rect x="467.3" y="483.0" width="79.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.3" y="494.0">java/lang..</text>
</g>
<g>
<title>int[] (9 samples, 1.22%)</title><rect x="467.3" y="467.0" width="14.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="470.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 2.17%)</title><rect x="481.7" y="467.0" width="25.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="484.7" y="478.0">j..</text>
</g>
<g>
<title>long[] (16 samples, 2.17%)</title><rect x="507.3" y="467.0" width="25.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="510.3" y="478.0">l..</text>
</g>
<g>
<title>short[] (9 samples, 1.22%)</title><rect x="532.8" y="467.0" width="14.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="535.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (4 samples, 0.54%)</title><rect x="547.2" y="579.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (4 samples, 0.54%)</title><rect x="547.2" y="563.0" width="6.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="550.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (5 samples, 0.68%)</title><rect x="553.6" y="595.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.6" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.14%)</title><rect x="553.6" y="579.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="556.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.54%)</title><rect x="555.2" y="579.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.2" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.41%)</title><rect x="555.2" y="563.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="558.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="560.0" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="560.0" y="547.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="560.0" y="531.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="563.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (17 samples, 2.30%)</title><rect x="561.6" y="595.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.6" y="606.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 2.30%)</title><rect x="561.6" y="579.0" width="27.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.6" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 2.30%)</title><rect x="561.6" y="563.0" width="27.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.6" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 2.30%)</title><rect x="561.6" y="547.0" width="27.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 2.30%)</title><rect x="561.6" y="531.0" width="27.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.6" y="542.0">j..</text>
</g>
<g>
<title>byte[] (17 samples, 2.30%)</title><rect x="561.6" y="515.0" width="27.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="564.6" y="526.0">b..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (11 samples, 1.49%)</title><rect x="588.8" y="643.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 1.49%)</title><rect x="588.8" y="627.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 1.49%)</title><rect x="588.8" y="611.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (11 samples, 1.49%)</title><rect x="588.8" y="595.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (11 samples, 1.49%)</title><rect x="588.8" y="579.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 1.36%)</title><rect x="588.8" y="563.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 1.36%)</title><rect x="588.8" y="547.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.95%)</title><rect x="588.8" y="531.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.95%)</title><rect x="588.8" y="515.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$138/1868095322.apply (7 samples, 0.95%)</title><rect x="588.8" y="499.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$1 (7 samples, 0.95%)</title><rect x="588.8" y="483.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.mergeValues (2 samples, 0.27%)</title><rect x="588.8" y="467.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.8" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.orElseGet (1 samples, 0.14%)</title><rect x="588.8" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value$$Lambda$274/1002202321.get (1 samples, 0.14%)</title><rect x="588.8" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveMissingValue (1 samples, 0.14%)</title><rect x="588.8" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.8" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (1 samples, 0.14%)</title><rect x="588.8" y="403.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="591.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.14%)</title><rect x="590.4" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.14%)</title><rect x="590.4" y="435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.14%)</title><rect x="590.4" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.14%)</title><rect x="590.4" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.14%)</title><rect x="590.4" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.14%)</title><rect x="590.4" y="371.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.14%)</title><rect x="590.4" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.14%)</title><rect x="590.4" y="339.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="593.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (5 samples, 0.68%)</title><rect x="592.0" y="467.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.68%)</title><rect x="592.0" y="451.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.14%)</title><rect x="592.0" y="435.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="595.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="593.6" y="435.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="596.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="595.2" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.2" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="595.2" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="595.2" y="403.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="595.2" y="387.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="595.2" y="371.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="598.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.27%)</title><rect x="596.8" y="435.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="596.8" y="419.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="596.8" y="403.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="599.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="598.4" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.4" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="598.4" y="387.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="601.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.41%)</title><rect x="600.0" y="531.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.41%)</title><rect x="600.0" y="515.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (3 samples, 0.41%)</title><rect x="600.0" y="499.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (3 samples, 0.41%)</title><rect x="600.0" y="483.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (3 samples, 0.41%)</title><rect x="600.0" y="467.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.41%)</title><rect x="600.0" y="451.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.41%)</title><rect x="600.0" y="435.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="600.0" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.14%)</title><rect x="600.0" y="403.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="600.0" y="387.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="603.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.27%)</title><rect x="601.6" y="419.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.27%)</title><rect x="601.6" y="403.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="604.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.14%)</title><rect x="604.8" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="604.8" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="604.8" y="531.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="607.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 1.49%)</title><rect x="606.4" y="643.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 1.49%)</title><rect x="606.4" y="627.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 1.49%)</title><rect x="606.4" y="611.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 1.49%)</title><rect x="606.4" y="595.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 1.49%)</title><rect x="606.4" y="579.0" width="17.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (18 samples, 2.44%)</title><rect x="624.0" y="643.0" width="28.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.0" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (18 samples, 2.44%)</title><rect x="624.0" y="627.0" width="28.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (18 samples, 2.44%)</title><rect x="624.0" y="611.0" width="28.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (18 samples, 2.44%)</title><rect x="624.0" y="595.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 2.44%)</title><rect x="624.0" y="579.0" width="28.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 2.44%)</title><rect x="624.0" y="563.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 2.44%)</title><rect x="624.0" y="547.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18 samples, 2.44%)</title><rect x="624.0" y="531.0" width="28.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18 samples, 2.44%)</title><rect x="624.0" y="515.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18 samples, 2.44%)</title><rect x="624.0" y="499.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (18 samples, 2.44%)</title><rect x="624.0" y="483.0" width="28.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (17 samples, 2.30%)</title><rect x="624.0" y="467.0" width="27.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.0" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="624.0" y="451.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="624.0" y="435.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$226/1095208075.get$Lambda (1 samples, 0.14%)</title><rect x="624.0" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$226 (1 samples, 0.14%)</title><rect x="624.0" y="403.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/404578839.get$Lambda (1 samples, 0.14%)</title><rect x="625.6" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (1 samples, 0.14%)</title><rect x="625.6" y="403.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="628.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (15 samples, 2.03%)</title><rect x="627.2" y="451.0" width="24.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 2.03%)</title><rect x="627.2" y="435.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.2" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (15 samples, 2.03%)</title><rect x="627.2" y="419.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 2.03%)</title><rect x="627.2" y="403.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.68%)</title><rect x="627.2" y="387.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (4 samples, 0.54%)</title><rect x="627.2" y="371.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="630.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/540628327.apply (1 samples, 0.14%)</title><rect x="633.6" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.14%)</title><rect x="633.6" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.14%)</title><rect x="633.6" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.14%)</title><rect x="633.6" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.6" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.14%)</title><rect x="633.6" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.6" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.14%)</title><rect x="633.6" y="291.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="636.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 1.36%)</title><rect x="635.2" y="387.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 1.36%)</title><rect x="635.2" y="371.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (10 samples, 1.36%)</title><rect x="635.2" y="355.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10 samples, 1.36%)</title><rect x="635.2" y="339.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10 samples, 1.36%)</title><rect x="635.2" y="323.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/1604777492.apply (10 samples, 1.36%)</title><rect x="635.2" y="307.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10 samples, 1.36%)</title><rect x="635.2" y="291.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.27%)</title><rect x="635.2" y="275.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.27%)</title><rect x="635.2" y="259.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.27%)</title><rect x="635.2" y="243.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="638.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (5 samples, 0.68%)</title><rect x="638.4" y="275.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="638.4" y="259.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="638.4" y="243.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$238/1051459092.get$Lambda (1 samples, 0.14%)</title><rect x="638.4" y="227.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$238 (1 samples, 0.14%)</title><rect x="638.4" y="211.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="641.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.54%)</title><rect x="640.0" y="259.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.54%)</title><rect x="640.0" y="243.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.27%)</title><rect x="640.0" y="227.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="643.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="643.2" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="643.2" y="211.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.27%)</title><rect x="643.2" y="195.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="646.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.41%)</title><rect x="646.4" y="275.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1 samples, 0.14%)</title><rect x="646.4" y="259.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (1 samples, 0.14%)</title><rect x="646.4" y="243.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="649.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.27%)</title><rect x="648.0" y="259.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.27%)</title><rect x="648.0" y="243.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.27%)</title><rect x="648.0" y="227.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.27%)</title><rect x="648.0" y="211.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.27%)</title><rect x="648.0" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.27%)</title><rect x="648.0" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.27%)</title><rect x="648.0" y="163.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="651.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.14%)</title><rect x="651.2" y="467.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.14%)</title><rect x="651.2" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.14%)</title><rect x="651.2" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.14%)</title><rect x="651.2" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.14%)</title><rect x="651.2" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.2" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.14%)</title><rect x="651.2" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.14%)</title><rect x="651.2" y="371.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.14%)</title><rect x="651.2" y="355.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="654.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (158 samples, 21.41%)</title><rect x="652.8" y="643.0" width="252.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.8" y="654.0">jdk/internal/net/http/common/Seque..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (158 samples, 21.41%)</title><rect x="652.8" y="627.0" width="252.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.8" y="638.0">jdk/internal/net/http/common/Seque..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (133 samples, 18.02%)</title><rect x="652.8" y="611.0" width="212.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.8" y="622.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (133 samples, 18.02%)</title><rect x="652.8" y="595.0" width="212.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.8" y="606.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (133 samples, 18.02%)</title><rect x="652.8" y="579.0" width="212.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.8" y="590.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.27%)</title><rect x="652.8" y="563.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.27%)</title><rect x="652.8" y="547.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.27%)</title><rect x="652.8" y="531.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.27%)</title><rect x="652.8" y="515.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (2 samples, 0.27%)</title><rect x="652.8" y="499.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (2 samples, 0.27%)</title><rect x="652.8" y="483.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="652.8" y="467.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.27%)</title><rect x="652.8" y="451.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.27%)</title><rect x="652.8" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.8" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="652.8" y="419.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="655.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (131 samples, 17.75%)</title><rect x="656.0" y="563.0" width="209.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.0" y="574.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (131 samples, 17.75%)</title><rect x="656.0" y="547.0" width="209.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.0" y="558.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (131 samples, 17.75%)</title><rect x="656.0" y="531.0" width="209.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.0" y="542.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (131 samples, 17.75%)</title><rect x="656.0" y="515.0" width="209.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.0" y="526.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (71 samples, 9.62%)</title><rect x="656.0" y="499.0" width="113.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.0" y="510.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 9.62%)</title><rect x="656.0" y="483.0" width="113.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.0" y="494.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (71 samples, 9.62%)</title><rect x="656.0" y="467.0" width="113.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.0" y="478.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (71 samples, 9.62%)</title><rect x="656.0" y="451.0" width="113.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.0" y="462.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (71 samples, 9.62%)</title><rect x="656.0" y="435.0" width="113.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.0" y="446.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (71 samples, 9.62%)</title><rect x="656.0" y="419.0" width="113.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.0" y="430.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (71 samples, 9.62%)</title><rect x="656.0" y="403.0" width="113.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.0" y="414.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (66 samples, 8.94%)</title><rect x="656.0" y="387.0" width="105.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.0" y="398.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 8.94%)</title><rect x="656.0" y="371.0" width="105.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.0" y="382.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (61 samples, 8.27%)</title><rect x="656.0" y="355.0" width="97.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.0" y="366.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$238/1051459092.apply (1 samples, 0.14%)</title><rect x="656.0" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.14%)</title><rect x="656.0" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.14%)</title><rect x="656.0" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.14%)</title><rect x="656.0" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="656.0" y="275.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="659.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (56 samples, 7.59%)</title><rect x="657.6" y="339.0" width="89.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.6" y="350.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (56 samples, 7.59%)</title><rect x="657.6" y="323.0" width="89.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.6" y="334.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="657.6" y="307.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="657.6" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.get$Lambda (2 samples, 0.27%)</title><rect x="657.6" y="275.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$266 (2 samples, 0.27%)</title><rect x="657.6" y="259.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="660.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.14%)</title><rect x="660.8" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.14%)</title><rect x="660.8" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1 samples, 0.14%)</title><rect x="660.8" y="275.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="663.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (53 samples, 7.18%)</title><rect x="662.4" y="307.0" width="84.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.4" y="318.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.68%)</title><rect x="662.4" y="291.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.68%)</title><rect x="662.4" y="275.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.14%)</title><rect x="662.4" y="259.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="665.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.54%)</title><rect x="664.0" y="259.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.54%)</title><rect x="664.0" y="243.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.54%)</title><rect x="664.0" y="227.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="667.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (48 samples, 6.50%)</title><rect x="670.4" y="291.0" width="76.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.4" y="302.0">jdk/inte..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (2 samples, 0.27%)</title><rect x="670.4" y="275.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="673.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (38 samples, 5.15%)</title><rect x="673.6" y="275.0" width="60.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.6" y="286.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (8 samples, 1.08%)</title><rect x="673.6" y="259.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.6" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.41%)</title><rect x="673.6" y="243.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.6" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.27%)</title><rect x="673.6" y="227.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.6" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.27%)</title><rect x="673.6" y="211.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="676.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.14%)</title><rect x="676.7" y="227.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.14%)</title><rect x="676.7" y="211.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="679.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.41%)</title><rect x="678.3" y="243.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.41%)</title><rect x="678.3" y="227.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.41%)</title><rect x="678.3" y="211.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.14%)</title><rect x="678.3" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.14%)</title><rect x="678.3" y="179.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.14%)</title><rect x="678.3" y="163.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.14%)</title><rect x="678.3" y="147.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="681.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.27%)</title><rect x="679.9" y="195.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.27%)</title><rect x="679.9" y="179.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.9" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.27%)</title><rect x="679.9" y="163.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.9" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.27%)</title><rect x="679.9" y="147.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="682.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.27%)</title><rect x="683.1" y="243.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2 samples, 0.27%)</title><rect x="683.1" y="227.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="686.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.41%)</title><rect x="686.3" y="259.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="686.3" y="243.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.14%)</title><rect x="686.3" y="227.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="689.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.27%)</title><rect x="687.9" y="243.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.27%)</title><rect x="687.9" y="227.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.14%)</title><rect x="687.9" y="211.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="690.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="689.5" y="211.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="689.5" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="689.5" y="179.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="692.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (1 samples, 0.14%)</title><rect x="691.1" y="259.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="694.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 3.52%)</title><rect x="692.7" y="259.0" width="41.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.7" y="270.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (26 samples, 3.52%)</title><rect x="692.7" y="243.0" width="41.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.7" y="254.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (26 samples, 3.52%)</title><rect x="692.7" y="227.0" width="41.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.7" y="238.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.14%)</title><rect x="692.7" y="211.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="692.7" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="692.7" y="179.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="692.7" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="692.7" y="147.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="695.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (3 samples, 0.41%)</title><rect x="694.3" y="211.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.68%)</title><rect x="699.1" y="211.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.68%)</title><rect x="699.1" y="195.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="699.1" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="699.1" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$258/1539664908.get$Lambda (1 samples, 0.14%)</title><rect x="699.1" y="147.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$258 (1 samples, 0.14%)</title><rect x="699.1" y="131.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="702.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.54%)</title><rect x="700.7" y="179.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.54%)</title><rect x="700.7" y="163.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.54%)</title><rect x="700.7" y="147.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.54%)</title><rect x="700.7" y="131.0" width="6.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="703.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.54%)</title><rect x="707.1" y="211.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.54%)</title><rect x="707.1" y="195.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (4 samples, 0.54%)</title><rect x="707.1" y="179.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.54%)</title><rect x="707.1" y="163.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.54%)</title><rect x="707.1" y="147.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.54%)</title><rect x="707.1" y="131.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.1" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.54%)</title><rect x="707.1" y="115.0" width="6.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="710.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (13 samples, 1.76%)</title><rect x="713.5" y="211.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (4 samples, 0.54%)</title><rect x="713.5" y="195.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="716.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (9 samples, 1.22%)</title><rect x="719.9" y="195.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 1.22%)</title><rect x="719.9" y="179.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (9 samples, 1.22%)</title><rect x="719.9" y="163.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 1.22%)</title><rect x="719.9" y="147.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.27%)</title><rect x="719.9" y="131.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="719.9" y="115.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="722.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.95%)</title><rect x="723.1" y="131.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.95%)</title><rect x="723.1" y="115.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.1" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.95%)</title><rect x="723.1" y="99.0" width="11.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="726.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (8 samples, 1.08%)</title><rect x="734.3" y="275.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (6 samples, 0.81%)</title><rect x="734.3" y="259.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.41%)</title><rect x="734.3" y="243.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.41%)</title><rect x="734.3" y="227.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.41%)</title><rect x="734.3" y="211.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.14%)</title><rect x="734.3" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.14%)</title><rect x="734.3" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.14%)</title><rect x="734.3" y="163.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1 samples, 0.14%)</title><rect x="734.3" y="147.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="737.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$245/1990067422.get (2 samples, 0.27%)</title><rect x="735.9" y="195.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (2 samples, 0.27%)</title><rect x="735.9" y="179.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="738.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.41%)</title><rect x="739.1" y="243.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (3 samples, 0.41%)</title><rect x="739.1" y="227.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="742.1" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (2 samples, 0.27%)</title><rect x="743.9" y="259.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (1 samples, 0.14%)</title><rect x="743.9" y="243.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="746.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (1 samples, 0.14%)</title><rect x="745.5" y="243.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (1 samples, 0.14%)</title><rect x="745.5" y="227.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="748.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (4 samples, 0.54%)</title><rect x="747.1" y="339.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.54%)</title><rect x="747.1" y="323.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (4 samples, 0.54%)</title><rect x="747.1" y="307.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.41%)</title><rect x="747.1" y="291.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="750.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.14%)</title><rect x="751.9" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.9" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$DescendingIterator (1 samples, 0.14%)</title><rect x="751.9" y="275.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="754.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.68%)</title><rect x="753.5" y="355.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.68%)</title><rect x="753.5" y="339.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$210/616773831.apply (5 samples, 0.68%)</title><rect x="753.5" y="323.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5 samples, 0.68%)</title><rect x="753.5" y="307.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.41%)</title><rect x="753.5" y="291.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.41%)</title><rect x="753.5" y="275.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.41%)</title><rect x="753.5" y="259.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="756.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.27%)</title><rect x="758.3" y="291.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.27%)</title><rect x="758.3" y="275.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="761.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/885673150.apply (5 samples, 0.68%)</title><rect x="761.5" y="387.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.68%)</title><rect x="761.5" y="371.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (5 samples, 0.68%)</title><rect x="761.5" y="355.0" width="8.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="764.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (60 samples, 8.13%)</title><rect x="769.5" y="499.0" width="95.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.5" y="510.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (6 samples, 0.81%)</title><rect x="769.5" y="483.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.81%)</title><rect x="769.5" y="467.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.81%)</title><rect x="769.5" y="451.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.81%)</title><rect x="769.5" y="435.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.81%)</title><rect x="769.5" y="419.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.5" y="430.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.81%)</title><rect x="769.5" y="403.0" width="9.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="772.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.27%)</title><rect x="779.1" y="483.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="779.1" y="467.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="779.1" y="451.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.27%)</title><rect x="779.1" y="435.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.27%)</title><rect x="779.1" y="419.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.1" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="779.1" y="403.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="782.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.81%)</title><rect x="782.3" y="483.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.14%)</title><rect x="782.3" y="467.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="785.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.27%)</title><rect x="783.9" y="467.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.27%)</title><rect x="783.9" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="783.9" y="435.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="786.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.41%)</title><rect x="787.1" y="467.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.41%)</title><rect x="787.1" y="451.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.41%)</title><rect x="787.1" y="435.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.1" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.41%)</title><rect x="787.1" y="419.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="790.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (16 samples, 2.17%)</title><rect x="791.9" y="483.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.9" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 2.17%)</title><rect x="791.9" y="467.0" width="25.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.9" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 2.17%)</title><rect x="791.9" y="451.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.9" y="462.0">j..</text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.14%)</title><rect x="791.9" y="435.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="794.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.14%)</title><rect x="793.5" y="435.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="796.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="795.1" y="435.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="795.1" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (2 samples, 0.27%)</title><rect x="795.1" y="403.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.1" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (2 samples, 0.27%)</title><rect x="795.1" y="387.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="798.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.14%)</title><rect x="798.3" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.3" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.14%)</title><rect x="798.3" y="419.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="801.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (9 samples, 1.22%)</title><rect x="799.9" y="435.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (9 samples, 1.22%)</title><rect x="799.9" y="419.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 1.22%)</title><rect x="799.9" y="403.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="799.9" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="799.9" y="371.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (2 samples, 0.27%)</title><rect x="799.9" y="355.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (2 samples, 0.27%)</title><rect x="799.9" y="339.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="802.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.14%)</title><rect x="803.1" y="387.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (1 samples, 0.14%)</title><rect x="803.1" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.14%)</title><rect x="803.1" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.14%)</title><rect x="803.1" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.14%)</title><rect x="803.1" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.14%)</title><rect x="803.1" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.14%)</title><rect x="803.1" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="803.1" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="803.1" y="259.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="806.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.54%)</title><rect x="804.7" y="387.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.7" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.54%)</title><rect x="804.7" y="371.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.54%)</title><rect x="804.7" y="355.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.54%)</title><rect x="804.7" y="339.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.54%)</title><rect x="804.7" y="323.0" width="6.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="807.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.27%)</title><rect x="811.1" y="387.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.27%)</title><rect x="811.1" y="371.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="814.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.27%)</title><rect x="814.3" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.27%)</title><rect x="814.3" y="419.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="817.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (30 samples, 4.07%)</title><rect x="817.5" y="483.0" width="47.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.5" y="494.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.14%)</title><rect x="817.5" y="467.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="820.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.54%)</title><rect x="819.1" y="467.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.54%)</title><rect x="819.1" y="451.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.1" y="462.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.54%)</title><rect x="819.1" y="435.0" width="6.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="822.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.27%)</title><rect x="825.4" y="467.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="825.4" y="451.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="825.4" y="435.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="828.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="827.0" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.0" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="827.0" y="419.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="830.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (23 samples, 3.12%)</title><rect x="828.6" y="467.0" width="36.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.6" y="478.0">jdk..</text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 1.22%)</title><rect x="828.6" y="451.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 1.22%)</title><rect x="828.6" y="435.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="828.6" y="419.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="831.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.95%)</title><rect x="831.8" y="419.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.8" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.95%)</title><rect x="831.8" y="403.0" width="11.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="834.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.54%)</title><rect x="843.0" y="451.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.54%)</title><rect x="843.0" y="435.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="843.0" y="419.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="846.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="846.2" y="419.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="849.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.41%)</title><rect x="849.4" y="451.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.41%)</title><rect x="849.4" y="435.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.41%)</title><rect x="849.4" y="419.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="849.4" y="403.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="852.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="852.6" y="403.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.6" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="852.6" y="387.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="855.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.41%)</title><rect x="854.2" y="451.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.41%)</title><rect x="854.2" y="435.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.41%)</title><rect x="854.2" y="419.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.41%)</title><rect x="854.2" y="403.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.41%)</title><rect x="854.2" y="387.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.41%)</title><rect x="854.2" y="371.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="857.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.54%)</title><rect x="859.0" y="451.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.54%)</title><rect x="859.0" y="435.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (4 samples, 0.54%)</title><rect x="859.0" y="419.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="862.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (25 samples, 3.39%)</title><rect x="865.4" y="611.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.4" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (25 samples, 3.39%)</title><rect x="865.4" y="595.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.4" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (25 samples, 3.39%)</title><rect x="865.4" y="579.0" width="40.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.4" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (25 samples, 3.39%)</title><rect x="865.4" y="563.0" width="40.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.4" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (25 samples, 3.39%)</title><rect x="865.4" y="547.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.4" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (25 samples, 3.39%)</title><rect x="865.4" y="531.0" width="40.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.4" y="542.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="865.4" y="515.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="865.4" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$193/1820787950.get$Lambda (1 samples, 0.14%)</title><rect x="865.4" y="483.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$193 (1 samples, 0.14%)</title><rect x="865.4" y="467.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="868.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.14%)</title><rect x="867.0" y="515.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="870.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.14%)</title><rect x="868.6" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.14%)</title><rect x="868.6" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.14%)</title><rect x="868.6" y="483.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="871.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (22 samples, 2.98%)</title><rect x="870.2" y="515.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.2" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (22 samples, 2.98%)</title><rect x="870.2" y="499.0" width="35.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.2" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (19 samples, 2.57%)</title><rect x="870.2" y="483.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (19 samples, 2.57%)</title><rect x="870.2" y="467.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.2" y="478.0">jd..</text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.54%)</title><rect x="870.2" y="451.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="873.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (15 samples, 2.03%)</title><rect x="876.6" y="451.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.6" y="462.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="876.6" y="435.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="879.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.27%)</title><rect x="878.2" y="435.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.2" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.27%)</title><rect x="878.2" y="419.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.2" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.14%)</title><rect x="878.2" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.2" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.14%)</title><rect x="878.2" y="387.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="881.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.14%)</title><rect x="879.8" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.14%)</title><rect x="879.8" y="387.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="882.8" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.14%)</title><rect x="881.4" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.4" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.14%)</title><rect x="881.4" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.4" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.14%)</title><rect x="881.4" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.4" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (1 samples, 0.14%)</title><rect x="881.4" y="387.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="884.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 1.49%)</title><rect x="883.0" y="435.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 1.49%)</title><rect x="883.0" y="419.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (4 samples, 0.54%)</title><rect x="883.0" y="403.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.0" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.14%)</title><rect x="883.0" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.14%)</title><rect x="883.0" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.14%)</title><rect x="883.0" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.14%)</title><rect x="883.0" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.14%)</title><rect x="883.0" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (1 samples, 0.14%)</title><rect x="883.0" y="307.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="886.0" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.41%)</title><rect x="884.6" y="387.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.6" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.41%)</title><rect x="884.6" y="371.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.6" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.41%)</title><rect x="884.6" y="355.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="887.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.41%)</title><rect x="889.4" y="403.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.27%)</title><rect x="889.4" y="387.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.4" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.27%)</title><rect x="889.4" y="371.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.4" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.27%)</title><rect x="889.4" y="355.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="892.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.14%)</title><rect x="892.6" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (1 samples, 0.14%)</title><rect x="892.6" y="371.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="895.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.54%)</title><rect x="894.2" y="403.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.54%)</title><rect x="894.2" y="387.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.27%)</title><rect x="894.2" y="371.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.27%)</title><rect x="894.2" y="355.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.27%)</title><rect x="894.2" y="339.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.27%)</title><rect x="894.2" y="323.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="897.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.27%)</title><rect x="897.4" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.27%)</title><rect x="897.4" y="355.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.27%)</title><rect x="897.4" y="339.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (2 samples, 0.27%)</title><rect x="897.4" y="323.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="900.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (3 samples, 0.41%)</title><rect x="900.6" y="483.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (3 samples, 0.41%)</title><rect x="900.6" y="467.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (3 samples, 0.41%)</title><rect x="900.6" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.41%)</title><rect x="900.6" y="435.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.41%)</title><rect x="900.6" y="419.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.41%)</title><rect x="900.6" y="403.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.41%)</title><rect x="900.6" y="387.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (3 samples, 0.41%)</title><rect x="900.6" y="371.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (3 samples, 0.41%)</title><rect x="900.6" y="355.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.41%)</title><rect x="900.6" y="339.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.41%)</title><rect x="900.6" y="323.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.41%)</title><rect x="900.6" y="307.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.apply (3 samples, 0.41%)</title><rect x="900.6" y="291.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.41%)</title><rect x="900.6" y="275.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (3 samples, 0.41%)</title><rect x="900.6" y="259.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="903.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4 samples, 0.54%)</title><rect x="905.4" y="691.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4 samples, 0.54%)</title><rect x="905.4" y="675.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4 samples, 0.54%)</title><rect x="905.4" y="659.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4 samples, 0.54%)</title><rect x="905.4" y="643.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4 samples, 0.54%)</title><rect x="905.4" y="627.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (4 samples, 0.54%)</title><rect x="905.4" y="611.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.54%)</title><rect x="905.4" y="595.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.54%)</title><rect x="905.4" y="579.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.54%)</title><rect x="905.4" y="563.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.54%)</title><rect x="905.4" y="547.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.54%)</title><rect x="905.4" y="531.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.54%)</title><rect x="905.4" y="515.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.54%)</title><rect x="905.4" y="499.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.54%)</title><rect x="905.4" y="483.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.54%)</title><rect x="905.4" y="467.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.54%)</title><rect x="905.4" y="451.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.54%)</title><rect x="905.4" y="435.0" width="6.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="908.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (26 samples, 3.52%)</title><rect x="911.8" y="691.0" width="41.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.8" y="702.0">jdk..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.41%)</title><rect x="911.8" y="675.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (2 samples, 0.27%)</title><rect x="911.8" y="659.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2 samples, 0.27%)</title><rect x="911.8" y="643.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2 samples, 0.27%)</title><rect x="911.8" y="627.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2 samples, 0.27%)</title><rect x="911.8" y="611.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2 samples, 0.27%)</title><rect x="911.8" y="595.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2 samples, 0.27%)</title><rect x="911.8" y="579.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.27%)</title><rect x="911.8" y="563.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.27%)</title><rect x="911.8" y="547.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.27%)</title><rect x="911.8" y="531.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.27%)</title><rect x="911.8" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (2 samples, 0.27%)</title><rect x="911.8" y="499.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.27%)</title><rect x="911.8" y="483.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.14%)</title><rect x="911.8" y="467.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="911.8" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="911.8" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221/1525410965.get$Lambda (1 samples, 0.14%)</title><rect x="911.8" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$221 (1 samples, 0.14%)</title><rect x="911.8" y="403.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="914.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.14%)</title><rect x="913.4" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.14%)</title><rect x="913.4" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1 samples, 0.14%)</title><rect x="913.4" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.14%)</title><rect x="913.4" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.4" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.14%)</title><rect x="913.4" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="916.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$220/331523809.accept (1 samples, 0.14%)</title><rect x="915.0" y="659.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.14%)</title><rect x="915.0" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/1809208039.run (1 samples, 0.14%)</title><rect x="915.0" y="627.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.14%)</title><rect x="915.0" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.14%)</title><rect x="915.0" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.14%)</title><rect x="915.0" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.14%)</title><rect x="915.0" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.14%)</title><rect x="915.0" y="547.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="918.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (8 samples, 1.08%)</title><rect x="916.6" y="675.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (8 samples, 1.08%)</title><rect x="916.6" y="659.0" width="12.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="919.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.14%)</title><rect x="929.4" y="675.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.14%)</title><rect x="929.4" y="659.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.14%)</title><rect x="929.4" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.14%)</title><rect x="929.4" y="627.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.14%)</title><rect x="929.4" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.14%)</title><rect x="929.4" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.14%)</title><rect x="929.4" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.14%)</title><rect x="929.4" y="563.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="932.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7 samples, 0.95%)</title><rect x="931.0" y="675.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.0" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.27%)</title><rect x="931.0" y="659.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.0" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.27%)</title><rect x="931.0" y="643.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.27%)</title><rect x="931.0" y="627.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="934.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.27%)</title><rect x="931.0" y="611.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.0" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.27%)</title><rect x="931.0" y="595.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="934.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.68%)</title><rect x="934.2" y="659.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.27%)</title><rect x="934.2" y="643.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.27%)</title><rect x="934.2" y="627.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$275/1282806889.get$Lambda (2 samples, 0.27%)</title><rect x="934.2" y="611.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$275 (2 samples, 0.27%)</title><rect x="934.2" y="595.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="937.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1 samples, 0.14%)</title><rect x="937.4" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.4" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.14%)</title><rect x="937.4" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.4" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (1 samples, 0.14%)</title><rect x="937.4" y="611.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="940.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.27%)</title><rect x="939.0" y="643.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.14%)</title><rect x="939.0" y="627.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="942.0" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.14%)</title><rect x="940.6" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.14%)</title><rect x="940.6" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.6" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.14%)</title><rect x="940.6" y="595.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="943.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3 samples, 0.41%)</title><rect x="942.2" y="675.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.2" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.14%)</title><rect x="942.2" y="659.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1 samples, 0.14%)</title><rect x="942.2" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (1 samples, 0.14%)</title><rect x="942.2" y="627.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="945.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.27%)</title><rect x="943.8" y="659.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (2 samples, 0.27%)</title><rect x="943.8" y="643.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="946.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2 samples, 0.27%)</title><rect x="947.0" y="675.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.27%)</title><rect x="947.0" y="659.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2 samples, 0.27%)</title><rect x="947.0" y="643.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.27%)</title><rect x="947.0" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.14%)</title><rect x="947.0" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.14%)</title><rect x="947.0" y="595.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="950.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.14%)</title><rect x="948.6" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.14%)</title><rect x="948.6" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.14%)</title><rect x="948.6" y="579.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.14%)</title><rect x="948.6" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.14%)</title><rect x="948.6" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.14%)</title><rect x="948.6" y="531.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="951.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.27%)</title><rect x="950.2" y="675.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.27%)</title><rect x="950.2" y="659.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.27%)</title><rect x="950.2" y="643.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.27%)</title><rect x="950.2" y="627.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="953.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (6 samples, 0.81%)</title><rect x="953.4" y="691.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (5 samples, 0.68%)</title><rect x="953.4" y="675.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (5 samples, 0.68%)</title><rect x="953.4" y="659.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (5 samples, 0.68%)</title><rect x="953.4" y="643.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (5 samples, 0.68%)</title><rect x="953.4" y="627.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.4" y="638.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl (1 samples, 0.14%)</title><rect x="953.4" y="611.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="956.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (3 samples, 0.41%)</title><rect x="955.0" y="611.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (3 samples, 0.41%)</title><rect x="955.0" y="595.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.0" y="606.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.14%)</title><rect x="955.0" y="579.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="958.0" y="590.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (1 samples, 0.14%)</title><rect x="956.6" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.6" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;init&gt; (1 samples, 0.14%)</title><rect x="956.6" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.6" y="574.0"></text>
</g>
<g>
<title>java.net.InetAddress$InetAddressHolder (1 samples, 0.14%)</title><rect x="956.6" y="547.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="959.6" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.14%)</title><rect x="958.2" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.2" y="590.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (1 samples, 0.14%)</title><rect x="958.2" y="563.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="961.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.14%)</title><rect x="959.8" y="611.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.8" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.&lt;init&gt; (1 samples, 0.14%)</title><rect x="959.8" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.8" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.&lt;init&gt; (1 samples, 0.14%)</title><rect x="959.8" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.14%)</title><rect x="959.8" y="563.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="962.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (1 samples, 0.14%)</title><rect x="961.4" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.createSession (1 samples, 0.14%)</title><rect x="961.4" y="659.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/StreamSession.&lt;init&gt; (1 samples, 0.14%)</title><rect x="961.4" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (1 samples, 0.14%)</title><rect x="961.4" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.4" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="961.4" y="611.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="964.4" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (142 samples, 19.24%)</title><rect x="963.0" y="691.0" width="227.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.0" y="702.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (32 samples, 4.34%)</title><rect x="963.0" y="675.0" width="51.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.0" y="686.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (2 samples, 0.27%)</title><rect x="963.0" y="659.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.27%)</title><rect x="963.0" y="643.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.27%)</title><rect x="963.0" y="627.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.27%)</title><rect x="963.0" y="611.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.0" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.27%)</title><rect x="963.0" y="595.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="966.0" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.14%)</title><rect x="966.2" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="969.2" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.14%)</title><rect x="966.2" y="643.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.14%)</title><rect x="966.2" y="627.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.2" y="638.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.14%)</title><rect x="966.2" y="611.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 3.93%)</title><rect x="967.8" y="659.0" width="46.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.8" y="670.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 3.93%)</title><rect x="967.8" y="643.0" width="46.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.8" y="654.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 3.93%)</title><rect x="967.8" y="627.0" width="46.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.8" y="638.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (29 samples, 3.93%)</title><rect x="967.8" y="611.0" width="46.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.8" y="622.0">sun/..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (26 samples, 3.52%)</title><rect x="967.8" y="595.0" width="41.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.8" y="606.0">jav..</text>
</g>
<g>
<title>java.lang.Integer (26 samples, 3.52%)</title><rect x="967.8" y="579.0" width="41.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="970.8" y="590.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.41%)</title><rect x="1009.3" y="595.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.41%)</title><rect x="1009.3" y="579.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.41%)</title><rect x="1009.3" y="563.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.41%)</title><rect x="1009.3" y="547.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.41%)</title><rect x="1009.3" y="531.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.3" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.41%)</title><rect x="1009.3" y="515.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1012.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (110 samples, 14.91%)</title><rect x="1014.1" y="675.0" width="175.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.1" y="686.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (110 samples, 14.91%)</title><rect x="1014.1" y="659.0" width="175.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.1" y="670.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (107 samples, 14.50%)</title><rect x="1014.1" y="643.0" width="171.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.1" y="654.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (55 samples, 7.45%)</title><rect x="1014.1" y="627.0" width="88.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.1" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (55 samples, 7.45%)</title><rect x="1014.1" y="611.0" width="88.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.1" y="622.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (53 samples, 7.18%)</title><rect x="1014.1" y="595.0" width="84.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.1" y="606.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="1014.1" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="1014.1" y="563.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.14%)</title><rect x="1014.1" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="1014.1" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="1014.1" y="515.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.1" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1014.1" y="499.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1017.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (52 samples, 7.05%)</title><rect x="1015.7" y="579.0" width="83.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.7" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (52 samples, 7.05%)</title><rect x="1015.7" y="563.0" width="83.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.7" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.27%)</title><rect x="1015.7" y="547.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.27%)</title><rect x="1015.7" y="531.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="1015.7" y="515.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="1015.7" y="499.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1018.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="1017.3" y="499.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.3" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1017.3" y="483.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1020.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (4 samples, 0.54%)</title><rect x="1018.9" y="547.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1018.9" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1018.9" y="515.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get$Lambda (1 samples, 0.14%)</title><rect x="1018.9" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$230 (1 samples, 0.14%)</title><rect x="1018.9" y="483.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1021.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.41%)</title><rect x="1020.5" y="531.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.41%)</title><rect x="1020.5" y="515.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.41%)</title><rect x="1020.5" y="499.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1023.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (38 samples, 5.15%)</title><rect x="1025.3" y="547.0" width="60.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.3" y="558.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1025.3" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.3" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="1025.3" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1028.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.14%)</title><rect x="1026.9" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.14%)</title><rect x="1026.9" y="515.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.9" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1 samples, 0.14%)</title><rect x="1026.9" y="499.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1029.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (25 samples, 3.39%)</title><rect x="1028.5" y="531.0" width="40.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.5" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (25 samples, 3.39%)</title><rect x="1028.5" y="515.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.5" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (25 samples, 3.39%)</title><rect x="1028.5" y="499.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.5" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (25 samples, 3.39%)</title><rect x="1028.5" y="483.0" width="40.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.5" y="494.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.14%)</title><rect x="1028.5" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="1028.5" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1028.5" y="435.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1028.5" y="419.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="1028.5" y="403.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1031.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.14%)</title><rect x="1030.1" y="467.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="1030.1" y="451.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1030.1" y="435.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1030.1" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="1030.1" y="403.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1033.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (13 samples, 1.76%)</title><rect x="1031.7" y="467.0" width="20.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.14%)</title><rect x="1031.7" y="451.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.14%)</title><rect x="1031.7" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.14%)</title><rect x="1031.7" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.14%)</title><rect x="1031.7" y="403.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1034.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.95%)</title><rect x="1033.3" y="451.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.95%)</title><rect x="1033.3" y="435.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1033.3" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1033.3" y="403.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (1 samples, 0.14%)</title><rect x="1033.3" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.3" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.14%)</title><rect x="1033.3" y="371.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1036.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.41%)</title><rect x="1034.9" y="419.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.41%)</title><rect x="1034.9" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (3 samples, 0.41%)</title><rect x="1034.9" y="387.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.41%)</title><rect x="1034.9" y="371.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1034.9" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1034.9" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.9" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (1 samples, 0.14%)</title><rect x="1034.9" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.9" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.14%)</title><rect x="1034.9" y="307.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1037.9" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.14%)</title><rect x="1036.5" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.14%)</title><rect x="1036.5" y="339.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.5" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.14%)</title><rect x="1036.5" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.5" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.14%)</title><rect x="1036.5" y="307.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1039.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.14%)</title><rect x="1038.1" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.14%)</title><rect x="1038.1" y="339.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1041.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.41%)</title><rect x="1039.7" y="419.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.41%)</title><rect x="1039.7" y="403.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1042.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3 samples, 0.41%)</title><rect x="1044.5" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.5" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3 samples, 0.41%)</title><rect x="1044.5" y="435.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.5" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.41%)</title><rect x="1044.5" y="419.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.5" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.41%)</title><rect x="1044.5" y="403.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.5" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.41%)</title><rect x="1044.5" y="387.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.5" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.14%)</title><rect x="1044.5" y="371.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1047.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.27%)</title><rect x="1046.1" y="371.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="1046.1" y="355.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="1046.1" y="339.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1049.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.27%)</title><rect x="1049.3" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.14%)</title><rect x="1049.3" y="435.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1052.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1050.9" y="435.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="1050.9" y="419.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1053.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.95%)</title><rect x="1052.5" y="467.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1052.5" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (1 samples, 0.14%)</title><rect x="1052.5" y="435.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1055.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.81%)</title><rect x="1054.1" y="451.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (6 samples, 0.81%)</title><rect x="1054.1" y="435.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.14%)</title><rect x="1054.1" y="419.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1057.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.14%)</title><rect x="1055.7" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.14%)</title><rect x="1055.7" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.14%)</title><rect x="1055.7" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.14%)</title><rect x="1055.7" y="371.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.7" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1 samples, 0.14%)</title><rect x="1055.7" y="355.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1058.7" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.14%)</title><rect x="1057.3" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.14%)</title><rect x="1057.3" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.14%)</title><rect x="1057.3" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1 samples, 0.14%)</title><rect x="1057.3" y="371.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1060.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.14%)</title><rect x="1058.9" y="419.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.14%)</title><rect x="1058.9" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.9" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.14%)</title><rect x="1058.9" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.9" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1 samples, 0.14%)</title><rect x="1058.9" y="371.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1061.9" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.27%)</title><rect x="1060.5" y="419.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.27%)</title><rect x="1060.5" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.27%)</title><rect x="1060.5" y="387.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1063.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3 samples, 0.41%)</title><rect x="1063.7" y="467.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.41%)</title><rect x="1063.7" y="451.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.41%)</title><rect x="1063.7" y="435.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.41%)</title><rect x="1063.7" y="419.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.14%)</title><rect x="1063.7" y="403.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1066.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="1065.3" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1068.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.27%)</title><rect x="1065.3" y="387.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.27%)</title><rect x="1065.3" y="371.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1068.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.41%)</title><rect x="1068.5" y="531.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3 samples, 0.41%)</title><rect x="1068.5" y="515.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.41%)</title><rect x="1068.5" y="499.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.41%)</title><rect x="1068.5" y="483.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1068.5" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1068.5" y="451.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.get$Lambda (1 samples, 0.14%)</title><rect x="1068.5" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (1 samples, 0.14%)</title><rect x="1068.5" y="419.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1071.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.14%)</title><rect x="1070.1" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (1 samples, 0.14%)</title><rect x="1070.1" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.14%)</title><rect x="1070.1" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1070.1" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1070.1" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.get$Lambda (1 samples, 0.14%)</title><rect x="1070.1" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (1 samples, 0.14%)</title><rect x="1070.1" y="371.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1073.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1071.7" y="467.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.14%)</title><rect x="1071.7" y="451.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1074.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getMinimumAckData (1 samples, 0.14%)</title><rect x="1073.3" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.14%)</title><rect x="1073.3" y="515.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$132/1737771959.accept (1 samples, 0.14%)</title><rect x="1073.3" y="499.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$1 (1 samples, 0.14%)</title><rect x="1073.3" y="483.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.14%)</title><rect x="1073.3" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.14%)</title><rect x="1073.3" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1073.3" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.14%)</title><rect x="1073.3" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.14%)</title><rect x="1073.3" y="403.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1076.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (6 samples, 0.81%)</title><rect x="1074.9" y="531.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.14%)</title><rect x="1074.9" y="515.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2093010349.invoke (1 samples, 0.14%)</title><rect x="1074.9" y="499.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.14%)</title><rect x="1074.9" y="483.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.14%)</title><rect x="1074.9" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.14%)</title><rect x="1074.9" y="451.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.9" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1074.9" y="435.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1077.9" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (4 samples, 0.54%)</title><rect x="1076.5" y="515.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (4 samples, 0.54%)</title><rect x="1076.5" y="499.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (4 samples, 0.54%)</title><rect x="1076.5" y="483.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.41%)</title><rect x="1076.5" y="467.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.41%)</title><rect x="1076.5" y="451.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.27%)</title><rect x="1076.5" y="435.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1079.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="1079.7" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.7" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1079.7" y="419.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1082.7" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.14%)</title><rect x="1081.3" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.14%)</title><rect x="1081.3" y="451.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="1081.3" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.14%)</title><rect x="1081.3" y="419.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1084.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.14%)</title><rect x="1082.9" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.14%)</title><rect x="1082.9" y="499.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.14%)</title><rect x="1082.9" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.14%)</title><rect x="1082.9" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.14%)</title><rect x="1082.9" y="451.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1085.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (1 samples, 0.14%)</title><rect x="1084.5" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.14%)</title><rect x="1084.5" y="515.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.14%)</title><rect x="1084.5" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.14%)</title><rect x="1084.5" y="483.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="1084.5" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.5" y="478.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1084.5" y="451.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1087.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.sendFromFuture (8 samples, 1.08%)</title><rect x="1086.1" y="547.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 1.08%)</title><rect x="1086.1" y="531.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 1.08%)</title><rect x="1086.1" y="515.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.27%)</title><rect x="1086.1" y="499.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1089.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (6 samples, 0.81%)</title><rect x="1089.3" y="499.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (6 samples, 0.81%)</title><rect x="1089.3" y="483.0" width="9.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1092.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.27%)</title><rect x="1098.9" y="595.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.27%)</title><rect x="1098.9" y="579.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="1098.9" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.27%)</title><rect x="1098.9" y="547.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.9" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.27%)</title><rect x="1098.9" y="531.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1101.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.68%)</title><rect x="1102.1" y="627.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.14%)</title><rect x="1102.1" y="611.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1105.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.54%)</title><rect x="1103.7" y="611.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.54%)</title><rect x="1103.7" y="595.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.7" y="606.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.41%)</title><rect x="1103.7" y="579.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1106.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1108.5" y="579.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="1108.5" y="563.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.14%)</title><rect x="1108.5" y="547.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.14%)</title><rect x="1108.5" y="531.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1111.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.54%)</title><rect x="1110.1" y="627.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.1" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.54%)</title><rect x="1110.1" y="611.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1113.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 5.83%)</title><rect x="1116.4" y="627.0" width="68.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.4" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 5.83%)</title><rect x="1116.4" y="611.0" width="68.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.4" y="622.0">one/nio..</text>
</g>
<g>
<title>char[] (25 samples, 3.39%)</title><rect x="1116.4" y="595.0" width="40.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1119.4" y="606.0">cha..</text>
</g>
<g>
<title>java.lang.String (7 samples, 0.95%)</title><rect x="1156.4" y="595.0" width="11.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1159.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 1.49%)</title><rect x="1167.6" y="595.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 1.49%)</title><rect x="1167.6" y="579.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 1.49%)</title><rect x="1167.6" y="563.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.6" y="574.0"></text>
</g>
<g>
<title>byte[] (11 samples, 1.49%)</title><rect x="1167.6" y="547.0" width="17.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1170.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.41%)</title><rect x="1185.2" y="643.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (3 samples, 0.41%)</title><rect x="1185.2" y="627.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.41%)</title><rect x="1185.2" y="611.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.41%)</title><rect x="1185.2" y="595.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1188.2" y="606.0"></text>
</g>
</g>
</svg>
