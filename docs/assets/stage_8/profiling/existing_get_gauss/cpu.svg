<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (473 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 2.11%)</title><rect x="10.0" y="739.0" width="24.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="750.0">S..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 2.11%)</title><rect x="10.0" y="723.0" width="24.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="734.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (10 samples, 2.11%)</title><rect x="10.0" y="707.0" width="24.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="718.0">O..</text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.21%)</title><rect x="10.0" y="691.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.21%)</title><rect x="10.0" y="675.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (8 samples, 1.69%)</title><rect x="12.5" y="691.0" width="20.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.5" y="702.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="12.5" y="675.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="15.5" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 1.48%)</title><rect x="15.0" y="675.0" width="17.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="18.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.21%)</title><rect x="32.5" y="691.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (294 samples, 62.16%)</title><rect x="34.9" y="739.0" width="733.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.9" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (294 samples, 62.16%)</title><rect x="34.9" y="723.0" width="733.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.9" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (294 samples, 62.16%)</title><rect x="34.9" y="707.0" width="733.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.9" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.42%)</title><rect x="54.9" y="691.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="59.9" y="691.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="62.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.42%)</title><rect x="62.4" y="691.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.42%)</title><rect x="62.4" y="675.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.4" y="686.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.42%)</title><rect x="62.4" y="659.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="65.4" y="670.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.21%)</title><rect x="62.4" y="643.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="65.4" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.21%)</title><rect x="64.9" y="643.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="67.9" y="654.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.21%)</title><rect x="64.9" y="627.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="67.9" y="638.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.21%)</title><rect x="64.9" y="611.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.9" y="622.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.21%)</title><rect x="64.9" y="595.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="67.9" y="606.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.21%)</title><rect x="64.9" y="579.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="67.9" y="590.0"></text>
</g>
<g>
<title>compiler_barrier() (1 samples, 0.21%)</title><rect x="64.9" y="563.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="67.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (69 samples, 14.59%)</title><rect x="67.4" y="691.0" width="172.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.4" y="702.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 10.15%)</title><rect x="67.4" y="675.0" width="119.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.4" y="686.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="67.4" y="659.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="70.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32 samples, 6.77%)</title><rect x="69.9" y="659.0" width="79.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.9" y="670.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.21%)</title><rect x="69.9" y="643.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (1 samples, 0.21%)</title><rect x="69.9" y="627.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/86496363.apply (31 samples, 6.55%)</title><rect x="72.4" y="643.0" width="77.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.4" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (31 samples, 6.55%)</title><rect x="72.4" y="627.0" width="77.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.4" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (31 samples, 6.55%)</title><rect x="72.4" y="611.0" width="77.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.4" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (30 samples, 6.34%)</title><rect x="72.4" y="595.0" width="74.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.4" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (30 samples, 6.34%)</title><rect x="72.4" y="579.0" width="74.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.4" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (30 samples, 6.34%)</title><rect x="72.4" y="563.0" width="74.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.4" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 2.11%)</title><rect x="72.4" y="547.0" width="24.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 2.11%)</title><rect x="72.4" y="531.0" width="24.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 2.11%)</title><rect x="72.4" y="515.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.4" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1127402328.apply (10 samples, 2.11%)</title><rect x="72.4" y="499.0" width="24.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.4" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.21%)</title><rect x="72.4" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (9 samples, 1.90%)</title><rect x="74.9" y="483.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 1.90%)</title><rect x="74.9" y="467.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.9" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (9 samples, 1.90%)</title><rect x="74.9" y="451.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.9" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9 samples, 1.90%)</title><rect x="74.9" y="435.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.21%)</title><rect x="74.9" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.21%)</title><rect x="74.9" y="403.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.21%)</title><rect x="74.9" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.21%)</title><rect x="74.9" y="371.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (8 samples, 1.69%)</title><rect x="77.4" y="419.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 1.06%)</title><rect x="77.4" y="403.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 1.06%)</title><rect x="77.4" y="387.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$201/347229577.apply (5 samples, 1.06%)</title><rect x="77.4" y="371.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (5 samples, 1.06%)</title><rect x="77.4" y="355.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3 samples, 0.63%)</title><rect x="77.4" y="339.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.63%)</title><rect x="77.4" y="323.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.21%)</title><rect x="77.4" y="307.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.21%)</title><rect x="77.4" y="291.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.21%)</title><rect x="77.4" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.21%)</title><rect x="77.4" y="259.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.42%)</title><rect x="79.9" y="307.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.42%)</title><rect x="79.9" y="291.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.42%)</title><rect x="79.9" y="275.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.42%)</title><rect x="79.9" y="259.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.42%)</title><rect x="79.9" y="243.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="79.9" y="227.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="79.9" y="211.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.21%)</title><rect x="79.9" y="195.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.21%)</title><rect x="79.9" y="179.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.9" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.21%)</title><rect x="79.9" y="163.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="82.9" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.21%)</title><rect x="79.9" y="147.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="82.9" y="158.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.21%)</title><rect x="79.9" y="131.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="82.9" y="142.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="79.9" y="115.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="82.9" y="126.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="79.9" y="99.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="82.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.21%)</title><rect x="82.3" y="227.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.21%)</title><rect x="82.3" y="211.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.3" y="222.0"></text>
</g>
<g>
<title>write (1 samples, 0.21%)</title><rect x="82.3" y="195.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="85.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2 samples, 0.42%)</title><rect x="84.8" y="339.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.21%)</title><rect x="84.8" y="323.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.21%)</title><rect x="84.8" y="307.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.8" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$224/8029872.test (1 samples, 0.21%)</title><rect x="84.8" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.21%)</title><rect x="84.8" y="275.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$90/1881901842.test (1 samples, 0.21%)</title><rect x="84.8" y="259.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.21%)</title><rect x="84.8" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/888473870.test (1 samples, 0.21%)</title><rect x="84.8" y="227.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.21%)</title><rect x="84.8" y="211.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1687940142.test (1 samples, 0.21%)</title><rect x="84.8" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.21%)</title><rect x="84.8" y="179.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="84.8" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="84.8" y="147.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.21%)</title><rect x="84.8" y="131.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.21%)</title><rect x="87.3" y="323.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.21%)</title><rect x="87.3" y="307.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="87.3" y="291.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.21%)</title><rect x="87.3" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1613095350.invoke (1 samples, 0.21%)</title><rect x="87.3" y="259.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="87.3" y="243.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.21%)</title><rect x="87.3" y="227.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.21%)</title><rect x="87.3" y="211.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.21%)</title><rect x="87.3" y="195.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.63%)</title><rect x="89.8" y="403.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.21%)</title><rect x="92.3" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.21%)</title><rect x="92.3" y="371.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.21%)</title><rect x="92.3" y="355.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.21%)</title><rect x="92.3" y="339.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.21%)</title><rect x="94.8" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.21%)</title><rect x="94.8" y="371.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.21%)</title><rect x="94.8" y="355.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.21%)</title><rect x="94.8" y="339.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.8" y="350.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.21%)</title><rect x="94.8" y="323.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (20 samples, 4.23%)</title><rect x="97.3" y="547.0" width="49.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.3" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (20 samples, 4.23%)</title><rect x="97.3" y="531.0" width="49.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.3" y="542.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (19 samples, 4.02%)</title><rect x="97.3" y="515.0" width="47.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.3" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (19 samples, 4.02%)</title><rect x="97.3" y="499.0" width="47.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (19 samples, 4.02%)</title><rect x="97.3" y="483.0" width="47.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.3" y="494.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1030024025.apply (19 samples, 4.02%)</title><rect x="97.3" y="467.0" width="47.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.3" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (19 samples, 4.02%)</title><rect x="97.3" y="451.0" width="47.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.3" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (19 samples, 4.02%)</title><rect x="97.3" y="435.0" width="47.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="446.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="99.8" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="99.8" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.get$Lambda (1 samples, 0.21%)</title><rect x="99.8" y="387.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.21%)</title><rect x="99.8" y="371.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="102.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (7 samples, 1.48%)</title><rect x="102.3" y="419.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 1.48%)</title><rect x="102.3" y="403.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (7 samples, 1.48%)</title><rect x="102.3" y="387.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/132217484.apply (7 samples, 1.48%)</title><rect x="102.3" y="371.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (7 samples, 1.48%)</title><rect x="102.3" y="355.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (7 samples, 1.48%)</title><rect x="102.3" y="339.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (7 samples, 1.48%)</title><rect x="102.3" y="323.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (7 samples, 1.48%)</title><rect x="102.3" y="307.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (7 samples, 1.48%)</title><rect x="102.3" y="291.0" width="17.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (7 samples, 1.48%)</title><rect x="102.3" y="275.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (7 samples, 1.48%)</title><rect x="102.3" y="259.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 1.48%)</title><rect x="102.3" y="243.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="254.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (4 samples, 0.85%)</title><rect x="102.3" y="227.0" width="10.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="105.3" y="238.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="102.3" y="211.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="105.3" y="222.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.21%)</title><rect x="102.3" y="195.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="105.3" y="206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.21%)</title><rect x="104.8" y="211.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="107.8" y="222.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.21%)</title><rect x="104.8" y="195.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.8" y="206.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.21%)</title><rect x="104.8" y="179.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="107.8" y="190.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.42%)</title><rect x="107.3" y="211.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="110.3" y="222.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (2 samples, 0.42%)</title><rect x="107.3" y="195.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.3" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (2 samples, 0.42%)</title><rect x="107.3" y="179.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="110.3" y="190.0"></text>
</g>
<g>
<title>nmethod::scopes_pcs_end() const (1 samples, 0.21%)</title><rect x="107.3" y="163.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.3" y="174.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_compiled_frame(int) (1 samples, 0.21%)</title><rect x="109.8" y="163.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="112.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/212683148.run (3 samples, 0.63%)</title><rect x="112.3" y="227.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.42%)</title><rect x="114.8" y="211.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.8" y="222.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.42%)</title><rect x="114.8" y="195.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.8" y="206.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.21%)</title><rect x="114.8" y="179.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.8" y="190.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.21%)</title><rect x="114.8" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.8" y="174.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.21%)</title><rect x="117.3" y="179.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.21%)</title><rect x="117.3" y="163.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (10 samples, 2.11%)</title><rect x="119.8" y="419.0" width="24.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.8" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (10 samples, 2.11%)</title><rect x="119.8" y="403.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.8" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.63%)</title><rect x="119.8" y="387.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.21%)</title><rect x="124.8" y="371.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (3 samples, 0.63%)</title><rect x="127.3" y="387.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (3 samples, 0.63%)</title><rect x="127.3" y="371.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.3" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.21%)</title><rect x="127.3" y="355.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.3" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.21%)</title><rect x="127.3" y="339.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="130.3" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.21%)</title><rect x="127.3" y="323.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="130.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.42%)</title><rect x="129.7" y="355.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="129.7" y="339.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="129.7" y="323.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.21%)</title><rect x="129.7" y="307.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.7" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.21%)</title><rect x="129.7" y="291.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.7" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.21%)</title><rect x="129.7" y="275.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.21%)</title><rect x="132.2" y="339.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4 samples, 0.85%)</title><rect x="134.7" y="387.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.7" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.85%)</title><rect x="134.7" y="371.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.7" y="382.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.42%)</title><rect x="134.7" y="355.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="137.7" y="366.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.21%)</title><rect x="134.7" y="339.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.7" y="350.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.21%)</title><rect x="137.2" y="339.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.2" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.21%)</title><rect x="137.2" y="323.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="140.2" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.21%)</title><rect x="137.2" y="307.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="140.2" y="318.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.21%)</title><rect x="139.7" y="355.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$149/2039712191.run (1 samples, 0.21%)</title><rect x="142.2" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.21%)</title><rect x="142.2" y="339.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.21%)</title><rect x="142.2" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.2" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.21%)</title><rect x="142.2" y="307.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.2" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.21%)</title><rect x="142.2" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.2" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.21%)</title><rect x="142.2" y="275.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.2" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.21%)</title><rect x="142.2" y="259.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.21%)</title><rect x="142.2" y="243.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.21%)</title><rect x="142.2" y="227.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.21%)</title><rect x="144.7" y="515.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.21%)</title><rect x="147.2" y="595.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 2.75%)</title><rect x="149.7" y="659.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.7" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 2.75%)</title><rect x="149.7" y="643.0" width="32.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.21%)</title><rect x="149.7" y="627.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.21%)</title><rect x="149.7" y="611.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.7" y="622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="149.7" y="595.0" width="2.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="152.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (12 samples, 2.54%)</title><rect x="152.2" y="627.0" width="29.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.2" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (12 samples, 2.54%)</title><rect x="152.2" y="611.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.2" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (12 samples, 2.54%)</title><rect x="152.2" y="595.0" width="29.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.2" y="606.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 2.54%)</title><rect x="152.2" y="579.0" width="29.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.2" y="590.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.33%)</title><rect x="152.2" y="563.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.2" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 2.33%)</title><rect x="152.2" y="547.0" width="27.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.2" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 2.33%)</title><rect x="152.2" y="531.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.2" y="542.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (11 samples, 2.33%)</title><rect x="152.2" y="515.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.2" y="526.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (11 samples, 2.33%)</title><rect x="152.2" y="499.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.2" y="510.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (11 samples, 2.33%)</title><rect x="152.2" y="483.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.2" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (11 samples, 2.33%)</title><rect x="152.2" y="467.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.2" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (11 samples, 2.33%)</title><rect x="152.2" y="451.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.2" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (11 samples, 2.33%)</title><rect x="152.2" y="435.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.2" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (11 samples, 2.33%)</title><rect x="152.2" y="419.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.2" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (11 samples, 2.33%)</title><rect x="152.2" y="403.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.2" y="414.0">s..</text>
</g>
<g>
<title>write (11 samples, 2.33%)</title><rect x="152.2" y="387.0" width="27.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="155.2" y="398.0">w..</text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.21%)</title><rect x="179.6" y="563.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (1 samples, 0.21%)</title><rect x="179.6" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.21%)</title><rect x="179.6" y="531.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (1 samples, 0.21%)</title><rect x="182.1" y="659.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.1" y="670.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="184.6" y="659.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="187.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$119/865747908.get (7 samples, 1.48%)</title><rect x="187.1" y="675.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (7 samples, 1.48%)</title><rect x="187.1" y="659.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (7 samples, 1.48%)</title><rect x="187.1" y="643.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (7 samples, 1.48%)</title><rect x="187.1" y="627.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.1" y="638.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (6 samples, 1.27%)</title><rect x="187.1" y="611.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.1" y="622.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (6 samples, 1.27%)</title><rect x="187.1" y="595.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (6 samples, 1.27%)</title><rect x="187.1" y="579.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (6 samples, 1.27%)</title><rect x="187.1" y="563.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 1.27%)</title><rect x="187.1" y="547.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 1.27%)</title><rect x="187.1" y="531.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.1" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 1.27%)</title><rect x="187.1" y="515.0" width="15.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="190.1" y="526.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 1.27%)</title><rect x="187.1" y="499.0" width="15.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="190.1" y="510.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (6 samples, 1.27%)</title><rect x="187.1" y="483.0" width="15.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="190.1" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (6 samples, 1.27%)</title><rect x="187.1" y="467.0" width="15.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="190.1" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.42%)</title><rect x="189.6" y="451.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="192.6" y="462.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.42%)</title><rect x="189.6" y="435.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="192.6" y="446.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.42%)</title><rect x="189.6" y="419.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="192.6" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="192.1" y="403.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="195.1" y="414.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.21%)</title><rect x="194.6" y="451.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="197.6" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.21%)</title><rect x="197.1" y="451.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="200.1" y="462.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.21%)</title><rect x="197.1" y="435.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="200.1" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.21%)</title><rect x="197.1" y="419.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="200.1" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.21%)</title><rect x="197.1" y="403.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="200.1" y="414.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.21%)</title><rect x="197.1" y="387.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="200.1" y="398.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.21%)</title><rect x="199.6" y="451.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="202.6" y="462.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.21%)</title><rect x="202.1" y="611.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.21%)</title><rect x="202.1" y="595.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.1" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1 samples, 0.21%)</title><rect x="202.1" y="579.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="205.1" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.21%)</title><rect x="202.1" y="563.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="205.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.21%)</title><rect x="202.1" y="547.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="205.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.21%)</title><rect x="202.1" y="531.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="205.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.21%)</title><rect x="202.1" y="515.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="205.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (1 samples, 0.21%)</title><rect x="202.1" y="499.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="205.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.21%)</title><rect x="202.1" y="483.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="205.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$230/1013583454.get (14 samples, 2.96%)</title><rect x="204.6" y="675.0" width="34.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.6" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$handleLocal$6 (14 samples, 2.96%)</title><rect x="204.6" y="659.0" width="34.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.6" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (14 samples, 2.96%)</title><rect x="204.6" y="643.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.6" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (14 samples, 2.96%)</title><rect x="204.6" y="627.0" width="34.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.6" y="638.0">ru..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (12 samples, 2.54%)</title><rect x="204.6" y="611.0" width="29.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.6" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (12 samples, 2.54%)</title><rect x="204.6" y="595.0" width="29.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.6" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (12 samples, 2.54%)</title><rect x="204.6" y="579.0" width="29.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.6" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (12 samples, 2.54%)</title><rect x="204.6" y="563.0" width="29.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.6" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 2.54%)</title><rect x="204.6" y="547.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.6" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 2.54%)</title><rect x="204.6" y="531.0" width="29.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.6" y="542.0">ja..</text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.21%)</title><rect x="204.6" y="515.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="207.6" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (11 samples, 2.33%)</title><rect x="207.1" y="515.0" width="27.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="210.1" y="526.0">J..</text>
</g>
<g>
<title>JVM_FillInStackTrace (11 samples, 2.33%)</title><rect x="207.1" y="499.0" width="27.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="210.1" y="510.0">J..</text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.21%)</title><rect x="207.1" y="483.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="210.1" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.21%)</title><rect x="209.6" y="483.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="212.6" y="494.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.21%)</title><rect x="209.6" y="467.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="212.6" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 1.90%)</title><rect x="212.1" y="483.0" width="22.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="215.1" y="494.0">j..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 1.90%)</title><rect x="212.1" y="467.0" width="22.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="215.1" y="478.0">j..</text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.42%)</title><rect x="224.5" y="451.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="227.5" y="462.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue(oopDesc*) (1 samples, 0.21%)</title><rect x="229.5" y="451.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="232.5" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.21%)</title><rect x="232.0" y="451.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="235.0" y="462.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.21%)</title><rect x="232.0" y="435.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="235.0" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.21%)</title><rect x="232.0" y="419.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="235.0" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.21%)</title><rect x="232.0" y="403.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="235.0" y="414.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.21%)</title><rect x="232.0" y="387.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="235.0" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.42%)</title><rect x="234.5" y="611.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.5" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.42%)</title><rect x="234.5" y="595.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.5" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (2 samples, 0.42%)</title><rect x="234.5" y="579.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="237.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.42%)</title><rect x="234.5" y="563.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="237.5" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.21%)</title><rect x="234.5" y="547.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="237.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.21%)</title><rect x="237.0" y="547.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="240.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.21%)</title><rect x="237.0" y="531.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="240.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.21%)</title><rect x="237.0" y="515.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="240.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (1 samples, 0.21%)</title><rect x="237.0" y="499.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="240.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.21%)</title><rect x="237.0" y="483.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="240.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.21%)</title><rect x="237.0" y="467.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="240.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8 samples, 1.69%)</title><rect x="239.5" y="691.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.21%)</title><rect x="239.5" y="675.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.21%)</title><rect x="239.5" y="659.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.21%)</title><rect x="239.5" y="643.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.21%)</title><rect x="239.5" y="627.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.21%)</title><rect x="239.5" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.21%)</title><rect x="239.5" y="595.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.21%)</title><rect x="239.5" y="579.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.21%)</title><rect x="239.5" y="563.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.21%)</title><rect x="239.5" y="547.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.21%)</title><rect x="239.5" y="531.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.21%)</title><rect x="239.5" y="515.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.21%)</title><rect x="239.5" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 1.48%)</title><rect x="242.0" y="675.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 1.48%)</title><rect x="242.0" y="659.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.21%)</title><rect x="242.0" y="643.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.21%)</title><rect x="242.0" y="627.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.21%)</title><rect x="242.0" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$131/1884008369.apply (1 samples, 0.21%)</title><rect x="242.0" y="595.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$135/2094389768.accept (6 samples, 1.27%)</title><rect x="244.5" y="643.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$getMinimumAckData$0 (6 samples, 1.27%)</title><rect x="244.5" y="627.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 1.27%)</title><rect x="244.5" y="611.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 1.27%)</title><rect x="244.5" y="595.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.21%)</title><rect x="244.5" y="579.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.21%)</title><rect x="244.5" y="563.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$138/1868095322.apply (1 samples, 0.21%)</title><rect x="244.5" y="547.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$1 (1 samples, 0.21%)</title><rect x="244.5" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.mergeValues (1 samples, 0.21%)</title><rect x="244.5" y="515.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (1 samples, 0.21%)</title><rect x="244.5" y="499.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (1 samples, 0.21%)</title><rect x="244.5" y="483.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="244.5" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.21%)</title><rect x="244.5" y="451.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="244.5" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.21%)</title><rect x="244.5" y="419.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.5" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.21%)</title><rect x="244.5" y="403.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.21%)</title><rect x="244.5" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.21%)</title><rect x="244.5" y="371.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value$$Lambda$270/1412176312.test (1 samples, 0.21%)</title><rect x="244.5" y="355.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.06%)</title><rect x="247.0" y="579.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 1.06%)</title><rect x="247.0" y="563.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$140/771592852.accept (5 samples, 1.06%)</title><rect x="247.0" y="547.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$sendFromFuture$5 (5 samples, 1.06%)</title><rect x="247.0" y="531.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.trySend (5 samples, 1.06%)</title><rect x="247.0" y="515.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.06%)</title><rect x="247.0" y="499.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.06%)</title><rect x="247.0" y="483.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.06%)</title><rect x="247.0" y="467.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.85%)</title><rect x="249.5" y="451.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.85%)</title><rect x="249.5" y="435.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (4 samples, 0.85%)</title><rect x="249.5" y="419.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.85%)</title><rect x="249.5" y="403.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.85%)</title><rect x="249.5" y="387.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.85%)</title><rect x="249.5" y="371.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.63%)</title><rect x="249.5" y="355.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.63%)</title><rect x="249.5" y="339.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.63%)</title><rect x="249.5" y="323.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.5" y="334.0"></text>
</g>
<g>
<title>write (3 samples, 0.63%)</title><rect x="249.5" y="307.0" width="7.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="252.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.21%)</title><rect x="257.0" y="355.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.21%)</title><rect x="257.0" y="339.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.21%)</title><rect x="257.0" y="323.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.0" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.21%)</title><rect x="257.0" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.21%)</title><rect x="257.0" y="291.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.0" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.21%)</title><rect x="257.0" y="275.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.21%)</title><rect x="259.5" y="691.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="259.5" y="675.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.21%)</title><rect x="259.5" y="659.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.42%)</title><rect x="262.0" y="691.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.42%)</title><rect x="262.0" y="675.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.21%)</title><rect x="262.0" y="659.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.21%)</title><rect x="262.0" y="643.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.21%)</title><rect x="264.5" y="659.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.21%)</title><rect x="264.5" y="643.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.5" y="654.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="264.5" y="627.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="267.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (115 samples, 24.31%)</title><rect x="267.0" y="691.0" width="286.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.0" y="702.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (114 samples, 24.10%)</title><rect x="269.5" y="675.0" width="284.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.5" y="686.0">java/util/concurrent/ArrayBlockingQueu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.21%)</title><rect x="269.5" y="659.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.21%)</title><rect x="269.5" y="643.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.21%)</title><rect x="269.5" y="627.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.21%)</title><rect x="269.5" y="611.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (99 samples, 20.93%)</title><rect x="271.9" y="659.0" width="247.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.9" y="670.0">java/util/concurrent/locks/Abstra..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.85%)</title><rect x="271.9" y="643.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.85%)</title><rect x="271.9" y="627.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="274.4" y="611.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="274.4" y="595.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.63%)</title><rect x="274.4" y="579.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.4" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="274.4" y="563.0" width="7.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="277.4" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.63%)</title><rect x="274.4" y="547.0" width="7.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="277.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.21%)</title><rect x="281.9" y="643.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.21%)</title><rect x="281.9" y="627.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (94 samples, 19.87%)</title><rect x="284.4" y="643.0" width="234.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.4" y="654.0">java/util/concurrent/locks/Lock..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (94 samples, 19.87%)</title><rect x="284.4" y="627.0" width="234.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.4" y="638.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (87 samples, 18.39%)</title><rect x="299.4" y="611.0" width="217.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="302.4" y="622.0">Unsafe_Park(JNIEnv_*, _jobjec..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.21%)</title><rect x="299.4" y="595.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="302.4" y="606.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.21%)</title><rect x="301.9" y="595.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="304.9" y="606.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.21%)</title><rect x="304.4" y="595.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="307.4" y="606.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.21%)</title><rect x="306.9" y="595.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="309.9" y="606.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.21%)</title><rect x="306.9" y="579.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="309.9" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.21%)</title><rect x="306.9" y="563.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="309.9" y="574.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.21%)</title><rect x="309.4" y="595.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="312.4" y="606.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (1 samples, 0.21%)</title><rect x="309.4" y="579.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="312.4" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (76 samples, 16.07%)</title><rect x="311.9" y="595.0" width="189.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="314.9" y="606.0">Parker::park(bool, long)</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (2 samples, 0.42%)</title><rect x="311.9" y="579.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="314.9" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.21%)</title><rect x="311.9" y="563.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="314.9" y="574.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.21%)</title><rect x="311.9" y="547.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="314.9" y="558.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.21%)</title><rect x="311.9" y="531.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="314.9" y="542.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="314.4" y="563.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="317.4" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (72 samples, 15.22%)</title><rect x="316.8" y="579.0" width="179.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="319.8" y="590.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (2 samples, 0.42%)</title><rect x="496.5" y="579.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="499.5" y="590.0"></text>
</g>
<g>
<title>_pthread_testcancel (1 samples, 0.21%)</title><rect x="499.0" y="563.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="502.0" y="574.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (1 samples, 0.21%)</title><rect x="501.5" y="595.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="504.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.21%)</title><rect x="504.0" y="595.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="507.0" y="606.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.21%)</title><rect x="504.0" y="579.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="507.0" y="590.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.21%)</title><rect x="504.0" y="563.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="507.0" y="574.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.21%)</title><rect x="504.0" y="547.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.0" y="558.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.21%)</title><rect x="504.0" y="531.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.0" y="542.0"></text>
</g>
<g>
<title>ScopedFenceGeneral&lt;(ScopedFenceType)0&gt;::prefix() (1 samples, 0.21%)</title><rect x="504.0" y="515.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="507.0" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.21%)</title><rect x="506.4" y="595.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="509.4" y="606.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.21%)</title><rect x="506.4" y="579.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="509.4" y="590.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.21%)</title><rect x="508.9" y="595.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="511.9" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.21%)</title><rect x="511.4" y="595.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="514.4" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="513.9" y="595.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.9" y="606.0"></text>
</g>
<g>
<title>os::verify_stack_alignment() (1 samples, 0.21%)</title><rect x="516.4" y="611.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="519.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.85%)</title><rect x="518.9" y="659.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.85%)</title><rect x="518.9" y="643.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.85%)</title><rect x="518.9" y="627.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.21%)</title><rect x="518.9" y="611.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.21%)</title><rect x="518.9" y="595.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.63%)</title><rect x="521.4" y="611.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.63%)</title><rect x="521.4" y="595.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.63%)</title><rect x="521.4" y="579.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.4" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.42%)</title><rect x="523.9" y="563.0" width="5.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="526.9" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.42%)</title><rect x="523.9" y="547.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="526.9" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.42%)</title><rect x="523.9" y="531.0" width="5.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="526.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 2.11%)</title><rect x="528.9" y="659.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 2.11%)</title><rect x="528.9" y="643.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 2.11%)</title><rect x="528.9" y="627.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.9" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 2.11%)</title><rect x="528.9" y="611.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.21%)</title><rect x="533.9" y="595.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.48%)</title><rect x="536.4" y="595.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.4" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 1.48%)</title><rect x="536.4" y="579.0" width="17.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="539.4" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.21%)</title><rect x="536.4" y="563.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="539.4" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 1.27%)</title><rect x="538.9" y="563.0" width="14.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="541.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$223/1680528568.run (18 samples, 3.81%)</title><rect x="553.8" y="691.0" width="45.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.8" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (18 samples, 3.81%)</title><rect x="553.8" y="675.0" width="45.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.8" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (18 samples, 3.81%)</title><rect x="553.8" y="659.0" width="45.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.8" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (18 samples, 3.81%)</title><rect x="553.8" y="643.0" width="45.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.8" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 3.81%)</title><rect x="553.8" y="627.0" width="45.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.8" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 3.59%)</title><rect x="556.3" y="611.0" width="42.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.3" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 3.59%)</title><rect x="556.3" y="595.0" width="42.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.3" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 3.59%)</title><rect x="556.3" y="579.0" width="42.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.3" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (17 samples, 3.59%)</title><rect x="556.3" y="563.0" width="42.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.3" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17 samples, 3.59%)</title><rect x="556.3" y="547.0" width="42.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.3" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (17 samples, 3.59%)</title><rect x="556.3" y="531.0" width="42.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.3" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 0.42%)</title><rect x="556.3" y="515.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.21%)</title><rect x="556.3" y="499.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.21%)</title><rect x="556.3" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.21%)</title><rect x="556.3" y="467.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.21%)</title><rect x="556.3" y="451.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.21%)</title><rect x="556.3" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.21%)</title><rect x="556.3" y="419.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/707252950.apply (1 samples, 0.21%)</title><rect x="556.3" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.21%)</title><rect x="556.3" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.21%)</title><rect x="556.3" y="371.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/2063653822.apply (1 samples, 0.21%)</title><rect x="556.3" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.21%)</title><rect x="556.3" y="339.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.21%)</title><rect x="556.3" y="323.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.21%)</title><rect x="556.3" y="307.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.21%)</title><rect x="556.3" y="291.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (1 samples, 0.21%)</title><rect x="558.8" y="499.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.21%)</title><rect x="558.8" y="483.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.21%)</title><rect x="558.8" y="467.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.21%)</title><rect x="561.3" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.21%)</title><rect x="561.3" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.21%)</title><rect x="561.3" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (14 samples, 2.96%)</title><rect x="563.8" y="515.0" width="35.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (14 samples, 2.96%)</title><rect x="563.8" y="499.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.8" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (14 samples, 2.96%)</title><rect x="563.8" y="483.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.8" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (14 samples, 2.96%)</title><rect x="563.8" y="467.0" width="35.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.8" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (14 samples, 2.96%)</title><rect x="563.8" y="451.0" width="35.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.8" y="462.0">jd..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (13 samples, 2.75%)</title><rect x="566.3" y="435.0" width="32.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.3" y="446.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (13 samples, 2.75%)</title><rect x="566.3" y="419.0" width="32.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.3" y="430.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 2.75%)</title><rect x="566.3" y="403.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.3" y="414.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 2.75%)</title><rect x="566.3" y="387.0" width="32.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.3" y="398.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (1 samples, 0.21%)</title><rect x="566.3" y="371.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (10 samples, 2.11%)</title><rect x="568.8" y="371.0" width="25.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.8" y="382.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (10 samples, 2.11%)</title><rect x="568.8" y="355.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.8" y="366.0">s..</text>
</g>
<g>
<title>writev (10 samples, 2.11%)</title><rect x="568.8" y="339.0" width="25.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="571.8" y="350.0">w..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.42%)</title><rect x="593.8" y="371.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.42%)</title><rect x="593.8" y="355.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.42%)</title><rect x="593.8" y="339.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (68 samples, 14.38%)</title><rect x="598.8" y="691.0" width="169.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.8" y="702.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (68 samples, 14.38%)</title><rect x="598.8" y="675.0" width="169.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.8" y="686.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (28 samples, 5.92%)</title><rect x="598.8" y="659.0" width="69.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.8" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (28 samples, 5.92%)</title><rect x="598.8" y="643.0" width="69.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.8" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (28 samples, 5.92%)</title><rect x="598.8" y="627.0" width="69.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.8" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.63%)</title><rect x="598.8" y="611.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3 samples, 0.63%)</title><rect x="598.8" y="595.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.63%)</title><rect x="598.8" y="579.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.63%)</title><rect x="598.8" y="563.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.63%)</title><rect x="598.8" y="547.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.63%)</title><rect x="598.8" y="531.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.42%)</title><rect x="598.8" y="515.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.42%)</title><rect x="598.8" y="499.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.42%)</title><rect x="598.8" y="483.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.8" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.21%)</title><rect x="598.8" y="467.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="601.8" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.21%)</title><rect x="598.8" y="451.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="601.8" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.21%)</title><rect x="598.8" y="435.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="601.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.21%)</title><rect x="601.2" y="467.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.21%)</title><rect x="601.2" y="451.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.2" y="462.0"></text>
</g>
<g>
<title>write (1 samples, 0.21%)</title><rect x="601.2" y="435.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="604.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.21%)</title><rect x="603.7" y="515.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (25 samples, 5.29%)</title><rect x="606.2" y="611.0" width="62.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.2" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (25 samples, 5.29%)</title><rect x="606.2" y="595.0" width="62.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.2" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (25 samples, 5.29%)</title><rect x="606.2" y="579.0" width="62.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.2" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (25 samples, 5.29%)</title><rect x="606.2" y="563.0" width="62.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.2" y="574.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (16 samples, 3.38%)</title><rect x="606.2" y="547.0" width="40.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.2" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 3.38%)</title><rect x="606.2" y="531.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.2" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16 samples, 3.38%)</title><rect x="606.2" y="515.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.2" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 3.17%)</title><rect x="606.2" y="499.0" width="37.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.2" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 2.96%)</title><rect x="608.7" y="483.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.7" y="494.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (14 samples, 2.96%)</title><rect x="608.7" y="467.0" width="35.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.7" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13 samples, 2.75%)</title><rect x="608.7" y="451.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.7" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 2.54%)</title><rect x="608.7" y="435.0" width="30.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.7" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 2.54%)</title><rect x="608.7" y="419.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.7" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11 samples, 2.33%)</title><rect x="608.7" y="403.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.7" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.21%)</title><rect x="611.2" y="387.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/863912030.apply (6 samples, 1.27%)</title><rect x="613.7" y="387.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (6 samples, 1.27%)</title><rect x="613.7" y="371.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (6 samples, 1.27%)</title><rect x="613.7" y="355.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (6 samples, 1.27%)</title><rect x="613.7" y="339.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.63%)</title><rect x="613.7" y="323.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.21%)</title><rect x="613.7" y="307.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.21%)</title><rect x="613.7" y="291.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="613.7" y="275.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="613.7" y="259.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="613.7" y="243.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.42%)</title><rect x="616.2" y="307.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$249/41478948.run (2 samples, 0.42%)</title><rect x="616.2" y="291.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.42%)</title><rect x="616.2" y="275.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="616.2" y="259.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="616.2" y="243.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.get$Lambda (1 samples, 0.21%)</title><rect x="616.2" y="227.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/1568359492.&lt;init&gt; (1 samples, 0.21%)</title><rect x="616.2" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.21%)</title><rect x="618.7" y="259.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.21%)</title><rect x="618.7" y="243.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="618.7" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/948980208.invoke (1 samples, 0.21%)</title><rect x="618.7" y="211.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/820192556.invoke (1 samples, 0.21%)</title><rect x="618.7" y="195.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1169146729.invoke (1 samples, 0.21%)</title><rect x="618.7" y="179.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="618.7" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.21%)</title><rect x="618.7" y="147.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.toString (1 samples, 0.21%)</title><rect x="618.7" y="131.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.dbgString (1 samples, 0.21%)</title><rect x="618.7" y="115.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363509958.linkToTargetMethod (1 samples, 0.21%)</title><rect x="618.7" y="99.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/48208774.invoke (1 samples, 0.21%)</title><rect x="618.7" y="83.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.7" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1254526270.invoke (1 samples, 0.21%)</title><rect x="618.7" y="67.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.7" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="618.7" y="51.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.21%)</title><rect x="618.7" y="35.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (3 samples, 0.63%)</title><rect x="621.2" y="323.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.63%)</title><rect x="621.2" y="307.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.21%)</title><rect x="621.2" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.21%)</title><rect x="621.2" y="275.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.21%)</title><rect x="621.2" y="259.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.21%)</title><rect x="621.2" y="243.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.21%)</title><rect x="621.2" y="227.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="621.2" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="621.2" y="195.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.21%)</title><rect x="621.2" y="179.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.21%)</title><rect x="623.7" y="291.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.7" y="302.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.21%)</title><rect x="623.7" y="275.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="623.7" y="259.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.21%)</title><rect x="626.2" y="291.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="626.2" y="275.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="626.2" y="259.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="626.2" y="243.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.21%)</title><rect x="626.2" y="227.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.21%)</title><rect x="626.2" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.21%)</title><rect x="626.2" y="195.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$208/941105840.apply (3 samples, 0.63%)</title><rect x="628.7" y="387.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.63%)</title><rect x="628.7" y="371.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.63%)</title><rect x="628.7" y="355.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.42%)</title><rect x="628.7" y="339.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.42%)</title><rect x="628.7" y="323.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.7" y="334.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.42%)</title><rect x="628.7" y="307.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.7" y="318.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.21%)</title><rect x="628.7" y="291.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.7" y="302.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.21%)</title><rect x="628.7" y="275.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.7" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.21%)</title><rect x="628.7" y="259.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.7" y="270.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.21%)</title><rect x="628.7" y="243.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.7" y="254.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.21%)</title><rect x="631.2" y="291.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.21%)</title><rect x="631.2" y="275.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (1 samples, 0.21%)</title><rect x="633.7" y="339.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.21%)</title><rect x="636.2" y="403.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.21%)</title><rect x="636.2" y="387.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$210/616773831.apply (1 samples, 0.21%)</title><rect x="636.2" y="371.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.21%)</title><rect x="636.2" y="355.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.21%)</title><rect x="636.2" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1 samples, 0.21%)</title><rect x="636.2" y="323.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.21%)</title><rect x="636.2" y="307.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.21%)</title><rect x="636.2" y="291.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.21%)</title><rect x="636.2" y="275.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/885673150.apply (1 samples, 0.21%)</title><rect x="638.7" y="435.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.21%)</title><rect x="638.7" y="419.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.21%)</title><rect x="641.2" y="451.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.21%)</title><rect x="641.2" y="435.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.21%)</title><rect x="641.2" y="419.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.21%)</title><rect x="641.2" y="403.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.21%)</title><rect x="641.2" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.21%)</title><rect x="643.7" y="499.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.21%)</title><rect x="643.7" y="483.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (8 samples, 1.69%)</title><rect x="646.2" y="547.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3 samples, 0.63%)</title><rect x="648.6" y="531.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.63%)</title><rect x="648.6" y="515.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.63%)</title><rect x="648.6" y="499.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.42%)</title><rect x="651.1" y="483.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/789026686.accept (2 samples, 0.42%)</title><rect x="651.1" y="467.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.42%)</title><rect x="651.1" y="451.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.21%)</title><rect x="651.1" y="435.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/1299033119.accept (1 samples, 0.21%)</title><rect x="651.1" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.21%)</title><rect x="651.1" y="403.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="651.1" y="387.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="651.1" y="371.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.21%)</title><rect x="651.1" y="355.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.21%)</title><rect x="651.1" y="339.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.21%)</title><rect x="651.1" y="323.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.21%)</title><rect x="651.1" y="307.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="654.1" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.21%)</title><rect x="651.1" y="291.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="654.1" y="302.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="651.1" y="275.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="654.1" y="286.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="651.1" y="259.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="654.1" y="270.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.21%)</title><rect x="651.1" y="243.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="654.1" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.21%)</title><rect x="651.1" y="227.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="654.1" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.21%)</title><rect x="651.1" y="211.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="654.1" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.21%)</title><rect x="651.1" y="195.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="654.1" y="206.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.21%)</title><rect x="651.1" y="179.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="654.1" y="190.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.21%)</title><rect x="651.1" y="163.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="654.1" y="174.0"></text>
</g>
<g>
<title>HeapRegion::report_region_type_change(G1HeapRegionTraceType::Type) (1 samples, 0.21%)</title><rect x="651.1" y="147.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="654.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.21%)</title><rect x="653.6" y="435.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="653.6" y="419.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="653.6" y="403.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.21%)</title><rect x="653.6" y="387.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 0.85%)</title><rect x="656.1" y="531.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.85%)</title><rect x="656.1" y="515.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="656.1" y="499.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="656.1" y="483.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.21%)</title><rect x="656.1" y="467.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.21%)</title><rect x="658.6" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.21%)</title><rect x="658.6" y="483.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.42%)</title><rect x="661.1" y="499.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.21%)</title><rect x="661.1" y="483.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$241/654001490.apply (1 samples, 0.21%)</title><rect x="663.6" y="483.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.21%)</title><rect x="663.6" y="467.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$187/1164590468.accept (1 samples, 0.21%)</title><rect x="666.1" y="547.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.21%)</title><rect x="666.1" y="531.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.21%)</title><rect x="666.1" y="515.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (40 samples, 8.46%)</title><rect x="668.6" y="659.0" width="99.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.6" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (40 samples, 8.46%)</title><rect x="668.6" y="643.0" width="99.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.6" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (40 samples, 8.46%)</title><rect x="668.6" y="627.0" width="99.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.6" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/378844011.run (40 samples, 8.46%)</title><rect x="668.6" y="611.0" width="99.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.6" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (40 samples, 8.46%)</title><rect x="668.6" y="595.0" width="99.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.6" y="606.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.21%)</title><rect x="668.6" y="579.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.21%)</title><rect x="668.6" y="563.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (39 samples, 8.25%)</title><rect x="671.1" y="579.0" width="97.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.1" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (39 samples, 8.25%)</title><rect x="671.1" y="563.0" width="97.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.1" y="574.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (39 samples, 8.25%)</title><rect x="671.1" y="547.0" width="97.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.1" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/1480269132.run (32 samples, 6.77%)</title><rect x="671.1" y="531.0" width="79.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.1" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (32 samples, 6.77%)</title><rect x="671.1" y="515.0" width="79.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.1" y="526.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (32 samples, 6.77%)</title><rect x="671.1" y="499.0" width="79.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.1" y="510.0">jdk/inter..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.42%)</title><rect x="671.1" y="483.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.1" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.21%)</title><rect x="671.1" y="467.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.21%)</title><rect x="671.1" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.21%)</title><rect x="671.1" y="435.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.21%)</title><rect x="673.6" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="673.6" y="451.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="673.6" y="435.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.21%)</title><rect x="673.6" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.21%)</title><rect x="673.6" y="403.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.6" y="414.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.21%)</title><rect x="673.6" y="387.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.6" y="398.0"></text>
</g>
<g>
<title>java/util/OptionalLong.&lt;init&gt; (1 samples, 0.21%)</title><rect x="673.6" y="371.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.21%)</title><rect x="673.6" y="355.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.21%)</title><rect x="673.6" y="339.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (30 samples, 6.34%)</title><rect x="676.1" y="483.0" width="74.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.1" y="494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (30 samples, 6.34%)</title><rect x="676.1" y="467.0" width="74.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="478.0">jdk/inte..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 1.69%)</title><rect x="676.1" y="451.0" width="19.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.1" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 1.69%)</title><rect x="676.1" y="435.0" width="19.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="679.1" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 1.48%)</title><rect x="676.1" y="419.0" width="17.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="679.1" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.63%)</title><rect x="686.1" y="403.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.1" y="414.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.21%)</title><rect x="693.6" y="419.0" width="2.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="696.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (14 samples, 2.96%)</title><rect x="696.0" y="451.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (8 samples, 1.69%)</title><rect x="731.0" y="451.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (8 samples, 1.69%)</title><rect x="731.0" y="435.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 1.69%)</title><rect x="731.0" y="419.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 1.69%)</title><rect x="731.0" y="403.0" width="19.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (8 samples, 1.69%)</title><rect x="731.0" y="387.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 1.69%)</title><rect x="731.0" y="371.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 1.69%)</title><rect x="731.0" y="355.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 1.06%)</title><rect x="731.0" y="339.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 1.06%)</title><rect x="731.0" y="323.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 1.06%)</title><rect x="731.0" y="307.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 1.06%)</title><rect x="731.0" y="291.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.85%)</title><rect x="733.5" y="275.0" width="9.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="736.5" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (4 samples, 0.85%)</title><rect x="733.5" y="259.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.5" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.42%)</title><rect x="733.5" y="243.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="736.5" y="254.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (2 samples, 0.42%)</title><rect x="738.5" y="243.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="741.5" y="254.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (2 samples, 0.42%)</title><rect x="738.5" y="227.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="741.5" y="238.0"></text>
</g>
<g>
<title>__psynch_mutexwait (2 samples, 0.42%)</title><rect x="738.5" y="211.0" width="4.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="741.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.63%)</title><rect x="743.4" y="339.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.63%)</title><rect x="743.4" y="323.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.4" y="334.0"></text>
</g>
<g>
<title>write (3 samples, 0.63%)</title><rect x="743.4" y="307.0" width="7.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="746.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (7 samples, 1.48%)</title><rect x="750.9" y="531.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (7 samples, 1.48%)</title><rect x="750.9" y="515.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (7 samples, 1.48%)</title><rect x="750.9" y="499.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 1.48%)</title><rect x="750.9" y="483.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 1.48%)</title><rect x="750.9" y="467.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 1.48%)</title><rect x="750.9" y="451.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 1.48%)</title><rect x="750.9" y="435.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/668966237.accept (7 samples, 1.48%)</title><rect x="750.9" y="419.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (7 samples, 1.48%)</title><rect x="750.9" y="403.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 1.48%)</title><rect x="750.9" y="387.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 1.48%)</title><rect x="750.9" y="371.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.21%)</title><rect x="750.9" y="355.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$266/1337585680.apply (1 samples, 0.21%)</title><rect x="750.9" y="339.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.21%)</title><rect x="750.9" y="323.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.06%)</title><rect x="753.4" y="355.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 1.06%)</title><rect x="753.4" y="339.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 1.06%)</title><rect x="753.4" y="323.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 1.06%)</title><rect x="753.4" y="307.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 1.06%)</title><rect x="753.4" y="291.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 1.06%)</title><rect x="753.4" y="275.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.21%)</title><rect x="753.4" y="259.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.85%)</title><rect x="755.9" y="259.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.85%)</title><rect x="755.9" y="243.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.85%)</title><rect x="755.9" y="227.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.9" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="758.4" y="211.0" width="7.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="761.4" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.63%)</title><rect x="758.4" y="195.0" width="7.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="761.4" y="206.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="765.9" y="355.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="768.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (21 samples, 4.44%)</title><rect x="768.4" y="739.0" width="52.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.4" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (21 samples, 4.44%)</title><rect x="768.4" y="723.0" width="52.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.4" y="734.0">java/..</text>
</g>
<g>
<title>java/lang/System.currentTimeMillis (1 samples, 0.21%)</title><rect x="773.4" y="707.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.4" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="773.4" y="691.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="776.4" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="773.4" y="675.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="776.4" y="686.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.21%)</title><rect x="773.4" y="659.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="776.4" y="670.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.21%)</title><rect x="773.4" y="643.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="776.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (6 samples, 1.27%)</title><rect x="775.9" y="707.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (6 samples, 1.27%)</title><rect x="775.9" y="691.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.21%)</title><rect x="775.9" y="675.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (5 samples, 1.06%)</title><rect x="778.4" y="675.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (5 samples, 1.06%)</title><rect x="778.4" y="659.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.06%)</title><rect x="778.4" y="643.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 1.06%)</title><rect x="778.4" y="627.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 1.06%)</title><rect x="778.4" y="611.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 1.06%)</title><rect x="778.4" y="595.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 1.06%)</title><rect x="778.4" y="579.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.06%)</title><rect x="778.4" y="563.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 1.06%)</title><rect x="778.4" y="547.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.21%)</title><rect x="778.4" y="531.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.21%)</title><rect x="778.4" y="515.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.21%)</title><rect x="778.4" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.21%)</title><rect x="778.4" y="483.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.21%)</title><rect x="780.9" y="531.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="780.9" y="515.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.21%)</title><rect x="780.9" y="499.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.21%)</title><rect x="780.9" y="483.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.21%)</title><rect x="780.9" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.21%)</title><rect x="780.9" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.9" y="462.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.21%)</title><rect x="780.9" y="435.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="783.9" y="446.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.21%)</title><rect x="780.9" y="419.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="783.9" y="430.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.21%)</title><rect x="780.9" y="403.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="783.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.63%)</title><rect x="783.4" y="531.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.63%)</title><rect x="783.4" y="515.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="783.4" y="499.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="783.4" y="483.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.63%)</title><rect x="783.4" y="467.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.4" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="783.4" y="451.0" width="7.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="786.4" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.21%)</title><rect x="783.4" y="435.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="786.4" y="446.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.21%)</title><rect x="783.4" y="419.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="786.4" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.21%)</title><rect x="785.9" y="435.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="788.9" y="446.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (1 samples, 0.21%)</title><rect x="785.9" y="419.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="788.9" y="430.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.21%)</title><rect x="788.4" y="435.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="791.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.63%)</title><rect x="790.8" y="707.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.63%)</title><rect x="790.8" y="691.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.63%)</title><rect x="790.8" y="675.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="793.8" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.63%)</title><rect x="790.8" y="659.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="793.8" y="670.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.63%)</title><rect x="790.8" y="643.0" width="7.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="793.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (9 samples, 1.90%)</title><rect x="798.3" y="707.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.3" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 1.90%)</title><rect x="798.3" y="691.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.3" y="702.0">j..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (7 samples, 1.48%)</title><rect x="803.3" y="675.0" width="17.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="806.3" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 1.27%)</title><rect x="803.3" y="659.0" width="15.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="806.3" y="670.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 1.27%)</title><rect x="803.3" y="643.0" width="15.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="806.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.21%)</title><rect x="818.3" y="659.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="821.3" y="670.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.21%)</title><rect x="818.3" y="643.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="821.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (69 samples, 14.59%)</title><rect x="820.8" y="739.0" width="172.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.8" y="750.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.42%)</title><rect x="820.8" y="723.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.8" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.42%)</title><rect x="820.8" y="707.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$220/331523809.accept (1 samples, 0.21%)</title><rect x="823.3" y="691.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="825.8" y="723.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="825.8" y="707.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 1.27%)</title><rect x="828.3" y="723.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$215/1236423077.accept (6 samples, 1.27%)</title><rect x="828.3" y="707.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (6 samples, 1.27%)</title><rect x="828.3" y="691.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (6 samples, 1.27%)</title><rect x="828.3" y="675.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (6 samples, 1.27%)</title><rect x="828.3" y="659.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (6 samples, 1.27%)</title><rect x="828.3" y="643.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (6 samples, 1.27%)</title><rect x="828.3" y="627.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.27%)</title><rect x="828.3" y="611.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.27%)</title><rect x="828.3" y="595.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 1.27%)</title><rect x="828.3" y="579.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 1.27%)</title><rect x="828.3" y="563.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (6 samples, 1.27%)</title><rect x="828.3" y="547.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (6 samples, 1.27%)</title><rect x="828.3" y="531.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3 samples, 0.63%)</title><rect x="828.3" y="515.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3 samples, 0.63%)</title><rect x="828.3" y="499.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (3 samples, 0.63%)</title><rect x="828.3" y="483.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.63%)</title><rect x="828.3" y="467.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.63%)</title><rect x="828.3" y="451.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.63%)</title><rect x="828.3" y="435.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.63%)</title><rect x="828.3" y="419.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.63%)</title><rect x="828.3" y="403.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.63%)</title><rect x="828.3" y="387.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.63%)</title><rect x="828.3" y="371.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="828.3" y="355.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="828.3" y="339.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.63%)</title><rect x="828.3" y="323.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.3" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="828.3" y="307.0" width="7.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="831.3" y="318.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.21%)</title><rect x="828.3" y="291.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="831.3" y="302.0"></text>
</g>
<g>
<title>Thread::current_or_null() (1 samples, 0.21%)</title><rect x="828.3" y="275.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="831.3" y="286.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.42%)</title><rect x="830.8" y="291.0" width="5.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="833.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3 samples, 0.63%)</title><rect x="835.8" y="515.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.21%)</title><rect x="835.8" y="499.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (1 samples, 0.21%)</title><rect x="835.8" y="483.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="835.8" y="467.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="835.8" y="451.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.21%)</title><rect x="835.8" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.42%)</title><rect x="838.2" y="499.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.42%)</title><rect x="838.2" y="483.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.42%)</title><rect x="838.2" y="467.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.42%)</title><rect x="838.2" y="451.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.42%)</title><rect x="838.2" y="435.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.42%)</title><rect x="838.2" y="419.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.2" y="430.0"></text>
</g>
<g>
<title>rpc_errlist (2 samples, 0.42%)</title><rect x="838.2" y="403.0" width="5.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.21%)</title><rect x="843.2" y="723.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="843.2" y="707.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.21%)</title><rect x="843.2" y="691.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.21%)</title><rect x="843.2" y="675.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="843.2" y="659.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.21%)</title><rect x="843.2" y="643.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (10 samples, 2.11%)</title><rect x="845.7" y="723.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.7" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/283242345.run (6 samples, 1.27%)</title><rect x="845.7" y="707.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (6 samples, 1.27%)</title><rect x="845.7" y="691.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.27%)</title><rect x="845.7" y="675.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 1.27%)</title><rect x="845.7" y="659.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 1.27%)</title><rect x="845.7" y="643.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 1.27%)</title><rect x="845.7" y="627.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/288255922.run (6 samples, 1.27%)</title><rect x="845.7" y="611.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (6 samples, 1.27%)</title><rect x="845.7" y="595.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (6 samples, 1.27%)</title><rect x="845.7" y="579.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (6 samples, 1.27%)</title><rect x="845.7" y="563.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.21%)</title><rect x="845.7" y="547.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.21%)</title><rect x="845.7" y="531.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.21%)</title><rect x="845.7" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.21%)</title><rect x="845.7" y="499.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.21%)</title><rect x="845.7" y="483.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.21%)</title><rect x="845.7" y="467.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 1.06%)</title><rect x="848.2" y="547.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 1.06%)</title><rect x="848.2" y="531.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 1.06%)</title><rect x="848.2" y="515.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 1.06%)</title><rect x="848.2" y="499.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.06%)</title><rect x="848.2" y="483.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.63%)</title><rect x="848.2" y="467.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.63%)</title><rect x="848.2" y="451.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.63%)</title><rect x="848.2" y="435.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="848.2" y="419.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="848.2" y="403.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.63%)</title><rect x="848.2" y="387.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="848.2" y="371.0" width="7.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="851.2" y="382.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.42%)</title><rect x="848.2" y="355.0" width="5.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="851.2" y="366.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.21%)</title><rect x="853.2" y="355.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="856.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.42%)</title><rect x="855.7" y="467.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$168/650042043.run (4 samples, 0.85%)</title><rect x="860.7" y="707.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4 samples, 0.85%)</title><rect x="860.7" y="691.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.85%)</title><rect x="860.7" y="675.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.85%)</title><rect x="860.7" y="659.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.85%)</title><rect x="860.7" y="643.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.85%)</title><rect x="860.7" y="627.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.85%)</title><rect x="860.7" y="611.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.85%)</title><rect x="860.7" y="595.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.85%)</title><rect x="860.7" y="579.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.85%)</title><rect x="860.7" y="563.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.7" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.85%)</title><rect x="860.7" y="547.0" width="10.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="863.7" y="558.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.63%)</title><rect x="860.7" y="531.0" width="7.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="863.7" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.21%)</title><rect x="868.2" y="531.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="871.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.85%)</title><rect x="870.7" y="723.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.85%)</title><rect x="870.7" y="707.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.7" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.63%)</title><rect x="870.7" y="691.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="873.7" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.63%)</title><rect x="870.7" y="675.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="873.7" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.63%)</title><rect x="870.7" y="659.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="873.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.21%)</title><rect x="878.2" y="691.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.42%)</title><rect x="880.7" y="723.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="883.2" y="707.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="883.2" y="691.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (2 samples, 0.42%)</title><rect x="885.6" y="723.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.42%)</title><rect x="885.6" y="707.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.21%)</title><rect x="888.1" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.21%)</title><rect x="890.6" y="723.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.6" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.21%)</title><rect x="890.6" y="707.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.6" y="718.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.21%)</title><rect x="890.6" y="691.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.21%)</title><rect x="890.6" y="675.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.6" y="686.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.21%)</title><rect x="890.6" y="659.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="893.6" y="670.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.21%)</title><rect x="890.6" y="643.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.6" y="654.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="890.6" y="627.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="893.6" y="638.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.21%)</title><rect x="890.6" y="611.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="893.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (37 samples, 7.82%)</title><rect x="893.1" y="723.0" width="92.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.1" y="734.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 7.82%)</title><rect x="893.1" y="707.0" width="92.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.1" y="718.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (34 samples, 7.19%)</title><rect x="898.1" y="691.0" width="84.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.1" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (25 samples, 5.29%)</title><rect x="898.1" y="675.0" width="62.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.1" y="686.0">sun/ni..</text>
</g>
<g>
<title>kevent (21 samples, 4.44%)</title><rect x="908.1" y="659.0" width="52.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="911.1" y="670.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 1.69%)</title><rect x="960.5" y="675.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="960.5" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="960.5" y="643.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (7 samples, 1.48%)</title><rect x="963.0" y="659.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (7 samples, 1.48%)</title><rect x="963.0" y="643.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.0" y="654.0"></text>
</g>
<g>
<title>rpc_errlist (7 samples, 1.48%)</title><rect x="963.0" y="627.0" width="17.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="966.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.21%)</title><rect x="980.4" y="675.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 0.21%)</title><rect x="982.9" y="691.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.9" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.21%)</title><rect x="982.9" y="675.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="985.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.21%)</title><rect x="982.9" y="659.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (3 samples, 0.63%)</title><rect x="985.4" y="723.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.63%)</title><rect x="985.4" y="707.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 0.63%)</title><rect x="985.4" y="691.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (3 samples, 0.63%)</title><rect x="985.4" y="675.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.4" y="686.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.21%)</title><rect x="985.4" y="659.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="988.4" y="670.0"></text>
</g>
<g>
<title>kevent (2 samples, 0.42%)</title><rect x="987.9" y="659.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="990.9" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (64 samples, 13.53%)</title><rect x="992.9" y="739.0" width="159.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.9" y="750.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (19 samples, 4.02%)</title><rect x="1000.4" y="723.0" width="47.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.4" y="734.0">one/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (19 samples, 4.02%)</title><rect x="1000.4" y="707.0" width="47.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.4" y="718.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 4.02%)</title><rect x="1000.4" y="691.0" width="47.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.4" y="702.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (19 samples, 4.02%)</title><rect x="1000.4" y="675.0" width="47.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.4" y="686.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (16 samples, 3.38%)</title><rect x="1002.9" y="659.0" width="39.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.9" y="670.0">sun..</text>
</g>
<g>
<title>kevent (16 samples, 3.38%)</title><rect x="1002.9" y="643.0" width="39.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1005.9" y="654.0">kev..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.42%)</title><rect x="1042.8" y="659.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.21%)</title><rect x="1042.8" y="643.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="1042.8" y="627.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.21%)</title><rect x="1045.3" y="643.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="1045.3" y="627.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="1045.3" y="611.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="1045.3" y="595.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.3" y="606.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="1045.3" y="579.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1048.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (42 samples, 8.88%)</title><rect x="1047.8" y="723.0" width="104.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.8" y="734.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41 samples, 8.67%)</title><rect x="1047.8" y="707.0" width="102.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.8" y="718.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 7.61%)</title><rect x="1047.8" y="691.0" width="89.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.8" y="702.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 6.77%)</title><rect x="1050.3" y="675.0" width="79.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.3" y="686.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 6.77%)</title><rect x="1050.3" y="659.0" width="79.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.3" y="670.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (32 samples, 6.77%)</title><rect x="1050.3" y="643.0" width="79.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.3" y="654.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.42%)</title><rect x="1050.3" y="627.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.42%)</title><rect x="1050.3" y="611.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.42%)</title><rect x="1050.3" y="595.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.42%)</title><rect x="1050.3" y="579.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.3" y="590.0"></text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.21%)</title><rect x="1052.8" y="563.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1055.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (30 samples, 6.34%)</title><rect x="1055.3" y="627.0" width="74.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.3" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (30 samples, 6.34%)</title><rect x="1055.3" y="611.0" width="74.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.3" y="622.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handleLocal (4 samples, 0.85%)</title><rect x="1055.3" y="595.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.85%)</title><rect x="1055.3" y="579.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.85%)</title><rect x="1055.3" y="563.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.85%)</title><rect x="1055.3" y="547.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.85%)</title><rect x="1055.3" y="531.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="542.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.21%)</title><rect x="1055.3" y="515.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.63%)</title><rect x="1057.8" y="515.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.63%)</title><rect x="1057.8" y="499.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="1057.8" y="483.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="1057.8" y="467.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.63%)</title><rect x="1057.8" y="451.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.8" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.63%)</title><rect x="1057.8" y="435.0" width="7.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1060.8" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.21%)</title><rect x="1057.8" y="419.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1060.8" y="430.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.21%)</title><rect x="1057.8" y="403.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.8" y="414.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.21%)</title><rect x="1057.8" y="387.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1060.8" y="398.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.21%)</title><rect x="1057.8" y="371.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1060.8" y="382.0"></text>
</g>
<g>
<title>ScopedFenceGeneral&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.21%)</title><rect x="1057.8" y="355.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.42%)</title><rect x="1060.3" y="419.0" width="5.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1063.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (25 samples, 5.29%)</title><rect x="1065.3" y="595.0" width="62.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.3" y="606.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.42%)</title><rect x="1075.2" y="579.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.42%)</title><rect x="1075.2" y="563.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.42%)</title><rect x="1075.2" y="547.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.42%)</title><rect x="1075.2" y="531.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.42%)</title><rect x="1075.2" y="515.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.42%)</title><rect x="1075.2" y="499.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1078.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.42%)</title><rect x="1075.2" y="483.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.42%)</title><rect x="1075.2" y="467.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1078.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.42%)</title><rect x="1075.2" y="451.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1078.2" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.42%)</title><rect x="1075.2" y="435.0" width="5.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1078.2" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.42%)</title><rect x="1075.2" y="419.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1078.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (12 samples, 2.54%)</title><rect x="1080.2" y="579.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12 samples, 2.54%)</title><rect x="1080.2" y="563.0" width="30.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12 samples, 2.54%)</title><rect x="1080.2" y="547.0" width="30.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.2" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12 samples, 2.54%)</title><rect x="1080.2" y="531.0" width="30.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7 samples, 1.48%)</title><rect x="1080.2" y="515.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.21%)</title><rect x="1080.2" y="499.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.21%)</title><rect x="1080.2" y="483.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="1080.2" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="1080.2" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="1080.2" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (6 samples, 1.27%)</title><rect x="1082.7" y="499.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.7" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (6 samples, 1.27%)</title><rect x="1082.7" y="483.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.7" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 1.27%)</title><rect x="1082.7" y="467.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.7" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.42%)</title><rect x="1082.7" y="451.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1085.7" y="462.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.63%)</title><rect x="1087.7" y="451.0" width="7.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1090.7" y="462.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.21%)</title><rect x="1095.2" y="451.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2 samples, 0.42%)</title><rect x="1097.7" y="515.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1097.7" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.21%)</title><rect x="1097.7" y="483.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.21%)</title><rect x="1097.7" y="467.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.21%)</title><rect x="1097.7" y="451.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.21%)</title><rect x="1097.7" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.7" y="446.0"></text>
</g>
<g>
<title>java/lang/System$Logger$Level.getSeverity (1 samples, 0.21%)</title><rect x="1097.7" y="419.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.21%)</title><rect x="1100.2" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.21%)</title><rect x="1100.2" y="483.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.21%)</title><rect x="1100.2" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.21%)</title><rect x="1100.2" y="451.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3 samples, 0.63%)</title><rect x="1102.7" y="515.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.63%)</title><rect x="1102.7" y="499.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.63%)</title><rect x="1102.7" y="483.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.63%)</title><rect x="1102.7" y="467.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.63%)</title><rect x="1102.7" y="451.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.63%)</title><rect x="1102.7" y="435.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.63%)</title><rect x="1102.7" y="419.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.63%)</title><rect x="1102.7" y="403.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.21%)</title><rect x="1102.7" y="387.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.42%)</title><rect x="1105.2" y="387.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.42%)</title><rect x="1105.2" y="371.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1108.2" y="382.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.21%)</title><rect x="1105.2" y="355.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.2" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="1107.7" y="355.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1110.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.42%)</title><rect x="1110.2" y="579.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.42%)</title><rect x="1110.2" y="563.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.42%)</title><rect x="1110.2" y="547.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.42%)</title><rect x="1110.2" y="531.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1113.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (5 samples, 1.06%)</title><rect x="1115.2" y="579.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.2" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (4 samples, 0.85%)</title><rect x="1115.2" y="563.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.2" y="574.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (4 samples, 0.85%)</title><rect x="1115.2" y="547.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.2" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (4 samples, 0.85%)</title><rect x="1115.2" y="531.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (4 samples, 0.85%)</title><rect x="1115.2" y="515.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.2" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.63%)</title><rect x="1115.2" y="499.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.63%)</title><rect x="1115.2" y="483.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.42%)</title><rect x="1117.7" y="467.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.42%)</title><rect x="1117.7" y="451.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.21%)</title><rect x="1117.7" y="435.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="1120.1" y="435.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.21%)</title><rect x="1120.1" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.21%)</title><rect x="1122.6" y="499.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="1122.6" y="483.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="1122.6" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.21%)</title><rect x="1122.6" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.6" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (1 samples, 0.21%)</title><rect x="1125.1" y="563.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.1" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.21%)</title><rect x="1125.1" y="547.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (1 samples, 0.21%)</title><rect x="1127.6" y="595.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="1127.6" y="579.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="1127.6" y="563.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="1127.6" y="547.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.21%)</title><rect x="1127.6" y="531.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.21%)</title><rect x="1130.1" y="675.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1130.1" y="659.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1130.1" y="643.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.42%)</title><rect x="1132.6" y="675.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1135.1" y="659.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1135.1" y="643.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1135.1" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.21%)</title><rect x="1135.1" y="611.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.1" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.21%)</title><rect x="1135.1" y="595.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.1" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="1135.1" y="579.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.1" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="1135.1" y="563.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="1135.1" y="547.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.21%)</title><rect x="1135.1" y="531.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.1" y="542.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.21%)</title><rect x="1135.1" y="515.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.06%)</title><rect x="1137.6" y="691.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 1.06%)</title><rect x="1137.6" y="675.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (5 samples, 1.06%)</title><rect x="1137.6" y="659.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.21%)</title><rect x="1137.6" y="643.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="1137.6" y="627.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.85%)</title><rect x="1140.1" y="643.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.85%)</title><rect x="1140.1" y="627.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.85%)</title><rect x="1140.1" y="611.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 0.85%)</title><rect x="1140.1" y="595.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 0.85%)</title><rect x="1140.1" y="579.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.1" y="590.0"></text>
</g>
<g>
<title>rpc_errlist (4 samples, 0.85%)</title><rect x="1140.1" y="563.0" width="10.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1143.1" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.21%)</title><rect x="1150.1" y="707.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.1" y="718.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.21%)</title><rect x="1150.1" y="691.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1153.1" y="702.0"></text>
</g>
<g>
<title>thread_start (15 samples, 3.17%)</title><rect x="1152.6" y="739.0" width="37.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1155.6" y="750.0">thr..</text>
</g>
<g>
<title>_pthread_start (15 samples, 3.17%)</title><rect x="1152.6" y="723.0" width="37.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1155.6" y="734.0">_pt..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 3.17%)</title><rect x="1152.6" y="707.0" width="37.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1155.6" y="718.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (15 samples, 3.17%)</title><rect x="1152.6" y="691.0" width="37.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.6" y="702.0">Thr..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.42%)</title><rect x="1152.6" y="675.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.6" y="686.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.42%)</title><rect x="1152.6" y="659.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.6" y="670.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (2 samples, 0.42%)</title><rect x="1152.6" y="643.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.6" y="654.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.42%)</title><rect x="1152.6" y="627.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.6" y="638.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.42%)</title><rect x="1152.6" y="611.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.6" y="622.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.42%)</title><rect x="1152.6" y="595.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.6" y="606.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="1152.6" y="579.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1155.6" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.21%)</title><rect x="1155.1" y="579.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1158.1" y="590.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 1.06%)</title><rect x="1157.6" y="675.0" width="12.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.6" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 1.06%)</title><rect x="1157.6" y="659.0" width="12.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.6" y="670.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 1.06%)</title><rect x="1157.6" y="643.0" width="12.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.6" y="654.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.21%)</title><rect x="1157.6" y="627.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.6" y="638.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.85%)</title><rect x="1160.1" y="627.0" width="9.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1163.1" y="638.0"></text>
</g>
<g>
<title>JavaThread::run() (8 samples, 1.69%)</title><rect x="1170.0" y="675.0" width="20.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.0" y="686.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (8 samples, 1.69%)</title><rect x="1170.0" y="659.0" width="20.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.0" y="670.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (7 samples, 1.48%)</title><rect x="1170.0" y="643.0" width="17.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.0" y="654.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (7 samples, 1.48%)</title><rect x="1170.0" y="627.0" width="17.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.0" y="638.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 1.27%)</title><rect x="1170.0" y="611.0" width="15.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.0" y="622.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (6 samples, 1.27%)</title><rect x="1170.0" y="595.0" width="15.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.0" y="606.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 1.06%)</title><rect x="1170.0" y="579.0" width="12.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.0" y="590.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.21%)</title><rect x="1170.0" y="563.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.0" y="574.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.21%)</title><rect x="1170.0" y="547.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.0" y="558.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_monitor_values(GrowableArray&lt;MonitorValue*&gt;*) (1 samples, 0.21%)</title><rect x="1170.0" y="531.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.0" y="542.0"></text>
</g>
<g>
<title>DebugInformationRecorder::serialize_monitor_values(GrowableArray&lt;MonitorValue*&gt;*) (1 samples, 0.21%)</title><rect x="1170.0" y="515.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.0" y="526.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.21%)</title><rect x="1170.0" y="499.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>DIR_Chunk* GrowableArray&lt;DIR_Chunk*&gt;::insert_sorted&lt;&amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;) (1 samples, 0.21%)</title><rect x="1170.0" y="483.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.0" y="494.0"></text>
</g>
<g>
<title>int GrowableArray&lt;DIR_Chunk*&gt;::find_sorted&lt;DIR_Chunk*, &amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;, bool&amp;) (1 samples, 0.21%)</title><rect x="1170.0" y="467.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.0" y="478.0"></text>
</g>
<g>
<title>_platform_memcmp (1 samples, 0.21%)</title><rect x="1170.0" y="451.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1173.0" y="462.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.21%)</title><rect x="1172.5" y="563.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.5" y="574.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.21%)</title><rect x="1172.5" y="547.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.5" y="558.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.21%)</title><rect x="1172.5" y="531.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.5" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.63%)</title><rect x="1175.0" y="563.0" width="7.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.0" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.21%)</title><rect x="1175.0" y="547.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.0" y="558.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.21%)</title><rect x="1175.0" y="531.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.0" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.21%)</title><rect x="1177.5" y="547.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.5" y="558.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.21%)</title><rect x="1177.5" y="531.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="542.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.21%)</title><rect x="1177.5" y="515.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.21%)</title><rect x="1180.0" y="547.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1182.5" y="579.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.5" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1182.5" y="563.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1182.5" y="547.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1182.5" y="531.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.21%)</title><rect x="1182.5" y="515.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.5" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1182.5" y="499.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.5" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1182.5" y="483.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1182.5" y="467.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1182.5" y="451.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.21%)</title><rect x="1182.5" y="435.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.5" y="446.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.21%)</title><rect x="1182.5" y="419.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.5" y="430.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.21%)</title><rect x="1182.5" y="403.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.5" y="414.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.21%)</title><rect x="1182.5" y="387.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.5" y="398.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.21%)</title><rect x="1182.5" y="371.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.5" y="382.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.21%)</title><rect x="1182.5" y="355.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.5" y="366.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.21%)</title><rect x="1182.5" y="339.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.5" y="350.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.21%)</title><rect x="1185.0" y="611.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.0" y="622.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.21%)</title><rect x="1185.0" y="595.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="606.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.21%)</title><rect x="1185.0" y="579.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.0" y="590.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.21%)</title><rect x="1185.0" y="563.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.0" y="574.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.21%)</title><rect x="1185.0" y="547.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.0" y="558.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.21%)</title><rect x="1185.0" y="531.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="542.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.21%)</title><rect x="1185.0" y="515.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.0" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.21%)</title><rect x="1185.0" y="499.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.0" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="1185.0" y="483.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="1185.0" y="467.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.0" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="1185.0" y="451.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="435.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="419.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.0" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="1185.0" y="403.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="1185.0" y="387.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="1185.0" y="371.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="382.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="355.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.0" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="339.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.0" y="350.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="1185.0" y="323.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.0" y="334.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="1185.0" y="307.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.0" y="318.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="1185.0" y="291.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.0" y="302.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="275.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.0" y="286.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="1185.0" y="259.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.0" y="270.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="1185.0" y="243.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.0" y="254.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="1185.0" y="227.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.0" y="238.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="1185.0" y="211.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.0" y="222.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.21%)</title><rect x="1185.0" y="195.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.0" y="206.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="1185.0" y="179.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="190.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="1185.0" y="163.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.0" y="174.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.21%)</title><rect x="1187.5" y="643.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.5" y="654.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.21%)</title><rect x="1187.5" y="627.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
</g>
</svg>
