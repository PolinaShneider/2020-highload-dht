<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="325"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="325"> </text>
<g id="frames">
<g>
<title>all (2,224 samples, 100.00%)</title><rect x="10.0" y="291.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="302.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25095] (166 samples, 7.46%)</title><rect x="10.0" y="275.0" width="88.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="286.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (166 samples, 7.46%)</title><rect x="10.0" y="259.0" width="88.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="270.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (27 samples, 1.21%)</title><rect x="10.0" y="243.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (13 samples, 0.58%)</title><rect x="10.0" y="227.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (8 samples, 0.36%)</title><rect x="10.0" y="211.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.22%)</title><rect x="14.2" y="211.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="17.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (14 samples, 0.63%)</title><rect x="16.9" y="227.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.63%)</title><rect x="16.9" y="211.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (14 samples, 0.63%)</title><rect x="16.9" y="195.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (14 samples, 0.63%)</title><rect x="16.9" y="179.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (14 samples, 0.63%)</title><rect x="16.9" y="163.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.9" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.63%)</title><rect x="16.9" y="147.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.63%)</title><rect x="16.9" y="131.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.63%)</title><rect x="16.9" y="115.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (14 samples, 0.63%)</title><rect x="16.9" y="99.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.9" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (14 samples, 0.63%)</title><rect x="16.9" y="83.0" width="7.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="19.9" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (139 samples, 6.25%)</title><rect x="24.3" y="243.0" width="73.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (139 samples, 6.25%)</title><rect x="24.3" y="227.0" width="73.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (139 samples, 6.25%)</title><rect x="24.3" y="211.0" width="73.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (56 samples, 2.52%)</title><rect x="24.3" y="195.0" width="29.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.3" y="206.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (56 samples, 2.52%)</title><rect x="24.3" y="179.0" width="29.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.3" y="190.0">on..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (40 samples, 1.80%)</title><rect x="24.3" y="163.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.3" y="174.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.58%)</title><rect x="24.3" y="147.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.58%)</title><rect x="24.3" y="131.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.58%)</title><rect x="24.3" y="115.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.31%)</title><rect x="24.3" y="99.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="27.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="28.0" y="99.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.0" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="28.0" y="83.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (27 samples, 1.21%)</title><rect x="31.2" y="147.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.45%)</title><rect x="31.2" y="131.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.45%)</title><rect x="31.2" y="115.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.45%)</title><rect x="31.2" y="99.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.45%)</title><rect x="31.2" y="83.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.2" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="31.2" y="67.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="34.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.54%)</title><rect x="36.5" y="131.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.54%)</title><rect x="36.5" y="115.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.54%)</title><rect x="36.5" y="99.0" width="6.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="39.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (5 samples, 0.22%)</title><rect x="42.9" y="131.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.18%)</title><rect x="42.9" y="115.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.18%)</title><rect x="42.9" y="99.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (4 samples, 0.18%)</title><rect x="42.9" y="83.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (4 samples, 0.18%)</title><rect x="42.9" y="67.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="45.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="45.0" y="115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="45.0" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="45.0" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="45.0" y="67.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="45.0" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="45.0" y="35.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="48.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.72%)</title><rect x="45.5" y="163.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.72%)</title><rect x="45.5" y="147.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.72%)</title><rect x="45.5" y="131.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="45.5" y="115.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.36%)</title><rect x="49.8" y="115.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.8" y="126.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.36%)</title><rect x="49.8" y="99.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="52.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (55 samples, 2.47%)</title><rect x="54.0" y="195.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.0" y="206.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.54%)</title><rect x="54.0" y="179.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="57.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.67%)</title><rect x="60.4" y="179.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.67%)</title><rect x="60.4" y="163.0" width="8.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="63.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="68.4" y="179.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.4" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="68.4" y="163.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.4" y="174.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.54%)</title><rect x="68.4" y="147.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="74.7" y="147.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="77.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="77.9" y="147.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="77.9" y="131.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.45%)</title><rect x="77.9" y="115.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.9" y="126.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="77.9" y="99.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="80.9" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="83.2" y="195.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="83.2" y="179.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.2" y="190.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.27%)</title><rect x="83.2" y="163.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="86.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="86.4" y="163.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="89.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.72%)</title><rect x="89.6" y="163.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.72%)</title><rect x="89.6" y="147.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.72%)</title><rect x="89.6" y="131.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.6" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.72%)</title><rect x="89.6" y="115.0" width="8.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.6" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25859] (120 samples, 5.40%)</title><rect x="98.1" y="275.0" width="63.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="101.1" y="286.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (120 samples, 5.40%)</title><rect x="98.1" y="259.0" width="63.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="270.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (21 samples, 0.94%)</title><rect x="98.1" y="243.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (12 samples, 0.54%)</title><rect x="98.1" y="227.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (6 samples, 0.27%)</title><rect x="98.1" y="211.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="101.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (6 samples, 0.27%)</title><rect x="101.3" y="211.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="104.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (9 samples, 0.40%)</title><rect x="104.4" y="227.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (9 samples, 0.40%)</title><rect x="104.4" y="211.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (9 samples, 0.40%)</title><rect x="104.4" y="195.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (9 samples, 0.40%)</title><rect x="104.4" y="179.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.40%)</title><rect x="104.4" y="163.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.4" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.40%)</title><rect x="104.4" y="147.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.40%)</title><rect x="104.4" y="131.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.4" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.40%)</title><rect x="104.4" y="115.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.40%)</title><rect x="104.4" y="99.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.4" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.40%)</title><rect x="104.4" y="83.0" width="4.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="107.4" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (99 samples, 4.45%)</title><rect x="109.2" y="243.0" width="52.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.2" y="254.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (99 samples, 4.45%)</title><rect x="109.2" y="227.0" width="52.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.2" y="238.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (99 samples, 4.45%)</title><rect x="109.2" y="211.0" width="52.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.2" y="222.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 1.39%)</title><rect x="109.2" y="195.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 1.39%)</title><rect x="109.2" y="179.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.2" y="190.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (16 samples, 0.72%)</title><rect x="109.2" y="163.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.40%)</title><rect x="109.2" y="147.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.40%)</title><rect x="109.2" y="131.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.40%)</title><rect x="109.2" y="115.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.13%)</title><rect x="109.2" y="99.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="112.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="110.8" y="99.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.8" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="110.8" y="83.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="113.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (7 samples, 0.31%)</title><rect x="114.0" y="147.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.18%)</title><rect x="114.0" y="131.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.18%)</title><rect x="114.0" y="115.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.18%)</title><rect x="114.0" y="99.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="117.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (3 samples, 0.13%)</title><rect x="116.1" y="131.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="116.1" y="115.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="116.1" y="99.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (3 samples, 0.13%)</title><rect x="116.1" y="83.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (3 samples, 0.13%)</title><rect x="116.1" y="67.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="119.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.67%)</title><rect x="117.7" y="163.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.67%)</title><rect x="117.7" y="147.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.67%)</title><rect x="117.7" y="131.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.40%)</title><rect x="117.7" y="115.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="120.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="122.5" y="115.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.5" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="122.5" y="99.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="125.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 1.93%)</title><rect x="125.7" y="195.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.7" y="206.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.31%)</title><rect x="125.7" y="179.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="128.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.67%)</title><rect x="129.4" y="179.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.67%)</title><rect x="129.4" y="163.0" width="7.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="132.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.94%)</title><rect x="137.3" y="179.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.3" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.94%)</title><rect x="137.3" y="163.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.3" y="174.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.49%)</title><rect x="137.3" y="147.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="140.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="143.2" y="147.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="146.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.22%)</title><rect x="145.8" y="147.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.22%)</title><rect x="145.8" y="131.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.22%)</title><rect x="145.8" y="115.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.8" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="145.8" y="99.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.8" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.12%)</title><rect x="148.5" y="195.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.12%)</title><rect x="148.5" y="179.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.5" y="190.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.45%)</title><rect x="148.5" y="163.0" width="5.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="151.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.18%)</title><rect x="153.8" y="163.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="156.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.49%)</title><rect x="155.9" y="163.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.49%)</title><rect x="155.9" y="147.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.49%)</title><rect x="155.9" y="131.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="155.9" y="115.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="158.9" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=26627] (153 samples, 6.88%)</title><rect x="161.7" y="275.0" width="81.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="164.7" y="286.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (153 samples, 6.88%)</title><rect x="161.7" y="259.0" width="81.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.7" y="270.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (18 samples, 0.81%)</title><rect x="161.7" y="243.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (11 samples, 0.49%)</title><rect x="161.7" y="227.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (7 samples, 0.31%)</title><rect x="161.7" y="211.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="164.7" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (4 samples, 0.18%)</title><rect x="165.5" y="211.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="168.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (7 samples, 0.31%)</title><rect x="167.6" y="227.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.31%)</title><rect x="167.6" y="211.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (7 samples, 0.31%)</title><rect x="167.6" y="195.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 0.31%)</title><rect x="167.6" y="179.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.31%)</title><rect x="167.6" y="163.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.31%)</title><rect x="167.6" y="147.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.31%)</title><rect x="167.6" y="131.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.6" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.31%)</title><rect x="167.6" y="115.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.31%)</title><rect x="167.6" y="99.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.6" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.31%)</title><rect x="167.6" y="83.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="170.6" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (135 samples, 6.07%)</title><rect x="171.3" y="243.0" width="71.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (135 samples, 6.07%)</title><rect x="171.3" y="227.0" width="71.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (135 samples, 6.07%)</title><rect x="171.3" y="211.0" width="71.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 2.07%)</title><rect x="171.3" y="195.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.3" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 2.07%)</title><rect x="171.3" y="179.0" width="24.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.3" y="190.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (35 samples, 1.57%)</title><rect x="171.3" y="163.0" width="18.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.49%)</title><rect x="171.3" y="147.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.49%)</title><rect x="171.3" y="131.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.49%)</title><rect x="171.3" y="115.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.31%)</title><rect x="171.3" y="99.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="174.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.18%)</title><rect x="175.0" y="99.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.0" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="175.0" y="83.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="178.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (24 samples, 1.08%)</title><rect x="177.1" y="147.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.27%)</title><rect x="177.1" y="131.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.27%)</title><rect x="177.1" y="115.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.27%)</title><rect x="177.1" y="99.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.27%)</title><rect x="177.1" y="83.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.1" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="177.1" y="67.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="180.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.49%)</title><rect x="180.3" y="131.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.49%)</title><rect x="180.3" y="115.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.49%)</title><rect x="180.3" y="99.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="183.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (7 samples, 0.31%)</title><rect x="186.2" y="131.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.31%)</title><rect x="186.2" y="115.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.31%)</title><rect x="186.2" y="99.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (7 samples, 0.31%)</title><rect x="186.2" y="83.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (7 samples, 0.31%)</title><rect x="186.2" y="67.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="189.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.49%)</title><rect x="189.9" y="163.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.49%)</title><rect x="189.9" y="147.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.49%)</title><rect x="189.9" y="131.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="189.9" y="115.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="192.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.22%)</title><rect x="193.0" y="115.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.0" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="193.0" y="99.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="196.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (61 samples, 2.74%)</title><rect x="195.7" y="195.0" width="32.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.7" y="206.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.27%)</title><rect x="195.7" y="179.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="198.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (23 samples, 1.03%)</title><rect x="198.9" y="179.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 1.03%)</title><rect x="198.9" y="163.0" width="12.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="201.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 1.44%)</title><rect x="211.1" y="179.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.1" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 1.44%)</title><rect x="211.1" y="163.0" width="17.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.1" y="174.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.76%)</title><rect x="211.1" y="147.0" width="9.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="214.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="220.1" y="147.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="223.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="223.3" y="147.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="223.3" y="131.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.40%)</title><rect x="223.3" y="115.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.3" y="126.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="223.3" y="99.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="226.3" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="228.1" y="195.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="228.1" y="179.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.1" y="190.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.45%)</title><rect x="228.1" y="163.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="231.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="233.4" y="163.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="236.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="237.6" y="163.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="237.6" y="147.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.45%)</title><rect x="237.6" y="131.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.6" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="237.6" y="115.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="240.6" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=40451] (132 samples, 5.94%)</title><rect x="242.9" y="275.0" width="70.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="245.9" y="286.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (132 samples, 5.94%)</title><rect x="242.9" y="259.0" width="70.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.9" y="270.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (19 samples, 0.85%)</title><rect x="242.9" y="243.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (7 samples, 0.31%)</title><rect x="242.9" y="227.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (2 samples, 0.09%)</title><rect x="242.9" y="211.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="245.9" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.22%)</title><rect x="244.0" y="211.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="247.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (12 samples, 0.54%)</title><rect x="246.6" y="227.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.54%)</title><rect x="246.6" y="211.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (12 samples, 0.54%)</title><rect x="246.6" y="195.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (12 samples, 0.54%)</title><rect x="246.6" y="179.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (12 samples, 0.54%)</title><rect x="246.6" y="163.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.6" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (12 samples, 0.54%)</title><rect x="246.6" y="147.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.54%)</title><rect x="246.6" y="131.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.6" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.54%)</title><rect x="246.6" y="115.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.54%)</title><rect x="246.6" y="99.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.6" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (12 samples, 0.54%)</title><rect x="246.6" y="83.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="249.6" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (113 samples, 5.08%)</title><rect x="253.0" y="243.0" width="60.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.0" y="254.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (113 samples, 5.08%)</title><rect x="253.0" y="227.0" width="60.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.0" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (113 samples, 5.08%)</title><rect x="253.0" y="211.0" width="60.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.0" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 2.11%)</title><rect x="253.0" y="195.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.0" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 2.11%)</title><rect x="253.0" y="179.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.0" y="190.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (34 samples, 1.53%)</title><rect x="253.0" y="163.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.58%)</title><rect x="253.0" y="147.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.58%)</title><rect x="253.0" y="131.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.58%)</title><rect x="253.0" y="115.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.31%)</title><rect x="253.0" y="99.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="256.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="256.7" y="99.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.7" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="256.7" y="83.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="259.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (21 samples, 0.94%)</title><rect x="259.9" y="147.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.18%)</title><rect x="259.9" y="131.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.18%)</title><rect x="259.9" y="115.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.18%)</title><rect x="259.9" y="99.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.18%)</title><rect x="259.9" y="83.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.9" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="259.9" y="67.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="262.9" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.40%)</title><rect x="262.0" y="131.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.40%)</title><rect x="262.0" y="115.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.40%)</title><rect x="262.0" y="99.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="265.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (8 samples, 0.36%)</title><rect x="266.8" y="131.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.36%)</title><rect x="266.8" y="115.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.36%)</title><rect x="266.8" y="99.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (8 samples, 0.36%)</title><rect x="266.8" y="83.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (8 samples, 0.36%)</title><rect x="266.8" y="67.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="269.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.58%)</title><rect x="271.0" y="163.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.58%)</title><rect x="271.0" y="147.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.58%)</title><rect x="271.0" y="131.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="271.0" y="115.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="274.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.31%)</title><rect x="274.2" y="115.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.2" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.31%)</title><rect x="274.2" y="99.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="277.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (49 samples, 2.20%)</title><rect x="277.9" y="195.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.9" y="206.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.31%)</title><rect x="277.9" y="179.0" width="3.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="280.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.58%)</title><rect x="281.7" y="179.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.58%)</title><rect x="281.7" y="163.0" width="6.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="284.7" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 1.30%)</title><rect x="288.6" y="179.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 1.30%)</title><rect x="288.6" y="163.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="174.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.49%)</title><rect x="288.6" y="147.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="291.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.13%)</title><rect x="294.4" y="147.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="297.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.67%)</title><rect x="296.0" y="147.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.67%)</title><rect x="296.0" y="131.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.67%)</title><rect x="296.0" y="115.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.0" y="126.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.67%)</title><rect x="296.0" y="99.0" width="7.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="299.0" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.76%)</title><rect x="303.9" y="195.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.76%)</title><rect x="303.9" y="179.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.9" y="190.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.22%)</title><rect x="303.9" y="163.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="306.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.09%)</title><rect x="306.6" y="163.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="309.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="307.7" y="163.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.45%)</title><rect x="307.7" y="147.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.45%)</title><rect x="307.7" y="131.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.7" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="307.7" y="115.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="310.7" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=39939] (119 samples, 5.35%)</title><rect x="313.0" y="275.0" width="63.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="316.0" y="286.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (119 samples, 5.35%)</title><rect x="313.0" y="259.0" width="63.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.0" y="270.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (15 samples, 0.67%)</title><rect x="313.0" y="243.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (5 samples, 0.22%)</title><rect x="313.0" y="227.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (2 samples, 0.09%)</title><rect x="313.0" y="211.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="316.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (3 samples, 0.13%)</title><rect x="314.0" y="211.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="317.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (10 samples, 0.45%)</title><rect x="315.6" y="227.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.45%)</title><rect x="315.6" y="211.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (10 samples, 0.45%)</title><rect x="315.6" y="195.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (10 samples, 0.45%)</title><rect x="315.6" y="179.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.45%)</title><rect x="315.6" y="163.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.45%)</title><rect x="315.6" y="147.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.45%)</title><rect x="315.6" y="131.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.6" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.45%)</title><rect x="315.6" y="115.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.45%)</title><rect x="315.6" y="99.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.6" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.45%)</title><rect x="315.6" y="83.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="318.6" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (104 samples, 4.68%)</title><rect x="320.9" y="243.0" width="55.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.9" y="254.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (104 samples, 4.68%)</title><rect x="320.9" y="227.0" width="55.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.9" y="238.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (104 samples, 4.68%)</title><rect x="320.9" y="211.0" width="55.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.9" y="222.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34 samples, 1.53%)</title><rect x="320.9" y="195.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34 samples, 1.53%)</title><rect x="320.9" y="179.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.9" y="190.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (26 samples, 1.17%)</title><rect x="320.9" y="163.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.36%)</title><rect x="320.9" y="147.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.36%)</title><rect x="320.9" y="131.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.36%)</title><rect x="320.9" y="115.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.13%)</title><rect x="320.9" y="99.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="323.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.22%)</title><rect x="322.5" y="99.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="322.5" y="83.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="325.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (18 samples, 0.81%)</title><rect x="325.2" y="147.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.27%)</title><rect x="325.2" y="131.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.27%)</title><rect x="325.2" y="115.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.27%)</title><rect x="325.2" y="99.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.27%)</title><rect x="325.2" y="83.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.2" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="325.2" y="67.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="328.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.36%)</title><rect x="328.3" y="131.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.36%)</title><rect x="328.3" y="115.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.36%)</title><rect x="328.3" y="99.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="331.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (4 samples, 0.18%)</title><rect x="332.6" y="131.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.18%)</title><rect x="332.6" y="115.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.18%)</title><rect x="332.6" y="99.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (4 samples, 0.18%)</title><rect x="332.6" y="83.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (4 samples, 0.18%)</title><rect x="332.6" y="67.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="335.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.36%)</title><rect x="334.7" y="163.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.36%)</title><rect x="334.7" y="147.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.36%)</title><rect x="334.7" y="131.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.18%)</title><rect x="334.7" y="115.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.18%)</title><rect x="336.8" y="115.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.8" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="336.8" y="99.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="339.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (53 samples, 2.38%)</title><rect x="339.0" y="195.0" width="28.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.0" y="206.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (13 samples, 0.58%)</title><rect x="339.0" y="179.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="342.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.54%)</title><rect x="345.9" y="179.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.54%)</title><rect x="345.9" y="163.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="348.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="352.2" y="179.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.2" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.26%)</title><rect x="352.2" y="163.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.2" y="174.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.76%)</title><rect x="352.2" y="147.0" width="9.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="355.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.31%)</title><rect x="361.2" y="147.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="364.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.18%)</title><rect x="365.0" y="147.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.18%)</title><rect x="365.0" y="131.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.18%)</title><rect x="365.0" y="115.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.0" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="365.0" y="99.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="368.0" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.76%)</title><rect x="367.1" y="195.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.76%)</title><rect x="367.1" y="179.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.1" y="190.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.27%)</title><rect x="367.1" y="163.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="370.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="370.3" y="163.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="373.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.27%)</title><rect x="372.9" y="163.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.27%)</title><rect x="372.9" y="147.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.27%)</title><rect x="372.9" y="131.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.9" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="372.9" y="115.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="375.9" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=39171] (162 samples, 7.28%)</title><rect x="376.1" y="275.0" width="86.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="379.1" y="286.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (162 samples, 7.28%)</title><rect x="376.1" y="259.0" width="86.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.1" y="270.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (18 samples, 0.81%)</title><rect x="376.1" y="243.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (10 samples, 0.45%)</title><rect x="376.1" y="227.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (5 samples, 0.22%)</title><rect x="376.1" y="211.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="379.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.22%)</title><rect x="378.8" y="211.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="381.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (8 samples, 0.36%)</title><rect x="381.4" y="227.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 0.36%)</title><rect x="381.4" y="211.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (8 samples, 0.36%)</title><rect x="381.4" y="195.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 0.36%)</title><rect x="381.4" y="179.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.36%)</title><rect x="381.4" y="163.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.4" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.36%)</title><rect x="381.4" y="147.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.36%)</title><rect x="381.4" y="131.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.4" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.36%)</title><rect x="381.4" y="115.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.36%)</title><rect x="381.4" y="99.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.4" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (8 samples, 0.36%)</title><rect x="381.4" y="83.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="384.4" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (144 samples, 6.47%)</title><rect x="385.6" y="243.0" width="76.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (144 samples, 6.47%)</title><rect x="385.6" y="227.0" width="76.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (144 samples, 6.47%)</title><rect x="385.6" y="211.0" width="76.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (48 samples, 2.16%)</title><rect x="385.6" y="195.0" width="25.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (48 samples, 2.16%)</title><rect x="385.6" y="179.0" width="25.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.6" y="190.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (34 samples, 1.53%)</title><rect x="385.6" y="163.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.13%)</title><rect x="385.6" y="147.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.13%)</title><rect x="385.6" y="131.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.13%)</title><rect x="385.6" y="115.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="385.6" y="99.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="388.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.09%)</title><rect x="386.2" y="99.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.2" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.09%)</title><rect x="386.2" y="83.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="389.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (31 samples, 1.39%)</title><rect x="387.2" y="147.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.22%)</title><rect x="387.2" y="131.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.22%)</title><rect x="387.2" y="115.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.22%)</title><rect x="387.2" y="99.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.22%)</title><rect x="387.2" y="83.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.2" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="387.2" y="67.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="390.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.85%)</title><rect x="389.9" y="131.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.85%)</title><rect x="389.9" y="115.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="392.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.85%)</title><rect x="389.9" y="99.0" width="10.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="392.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (7 samples, 0.31%)</title><rect x="400.0" y="131.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.27%)</title><rect x="400.0" y="115.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.27%)</title><rect x="400.0" y="99.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (6 samples, 0.27%)</title><rect x="400.0" y="83.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (6 samples, 0.27%)</title><rect x="400.0" y="67.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="403.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="403.2" y="115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="403.2" y="99.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="403.2" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="403.2" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="403.2" y="51.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="403.2" y="35.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="406.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.63%)</title><rect x="403.7" y="163.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.63%)</title><rect x="403.7" y="147.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.63%)</title><rect x="403.7" y="131.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="403.7" y="115.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="406.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="407.9" y="115.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.9" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="407.9" y="99.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="410.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (59 samples, 2.65%)</title><rect x="411.1" y="195.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.1" y="206.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.54%)</title><rect x="411.1" y="179.0" width="6.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="414.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.94%)</title><rect x="417.5" y="179.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.94%)</title><rect x="417.5" y="163.0" width="11.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="420.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.17%)</title><rect x="428.6" y="179.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.17%)</title><rect x="428.6" y="163.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.6" y="174.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.40%)</title><rect x="428.6" y="147.0" width="4.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="431.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="433.4" y="147.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="436.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="437.6" y="147.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="437.6" y="131.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.40%)</title><rect x="437.6" y="115.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.6" y="126.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="437.6" y="99.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="440.6" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 1.66%)</title><rect x="442.4" y="195.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 1.66%)</title><rect x="442.4" y="179.0" width="19.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.4" y="190.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.81%)</title><rect x="442.4" y="163.0" width="9.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="445.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.45%)</title><rect x="452.0" y="163.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="455.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="457.3" y="163.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="457.3" y="147.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.40%)</title><rect x="457.3" y="131.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.3" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="457.3" y="115.0" width="4.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="460.3" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=38915] (130 samples, 5.85%)</title><rect x="462.1" y="275.0" width="68.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="465.1" y="286.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (130 samples, 5.85%)</title><rect x="462.1" y="259.0" width="68.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="270.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (20 samples, 0.90%)</title><rect x="462.1" y="243.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (9 samples, 0.40%)</title><rect x="462.1" y="227.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 0.13%)</title><rect x="462.1" y="211.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="465.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (6 samples, 0.27%)</title><rect x="463.6" y="211.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="466.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11 samples, 0.49%)</title><rect x="466.8" y="227.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.49%)</title><rect x="466.8" y="211.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (11 samples, 0.49%)</title><rect x="466.8" y="195.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (11 samples, 0.49%)</title><rect x="466.8" y="179.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (11 samples, 0.49%)</title><rect x="466.8" y="163.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.8" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.49%)</title><rect x="466.8" y="147.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (11 samples, 0.49%)</title><rect x="466.8" y="131.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (11 samples, 0.49%)</title><rect x="466.8" y="115.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (11 samples, 0.49%)</title><rect x="466.8" y="99.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.8" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (11 samples, 0.49%)</title><rect x="466.8" y="83.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="469.8" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (110 samples, 4.95%)</title><rect x="472.7" y="243.0" width="58.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.7" y="254.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (110 samples, 4.95%)</title><rect x="472.7" y="227.0" width="58.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (110 samples, 4.95%)</title><rect x="472.7" y="211.0" width="58.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.7" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 1.35%)</title><rect x="472.7" y="195.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 1.35%)</title><rect x="472.7" y="179.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.7" y="190.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (21 samples, 0.94%)</title><rect x="472.7" y="163.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.31%)</title><rect x="472.7" y="147.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.31%)</title><rect x="472.7" y="131.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.31%)</title><rect x="472.7" y="115.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="472.7" y="99.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="475.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.09%)</title><rect x="475.3" y="99.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.3" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.09%)</title><rect x="475.3" y="83.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="478.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (14 samples, 0.63%)</title><rect x="476.4" y="147.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.22%)</title><rect x="476.4" y="131.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.22%)</title><rect x="476.4" y="115.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.22%)</title><rect x="476.4" y="99.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.22%)</title><rect x="476.4" y="83.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.4" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="476.4" y="67.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="479.4" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.27%)</title><rect x="479.0" y="131.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.27%)</title><rect x="479.0" y="115.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.27%)</title><rect x="479.0" y="99.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="482.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (3 samples, 0.13%)</title><rect x="482.2" y="131.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="482.2" y="115.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="482.2" y="99.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (3 samples, 0.13%)</title><rect x="482.2" y="83.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (3 samples, 0.13%)</title><rect x="482.2" y="67.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="485.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.40%)</title><rect x="483.8" y="163.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.40%)</title><rect x="483.8" y="147.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.40%)</title><rect x="483.8" y="131.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.13%)</title><rect x="483.8" y="115.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="486.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.27%)</title><rect x="485.4" y="115.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.4" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="485.4" y="99.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="488.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (49 samples, 2.20%)</title><rect x="488.6" y="195.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.6" y="206.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.31%)</title><rect x="488.6" y="179.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="491.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.72%)</title><rect x="492.3" y="179.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.72%)</title><rect x="492.3" y="163.0" width="8.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="495.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.17%)</title><rect x="500.8" y="179.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.8" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.17%)</title><rect x="500.8" y="163.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.8" y="174.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.67%)</title><rect x="500.8" y="147.0" width="7.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="503.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.18%)</title><rect x="508.7" y="147.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="511.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.31%)</title><rect x="510.9" y="147.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.31%)</title><rect x="510.9" y="131.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.31%)</title><rect x="510.9" y="115.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.9" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.31%)</title><rect x="510.9" y="99.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="513.9" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.39%)</title><rect x="514.6" y="195.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.39%)</title><rect x="514.6" y="179.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.6" y="190.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.72%)</title><rect x="514.6" y="163.0" width="8.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="517.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.27%)</title><rect x="523.1" y="163.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="526.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="526.2" y="163.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.40%)</title><rect x="526.2" y="147.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.40%)</title><rect x="526.2" y="131.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.2" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="526.2" y="115.0" width="4.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="529.2" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=28163] (157 samples, 7.06%)</title><rect x="531.0" y="275.0" width="83.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="534.0" y="286.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (157 samples, 7.06%)</title><rect x="531.0" y="259.0" width="83.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.0" y="270.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (19 samples, 0.85%)</title><rect x="531.0" y="243.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (9 samples, 0.40%)</title><rect x="531.0" y="227.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 0.13%)</title><rect x="531.0" y="211.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="534.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (6 samples, 0.27%)</title><rect x="532.6" y="211.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="535.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (10 samples, 0.45%)</title><rect x="535.8" y="227.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.45%)</title><rect x="535.8" y="211.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (10 samples, 0.45%)</title><rect x="535.8" y="195.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (10 samples, 0.45%)</title><rect x="535.8" y="179.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.45%)</title><rect x="535.8" y="163.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.8" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.45%)</title><rect x="535.8" y="147.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.45%)</title><rect x="535.8" y="131.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.45%)</title><rect x="535.8" y="115.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.45%)</title><rect x="535.8" y="99.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.8" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.45%)</title><rect x="535.8" y="83.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="538.8" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (138 samples, 6.21%)</title><rect x="541.1" y="243.0" width="73.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.1" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (138 samples, 6.21%)</title><rect x="541.1" y="227.0" width="73.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.1" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (138 samples, 6.21%)</title><rect x="541.1" y="211.0" width="73.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.1" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 2.07%)</title><rect x="541.1" y="195.0" width="24.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.1" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 2.07%)</title><rect x="541.1" y="179.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.1" y="190.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (36 samples, 1.62%)</title><rect x="541.1" y="163.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.36%)</title><rect x="541.1" y="147.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.36%)</title><rect x="541.1" y="131.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.36%)</title><rect x="541.1" y="115.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="541.1" y="99.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="544.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.13%)</title><rect x="543.8" y="99.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.8" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.13%)</title><rect x="543.8" y="83.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.entity (28 samples, 1.26%)</title><rect x="545.4" y="147.0" width="14.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.18%)</title><rect x="545.4" y="131.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.18%)</title><rect x="545.4" y="115.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.18%)</title><rect x="545.4" y="99.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.18%)</title><rect x="545.4" y="83.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.4" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="545.4" y="67.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="548.4" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.76%)</title><rect x="547.5" y="131.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.76%)</title><rect x="547.5" y="115.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.76%)</title><rect x="547.5" y="99.0" width="9.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="550.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.get (7 samples, 0.31%)</title><rect x="556.5" y="131.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.27%)</title><rect x="556.5" y="115.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.27%)</title><rect x="556.5" y="99.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.get$Lambda (6 samples, 0.27%)</title><rect x="556.5" y="83.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ServiceAsyncImpl$$Lambda$83 (6 samples, 0.27%)</title><rect x="556.5" y="67.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="559.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="559.7" y="115.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="559.7" y="99.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="559.7" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="559.7" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="559.7" y="51.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="559.7" y="35.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.45%)</title><rect x="560.2" y="163.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.45%)</title><rect x="560.2" y="147.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.45%)</title><rect x="560.2" y="131.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.45%)</title><rect x="560.2" y="115.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.2" y="126.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="560.2" y="99.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="563.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (61 samples, 2.74%)</title><rect x="565.5" y="195.0" width="32.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="206.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (11 samples, 0.49%)</title><rect x="565.5" y="179.0" width="5.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="568.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.67%)</title><rect x="571.3" y="179.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.67%)</title><rect x="571.3" y="163.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="574.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.57%)</title><rect x="579.3" y="179.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.3" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.57%)</title><rect x="579.3" y="163.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.3" y="174.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.72%)</title><rect x="579.3" y="147.0" width="8.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="582.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="587.8" y="147.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="590.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.63%)</title><rect x="590.4" y="147.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.63%)</title><rect x="590.4" y="131.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.63%)</title><rect x="590.4" y="115.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.4" y="126.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.63%)</title><rect x="590.4" y="99.0" width="7.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.4" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.39%)</title><rect x="597.9" y="195.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.39%)</title><rect x="597.9" y="179.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.9" y="190.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.76%)</title><rect x="597.9" y="163.0" width="9.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.09%)</title><rect x="606.9" y="163.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="609.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.54%)</title><rect x="608.0" y="163.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.54%)</title><rect x="608.0" y="147.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.54%)</title><rect x="608.0" y="131.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.0" y="142.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="608.0" y="115.0" width="6.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="611.0" y="126.0"></text>
</g>
<g>
<title>[async_worker_0 tid=29187] (135 samples, 6.07%)</title><rect x="614.3" y="275.0" width="71.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="617.3" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (135 samples, 6.07%)</title><rect x="614.3" y="259.0" width="71.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.3" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135 samples, 6.07%)</title><rect x="614.3" y="243.0" width="71.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.3" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135 samples, 6.07%)</title><rect x="614.3" y="227.0" width="71.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.3" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.31%)</title><rect x="614.3" y="211.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.31%)</title><rect x="614.3" y="195.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.31%)</title><rect x="614.3" y="179.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.31%)</title><rect x="614.3" y="163.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.31%)</title><rect x="614.3" y="147.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="617.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (128 samples, 5.76%)</title><rect x="618.0" y="211.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.0" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (128 samples, 5.76%)</title><rect x="618.0" y="195.0" width="68.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.0" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.36%)</title><rect x="618.0" y="179.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="621.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 1.75%)</title><rect x="622.3" y="179.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 1.75%)</title><rect x="622.3" y="163.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 1.26%)</title><rect x="622.3" y="147.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (28 samples, 1.26%)</title><rect x="622.3" y="131.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.3" y="142.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.26%)</title><rect x="622.3" y="115.0" width="14.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="625.3" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.49%)</title><rect x="637.1" y="147.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.1" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.49%)</title><rect x="637.1" y="131.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="640.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (29 samples, 1.30%)</title><rect x="643.0" y="179.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.0" y="190.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.58%)</title><rect x="643.0" y="163.0" width="6.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="646.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.36%)</title><rect x="649.9" y="163.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="654.1" y="163.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="657.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (43 samples, 1.93%)</title><rect x="658.4" y="179.0" width="22.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.4" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.45%)</title><rect x="658.4" y="163.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.45%)</title><rect x="658.4" y="147.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.45%)</title><rect x="658.4" y="131.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="661.4" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 0.54%)</title><rect x="663.7" y="163.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.7" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 0.54%)</title><rect x="663.7" y="147.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.7" y="158.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="663.7" y="131.0" width="6.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="666.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (21 samples, 0.94%)</title><rect x="670.0" y="163.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.0" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="670.0" y="147.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="673.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.67%)</title><rect x="673.2" y="147.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.67%)</title><rect x="673.2" y="131.0" width="8.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="676.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (9 samples, 0.40%)</title><rect x="681.2" y="179.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.2" y="190.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="681.2" y="163.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="684.2" y="174.0"></text>
</g>
<g>
<title>[async_worker_1 tid=35331] (134 samples, 6.03%)</title><rect x="686.0" y="275.0" width="71.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="689.0" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (134 samples, 6.03%)</title><rect x="686.0" y="259.0" width="71.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.0" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (134 samples, 6.03%)</title><rect x="686.0" y="243.0" width="71.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.0" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (134 samples, 6.03%)</title><rect x="686.0" y="227.0" width="71.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.0" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.27%)</title><rect x="686.0" y="211.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.27%)</title><rect x="686.0" y="195.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.18%)</title><rect x="686.0" y="179.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.18%)</title><rect x="686.0" y="163.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.18%)</title><rect x="686.0" y="147.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="689.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.09%)</title><rect x="688.1" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.09%)</title><rect x="688.1" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.09%)</title><rect x="688.1" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.09%)</title><rect x="688.1" y="131.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.09%)</title><rect x="688.1" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="691.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (128 samples, 5.76%)</title><rect x="689.1" y="211.0" width="68.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.1" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (128 samples, 5.76%)</title><rect x="689.1" y="195.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.18%)</title><rect x="689.1" y="179.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="692.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 1.98%)</title><rect x="691.3" y="179.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.3" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (44 samples, 1.98%)</title><rect x="691.3" y="163.0" width="23.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.3" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 1.53%)</title><rect x="691.3" y="147.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (34 samples, 1.53%)</title><rect x="691.3" y="131.0" width="18.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.3" y="142.0"></text>
</g>
<g>
<title>byte[] (34 samples, 1.53%)</title><rect x="691.3" y="115.0" width="18.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="694.3" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.45%)</title><rect x="709.3" y="147.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.3" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.45%)</title><rect x="709.3" y="131.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="712.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 1.26%)</title><rect x="714.6" y="179.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.6" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="714.6" y="163.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="717.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.36%)</title><rect x="721.0" y="163.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.36%)</title><rect x="725.2" y="163.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (45 samples, 2.02%)</title><rect x="729.5" y="179.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.5" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.72%)</title><rect x="729.5" y="163.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.72%)</title><rect x="729.5" y="147.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.72%)</title><rect x="729.5" y="131.0" width="8.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="732.5" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="737.9" y="163.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.9" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="737.9" y="147.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.9" y="158.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="737.9" y="131.0" width="4.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="740.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (20 samples, 0.90%)</title><rect x="742.7" y="163.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.7" y="174.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.22%)</title><rect x="742.7" y="147.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.67%)</title><rect x="745.4" y="147.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.67%)</title><rect x="745.4" y="131.0" width="7.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="748.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (7 samples, 0.31%)</title><rect x="753.3" y="179.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.3" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.31%)</title><rect x="753.3" y="163.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="756.3" y="174.0"></text>
</g>
<g>
<title>[async_worker_2 tid=36867] (131 samples, 5.89%)</title><rect x="757.1" y="275.0" width="69.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="760.1" y="286.0">[async_..</text>
</g>
<g>
<title>java/lang/Thread.run (131 samples, 5.89%)</title><rect x="757.1" y="259.0" width="69.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.1" y="270.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (131 samples, 5.89%)</title><rect x="757.1" y="243.0" width="69.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.1" y="254.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (131 samples, 5.89%)</title><rect x="757.1" y="227.0" width="69.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.1" y="238.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.45%)</title><rect x="757.1" y="211.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.45%)</title><rect x="757.1" y="195.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.36%)</title><rect x="757.1" y="179.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.36%)</title><rect x="757.1" y="163.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.36%)</title><rect x="757.1" y="147.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="760.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.09%)</title><rect x="761.3" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.09%)</title><rect x="761.3" y="163.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.09%)</title><rect x="761.3" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.09%)</title><rect x="761.3" y="131.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.09%)</title><rect x="761.3" y="115.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="764.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (121 samples, 5.44%)</title><rect x="762.4" y="211.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.4" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (121 samples, 5.44%)</title><rect x="762.4" y="195.0" width="64.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.4" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.27%)</title><rect x="762.4" y="179.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="765.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 1.89%)</title><rect x="765.5" y="179.0" width="22.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.5" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 1.89%)</title><rect x="765.5" y="163.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.5" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 1.26%)</title><rect x="765.5" y="147.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (28 samples, 1.26%)</title><rect x="765.5" y="131.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.5" y="142.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.26%)</title><rect x="765.5" y="115.0" width="14.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="768.5" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.63%)</title><rect x="780.4" y="147.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.4" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.63%)</title><rect x="780.4" y="131.0" width="7.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="783.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (30 samples, 1.35%)</title><rect x="787.8" y="179.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.8" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="787.8" y="163.0" width="6.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="790.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.58%)</title><rect x="794.2" y="163.0" width="6.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="797.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.22%)</title><rect x="801.1" y="163.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="804.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (37 samples, 1.66%)</title><rect x="803.7" y="179.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.58%)</title><rect x="803.7" y="163.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.58%)</title><rect x="803.7" y="147.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.58%)</title><rect x="803.7" y="131.0" width="6.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="806.7" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="810.6" y="163.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.6" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="810.6" y="147.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.6" y="158.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="810.6" y="131.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="813.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (15 samples, 0.67%)</title><rect x="815.4" y="163.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.4" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="815.4" y="147.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="818.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.40%)</title><rect x="818.6" y="147.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.40%)</title><rect x="818.6" y="131.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="821.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (6 samples, 0.27%)</title><rect x="823.4" y="179.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="823.4" y="163.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="826.4" y="174.0"></text>
</g>
<g>
<title>[async_worker_3 tid=30979] (141 samples, 6.34%)</title><rect x="826.6" y="275.0" width="74.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="829.6" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (141 samples, 6.34%)</title><rect x="826.6" y="259.0" width="74.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.6" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (141 samples, 6.34%)</title><rect x="826.6" y="243.0" width="74.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.6" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (141 samples, 6.34%)</title><rect x="826.6" y="227.0" width="74.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.6" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.36%)</title><rect x="826.6" y="211.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.36%)</title><rect x="826.6" y="195.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.36%)</title><rect x="826.6" y="179.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.36%)</title><rect x="826.6" y="163.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.36%)</title><rect x="826.6" y="147.0" width="4.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="829.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (133 samples, 5.98%)</title><rect x="830.8" y="211.0" width="70.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.8" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (133 samples, 5.98%)</title><rect x="830.8" y="195.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.8" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.45%)</title><rect x="830.8" y="179.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="833.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (41 samples, 1.84%)</title><rect x="836.1" y="179.0" width="21.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (41 samples, 1.84%)</title><rect x="836.1" y="163.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.1" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 1.17%)</title><rect x="836.1" y="147.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (26 samples, 1.17%)</title><rect x="836.1" y="131.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.1" y="142.0"></text>
</g>
<g>
<title>byte[] (26 samples, 1.17%)</title><rect x="836.1" y="115.0" width="13.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="839.1" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.67%)</title><rect x="849.9" y="147.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.9" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.67%)</title><rect x="849.9" y="131.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="852.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 1.26%)</title><rect x="857.9" y="179.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.9" y="190.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.58%)</title><rect x="857.9" y="163.0" width="6.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="860.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.49%)</title><rect x="864.8" y="163.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="867.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.18%)</title><rect x="870.6" y="163.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="873.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (44 samples, 1.98%)</title><rect x="872.7" y="179.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="875.7" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.67%)</title><rect x="872.7" y="163.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.67%)</title><rect x="872.7" y="147.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.67%)</title><rect x="872.7" y="131.0" width="8.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="875.7" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.27%)</title><rect x="880.7" y="163.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.7" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (6 samples, 0.27%)</title><rect x="880.7" y="147.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.7" y="158.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.27%)</title><rect x="880.7" y="131.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="883.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (23 samples, 1.03%)</title><rect x="883.9" y="163.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.9" y="174.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="883.9" y="147.0" width="5.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="886.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.54%)</title><rect x="889.7" y="147.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.54%)</title><rect x="889.7" y="131.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="892.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (10 samples, 0.45%)</title><rect x="896.1" y="179.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.1" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="896.1" y="163.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="899.1" y="174.0"></text>
</g>
<g>
<title>[async_worker_4 tid=35587] (142 samples, 6.38%)</title><rect x="901.4" y="275.0" width="75.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="904.4" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (142 samples, 6.38%)</title><rect x="901.4" y="259.0" width="75.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (142 samples, 6.38%)</title><rect x="901.4" y="243.0" width="75.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.4" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (142 samples, 6.38%)</title><rect x="901.4" y="227.0" width="75.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.18%)</title><rect x="901.4" y="211.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.18%)</title><rect x="901.4" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.13%)</title><rect x="901.4" y="179.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.13%)</title><rect x="901.4" y="163.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.13%)</title><rect x="901.4" y="147.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="904.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="903.0" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="903.0" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="903.0" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="903.0" y="131.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="903.0" y="115.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="906.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (138 samples, 6.21%)</title><rect x="903.5" y="211.0" width="73.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.5" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (138 samples, 6.21%)</title><rect x="903.5" y="195.0" width="73.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.5" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.13%)</title><rect x="903.5" y="179.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="906.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 2.11%)</title><rect x="905.1" y="179.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 2.11%)</title><rect x="905.1" y="163.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.1" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 1.44%)</title><rect x="905.1" y="147.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (32 samples, 1.44%)</title><rect x="905.1" y="131.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.1" y="142.0"></text>
</g>
<g>
<title>byte[] (32 samples, 1.44%)</title><rect x="905.1" y="115.0" width="17.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="908.1" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.67%)</title><rect x="922.1" y="147.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.1" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.67%)</title><rect x="922.1" y="131.0" width="7.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="925.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 1.39%)</title><rect x="930.0" y="179.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.0" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="930.0" y="163.0" width="6.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="933.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.54%)</title><rect x="936.4" y="163.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="939.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.31%)</title><rect x="942.8" y="163.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="945.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (46 samples, 2.07%)</title><rect x="946.5" y="179.0" width="24.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.5" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.81%)</title><rect x="946.5" y="163.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.81%)</title><rect x="946.5" y="147.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.81%)</title><rect x="946.5" y="131.0" width="9.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.5" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 0.63%)</title><rect x="956.0" y="163.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.0" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 0.63%)</title><rect x="956.0" y="147.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.0" y="158.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.63%)</title><rect x="956.0" y="131.0" width="7.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="959.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (14 samples, 0.63%)</title><rect x="963.4" y="163.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.18%)</title><rect x="963.4" y="147.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="966.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.45%)</title><rect x="965.6" y="147.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.45%)</title><rect x="965.6" y="131.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="968.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (11 samples, 0.49%)</title><rect x="970.9" y="179.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.9" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="970.9" y="163.0" width="5.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="973.9" y="174.0"></text>
</g>
<g>
<title>[async_worker_5 tid=33795] (138 samples, 6.21%)</title><rect x="976.7" y="275.0" width="73.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="979.7" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (138 samples, 6.21%)</title><rect x="976.7" y="259.0" width="73.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.7" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138 samples, 6.21%)</title><rect x="976.7" y="243.0" width="73.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="979.7" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138 samples, 6.21%)</title><rect x="976.7" y="227.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.7" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.31%)</title><rect x="976.7" y="211.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.31%)</title><rect x="976.7" y="195.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.31%)</title><rect x="976.7" y="179.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.31%)</title><rect x="976.7" y="163.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.31%)</title><rect x="976.7" y="147.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="979.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (131 samples, 5.89%)</title><rect x="980.4" y="211.0" width="69.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.4" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (131 samples, 5.89%)</title><rect x="980.4" y="195.0" width="69.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.4" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.31%)</title><rect x="980.4" y="179.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="983.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 1.26%)</title><rect x="984.1" y="179.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 1.26%)</title><rect x="984.1" y="163.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.85%)</title><rect x="984.1" y="147.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.85%)</title><rect x="984.1" y="131.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.1" y="142.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.85%)</title><rect x="984.1" y="115.0" width="10.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="987.1" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.40%)</title><rect x="994.2" y="147.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.2" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.40%)</title><rect x="994.2" y="131.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="997.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (32 samples, 1.44%)</title><rect x="999.0" y="179.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.0" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="999.0" y="163.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1002.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.54%)</title><rect x="1004.8" y="163.0" width="6.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1007.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.40%)</title><rect x="1011.2" y="163.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1014.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (55 samples, 2.47%)</title><rect x="1016.0" y="179.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.0" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.90%)</title><rect x="1016.0" y="163.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1019.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.90%)</title><rect x="1016.0" y="147.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.90%)</title><rect x="1016.0" y="131.0" width="10.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1019.0" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="1026.6" y="163.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.6" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="1026.6" y="147.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.6" y="158.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="1026.6" y="131.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1029.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (26 samples, 1.17%)</title><rect x="1031.4" y="163.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.4" y="174.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="1031.4" y="147.0" width="6.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1034.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.63%)</title><rect x="1037.7" y="147.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.63%)</title><rect x="1037.7" y="131.0" width="7.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1040.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (9 samples, 0.40%)</title><rect x="1045.2" y="179.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.2" y="190.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="1045.2" y="163.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1048.2" y="174.0"></text>
</g>
<g>
<title>[async_worker_6 tid=29699] (135 samples, 6.07%)</title><rect x="1049.9" y="275.0" width="71.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1052.9" y="286.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (135 samples, 6.07%)</title><rect x="1049.9" y="259.0" width="71.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.9" y="270.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135 samples, 6.07%)</title><rect x="1049.9" y="243.0" width="71.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.9" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135 samples, 6.07%)</title><rect x="1049.9" y="227.0" width="71.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.9" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.58%)</title><rect x="1049.9" y="211.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13 samples, 0.58%)</title><rect x="1049.9" y="195.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.54%)</title><rect x="1049.9" y="179.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.54%)</title><rect x="1049.9" y="163.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.54%)</title><rect x="1049.9" y="147.0" width="6.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1052.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="1056.3" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="1056.3" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="1056.3" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="1056.3" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="1056.3" y="115.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1059.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (122 samples, 5.49%)</title><rect x="1056.8" y="211.0" width="64.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.8" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (122 samples, 5.49%)</title><rect x="1056.8" y="195.0" width="64.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.8" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.31%)</title><rect x="1056.8" y="179.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1059.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 1.39%)</title><rect x="1060.5" y="179.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 1.39%)</title><rect x="1060.5" y="163.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.94%)</title><rect x="1060.5" y="147.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.94%)</title><rect x="1060.5" y="131.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.5" y="142.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.94%)</title><rect x="1060.5" y="115.0" width="11.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1063.5" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.45%)</title><rect x="1071.7" y="147.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.7" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.45%)</title><rect x="1071.7" y="131.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1074.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 1.26%)</title><rect x="1077.0" y="179.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.0" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.67%)</title><rect x="1077.0" y="163.0" width="7.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1080.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.18%)</title><rect x="1084.9" y="163.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1087.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.40%)</title><rect x="1087.1" y="163.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1090.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (45 samples, 2.02%)</title><rect x="1091.8" y="179.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.8" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.58%)</title><rect x="1091.8" y="163.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.58%)</title><rect x="1091.8" y="147.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.58%)</title><rect x="1091.8" y="131.0" width="6.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1094.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="1098.7" y="163.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.7" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 0.40%)</title><rect x="1098.7" y="147.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.7" y="158.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.40%)</title><rect x="1098.7" y="131.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1101.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (23 samples, 1.03%)</title><rect x="1103.5" y="163.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.5" y="174.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.45%)</title><rect x="1103.5" y="147.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1106.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.58%)</title><rect x="1108.8" y="147.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.58%)</title><rect x="1108.8" y="131.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1111.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (11 samples, 0.49%)</title><rect x="1115.7" y="179.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.7" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="1115.7" y="163.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1118.7" y="174.0"></text>
</g>
<g>
<title>[async_worker_7 tid=34563] (129 samples, 5.80%)</title><rect x="1121.6" y="275.0" width="68.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1124.6" y="286.0">[async_..</text>
</g>
<g>
<title>java/lang/Thread.run (129 samples, 5.80%)</title><rect x="1121.6" y="259.0" width="68.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.6" y="270.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (129 samples, 5.80%)</title><rect x="1121.6" y="243.0" width="68.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="254.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (129 samples, 5.80%)</title><rect x="1121.6" y="227.0" width="68.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.6" y="238.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.22%)</title><rect x="1121.6" y="211.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.22%)</title><rect x="1121.6" y="195.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.22%)</title><rect x="1121.6" y="179.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.22%)</title><rect x="1121.6" y="163.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.22%)</title><rect x="1121.6" y="147.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1124.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl$$Lambda$83/168350619.run (124 samples, 5.58%)</title><rect x="1124.2" y="211.0" width="65.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.2" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceAsyncImpl.lambda$get$1 (124 samples, 5.58%)</title><rect x="1124.2" y="195.0" width="65.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.2" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.27%)</title><rect x="1124.2" y="179.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1127.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 1.39%)</title><rect x="1127.4" y="179.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 1.39%)</title><rect x="1127.4" y="163.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.94%)</title><rect x="1127.4" y="147.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.94%)</title><rect x="1127.4" y="131.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.4" y="142.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.94%)</title><rect x="1127.4" y="115.0" width="11.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1130.4" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.45%)</title><rect x="1138.5" y="147.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.5" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.45%)</title><rect x="1138.5" y="131.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1141.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 1.39%)</title><rect x="1143.8" y="179.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.8" y="190.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.81%)</title><rect x="1143.8" y="163.0" width="9.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1146.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.40%)</title><rect x="1153.4" y="163.0" width="4.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1156.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.18%)</title><rect x="1158.2" y="163.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1161.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (44 samples, 1.98%)</title><rect x="1160.3" y="179.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.3" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.22%)</title><rect x="1160.3" y="163.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.22%)</title><rect x="1160.3" y="147.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.22%)</title><rect x="1160.3" y="131.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1163.3" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 0.49%)</title><rect x="1162.9" y="163.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.9" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 0.49%)</title><rect x="1162.9" y="147.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.9" y="158.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.49%)</title><rect x="1162.9" y="131.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1165.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (28 samples, 1.26%)</title><rect x="1168.8" y="163.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.8" y="174.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.63%)</title><rect x="1168.8" y="147.0" width="7.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1171.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.63%)</title><rect x="1176.2" y="147.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.63%)</title><rect x="1176.2" y="131.0" width="7.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1179.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (12 samples, 0.54%)</title><rect x="1183.6" y="179.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.6" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.54%)</title><rect x="1183.6" y="163.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1186.6" y="174.0"></text>
</g>
</g>
</svg>
