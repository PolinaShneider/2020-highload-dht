<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (3,273 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (4 samples, 0.12%)</title><rect x="10.0" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (3 samples, 0.09%)</title><rect x="10.0" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (3 samples, 0.09%)</title><rect x="10.0" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (3 samples, 0.09%)</title><rect x="10.0" y="211.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="10.0" y="195.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="10.4" y="195.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.4" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.03%)</title><rect x="11.1" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.03%)</title><rect x="11.1" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.03%)</title><rect x="11.1" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.03%)</title><rect x="11.1" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.03%)</title><rect x="11.1" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.03%)</title><rect x="11.1" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.1" y="174.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.03%)</title><rect x="11.1" y="147.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.1" y="158.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,269 samples, 99.88%)</title><rect x="11.4" y="259.0" width="1178.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="270.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (188 samples, 5.74%)</title><rect x="11.4" y="243.0" width="67.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.4" y="254.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (102 samples, 3.12%)</title><rect x="11.4" y="227.0" width="36.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.4" y="238.0">one..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (50 samples, 1.53%)</title><rect x="11.4" y="211.0" width="18.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.4" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (52 samples, 1.59%)</title><rect x="29.5" y="211.0" width="18.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="32.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (86 samples, 2.63%)</title><rect x="48.2" y="227.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.2" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (86 samples, 2.63%)</title><rect x="48.2" y="211.0" width="31.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.2" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (86 samples, 2.63%)</title><rect x="48.2" y="195.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.2" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (86 samples, 2.63%)</title><rect x="48.2" y="179.0" width="31.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.2" y="190.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (86 samples, 2.63%)</title><rect x="48.2" y="163.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.2" y="174.0">su..</text>
</g>
<g>
<title>java/util/HashSet.add (86 samples, 2.63%)</title><rect x="48.2" y="147.0" width="31.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.2" y="158.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (86 samples, 2.63%)</title><rect x="48.2" y="131.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.2" y="142.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (86 samples, 2.63%)</title><rect x="48.2" y="115.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.2" y="126.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.newNode (86 samples, 2.63%)</title><rect x="48.2" y="99.0" width="31.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.2" y="110.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node (86 samples, 2.63%)</title><rect x="48.2" y="83.0" width="31.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.2" y="94.0">ja..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,081 samples, 94.13%)</title><rect x="79.2" y="243.0" width="1110.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.2" y="254.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,081 samples, 94.13%)</title><rect x="79.2" y="227.0" width="1110.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.2" y="238.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,980 samples, 91.05%)</title><rect x="79.2" y="211.0" width="1074.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.2" y="222.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,606 samples, 49.07%)</title><rect x="79.2" y="195.0" width="579.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="206.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,606 samples, 49.07%)</title><rect x="79.2" y="179.0" width="579.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.2" y="190.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,476 samples, 45.10%)</title><rect x="79.2" y="163.0" width="532.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.2" y="174.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (450 samples, 13.75%)</title><rect x="79.2" y="147.0" width="162.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.2" y="158.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (450 samples, 13.75%)</title><rect x="79.2" y="131.0" width="162.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.2" y="142.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (255 samples, 7.79%)</title><rect x="79.2" y="115.0" width="92.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.2" y="126.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (255 samples, 7.79%)</title><rect x="79.2" y="99.0" width="92.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.2" y="110.0">one/nio/uti..</text>
</g>
<g>
<title>byte[] (255 samples, 7.79%)</title><rect x="79.2" y="83.0" width="92.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.2" y="94.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (195 samples, 5.96%)</title><rect x="171.2" y="115.0" width="70.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.2" y="126.0">one/nio/..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (103 samples, 3.15%)</title><rect x="171.2" y="99.0" width="37.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="174.2" y="110.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 2.81%)</title><rect x="208.3" y="99.0" width="33.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.3" y="110.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (92 samples, 2.81%)</title><rect x="208.3" y="83.0" width="33.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.3" y="94.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (92 samples, 2.81%)</title><rect x="208.3" y="67.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.3" y="78.0">on..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (92 samples, 2.81%)</title><rect x="208.3" y="51.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.3" y="62.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (92 samples, 2.81%)</title><rect x="208.3" y="35.0" width="33.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="211.3" y="46.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (104 samples, 3.18%)</title><rect x="241.5" y="147.0" width="37.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.5" y="158.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (104 samples, 3.18%)</title><rect x="241.5" y="131.0" width="37.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.5" y="142.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (104 samples, 3.18%)</title><rect x="241.5" y="115.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.5" y="126.0">jav..</text>
</g>
<g>
<title>java.lang.String (40 samples, 1.22%)</title><rect x="241.5" y="99.0" width="14.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="244.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 1.96%)</title><rect x="255.9" y="99.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.9" y="110.0">j..</text>
</g>
<g>
<title>byte[] (64 samples, 1.96%)</title><rect x="255.9" y="83.0" width="23.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="258.9" y="94.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceImpl.entity (922 samples, 28.17%)</title><rect x="279.0" y="147.0" width="332.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.0" y="158.0">ru/mail/polis/service/ServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 1.31%)</title><rect x="279.0" y="131.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 1.31%)</title><rect x="279.0" y="115.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 1.31%)</title><rect x="279.0" y="99.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 1.31%)</title><rect x="279.0" y="83.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.0" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.31%)</title><rect x="279.0" y="67.0" width="15.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="282.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (110 samples, 3.36%)</title><rect x="294.5" y="131.0" width="39.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.5" y="142.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (110 samples, 3.36%)</title><rect x="294.5" y="115.0" width="39.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.5" y="126.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (110 samples, 3.36%)</title><rect x="294.5" y="99.0" width="39.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="297.5" y="110.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/ServiceImpl.put (769 samples, 23.50%)</title><rect x="334.1" y="131.0" width="277.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.1" y="142.0">ru/mail/polis/service/ServiceImpl.put</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (118 samples, 3.61%)</title><rect x="334.1" y="115.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.1" y="126.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (118 samples, 3.61%)</title><rect x="334.1" y="99.0" width="42.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.1" y="110.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 3.61%)</title><rect x="334.1" y="83.0" width="42.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="337.1" y="94.0">java..</text>
</g>
<g>
<title>one.nio.http.Response (79 samples, 2.41%)</title><rect x="376.7" y="115.0" width="28.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.7" y="126.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (218 samples, 6.66%)</title><rect x="405.1" y="115.0" width="78.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.1" y="126.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (88 samples, 2.69%)</title><rect x="405.1" y="99.0" width="31.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="408.1" y="110.0">by..</text>
</g>
<g>
<title>java.lang.String[] (75 samples, 2.29%)</title><rect x="436.9" y="99.0" width="27.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="439.9" y="110.0">j..</text>
</g>
<g>
<title>java.lang.String (55 samples, 1.68%)</title><rect x="463.9" y="99.0" width="19.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="466.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.upsert (354 samples, 10.82%)</title><rect x="483.7" y="115.0" width="127.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.7" y="126.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (158 samples, 4.83%)</title><rect x="483.7" y="99.0" width="57.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.7" y="110.0">ru/mai..</text>
</g>
<g>
<title>byte[] (62 samples, 1.89%)</title><rect x="483.7" y="83.0" width="22.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="486.7" y="94.0">b..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (96 samples, 2.93%)</title><rect x="506.1" y="83.0" width="34.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.1" y="94.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (96 samples, 2.93%)</title><rect x="506.1" y="67.0" width="34.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="509.1" y="78.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (196 samples, 5.99%)</title><rect x="540.7" y="99.0" width="70.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.7" y="110.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (67 samples, 2.05%)</title><rect x="540.7" y="83.0" width="24.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="543.7" y="94.0">b..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (129 samples, 3.94%)</title><rect x="564.8" y="83.0" width="46.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.8" y="94.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (129 samples, 3.94%)</title><rect x="564.8" y="67.0" width="46.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="567.8" y="78.0">java..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (130 samples, 3.97%)</title><rect x="611.4" y="163.0" width="46.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.4" y="174.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (130 samples, 3.97%)</title><rect x="611.4" y="147.0" width="46.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.4" y="158.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (130 samples, 3.97%)</title><rect x="611.4" y="131.0" width="46.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.4" y="142.0">java..</text>
</g>
<g>
<title>java.lang.String (36 samples, 1.10%)</title><rect x="611.4" y="115.0" width="12.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="614.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (94 samples, 2.87%)</title><rect x="624.3" y="115.0" width="33.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.3" y="126.0">ja..</text>
</g>
<g>
<title>byte[] (94 samples, 2.87%)</title><rect x="624.3" y="99.0" width="33.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="627.3" y="110.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (607 samples, 18.55%)</title><rect x="658.2" y="195.0" width="218.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.2" y="206.0">one/nio/http/HttpSession.pars..</text>
</g>
<g>
<title>one.nio.http.Request (89 samples, 2.72%)</title><rect x="658.2" y="179.0" width="32.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.2" y="190.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (208 samples, 6.36%)</title><rect x="690.3" y="179.0" width="75.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.3" y="190.0">one/nio/..</text>
</g>
<g>
<title>java.lang.String[] (208 samples, 6.36%)</title><rect x="690.3" y="163.0" width="75.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="693.3" y="174.0">java.lan..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (310 samples, 9.47%)</title><rect x="765.3" y="179.0" width="111.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.3" y="190.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (310 samples, 9.47%)</title><rect x="765.3" y="163.0" width="111.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.3" y="174.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (144 samples, 4.40%)</title><rect x="765.3" y="147.0" width="51.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="768.3" y="158.0">char[]</text>
</g>
<g>
<title>java.lang.String (55 samples, 1.68%)</title><rect x="817.2" y="147.0" width="19.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="820.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 3.39%)</title><rect x="837.0" y="147.0" width="40.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.0" y="158.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 3.39%)</title><rect x="837.0" y="131.0" width="40.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.0" y="142.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (111 samples, 3.39%)</title><rect x="837.0" y="115.0" width="40.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.0" y="126.0">jav..</text>
</g>
<g>
<title>byte[] (111 samples, 3.39%)</title><rect x="837.0" y="99.0" width="40.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="840.0" y="110.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (91 samples, 2.78%)</title><rect x="877.1" y="195.0" width="32.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.1" y="206.0">on..</text>
</g>
<g>
<title>byte[] (91 samples, 2.78%)</title><rect x="877.1" y="179.0" width="32.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="880.1" y="190.0">by..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (121 samples, 3.70%)</title><rect x="909.9" y="195.0" width="43.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.9" y="206.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (121 samples, 3.70%)</title><rect x="909.9" y="179.0" width="43.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.9" y="190.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 3.70%)</title><rect x="909.9" y="163.0" width="43.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.9" y="174.0">java..</text>
</g>
<g>
<title>java.lang.String (61 samples, 1.86%)</title><rect x="909.9" y="147.0" width="22.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="912.9" y="158.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (60 samples, 1.83%)</title><rect x="931.9" y="147.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.9" y="158.0">j..</text>
</g>
<g>
<title>byte[] (60 samples, 1.83%)</title><rect x="931.9" y="131.0" width="21.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="934.9" y="142.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (555 samples, 16.96%)</title><rect x="953.5" y="195.0" width="200.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.5" y="206.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (555 samples, 16.96%)</title><rect x="953.5" y="179.0" width="200.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.5" y="190.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (270 samples, 8.25%)</title><rect x="953.5" y="163.0" width="97.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="956.5" y="174.0">char[]</text>
</g>
<g>
<title>java.lang.String (95 samples, 2.90%)</title><rect x="1050.8" y="163.0" width="34.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1053.8" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (190 samples, 5.81%)</title><rect x="1085.1" y="163.0" width="68.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.1" y="174.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (190 samples, 5.81%)</title><rect x="1085.1" y="147.0" width="68.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.1" y="158.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (190 samples, 5.81%)</title><rect x="1085.1" y="131.0" width="68.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1088.1" y="142.0">java/la..</text>
</g>
<g>
<title>byte[] (190 samples, 5.81%)</title><rect x="1085.1" y="115.0" width="68.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1088.1" y="126.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (101 samples, 3.09%)</title><rect x="1153.6" y="211.0" width="36.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.6" y="222.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (101 samples, 3.09%)</title><rect x="1153.6" y="195.0" width="36.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.6" y="206.0">one..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (101 samples, 3.09%)</title><rect x="1153.6" y="179.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.6" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (101 samples, 3.09%)</title><rect x="1153.6" y="163.0" width="36.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1156.6" y="174.0">jav..</text>
</g>
</g>
</svg>
