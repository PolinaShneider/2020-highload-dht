<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (4,930 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (48 samples, 0.97%)</title><rect x="10.0" y="691.0" width="11.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (48 samples, 0.97%)</title><rect x="10.0" y="675.0" width="11.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (48 samples, 0.97%)</title><rect x="10.0" y="659.0" width="11.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (10 samples, 0.20%)</title><rect x="10.0" y="643.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.06%)</title><rect x="11.7" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (18 samples, 0.37%)</title><rect x="12.6" y="643.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (18 samples, 0.37%)</title><rect x="12.6" y="627.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="15.6" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (19 samples, 0.39%)</title><rect x="16.9" y="643.0" width="4.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="19.9" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (18 samples, 0.37%)</title><rect x="17.2" y="627.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="20.2" y="638.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.04%)</title><rect x="21.5" y="691.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="24.5" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.04%)</title><rect x="22.0" y="691.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="25.0" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="22.4" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="25.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,971 samples, 60.26%)</title><rect x="22.9" y="691.0" width="711.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.9" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,971 samples, 60.26%)</title><rect x="22.9" y="675.0" width="711.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.9" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,971 samples, 60.26%)</title><rect x="22.9" y="659.0" width="711.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.9" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (355 samples, 7.20%)</title><rect x="22.9" y="643.0" width="85.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.9" y="654.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (258 samples, 5.23%)</title><rect x="22.9" y="627.0" width="61.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.9" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (16 samples, 0.32%)</title><rect x="23.2" y="611.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.32%)</title><rect x="23.2" y="595.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.32%)</title><rect x="23.2" y="579.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.2" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (14 samples, 0.28%)</title><rect x="23.6" y="563.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="26.6" y="574.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.20%)</title><rect x="24.1" y="547.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.1" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="26.5" y="547.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="29.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (238 samples, 4.83%)</title><rect x="27.0" y="611.0" width="57.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="622.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/895526520.apply (238 samples, 4.83%)</title><rect x="27.0" y="595.0" width="57.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (236 samples, 4.79%)</title><rect x="27.5" y="579.0" width="56.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.5" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (236 samples, 4.79%)</title><rect x="27.5" y="563.0" width="56.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.5" y="574.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="27.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="27.7" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.apply (2 samples, 0.04%)</title><rect x="28.0" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.04%)</title><rect x="28.0" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (198 samples, 4.02%)</title><rect x="28.4" y="547.0" width="47.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.4" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (198 samples, 4.02%)</title><rect x="28.4" y="531.0" width="47.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (198 samples, 4.02%)</title><rect x="28.4" y="515.0" width="47.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.4" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (77 samples, 1.56%)</title><rect x="28.4" y="499.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (76 samples, 1.54%)</title><rect x="28.7" y="483.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 1.54%)</title><rect x="28.7" y="467.0" width="18.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$377/2081876233.apply (76 samples, 1.54%)</title><rect x="28.7" y="451.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (76 samples, 1.54%)</title><rect x="28.7" y="435.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (76 samples, 1.54%)</title><rect x="28.7" y="419.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/1035282649.apply (76 samples, 1.54%)</title><rect x="28.7" y="403.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (76 samples, 1.54%)</title><rect x="28.7" y="387.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.04%)</title><rect x="28.7" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.04%)</title><rect x="28.7" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (74 samples, 1.50%)</title><rect x="29.1" y="371.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (70 samples, 1.42%)</title><rect x="29.1" y="355.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (70 samples, 1.42%)</title><rect x="29.1" y="339.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$464/2061587391.apply (69 samples, 1.40%)</title><rect x="29.4" y="323.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (67 samples, 1.36%)</title><rect x="29.9" y="307.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="30.1" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="30.1" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="30.1" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="30.1" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (11 samples, 0.22%)</title><rect x="30.8" y="291.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.22%)</title><rect x="30.8" y="275.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 0.20%)</title><rect x="31.1" y="259.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 0.20%)</title><rect x="31.1" y="243.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.14%)</title><rect x="31.1" y="227.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.14%)</title><rect x="31.1" y="211.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.14%)</title><rect x="31.1" y="195.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.1" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="31.1" y="179.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="34.1" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.10%)</title><rect x="31.1" y="163.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.1" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.10%)</title><rect x="31.1" y="147.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.1" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.04%)</title><rect x="31.8" y="131.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="32.3" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.06%)</title><rect x="32.7" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.06%)</title><rect x="32.7" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.06%)</title><rect x="32.7" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.06%)</title><rect x="32.7" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.06%)</title><rect x="32.7" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.06%)</title><rect x="32.7" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="32.7" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="32.7" y="115.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="32.7" y="99.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.7" y="110.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="32.7" y="83.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="35.7" y="94.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="32.7" y="67.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="35.7" y="78.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.06%)</title><rect x="32.7" y="51.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.7" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (51 samples, 1.03%)</title><rect x="33.5" y="291.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (36 samples, 0.73%)</title><rect x="33.7" y="275.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (14 samples, 0.28%)</title><rect x="33.9" y="259.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (5 samples, 0.10%)</title><rect x="33.9" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue (2 samples, 0.04%)</title><rect x="35.1" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$532/952561455.test (6 samples, 0.12%)</title><rect x="35.8" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6 samples, 0.12%)</title><rect x="35.8" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$85/11939193.test (3 samples, 0.06%)</title><rect x="36.6" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.06%)</title><rect x="36.6" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.6" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$78/302977067.test (3 samples, 0.06%)</title><rect x="36.6" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.6" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.06%)</title><rect x="36.6" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/657381435.test (3 samples, 0.06%)</title><rect x="36.6" y="147.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.06%)</title><rect x="36.6" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="36.6" y="115.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="36.6" y="99.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="36.6" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="36.8" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.8" y="78.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="36.8" y="51.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.8" y="62.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.04%)</title><rect x="36.8" y="35.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (20 samples, 0.41%)</title><rect x="37.5" y="259.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.41%)</title><rect x="37.5" y="243.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (20 samples, 0.41%)</title><rect x="37.5" y="227.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (19 samples, 0.39%)</title><rect x="37.8" y="211.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (16 samples, 0.32%)</title><rect x="38.2" y="195.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (15 samples, 0.30%)</title><rect x="38.5" y="179.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.accept (2 samples, 0.04%)</title><rect x="39.0" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.06%)</title><rect x="39.7" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.7" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.10%)</title><rect x="40.6" y="163.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.6" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.06%)</title><rect x="41.1" y="147.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.06%)</title><rect x="42.3" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (3 samples, 0.06%)</title><rect x="42.3" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.10%)</title><rect x="43.0" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.10%)</title><rect x="43.0" y="259.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (5 samples, 0.10%)</title><rect x="43.0" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.12%)</title><rect x="44.2" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.5" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.5" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.5" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.5" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="44.5" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="45.2" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4 samples, 0.08%)</title><rect x="45.9" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.08%)</title><rect x="45.9" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="45.9" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="45.9" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="46.1" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.06%)</title><rect x="46.1" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="46.4" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (2 samples, 0.04%)</title><rect x="46.4" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.04%)</title><rect x="46.4" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (121 samples, 2.45%)</title><rect x="46.9" y="499.0" width="28.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.9" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (121 samples, 2.45%)</title><rect x="46.9" y="483.0" width="28.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.9" y="494.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (113 samples, 2.29%)</title><rect x="46.9" y="467.0" width="27.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (113 samples, 2.29%)</title><rect x="46.9" y="451.0" width="27.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (113 samples, 2.29%)</title><rect x="46.9" y="435.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.9" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$223/1128961257.apply (112 samples, 2.27%)</title><rect x="47.1" y="419.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.1" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (112 samples, 2.27%)</title><rect x="47.1" y="403.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.1" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (112 samples, 2.27%)</title><rect x="47.1" y="387.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (59 samples, 1.20%)</title><rect x="47.1" y="371.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (56 samples, 1.14%)</title><rect x="47.8" y="355.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (55 samples, 1.12%)</title><rect x="48.1" y="339.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$352/524402461.apply (55 samples, 1.12%)</title><rect x="48.1" y="323.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (55 samples, 1.12%)</title><rect x="48.1" y="307.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (55 samples, 1.12%)</title><rect x="48.1" y="291.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (55 samples, 1.12%)</title><rect x="48.1" y="275.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (51 samples, 1.03%)</title><rect x="48.1" y="259.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.1" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.08%)</title><rect x="48.1" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.1" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.08%)</title><rect x="48.1" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (45 samples, 0.91%)</title><rect x="49.0" y="243.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (44 samples, 0.89%)</title><rect x="49.0" y="227.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (44 samples, 0.89%)</title><rect x="49.0" y="211.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.0" y="222.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (43 samples, 0.87%)</title><rect x="49.3" y="195.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="206.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (35 samples, 0.71%)</title><rect x="49.7" y="179.0" width="8.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="52.7" y="190.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (2 samples, 0.04%)</title><rect x="51.2" y="163.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="54.2" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.14%)</title><rect x="51.6" y="163.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="54.6" y="174.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.06%)</title><rect x="52.6" y="147.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="55.6" y="158.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="53.3" y="163.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="56.3" y="174.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="53.3" y="147.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="56.3" y="158.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (2 samples, 0.04%)</title><rect x="53.3" y="131.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="56.3" y="142.0"></text>
</g>
<g>
<title>OrderAccess::fence() (2 samples, 0.04%)</title><rect x="54.3" y="163.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="57.3" y="174.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (4 samples, 0.08%)</title><rect x="54.8" y="163.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="57.8" y="174.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (3 samples, 0.06%)</title><rect x="55.0" y="147.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="58.0" y="158.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.06%)</title><rect x="55.0" y="131.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="58.0" y="142.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (2 samples, 0.04%)</title><rect x="55.2" y="115.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="58.2" y="126.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (2 samples, 0.04%)</title><rect x="55.2" y="99.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="58.2" y="110.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.20%)</title><rect x="55.7" y="163.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="58.7" y="174.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="55.7" y="147.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.7" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="56.2" y="147.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="59.2" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (6 samples, 0.12%)</title><rect x="56.7" y="147.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="59.7" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (5 samples, 0.10%)</title><rect x="56.9" y="131.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="59.9" y="142.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (2 samples, 0.04%)</title><rect x="57.2" y="115.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="60.2" y="126.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="57.2" y="99.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.2" y="110.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_compiled_frame(int) (2 samples, 0.04%)</title><rect x="57.6" y="115.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/797814020.run (3 samples, 0.06%)</title><rect x="58.6" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (3 samples, 0.06%)</title><rect x="58.6" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.6" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (3 samples, 0.06%)</title><rect x="58.6" y="147.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.6" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.04%)</title><rect x="58.6" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (2 samples, 0.04%)</title><rect x="59.8" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="59.8" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="59.8" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="59.8" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="59.8" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.8" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="59.8" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.08%)</title><rect x="60.3" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.08%)</title><rect x="60.3" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.04%)</title><rect x="60.7" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (53 samples, 1.08%)</title><rect x="61.2" y="371.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (52 samples, 1.05%)</title><rect x="61.2" y="355.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.08%)</title><rect x="61.9" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.08%)</title><rect x="61.9" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (14 samples, 0.28%)</title><rect x="63.1" y="339.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (13 samples, 0.26%)</title><rect x="63.1" y="323.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.1" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.16%)</title><rect x="63.1" y="307.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="66.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.14%)</title><rect x="63.4" y="291.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="66.4" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.14%)</title><rect x="63.4" y="275.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (5 samples, 0.10%)</title><rect x="65.1" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="65.1" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="65.1" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.04%)</title><rect x="65.8" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="65.8" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.8" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="65.8" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="65.8" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.04%)</title><rect x="65.8" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (30 samples, 0.61%)</title><rect x="66.5" y="339.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.5" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.51%)</title><rect x="67.7" y="323.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.7" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.34%)</title><rect x="67.9" y="307.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.9" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.04%)</title><rect x="68.6" y="291.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="71.6" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.04%)</title><rect x="68.6" y="275.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="71.6" y="286.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (2 samples, 0.04%)</title><rect x="68.6" y="259.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="71.6" y="270.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.10%)</title><rect x="69.4" y="291.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="72.4" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="69.4" y="275.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="72.4" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (3 samples, 0.06%)</title><rect x="69.4" y="259.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="72.4" y="270.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.04%)</title><rect x="70.1" y="275.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="73.1" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (2 samples, 0.04%)</title><rect x="70.8" y="291.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.8" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.06%)</title><rect x="71.3" y="291.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="74.3" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (3 samples, 0.06%)</title><rect x="71.3" y="275.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="74.3" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (2 samples, 0.04%)</title><rect x="71.5" y="259.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="74.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1559228528.run (3 samples, 0.06%)</title><rect x="72.2" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.06%)</title><rect x="72.2" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.2" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.06%)</title><rect x="72.2" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.2" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.06%)</title><rect x="72.2" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.2" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="72.2" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.2" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="72.2" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.2" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.04%)</title><rect x="72.5" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.04%)</title><rect x="72.5" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.5" y="206.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="73.2" y="307.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="76.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="73.9" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="73.9" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="74.1" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.08%)</title><rect x="74.9" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.04%)</title><rect x="75.1" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.04%)</title><rect x="75.1" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2789112.linkToTargetMethod (2 samples, 0.04%)</title><rect x="75.1" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/962273869.invoke (2 samples, 0.04%)</title><rect x="75.1" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/132533114.invoke (2 samples, 0.04%)</title><rect x="75.1" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="75.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="75.1" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (9 samples, 0.18%)</title><rect x="75.8" y="547.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.12%)</title><rect x="76.1" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.08%)</title><rect x="76.1" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.04%)</title><rect x="76.5" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="77.0" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2 samples, 0.04%)</title><rect x="77.5" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="77.5" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.04%)</title><rect x="78.0" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (13 samples, 0.26%)</title><rect x="78.5" y="547.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (12 samples, 0.24%)</title><rect x="78.7" y="531.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.22%)</title><rect x="78.9" y="515.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="79.2" y="499.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="82.2" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.10%)</title><rect x="79.2" y="483.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.10%)</title><rect x="79.2" y="467.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.10%)</title><rect x="80.4" y="499.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.4" y="510.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.08%)</title><rect x="80.6" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.08%)</title><rect x="80.6" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.6" y="478.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="80.6" y="451.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="83.6" y="462.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.04%)</title><rect x="81.1" y="451.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="84.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (10 samples, 0.20%)</title><rect x="81.6" y="547.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (10 samples, 0.20%)</title><rect x="81.6" y="531.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (9 samples, 0.18%)</title><rect x="81.8" y="515.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.12%)</title><rect x="81.8" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.8" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.12%)</title><rect x="81.8" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.10%)</title><rect x="82.0" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.0" y="478.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.10%)</title><rect x="82.0" y="451.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="85.0" y="462.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.06%)</title><rect x="82.5" y="435.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="85.5" y="446.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (2 samples, 0.04%)</title><rect x="82.5" y="419.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="85.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="83.2" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.2" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.06%)</title><rect x="83.2" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="83.2" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="83.2" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.06%)</title><rect x="83.2" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="83.2" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.06%)</title><rect x="83.2" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.06%)</title><rect x="83.2" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get (2 samples, 0.04%)</title><rect x="84.0" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get (97 samples, 1.97%)</title><rect x="84.7" y="627.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.7" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$handleLocal$3 (97 samples, 1.97%)</title><rect x="84.7" y="611.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.7" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.get (97 samples, 1.97%)</title><rect x="84.7" y="595.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.7" y="606.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="84.9" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="84.9" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.04%)</title><rect x="85.4" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="85.4" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.get (85 samples, 1.72%)</title><rect x="85.9" y="579.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.9" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (83 samples, 1.68%)</title><rect x="86.1" y="563.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.1" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (83 samples, 1.68%)</title><rect x="86.1" y="547.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.1" y="558.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (83 samples, 1.68%)</title><rect x="86.1" y="531.0" width="19.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="89.1" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="86.1" y="515.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="89.1" y="526.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="87.5" y="515.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="90.5" y="526.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (74 samples, 1.50%)</title><rect x="88.3" y="515.0" width="17.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="91.3" y="526.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (10 samples, 0.20%)</title><rect x="89.2" y="499.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="92.2" y="510.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.14%)</title><rect x="89.7" y="483.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="92.7" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.12%)</title><rect x="89.9" y="467.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="92.9" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="90.2" y="451.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="93.2" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="90.2" y="435.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="93.2" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="91.6" y="499.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="94.6" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.10%)</title><rect x="92.1" y="499.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="95.1" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (2 samples, 0.04%)</title><rect x="92.3" y="483.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="95.3" y="494.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="92.8" y="483.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="95.8" y="494.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="93.8" y="499.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="96.8" y="510.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.06%)</title><rect x="93.8" y="483.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="96.8" y="494.0"></text>
</g>
<g>
<title>malloc_zone_malloc (3 samples, 0.06%)</title><rect x="93.8" y="467.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="96.8" y="478.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="94.0" y="451.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="97.0" y="462.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="94.0" y="435.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="97.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (47 samples, 0.95%)</title><rect x="94.5" y="499.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="97.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (46 samples, 0.93%)</title><rect x="94.7" y="483.0" width="11.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="97.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (46 samples, 0.93%)</title><rect x="94.7" y="467.0" width="11.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="97.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (46 samples, 0.93%)</title><rect x="94.7" y="451.0" width="11.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="97.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (45 samples, 0.91%)</title><rect x="94.7" y="435.0" width="10.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (41 samples, 0.83%)</title><rect x="95.7" y="419.0" width="9.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="98.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (38 samples, 0.77%)</title><rect x="96.4" y="403.0" width="9.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="99.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long long, bool, rocksdb::ReadCallback*, bool*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*) (2 samples, 0.04%)</title><rect x="100.5" y="387.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="103.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.37%)</title><rect x="101.0" y="387.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="104.0" y="398.0"></text>
</g>
<g>
<title>_platform_memcmp (4 samples, 0.08%)</title><rect x="102.9" y="371.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="105.9" y="382.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (5 samples, 0.10%)</title><rect x="103.8" y="371.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="106.8" y="382.0"></text>
</g>
<g>
<title>_platform_memcmp (5 samples, 0.10%)</title><rect x="103.8" y="355.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="106.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (7 samples, 0.14%)</title><rect x="106.2" y="579.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="106.9" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="106.9" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="106.9" y="531.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.9" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="107.2" y="515.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="110.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.06%)</title><rect x="107.9" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="108.1" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="108.1" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.08%)</title><rect x="108.6" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="108.6" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="108.6" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="108.6" y="595.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,196 samples, 44.54%)</title><rect x="109.6" y="643.0" width="525.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.6" y="654.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (182 samples, 3.69%)</title><rect x="110.0" y="627.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.0" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (172 samples, 3.49%)</title><rect x="110.5" y="611.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="110.8" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="110.8" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="110.8" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="111.0" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.0" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.04%)</title><rect x="111.0" y="531.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.0" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="111.0" y="515.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="114.0" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.04%)</title><rect x="111.0" y="499.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="114.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.08%)</title><rect x="111.5" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="111.5" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="111.5" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="111.5" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (163 samples, 3.31%)</title><rect x="112.7" y="595.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.7" y="606.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (163 samples, 3.31%)</title><rect x="112.7" y="579.0" width="39.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.7" y="590.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (154 samples, 3.12%)</title><rect x="114.8" y="563.0" width="36.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="117.8" y="574.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="115.1" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="118.1" y="558.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (147 samples, 2.98%)</title><rect x="115.8" y="547.0" width="35.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="118.8" y="558.0">Par..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (2 samples, 0.04%)</title><rect x="115.8" y="531.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="118.8" y="542.0"></text>
</g>
<g>
<title>__psynch_cvwait (142 samples, 2.88%)</title><rect x="116.5" y="531.0" width="34.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="119.5" y="542.0">__..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.06%)</title><rect x="151.7" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.06%)</title><rect x="151.7" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.06%)</title><rect x="151.7" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="151.7" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="151.7" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="151.7" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="542.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.06%)</title><rect x="151.7" y="515.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="154.7" y="526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="151.9" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="154.9" y="510.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.04%)</title><rect x="151.9" y="483.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="154.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="152.4" y="611.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="152.4" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="152.4" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="152.4" y="563.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="152.4" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.10%)</title><rect x="152.4" y="531.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="155.4" y="542.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.10%)</title><rect x="152.4" y="515.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="155.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.04%)</title><rect x="153.6" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="153.6" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="153.6" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="153.6" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="153.6" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2,010 samples, 40.77%)</title><rect x="154.1" y="627.0" width="481.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.1" y="638.0">java/util/concurrent/SynchronousQueue.poll</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,010 samples, 40.77%)</title><rect x="154.1" y="611.0" width="481.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.1" y="622.0">java/util/concurrent/SynchronousQueue$TransferStack.transfer</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (20 samples, 0.41%)</title><rect x="154.3" y="595.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.41%)</title><rect x="154.3" y="579.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.3" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (6 samples, 0.12%)</title><rect x="157.7" y="563.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="160.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1,989 samples, 40.34%)</title><rect x="159.1" y="595.0" width="476.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.1" y="606.0">java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1,987 samples, 40.30%)</title><rect x="159.6" y="579.0" width="475.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.6" y="590.0">java/util/concurrent/locks/LockSupport.parkNanos</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,853 samples, 37.59%)</title><rect x="174.2" y="563.0" width="443.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.2" y="574.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.04%)</title><rect x="180.2" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="183.2" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1,822 samples, 36.96%)</title><rect x="181.4" y="547.0" width="436.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.4" y="558.0">Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long)</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="182.3" y="531.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="185.3" y="542.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="183.5" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="186.5" y="542.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (2 samples, 0.04%)</title><rect x="184.0" y="531.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="187.0" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1,797 samples, 36.45%)</title><rect x="184.7" y="531.0" width="430.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="187.7" y="542.0">Parker::park(bool, long)</text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (2 samples, 0.04%)</title><rect x="186.9" y="515.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="189.9" y="526.0"></text>
</g>
<g>
<title>__gettimeofday (25 samples, 0.51%)</title><rect x="187.4" y="515.0" width="5.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="190.4" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (1,749 samples, 35.48%)</title><rect x="193.3" y="515.0" width="418.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="196.3" y="526.0">__psynch_cvwait</text>
</g>
<g>
<title>_pthread_cond_wait (7 samples, 0.14%)</title><rect x="612.0" y="515.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="615.0" y="526.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (4 samples, 0.08%)</title><rect x="613.9" y="515.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="616.9" y="526.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (2 samples, 0.04%)</title><rect x="614.4" y="499.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="617.4" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (3 samples, 0.06%)</title><rect x="615.3" y="531.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="618.3" y="542.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="616.3" y="531.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="619.3" y="542.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (73 samples, 1.48%)</title><rect x="617.7" y="563.0" width="17.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="620.7" y="574.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (32 samples, 0.65%)</title><rect x="627.5" y="547.0" width="7.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="630.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$544/870026340.run (155 samples, 3.14%)</title><rect x="635.2" y="643.0" width="37.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.2" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (155 samples, 3.14%)</title><rect x="635.2" y="627.0" width="37.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.2" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (155 samples, 3.14%)</title><rect x="635.2" y="611.0" width="37.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.2" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (154 samples, 3.12%)</title><rect x="635.4" y="595.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.4" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (153 samples, 3.10%)</title><rect x="635.7" y="579.0" width="36.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.7" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (153 samples, 3.10%)</title><rect x="635.7" y="563.0" width="36.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.7" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (153 samples, 3.10%)</title><rect x="635.7" y="547.0" width="36.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.7" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (153 samples, 3.10%)</title><rect x="635.7" y="531.0" width="36.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.7" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (153 samples, 3.10%)</title><rect x="635.7" y="515.0" width="36.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.7" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (153 samples, 3.10%)</title><rect x="635.7" y="499.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.7" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (152 samples, 3.08%)</title><rect x="635.9" y="483.0" width="36.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.9" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (31 samples, 0.63%)</title><rect x="635.9" y="467.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 0.49%)</title><rect x="636.4" y="451.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.47%)</title><rect x="636.6" y="435.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (22 samples, 0.45%)</title><rect x="636.6" y="419.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.45%)</title><rect x="636.6" y="403.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.6" y="414.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="636.9" y="387.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="639.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11 samples, 0.22%)</title><rect x="637.3" y="387.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.3" y="398.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="638.5" y="371.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="641.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$550/1834351860.apply (4 samples, 0.08%)</title><rect x="639.0" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.08%)</title><rect x="639.0" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.08%)</title><rect x="639.0" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.06%)</title><rect x="639.3" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="639.3" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.12%)</title><rect x="640.0" y="387.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.12%)</title><rect x="640.0" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.apply (5 samples, 0.10%)</title><rect x="640.2" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.08%)</title><rect x="640.5" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.08%)</title><rect x="640.5" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.apply (3 samples, 0.06%)</title><rect x="640.5" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.06%)</title><rect x="640.5" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="640.5" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="640.5" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.10%)</title><rect x="642.1" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.06%)</title><rect x="642.6" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (3 samples, 0.06%)</title><rect x="642.6" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.04%)</title><rect x="643.3" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.04%)</title><rect x="643.3" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="643.3" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (119 samples, 2.41%)</title><rect x="643.8" y="467.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.8" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (119 samples, 2.41%)</title><rect x="643.8" y="451.0" width="28.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.8" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (117 samples, 2.37%)</title><rect x="644.3" y="435.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.3" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (117 samples, 2.37%)</title><rect x="644.3" y="419.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.3" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$559/855460559.run (2 samples, 0.04%)</title><rect x="644.3" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.04%)</title><rect x="644.3" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.04%)</title><rect x="644.3" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (114 samples, 2.31%)</title><rect x="644.8" y="403.0" width="27.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.8" y="414.0">j..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (112 samples, 2.27%)</title><rect x="644.8" y="387.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.8" y="398.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (112 samples, 2.27%)</title><rect x="644.8" y="371.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.8" y="382.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (108 samples, 2.19%)</title><rect x="645.7" y="355.0" width="25.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.7" y="366.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (108 samples, 2.19%)</title><rect x="645.7" y="339.0" width="25.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.7" y="350.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (4 samples, 0.08%)</title><rect x="645.7" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="645.7" y="307.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.08%)</title><rect x="645.7" y="291.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (3 samples, 0.06%)</title><rect x="645.7" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.putBase (4 samples, 0.08%)</title><rect x="646.7" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (100 samples, 2.03%)</title><rect x="647.6" y="323.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.6" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (99 samples, 2.01%)</title><rect x="647.9" y="307.0" width="23.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.9" y="318.0">s..</text>
</g>
<g>
<title>writev (94 samples, 1.91%)</title><rect x="649.1" y="291.0" width="22.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="652.1" y="302.0">w..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="671.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (258 samples, 5.23%)</title><rect x="672.3" y="643.0" width="61.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.3" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (257 samples, 5.21%)</title><rect x="672.5" y="627.0" width="61.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.5" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (116 samples, 2.35%)</title><rect x="672.5" y="611.0" width="27.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.5" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (115 samples, 2.33%)</title><rect x="672.8" y="595.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (115 samples, 2.33%)</title><rect x="672.8" y="579.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.12%)</title><rect x="673.2" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5 samples, 0.10%)</title><rect x="673.5" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.10%)</title><rect x="673.5" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="674.0" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="674.0" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.06%)</title><rect x="674.0" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.04%)</title><rect x="674.2" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.04%)</title><rect x="674.2" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (107 samples, 2.17%)</title><rect x="674.7" y="563.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.7" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (107 samples, 2.17%)</title><rect x="674.7" y="547.0" width="25.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.7" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (107 samples, 2.17%)</title><rect x="674.7" y="531.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.7" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (107 samples, 2.17%)</title><rect x="674.7" y="515.0" width="25.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (59 samples, 1.20%)</title><rect x="674.7" y="499.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (59 samples, 1.20%)</title><rect x="674.7" y="483.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (59 samples, 1.20%)</title><rect x="674.7" y="467.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (58 samples, 1.18%)</title><rect x="674.9" y="451.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (58 samples, 1.18%)</title><rect x="674.9" y="435.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (57 samples, 1.16%)</title><rect x="674.9" y="419.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (57 samples, 1.16%)</title><rect x="674.9" y="403.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="674.9" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="675.2" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="675.2" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (52 samples, 1.05%)</title><rect x="675.6" y="387.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 1.05%)</title><rect x="675.6" y="371.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (41 samples, 0.83%)</title><rect x="675.6" y="355.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/1004347831.apply (23 samples, 0.47%)</title><rect x="676.6" y="339.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (23 samples, 0.47%)</title><rect x="676.6" y="323.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (23 samples, 0.47%)</title><rect x="676.6" y="307.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (23 samples, 0.47%)</title><rect x="676.6" y="291.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23 samples, 0.47%)</title><rect x="676.6" y="275.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (7 samples, 0.14%)</title><rect x="677.3" y="259.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (6 samples, 0.12%)</title><rect x="677.5" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.12%)</title><rect x="677.5" y="227.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.12%)</title><rect x="677.5" y="211.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.12%)</title><rect x="677.5" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.08%)</title><rect x="677.5" y="179.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.08%)</title><rect x="677.5" y="163.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.08%)</title><rect x="677.5" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.5" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.06%)</title><rect x="677.5" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="678.5" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.24%)</title><rect x="679.2" y="259.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$593/1019219775.run (12 samples, 0.24%)</title><rect x="679.2" y="243.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (12 samples, 0.24%)</title><rect x="679.2" y="227.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.12%)</title><rect x="679.2" y="211.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.10%)</title><rect x="679.5" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.10%)</title><rect x="679.5" y="179.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.5" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="680.2" y="163.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="683.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (6 samples, 0.12%)</title><rect x="680.7" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (6 samples, 0.12%)</title><rect x="680.7" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.7" y="206.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.10%)</title><rect x="680.7" y="179.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.7" y="190.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.10%)</title><rect x="680.7" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.7" y="174.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.08%)</title><rect x="680.9" y="147.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.9" y="158.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.06%)</title><rect x="681.1" y="131.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="684.1" y="142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="681.1" y="115.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="684.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.apply (14 samples, 0.28%)</title><rect x="682.1" y="339.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (14 samples, 0.28%)</title><rect x="682.1" y="323.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (11 samples, 0.22%)</title><rect x="682.1" y="307.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.20%)</title><rect x="682.3" y="291.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.20%)</title><rect x="682.3" y="275.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="286.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.14%)</title><rect x="683.1" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.1" y="270.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.12%)</title><rect x="683.3" y="243.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.12%)</title><rect x="683.3" y="227.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.3" y="238.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.04%)</title><rect x="684.3" y="211.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="687.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.06%)</title><rect x="684.7" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="685.0" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="685.0" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.18%)</title><rect x="685.4" y="355.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.18%)</title><rect x="685.4" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="685.4" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$483/1866005702.apply (7 samples, 0.14%)</title><rect x="685.9" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.14%)</title><rect x="685.9" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.12%)</title><rect x="685.9" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (6 samples, 0.12%)</title><rect x="685.9" y="275.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.9" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.10%)</title><rect x="686.2" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (5 samples, 0.10%)</title><rect x="686.2" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.2" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (2 samples, 0.04%)</title><rect x="686.2" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="686.6" y="227.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.04%)</title><rect x="687.6" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="687.6" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="687.6" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/1686384082.apply (2 samples, 0.04%)</title><rect x="688.1" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.04%)</title><rect x="688.1" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="688.1" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="688.1" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="688.1" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="688.1" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (47 samples, 0.95%)</title><rect x="688.8" y="499.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (2 samples, 0.04%)</title><rect x="689.5" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (6 samples, 0.12%)</title><rect x="690.0" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.10%)</title><rect x="690.2" y="467.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.10%)</title><rect x="690.2" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.06%)</title><rect x="691.4" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="691.4" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="691.4" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.06%)</title><rect x="692.2" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.06%)</title><rect x="692.2" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6 samples, 0.12%)</title><rect x="692.9" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.12%)</title><rect x="692.9" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.12%)</title><rect x="692.9" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.08%)</title><rect x="693.3" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (4 samples, 0.08%)</title><rect x="693.3" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="693.3" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="693.8" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (23 samples, 0.47%)</title><rect x="694.5" y="483.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.08%)</title><rect x="695.7" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="696.2" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (14 samples, 0.28%)</title><rect x="696.7" y="467.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.14%)</title><rect x="696.9" y="451.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.08%)</title><rect x="699.1" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.06%)</title><rect x="699.3" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (141 samples, 2.86%)</title><rect x="700.3" y="611.0" width="33.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.3" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.06%)</title><rect x="700.5" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (137 samples, 2.78%)</title><rect x="701.2" y="595.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.2" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (137 samples, 2.78%)</title><rect x="701.2" y="579.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (137 samples, 2.78%)</title><rect x="701.2" y="563.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (137 samples, 2.78%)</title><rect x="701.2" y="547.0" width="32.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.2" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="701.2" y="531.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.06%)</title><rect x="701.2" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.06%)</title><rect x="701.2" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.04%)</title><rect x="701.2" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.04%)</title><rect x="701.2" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (132 samples, 2.68%)</title><rect x="702.2" y="531.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (132 samples, 2.68%)</title><rect x="702.2" y="515.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (132 samples, 2.68%)</title><rect x="702.2" y="499.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.2" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (132 samples, 2.68%)</title><rect x="702.2" y="483.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (132 samples, 2.68%)</title><rect x="702.2" y="467.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.2" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (131 samples, 2.66%)</title><rect x="702.4" y="451.0" width="31.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.4" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/71894497.run (50 samples, 1.01%)</title><rect x="702.4" y="435.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (50 samples, 1.01%)</title><rect x="702.4" y="419.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (49 samples, 0.99%)</title><rect x="702.7" y="403.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="702.7" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (47 samples, 0.95%)</title><rect x="703.2" y="387.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="703.2" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.2" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="703.2" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="703.2" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (45 samples, 0.91%)</title><rect x="703.6" y="371.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.6" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="703.9" y="355.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="706.9" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.08%)</title><rect x="703.9" y="339.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="706.9" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.08%)</title><rect x="703.9" y="323.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="706.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (16 samples, 0.32%)</title><rect x="705.1" y="355.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (3 samples, 0.06%)</title><rect x="708.2" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.08%)</title><rect x="708.9" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="708.9" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="708.9" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.06%)</title><rect x="708.9" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.9" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.06%)</title><rect x="708.9" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.9" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.06%)</title><rect x="708.9" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.9" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.06%)</title><rect x="708.9" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (19 samples, 0.39%)</title><rect x="709.9" y="355.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (19 samples, 0.39%)</title><rect x="709.9" y="339.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.10%)</title><rect x="709.9" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.10%)</title><rect x="709.9" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.10%)</title><rect x="709.9" y="291.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.10%)</title><rect x="709.9" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.10%)</title><rect x="709.9" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (5 samples, 0.10%)</title><rect x="709.9" y="243.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.28%)</title><rect x="711.1" y="323.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (13 samples, 0.26%)</title><rect x="711.3" y="307.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (13 samples, 0.26%)</title><rect x="711.3" y="291.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (12 samples, 0.24%)</title><rect x="711.3" y="275.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12 samples, 0.24%)</title><rect x="711.3" y="259.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.3" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="711.3" y="243.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="714.3" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.10%)</title><rect x="711.3" y="227.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="714.3" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.08%)</title><rect x="711.3" y="211.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="714.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (7 samples, 0.14%)</title><rect x="712.5" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.08%)</title><rect x="713.2" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.2" y="238.0"></text>
</g>
<g>
<title>write (4 samples, 0.08%)</title><rect x="713.2" y="211.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="716.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$612/541262814.accept (4 samples, 0.08%)</title><rect x="714.4" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.08%)</title><rect x="714.4" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.08%)</title><rect x="714.4" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="714.4" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="714.4" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.04%)</title><rect x="714.4" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="714.4" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/544637637.accept (2 samples, 0.04%)</title><rect x="714.9" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.04%)</title><rect x="714.9" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (71 samples, 1.44%)</title><rect x="715.4" y="435.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (71 samples, 1.44%)</title><rect x="715.4" y="419.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (71 samples, 1.44%)</title><rect x="715.4" y="403.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (67 samples, 1.36%)</title><rect x="715.6" y="387.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (67 samples, 1.36%)</title><rect x="715.6" y="371.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (67 samples, 1.36%)</title><rect x="715.6" y="355.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (66 samples, 1.34%)</title><rect x="715.8" y="339.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="715.8" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="715.8" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.04%)</title><rect x="715.8" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$642/1652146549.accept (64 samples, 1.30%)</title><rect x="716.3" y="323.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (64 samples, 1.30%)</title><rect x="716.3" y="307.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (64 samples, 1.30%)</title><rect x="716.3" y="291.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 1.30%)</title><rect x="716.3" y="275.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 1.24%)</title><rect x="716.6" y="259.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 1.20%)</title><rect x="717.0" y="243.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (56 samples, 1.14%)</title><rect x="717.5" y="227.0" width="13.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (50 samples, 1.01%)</title><rect x="717.5" y="211.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (50 samples, 1.01%)</title><rect x="717.5" y="195.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (50 samples, 1.01%)</title><rect x="717.5" y="179.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (50 samples, 1.01%)</title><rect x="717.5" y="163.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 1.01%)</title><rect x="717.5" y="147.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (46 samples, 0.93%)</title><rect x="718.5" y="131.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.5" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (44 samples, 0.89%)</title><rect x="718.5" y="115.0" width="10.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="721.5" y="126.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.04%)</title><rect x="718.5" y="99.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.5" y="110.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (2 samples, 0.04%)</title><rect x="718.5" y="83.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="721.5" y="94.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (2 samples, 0.04%)</title><rect x="718.5" y="67.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.5" y="78.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="719.4" y="99.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="722.4" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (34 samples, 0.69%)</title><rect x="720.6" y="99.0" width="8.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="723.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.12%)</title><rect x="729.5" y="211.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.10%)</title><rect x="729.5" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.5" y="206.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="729.7" y="179.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="732.7" y="190.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="731.2" y="259.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="734.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.06%)</title><rect x="731.6" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.04%)</title><rect x="731.9" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.04%)</title><rect x="731.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.04%)</title><rect x="732.4" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.04%)</title><rect x="732.4" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="732.4" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="732.4" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.04%)</title><rect x="732.4" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (3 samples, 0.06%)</title><rect x="733.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (252 samples, 5.11%)</title><rect x="734.0" y="691.0" width="60.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.0" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (252 samples, 5.11%)</title><rect x="734.0" y="675.0" width="60.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.0" y="686.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (47 samples, 0.95%)</title><rect x="734.8" y="659.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (45 samples, 0.91%)</title><rect x="735.0" y="643.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (44 samples, 0.89%)</title><rect x="735.2" y="627.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (39 samples, 0.79%)</title><rect x="736.4" y="611.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (39 samples, 0.79%)</title><rect x="736.4" y="595.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (37 samples, 0.75%)</title><rect x="736.4" y="579.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 0.75%)</title><rect x="736.4" y="563.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (32 samples, 0.65%)</title><rect x="736.7" y="547.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.accept (32 samples, 0.65%)</title><rect x="736.7" y="531.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$resolve$0 (32 samples, 0.65%)</title><rect x="736.7" y="515.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (32 samples, 0.65%)</title><rect x="736.7" y="499.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.65%)</title><rect x="736.7" y="483.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.55%)</title><rect x="737.9" y="467.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="737.9" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="738.1" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.04%)</title><rect x="738.1" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="738.1" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.49%)</title><rect x="738.6" y="451.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.49%)</title><rect x="738.6" y="435.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (24 samples, 0.49%)</title><rect x="738.6" y="419.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (24 samples, 0.49%)</title><rect x="738.6" y="403.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (24 samples, 0.49%)</title><rect x="738.6" y="387.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.49%)</title><rect x="738.6" y="371.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.49%)</title><rect x="738.6" y="355.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.49%)</title><rect x="738.6" y="339.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (24 samples, 0.49%)</title><rect x="738.6" y="323.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (23 samples, 0.47%)</title><rect x="738.8" y="307.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.8" y="318.0"></text>
</g>
<g>
<title>write (22 samples, 0.45%)</title><rect x="739.1" y="291.0" width="5.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="742.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.08%)</title><rect x="744.3" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$187/991325733.apply (4 samples, 0.08%)</title><rect x="744.3" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertResponse (4 samples, 0.08%)</title><rect x="744.3" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.08%)</title><rect x="744.3" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.08%)</title><rect x="744.3" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="745.3" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="745.3" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="745.3" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.04%)</title><rect x="745.3" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (48 samples, 0.97%)</title><rect x="746.0" y="659.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.95%)</title><rect x="746.2" y="643.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.2" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (44 samples, 0.89%)</title><rect x="747.0" y="627.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="750.0" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (44 samples, 0.89%)</title><rect x="747.0" y="611.0" width="10.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="750.0" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (43 samples, 0.87%)</title><rect x="747.2" y="595.0" width="10.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (154 samples, 3.12%)</title><rect x="757.5" y="659.0" width="36.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (154 samples, 3.12%)</title><rect x="757.5" y="643.0" width="36.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.5" y="654.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (152 samples, 3.08%)</title><rect x="758.0" y="627.0" width="36.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="761.0" y="638.0">Uns..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.04%)</title><rect x="758.2" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="761.2" y="622.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (2 samples, 0.04%)</title><rect x="758.2" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.2" y="606.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (2 samples, 0.04%)</title><rect x="758.2" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="761.2" y="590.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (2 samples, 0.04%)</title><rect x="758.2" y="563.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="761.2" y="574.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="758.7" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="761.7" y="622.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="758.7" y="595.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.7" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.04%)</title><rect x="758.7" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="761.7" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (142 samples, 2.88%)</title><rect x="759.6" y="611.0" width="34.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="762.6" y="622.0">Pa..</text>
</g>
<g>
<title>__gettimeofday (7 samples, 0.14%)</title><rect x="759.6" y="595.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="762.6" y="606.0"></text>
</g>
<g>
<title>__psynch_cvwait (132 samples, 2.68%)</title><rect x="761.3" y="595.0" width="31.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="764.3" y="606.0">__..</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.06%)</title><rect x="792.9" y="595.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="795.9" y="606.0"></text>
</g>
<g>
<title>_pthread_testcancel (2 samples, 0.04%)</title><rect x="793.2" y="579.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="796.2" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="793.9" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="796.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (867 samples, 17.59%)</title><rect x="794.4" y="691.0" width="207.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.4" y="702.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (7 samples, 0.14%)</title><rect x="796.5" y="675.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (13 samples, 0.26%)</title><rect x="798.2" y="675.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.2" y="686.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="799.1" y="659.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="802.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$293/88605173.run (4 samples, 0.08%)</title><rect x="799.9" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$314/275545491.run (2 samples, 0.04%)</title><rect x="800.8" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (235 samples, 4.77%)</title><rect x="801.3" y="675.0" width="56.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.3" y="686.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$518/283147200.accept (225 samples, 4.56%)</title><rect x="801.3" y="659.0" width="53.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.3" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (225 samples, 4.56%)</title><rect x="801.3" y="643.0" width="53.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.3" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (225 samples, 4.56%)</title><rect x="801.3" y="627.0" width="53.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.3" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (224 samples, 4.54%)</title><rect x="801.5" y="611.0" width="53.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.5" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (223 samples, 4.52%)</title><rect x="801.8" y="595.0" width="53.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.8" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="801.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="801.8" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (220 samples, 4.46%)</title><rect x="802.5" y="579.0" width="52.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (220 samples, 4.46%)</title><rect x="802.5" y="563.0" width="52.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (220 samples, 4.46%)</title><rect x="802.5" y="547.0" width="52.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (220 samples, 4.46%)</title><rect x="802.5" y="531.0" width="52.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.5" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (219 samples, 4.44%)</title><rect x="802.7" y="515.0" width="52.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.7" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (218 samples, 4.42%)</title><rect x="802.7" y="499.0" width="52.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.7" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (218 samples, 4.42%)</title><rect x="802.7" y="483.0" width="52.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.7" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (122 samples, 2.47%)</title><rect x="803.2" y="467.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.2" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (122 samples, 2.47%)</title><rect x="803.2" y="451.0" width="29.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.2" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (121 samples, 2.45%)</title><rect x="803.4" y="435.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.4" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (119 samples, 2.41%)</title><rect x="803.9" y="419.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.9" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (119 samples, 2.41%)</title><rect x="803.9" y="403.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.9" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (118 samples, 2.39%)</title><rect x="804.2" y="387.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.2" y="398.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (118 samples, 2.39%)</title><rect x="804.2" y="371.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.2" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (118 samples, 2.39%)</title><rect x="804.2" y="355.0" width="28.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.2" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (118 samples, 2.39%)</title><rect x="804.2" y="339.0" width="28.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.2" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (116 samples, 2.35%)</title><rect x="804.2" y="323.0" width="27.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.2" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (116 samples, 2.35%)</title><rect x="804.2" y="307.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.2" y="318.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (114 samples, 2.31%)</title><rect x="804.6" y="291.0" width="27.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.6" y="302.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (107 samples, 2.17%)</title><rect x="806.3" y="275.0" width="25.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="809.3" y="286.0">U..</text>
</g>
<g>
<title>Parker::unpark() (8 samples, 0.16%)</title><rect x="806.6" y="259.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="809.6" y="270.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (8 samples, 0.16%)</title><rect x="806.6" y="243.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="809.6" y="254.0"></text>
</g>
<g>
<title>__psynch_mutexwait (8 samples, 0.16%)</title><rect x="806.6" y="227.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="809.6" y="238.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (2 samples, 0.04%)</title><rect x="808.5" y="259.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="811.5" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="809.0" y="259.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="812.0" y="270.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (2 samples, 0.04%)</title><rect x="809.0" y="243.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="812.0" y="254.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="809.4" y="259.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.4" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (87 samples, 1.76%)</title><rect x="809.9" y="259.0" width="20.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="812.9" y="270.0"></text>
</g>
<g>
<title>pthread_cond_signal (2 samples, 0.04%)</title><rect x="831.0" y="259.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="834.0" y="270.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (2 samples, 0.04%)</title><rect x="831.0" y="243.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="834.0" y="254.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="831.5" y="259.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="834.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.04%)</title><rect x="831.9" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (6 samples, 0.12%)</title><rect x="832.4" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.06%)</title><rect x="833.1" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="833.4" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="833.4" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="833.4" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="833.4" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="833.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.12%)</title><rect x="833.8" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.12%)</title><rect x="833.8" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.12%)</title><rect x="833.8" y="435.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.12%)</title><rect x="833.8" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.04%)</title><rect x="834.1" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="834.1" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="834.1" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="834.1" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="834.6" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="834.6" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (82 samples, 1.66%)</title><rect x="835.3" y="467.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (81 samples, 1.64%)</title><rect x="835.5" y="451.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.10%)</title><rect x="836.2" y="435.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.10%)</title><rect x="836.2" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="837.4" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="837.4" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="837.4" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="837.4" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (70 samples, 1.42%)</title><rect x="838.2" y="435.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (69 samples, 1.40%)</title><rect x="838.4" y="419.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 1.34%)</title><rect x="838.4" y="403.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (66 samples, 1.34%)</title><rect x="838.4" y="387.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (62 samples, 1.26%)</title><rect x="839.4" y="371.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.4" y="382.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.06%)</title><rect x="839.8" y="355.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="842.8" y="366.0"></text>
</g>
<g>
<title>si_module_with_name.modules (2 samples, 0.04%)</title><rect x="840.1" y="339.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.1" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (55 samples, 1.12%)</title><rect x="840.5" y="355.0" width="13.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="843.5" y="366.0"></text>
</g>
<g>
<title>si_module_with_name.modules (2 samples, 0.04%)</title><rect x="853.7" y="355.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="856.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="854.2" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="854.2" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="854.2" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="854.2" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$530/286927879.accept (10 samples, 0.20%)</title><rect x="855.1" y="659.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (10 samples, 0.20%)</title><rect x="855.1" y="643.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$516/1789985635.run (8 samples, 0.16%)</title><rect x="855.6" y="627.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (8 samples, 0.16%)</title><rect x="855.6" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (8 samples, 0.16%)</title><rect x="855.6" y="595.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.6" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.06%)</title><rect x="856.3" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.3" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.04%)</title><rect x="856.6" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="857.1" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="857.1" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="857.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.1" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="857.1" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (4 samples, 0.08%)</title><rect x="857.5" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="857.5" y="659.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.04%)</title><rect x="858.0" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.04%)</title><rect x="858.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="858.0" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="858.0" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.04%)</title><rect x="858.0" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (415 samples, 8.42%)</title><rect x="858.5" y="675.0" width="99.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.5" y="686.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$293/88605173.run (179 samples, 3.63%)</title><rect x="860.2" y="659.0" width="42.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.2" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (179 samples, 3.63%)</title><rect x="860.2" y="643.0" width="42.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.2" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 3.63%)</title><rect x="860.2" y="627.0" width="42.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.2" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 3.63%)</title><rect x="860.2" y="611.0" width="42.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.2" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (175 samples, 3.55%)</title><rect x="861.1" y="595.0" width="41.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.1" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (175 samples, 3.55%)</title><rect x="861.1" y="579.0" width="41.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.1" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (170 samples, 3.45%)</title><rect x="861.4" y="563.0" width="40.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.4" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (169 samples, 3.43%)</title><rect x="861.6" y="547.0" width="40.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.6" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.12%)</title><rect x="862.6" y="531.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.12%)</title><rect x="862.6" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (6 samples, 0.12%)</title><rect x="862.6" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.12%)</title><rect x="862.6" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.12%)</title><rect x="862.6" y="467.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.12%)</title><rect x="862.6" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.12%)</title><rect x="862.6" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (6 samples, 0.12%)</title><rect x="862.6" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (6 samples, 0.12%)</title><rect x="862.6" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (6 samples, 0.12%)</title><rect x="862.6" y="387.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="862.6" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="862.6" y="355.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.12%)</title><rect x="862.6" y="339.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="865.6" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.12%)</title><rect x="862.6" y="323.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="865.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (140 samples, 2.84%)</title><rect x="864.0" y="531.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (133 samples, 2.70%)</title><rect x="865.7" y="515.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.10%)</title><rect x="865.7" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.10%)</title><rect x="865.7" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.10%)</title><rect x="865.7" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.08%)</title><rect x="865.9" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.08%)</title><rect x="865.9" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.08%)</title><rect x="865.9" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.08%)</title><rect x="865.9" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.9" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.04%)</title><rect x="866.4" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (128 samples, 2.60%)</title><rect x="866.9" y="499.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.9" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 2.60%)</title><rect x="866.9" y="483.0" width="30.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.9" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 2.60%)</title><rect x="866.9" y="467.0" width="30.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.9" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (116 samples, 2.35%)</title><rect x="869.3" y="451.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (116 samples, 2.35%)</title><rect x="869.3" y="435.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (115 samples, 2.33%)</title><rect x="869.3" y="419.0" width="27.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (115 samples, 2.33%)</title><rect x="869.3" y="403.0" width="27.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (113 samples, 2.29%)</title><rect x="869.3" y="387.0" width="27.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (113 samples, 2.29%)</title><rect x="869.3" y="371.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.3" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (111 samples, 2.25%)</title><rect x="869.7" y="355.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.7" y="366.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (107 samples, 2.17%)</title><rect x="870.7" y="339.0" width="25.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="873.7" y="350.0">U..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.06%)</title><rect x="870.9" y="323.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="873.9" y="334.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.06%)</title><rect x="870.9" y="307.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="873.9" y="318.0"></text>
</g>
<g>
<title>__psynch_mutexwait (3 samples, 0.06%)</title><rect x="870.9" y="291.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="873.9" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (2 samples, 0.04%)</title><rect x="871.9" y="323.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="874.9" y="334.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (2 samples, 0.04%)</title><rect x="871.9" y="307.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="874.9" y="318.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (2 samples, 0.04%)</title><rect x="871.9" y="291.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.9" y="302.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (2 samples, 0.04%)</title><rect x="871.9" y="275.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="874.9" y="286.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="872.4" y="323.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="875.4" y="334.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (3 samples, 0.06%)</title><rect x="872.4" y="307.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="875.4" y="318.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="873.1" y="323.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="876.1" y="334.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="873.3" y="307.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="876.3" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (89 samples, 1.81%)</title><rect x="873.8" y="323.0" width="21.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="876.8" y="334.0">_..</text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="895.4" y="323.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="898.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.04%)</title><rect x="896.3" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="897.0" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="897.5" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.04%)</title><rect x="897.5" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (17 samples, 0.34%)</title><rect x="898.0" y="531.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (17 samples, 0.34%)</title><rect x="898.0" y="515.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="898.5" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="898.5" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="898.5" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.24%)</title><rect x="899.2" y="499.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.24%)</title><rect x="899.2" y="483.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.24%)</title><rect x="899.2" y="467.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (12 samples, 0.24%)</title><rect x="899.2" y="451.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (12 samples, 0.24%)</title><rect x="899.2" y="435.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.2" y="446.0"></text>
</g>
<g>
<title>rpc_errlist (11 samples, 0.22%)</title><rect x="899.4" y="419.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="902.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.08%)</title><rect x="902.1" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$314/275545491.run (229 samples, 4.65%)</title><rect x="903.0" y="659.0" width="54.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.0" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (229 samples, 4.65%)</title><rect x="903.0" y="643.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.0" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (228 samples, 4.62%)</title><rect x="903.0" y="627.0" width="54.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.0" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (228 samples, 4.62%)</title><rect x="903.0" y="611.0" width="54.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (228 samples, 4.62%)</title><rect x="903.0" y="595.0" width="54.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.0" y="606.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (228 samples, 4.62%)</title><rect x="903.0" y="579.0" width="54.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (227 samples, 4.60%)</title><rect x="903.0" y="563.0" width="54.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (227 samples, 4.60%)</title><rect x="903.0" y="547.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="558.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (222 samples, 4.50%)</title><rect x="904.2" y="531.0" width="53.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.2" y="542.0">jdk/i..</text>
</g>
<g>
<title>Thread::current() (2 samples, 0.04%)</title><rect x="905.4" y="515.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="908.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (214 samples, 4.34%)</title><rect x="906.1" y="515.0" width="51.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="909.1" y="526.0">Unsaf..</text>
</g>
<g>
<title>Parker::unpark() (17 samples, 0.34%)</title><rect x="906.6" y="499.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="909.6" y="510.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (17 samples, 0.34%)</title><rect x="906.6" y="483.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="909.6" y="494.0"></text>
</g>
<g>
<title>__psynch_mutexwait (17 samples, 0.34%)</title><rect x="906.6" y="467.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="909.6" y="478.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (2 samples, 0.04%)</title><rect x="910.7" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="913.7" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.14%)</title><rect x="911.6" y="499.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="914.6" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="912.8" y="483.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="915.8" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (174 samples, 3.53%)</title><rect x="913.3" y="499.0" width="41.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="916.3" y="510.0">__p..</text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.04%)</title><rect x="955.0" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="958.0" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal (2 samples, 0.04%)</title><rect x="955.4" y="499.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="958.4" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.10%)</title><rect x="955.9" y="499.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="958.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6 samples, 0.12%)</title><rect x="957.8" y="675.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.10%)</title><rect x="958.1" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.06%)</title><rect x="958.5" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.06%)</title><rect x="959.3" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2 samples, 0.04%)</title><rect x="960.0" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (156 samples, 3.16%)</title><rect x="960.5" y="675.0" width="37.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.5" y="686.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (156 samples, 3.16%)</title><rect x="960.5" y="659.0" width="37.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.5" y="670.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (153 samples, 3.10%)</title><rect x="961.2" y="643.0" width="36.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.2" y="654.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (141 samples, 2.86%)</title><rect x="961.2" y="627.0" width="33.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.2" y="638.0">su..</text>
</g>
<g>
<title>kevent (139 samples, 2.82%)</title><rect x="961.7" y="611.0" width="33.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="964.7" y="622.0">ke..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (12 samples, 0.24%)</title><rect x="994.9" y="627.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (6 samples, 0.12%)</title><rect x="995.2" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (6 samples, 0.12%)</title><rect x="995.2" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.2" y="606.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 0.10%)</title><rect x="995.4" y="579.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="998.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.10%)</title><rect x="996.6" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="997.1" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="997.1" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="997.1" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (14 samples, 0.28%)</title><rect x="997.8" y="675.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.28%)</title><rect x="997.8" y="659.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (14 samples, 0.28%)</title><rect x="997.8" y="643.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (13 samples, 0.26%)</title><rect x="997.8" y="627.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.8" y="638.0"></text>
</g>
<g>
<title>kevent (11 samples, 0.22%)</title><rect x="998.3" y="611.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1001.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.04%)</title><rect x="1001.4" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="1001.4" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.4" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (783 samples, 15.88%)</title><rect x="1001.9" y="691.0" width="187.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.9" y="702.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (234 samples, 4.75%)</title><rect x="1002.8" y="675.0" width="56.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.8" y="686.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (2 samples, 0.04%)</title><rect x="1003.5" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.5" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="1004.3" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1007.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (225 samples, 4.56%)</title><rect x="1005.0" y="659.0" width="53.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.0" y="670.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (225 samples, 4.56%)</title><rect x="1005.0" y="643.0" width="53.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.0" y="654.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (224 samples, 4.54%)</title><rect x="1005.2" y="627.0" width="53.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.2" y="638.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (206 samples, 4.18%)</title><rect x="1005.2" y="611.0" width="49.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.2" y="622.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.04%)</title><rect x="1007.9" y="595.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1010.9" y="606.0"></text>
</g>
<g>
<title>kevent (193 samples, 3.91%)</title><rect x="1008.3" y="595.0" width="46.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1011.3" y="606.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 0.16%)</title><rect x="1054.5" y="611.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.16%)</title><rect x="1054.5" y="595.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="1055.2" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.06%)</title><rect x="1055.2" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.06%)</title><rect x="1055.2" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.06%)</title><rect x="1055.2" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (4 samples, 0.08%)</title><rect x="1056.4" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.08%)</title><rect x="1057.4" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.08%)</title><rect x="1057.4" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.4" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.06%)</title><rect x="1057.6" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.6" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.06%)</title><rect x="1057.6" y="563.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.06%)</title><rect x="1057.6" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.04%)</title><rect x="1058.4" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (545 samples, 11.05%)</title><rect x="1058.8" y="675.0" width="130.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.8" y="686.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (545 samples, 11.05%)</title><rect x="1058.8" y="659.0" width="130.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.8" y="670.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (507 samples, 10.28%)</title><rect x="1058.8" y="643.0" width="121.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.8" y="654.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (488 samples, 9.90%)</title><rect x="1061.0" y="627.0" width="116.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.0" y="638.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (482 samples, 9.78%)</title><rect x="1062.4" y="611.0" width="115.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.4" y="622.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (474 samples, 9.61%)</title><rect x="1062.4" y="595.0" width="113.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.4" y="606.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="1062.4" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1062.4" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1062.4" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.04%)</title><rect x="1062.9" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="1062.9" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.entity (470 samples, 9.53%)</title><rect x="1063.4" y="579.0" width="112.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.4" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (148 samples, 3.00%)</title><rect x="1063.4" y="563.0" width="35.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.4" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (3 samples, 0.06%)</title><rect x="1063.4" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (3 samples, 0.06%)</title><rect x="1063.4" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (145 samples, 2.94%)</title><rect x="1064.1" y="547.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.1" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (145 samples, 2.94%)</title><rect x="1064.1" y="531.0" width="34.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (144 samples, 2.92%)</title><rect x="1064.1" y="515.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (144 samples, 2.92%)</title><rect x="1064.1" y="499.0" width="34.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.1" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (144 samples, 2.92%)</title><rect x="1064.1" y="483.0" width="34.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.1" y="494.0">jd..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (139 samples, 2.82%)</title><rect x="1065.3" y="467.0" width="33.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1068.3" y="478.0">Un..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1065.3" y="451.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1068.3" y="462.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="1066.0" y="451.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.0" y="462.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (130 samples, 2.64%)</title><rect x="1066.5" y="451.0" width="31.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.5" y="462.0">Pa..</text>
</g>
<g>
<title>__psynch_cvwait (126 samples, 2.56%)</title><rect x="1067.0" y="435.0" width="30.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1070.0" y="446.0">__..</text>
</g>
<g>
<title>_pthread_cond_wait (2 samples, 0.04%)</title><rect x="1097.1" y="435.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1100.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handle (222 samples, 4.50%)</title><rect x="1098.8" y="563.0" width="53.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.8" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (31 samples, 0.63%)</title><rect x="1099.0" y="547.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (31 samples, 0.63%)</title><rect x="1099.0" y="531.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (31 samples, 0.63%)</title><rect x="1099.0" y="515.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.61%)</title><rect x="1099.3" y="499.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (30 samples, 0.61%)</title><rect x="1099.3" y="483.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="1099.3" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="1099.3" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="1099.3" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title><rect x="1099.3" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="1099.3" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.12%)</title><rect x="1099.8" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.12%)</title><rect x="1099.8" y="451.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.10%)</title><rect x="1100.0" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="1100.0" y="419.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="1100.0" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.08%)</title><rect x="1100.2" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (4 samples, 0.08%)</title><rect x="1100.2" y="371.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1103.2" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.08%)</title><rect x="1100.2" y="355.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.08%)</title><rect x="1100.2" y="339.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1103.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.45%)</title><rect x="1101.2" y="467.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.45%)</title><rect x="1101.2" y="451.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.45%)</title><rect x="1101.2" y="435.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.45%)</title><rect x="1101.2" y="419.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.45%)</title><rect x="1101.2" y="403.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.2" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (22 samples, 0.45%)</title><rect x="1101.2" y="387.0" width="5.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1104.2" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (19 samples, 0.39%)</title><rect x="1101.9" y="371.0" width="4.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1104.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.proxy (173 samples, 3.51%)</title><rect x="1106.5" y="547.0" width="41.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.5" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.06%)</title><rect x="1106.9" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="1106.9" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (136 samples, 2.76%)</title><rect x="1107.7" y="531.0" width="32.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.7" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (136 samples, 2.76%)</title><rect x="1107.7" y="515.0" width="32.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (136 samples, 2.76%)</title><rect x="1107.7" y="499.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.7" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (136 samples, 2.76%)</title><rect x="1107.7" y="483.0" width="32.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.7" y="494.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.04%)</title><rect x="1108.4" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="1108.4" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="1108.4" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (52 samples, 1.05%)</title><rect x="1108.9" y="467.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.06%)</title><rect x="1109.8" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.06%)</title><rect x="1109.8" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="1109.8" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="1109.8" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="1109.8" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="1109.8" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.04%)</title><rect x="1109.8" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.04%)</title><rect x="1109.8" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1112.8" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="1109.8" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (38 samples, 0.77%)</title><rect x="1111.0" y="451.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.0" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (38 samples, 0.77%)</title><rect x="1111.0" y="435.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.0" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (37 samples, 0.75%)</title><rect x="1111.3" y="419.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.3" y="430.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (21 samples, 0.43%)</title><rect x="1111.5" y="403.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.5" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="1112.9" y="387.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.9" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.06%)</title><rect x="1112.9" y="371.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.9" y="382.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (2 samples, 0.04%)</title><rect x="1112.9" y="355.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1115.9" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.06%)</title><rect x="1113.6" y="387.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.6" y="398.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.06%)</title><rect x="1114.4" y="387.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.4" y="398.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="1114.4" y="371.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1117.4" y="382.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (2 samples, 0.04%)</title><rect x="1114.4" y="355.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.4" y="366.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.10%)</title><rect x="1115.3" y="387.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1118.3" y="398.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.06%)</title><rect x="1115.3" y="371.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.3" y="382.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (2 samples, 0.04%)</title><rect x="1116.0" y="371.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1119.0" y="382.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (2 samples, 0.04%)</title><rect x="1116.0" y="355.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.0" y="366.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.18%)</title><rect x="1117.5" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.5" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.18%)</title><rect x="1117.5" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.08%)</title><rect x="1117.5" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="1117.5" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="1117.5" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.5" y="350.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.10%)</title><rect x="1118.4" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.4" y="382.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.08%)</title><rect x="1118.7" y="355.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.7" y="366.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.08%)</title><rect x="1118.7" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1120.1" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1120.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.04%)</title><rect x="1120.8" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="1120.8" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.14%)</title><rect x="1121.3" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1121.3" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (4 samples, 0.08%)</title><rect x="1122.0" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (4 samples, 0.08%)</title><rect x="1122.0" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.04%)</title><rect x="1122.0" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.04%)</title><rect x="1122.0" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.04%)</title><rect x="1122.0" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.04%)</title><rect x="1122.0" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (2 samples, 0.04%)</title><rect x="1122.0" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.04%)</title><rect x="1122.5" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.04%)</title><rect x="1122.5" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.04%)</title><rect x="1122.5" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.04%)</title><rect x="1122.5" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (72 samples, 1.46%)</title><rect x="1123.0" y="467.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (69 samples, 1.40%)</title><rect x="1123.0" y="451.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 1.38%)</title><rect x="1123.0" y="435.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (68 samples, 1.38%)</title><rect x="1123.0" y="419.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (68 samples, 1.38%)</title><rect x="1123.0" y="403.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (68 samples, 1.38%)</title><rect x="1123.0" y="387.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (68 samples, 1.38%)</title><rect x="1123.0" y="371.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (66 samples, 1.34%)</title><rect x="1123.5" y="355.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.5" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (60 samples, 1.22%)</title><rect x="1123.9" y="339.0" width="14.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1126.9" y="350.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="1124.2" y="323.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.2" y="334.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (2 samples, 0.04%)</title><rect x="1124.2" y="307.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1127.2" y="318.0"></text>
</g>
<g>
<title>__psynch_mutexwait (2 samples, 0.04%)</title><rect x="1124.2" y="291.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1127.2" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="1125.4" y="323.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.4" y="334.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="1125.9" y="307.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.9" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (48 samples, 0.97%)</title><rect x="1126.3" y="323.0" width="11.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1129.3" y="334.0"></text>
</g>
<g>
<title>os::verify_stack_alignment() (2 samples, 0.04%)</title><rect x="1138.5" y="339.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.06%)</title><rect x="1139.5" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="1139.5" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="1139.5" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertRequest (32 samples, 0.65%)</title><rect x="1140.2" y="531.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.create (24 samples, 0.49%)</title><rect x="1140.7" y="515.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (22 samples, 0.45%)</title><rect x="1141.2" y="499.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (22 samples, 0.45%)</title><rect x="1141.2" y="483.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.06%)</title><rect x="1141.2" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.06%)</title><rect x="1141.2" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.2" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="1141.4" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.04%)</title><rect x="1141.9" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="1141.9" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (17 samples, 0.34%)</title><rect x="1142.4" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.4" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (11 samples, 0.22%)</title><rect x="1142.8" y="451.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.12%)</title><rect x="1143.1" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.08%)</title><rect x="1143.1" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.04%)</title><rect x="1144.0" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.04%)</title><rect x="1144.0" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.0" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="1144.0" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="1144.5" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="1145.5" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1145.7" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1145.7" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="1145.7" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.06%)</title><rect x="1147.2" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1147.2" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.06%)</title><rect x="1147.2" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1150.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.06%)</title><rect x="1147.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.04%)</title><rect x="1147.4" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.resolve (4 samples, 0.08%)</title><rect x="1147.9" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (4 samples, 0.08%)</title><rect x="1147.9" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (4 samples, 0.08%)</title><rect x="1147.9" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="1148.4" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.markTargetRequest (12 samples, 0.24%)</title><rect x="1149.1" y="547.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (6 samples, 0.12%)</title><rect x="1150.0" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (3 samples, 0.06%)</title><rect x="1150.0" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.0" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (3 samples, 0.06%)</title><rect x="1150.0" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.06%)</title><rect x="1150.7" y="515.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (29 samples, 0.59%)</title><rect x="1151.9" y="563.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1154.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (29 samples, 0.59%)</title><rect x="1151.9" y="547.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (29 samples, 0.59%)</title><rect x="1151.9" y="531.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.59%)</title><rect x="1151.9" y="515.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (28 samples, 0.57%)</title><rect x="1152.2" y="499.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.14%)</title><rect x="1152.4" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.14%)</title><rect x="1152.4" y="467.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.14%)</title><rect x="1152.4" y="451.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.14%)</title><rect x="1152.4" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.14%)</title><rect x="1152.4" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.14%)</title><rect x="1152.4" y="403.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (7 samples, 0.14%)</title><rect x="1152.4" y="387.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1155.4" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.14%)</title><rect x="1152.4" y="371.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 0.14%)</title><rect x="1152.4" y="355.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1155.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.41%)</title><rect x="1154.1" y="483.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.41%)</title><rect x="1154.1" y="467.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.41%)</title><rect x="1154.1" y="451.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.41%)</title><rect x="1154.1" y="435.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.41%)</title><rect x="1154.1" y="419.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.1" y="430.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (18 samples, 0.37%)</title><rect x="1154.6" y="403.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1157.6" y="414.0"></text>
</g>
<g>
<title>__psynch_cvsignal (15 samples, 0.30%)</title><rect x="1155.3" y="387.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1158.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (71 samples, 1.44%)</title><rect x="1158.9" y="563.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (71 samples, 1.44%)</title><rect x="1158.9" y="547.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 1.34%)</title><rect x="1159.4" y="531.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1162.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="1159.4" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 1.28%)</title><rect x="1160.1" y="515.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 1.26%)</title><rect x="1160.3" y="499.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (62 samples, 1.26%)</title><rect x="1160.3" y="483.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (62 samples, 1.26%)</title><rect x="1160.3" y="467.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (61 samples, 1.24%)</title><rect x="1160.6" y="451.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (61 samples, 1.24%)</title><rect x="1160.6" y="435.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (61 samples, 1.24%)</title><rect x="1160.6" y="419.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (61 samples, 1.24%)</title><rect x="1160.6" y="403.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (61 samples, 1.24%)</title><rect x="1160.6" y="387.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.6" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1160.6" y="371.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1163.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (59 samples, 1.20%)</title><rect x="1161.0" y="371.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.0" y="382.0"></text>
</g>
<g>
<title>write (56 samples, 1.14%)</title><rect x="1161.8" y="355.0" width="13.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1164.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="1175.2" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1175.4" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1175.4" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.4" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1175.4" y="483.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1178.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.04%)</title><rect x="1175.9" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="1176.4" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="1176.8" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="1176.8" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.08%)</title><rect x="1177.8" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="1178.8" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1179.2" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1179.2" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1179.7" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1179.7" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 0.77%)</title><rect x="1180.2" y="643.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (38 samples, 0.77%)</title><rect x="1180.2" y="627.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (38 samples, 0.77%)</title><rect x="1180.2" y="611.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.08%)</title><rect x="1180.2" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="1180.2" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="1181.1" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1184.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="1181.1" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="1181.1" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.65%)</title><rect x="1181.6" y="595.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.65%)</title><rect x="1181.6" y="579.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (29 samples, 0.59%)</title><rect x="1181.6" y="563.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (29 samples, 0.59%)</title><rect x="1181.6" y="547.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (29 samples, 0.59%)</title><rect x="1181.6" y="531.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.6" y="542.0"></text>
</g>
<g>
<title>rpc_errlist (26 samples, 0.53%)</title><rect x="1182.3" y="515.0" width="6.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1185.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="1188.6" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="1188.6" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="1188.6" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="1188.6" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.6" y="526.0"></text>
</g>
<g>
<title>thread_start (3 samples, 0.06%)</title><rect x="1189.3" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.3" y="702.0"></text>
</g>
<g>
<title>_pthread_start (3 samples, 0.06%)</title><rect x="1189.3" y="675.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.06%)</title><rect x="1189.3" y="659.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.06%)</title><rect x="1189.3" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.5" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="638.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.5" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="622.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.04%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.5" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1189.5" y="547.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
</g>
</svg>
