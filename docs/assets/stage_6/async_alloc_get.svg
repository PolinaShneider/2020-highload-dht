<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (162,984 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (117,452 samples, 72.06%)</title><rect x="10.0" y="691.0" width="850.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (117,452 samples, 72.06%)</title><rect x="10.0" y="675.0" width="850.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (117,452 samples, 72.06%)</title><rect x="10.0" y="659.0" width="850.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (80,691 samples, 49.51%)</title><rect x="10.0" y="643.0" width="584.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47,873 samples, 29.37%)</title><rect x="10.0" y="627.0" width="346.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFuture.postComp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (47,873 samples, 29.37%)</title><rect x="10.0" y="611.0" width="346.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/CompletableFuture$UniCompo..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (239 samples, 0.15%)</title><rect x="10.0" y="595.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/895526520.apply (47,634 samples, 29.23%)</title><rect x="11.7" y="595.0" width="344.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.7" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$153..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (47,634 samples, 29.23%)</title><rect x="11.7" y="579.0" width="344.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.7" y="590.0">jdk/internal/net/http/MultiExchange.lambda$resp..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (47,634 samples, 29.23%)</title><rect x="11.7" y="563.0" width="344.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.7" y="574.0">jdk/internal/net/http/MultiExchange.responseAsy..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (262 samples, 0.16%)</title><rect x="11.7" y="547.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (262 samples, 0.16%)</title><rect x="11.7" y="531.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.get$Lambda (164 samples, 0.10%)</title><rect x="11.7" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$474 (164 samples, 0.10%)</title><rect x="11.7" y="499.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$483/1866005702.get$Lambda (98 samples, 0.06%)</title><rect x="12.9" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$483 (98 samples, 0.06%)</title><rect x="12.9" y="499.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (543 samples, 0.33%)</title><rect x="13.6" y="547.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (543 samples, 0.33%)</title><rect x="13.6" y="531.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (298 samples, 0.18%)</title><rect x="13.6" y="515.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (245 samples, 0.15%)</title><rect x="15.8" y="515.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (245 samples, 0.15%)</title><rect x="15.8" y="499.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (245 samples, 0.15%)</title><rect x="15.8" y="483.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,008 samples, 0.62%)</title><rect x="17.6" y="547.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,008 samples, 0.62%)</title><rect x="17.6" y="531.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (570 samples, 0.35%)</title><rect x="17.6" y="515.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="20.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (438 samples, 0.27%)</title><rect x="21.7" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (438 samples, 0.27%)</title><rect x="21.7" y="499.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (438 samples, 0.27%)</title><rect x="21.7" y="483.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="24.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (44,515 samples, 27.31%)</title><rect x="24.9" y="547.0" width="322.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.9" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (44,515 samples, 27.31%)</title><rect x="24.9" y="531.0" width="322.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.9" y="542.0">jdk/internal/net/http/Exchange.responseAsync..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (44,515 samples, 27.31%)</title><rect x="24.9" y="515.0" width="322.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.9" y="526.0">jdk/internal/net/http/Exchange.responseAsync..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (440 samples, 0.27%)</title><rect x="24.9" y="499.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (440 samples, 0.27%)</title><rect x="24.9" y="483.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.get$Lambda (113 samples, 0.07%)</title><rect x="24.9" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$206 (113 samples, 0.07%)</title><rect x="24.9" y="451.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/1035282649.get$Lambda (161 samples, 0.10%)</title><rect x="25.7" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$210 (161 samples, 0.10%)</title><rect x="25.7" y="451.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="28.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$377/2081876233.get$Lambda (166 samples, 0.10%)</title><rect x="26.8" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$377 (166 samples, 0.10%)</title><rect x="26.8" y="451.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="29.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28,168 samples, 17.28%)</title><rect x="28.0" y="499.0" width="204.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.0" y="510.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28,168 samples, 17.28%)</title><rect x="28.0" y="483.0" width="204.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.0" y="494.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (27,925 samples, 17.13%)</title><rect x="28.0" y="467.0" width="202.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.0" y="478.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$377/2081876233.apply (27,925 samples, 17.13%)</title><rect x="28.0" y="451.0" width="202.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.0" y="462.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (27,925 samples, 17.13%)</title><rect x="28.0" y="435.0" width="202.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.0" y="446.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (27,925 samples, 17.13%)</title><rect x="28.0" y="419.0" width="202.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.0" y="430.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/1035282649.apply (27,925 samples, 17.13%)</title><rect x="28.0" y="403.0" width="202.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.0" y="414.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (27,925 samples, 17.13%)</title><rect x="28.0" y="387.0" width="202.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.0" y="398.0">jdk/internal/net/http/Exch..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (257 samples, 0.16%)</title><rect x="28.0" y="371.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (257 samples, 0.16%)</title><rect x="28.0" y="355.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.get$Lambda (257 samples, 0.16%)</title><rect x="28.0" y="339.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$470 (257 samples, 0.16%)</title><rect x="28.0" y="323.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="31.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (620 samples, 0.38%)</title><rect x="29.9" y="371.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (620 samples, 0.38%)</title><rect x="29.9" y="355.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (298 samples, 0.18%)</title><rect x="29.9" y="339.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="32.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (309 samples, 0.19%)</title><rect x="32.2" y="339.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (309 samples, 0.19%)</title><rect x="32.2" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (309 samples, 0.19%)</title><rect x="32.2" y="307.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="35.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (562 samples, 0.34%)</title><rect x="34.4" y="371.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (562 samples, 0.34%)</title><rect x="34.4" y="355.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (297 samples, 0.18%)</title><rect x="34.4" y="339.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="37.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (264 samples, 0.16%)</title><rect x="36.5" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (264 samples, 0.16%)</title><rect x="36.5" y="323.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (264 samples, 0.16%)</title><rect x="36.5" y="307.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="39.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (26,486 samples, 16.25%)</title><rect x="38.5" y="371.0" width="191.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.5" y="382.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (280 samples, 0.17%)</title><rect x="38.5" y="355.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (280 samples, 0.17%)</title><rect x="38.5" y="339.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$464/2061587391.get$Lambda (125 samples, 0.08%)</title><rect x="38.5" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$464 (125 samples, 0.08%)</title><rect x="38.5" y="307.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="41.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$467/1416554442.get$Lambda (155 samples, 0.10%)</title><rect x="39.4" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$467 (155 samples, 0.10%)</title><rect x="39.4" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22,589 samples, 13.86%)</title><rect x="40.5" y="355.0" width="163.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.5" y="366.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22,589 samples, 13.86%)</title><rect x="40.5" y="339.0" width="163.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.5" y="350.0">java/util/concurrent/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (298 samples, 0.18%)</title><rect x="40.5" y="323.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="43.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$464/2061587391.apply (21,795 samples, 13.37%)</title><rect x="42.6" y="323.0" width="157.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.6" y="334.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (21,795 samples, 13.37%)</title><rect x="42.6" y="307.0" width="157.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.6" y="318.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.06%)</title><rect x="42.6" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.06%)</title><rect x="42.6" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/657889941.get$Lambda (105 samples, 0.06%)</title><rect x="42.6" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$522 (105 samples, 0.06%)</title><rect x="42.6" y="243.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (519 samples, 0.32%)</title><rect x="43.4" y="291.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (519 samples, 0.32%)</title><rect x="43.4" y="275.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (267 samples, 0.16%)</title><rect x="43.4" y="259.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="46.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (252 samples, 0.15%)</title><rect x="45.3" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (252 samples, 0.15%)</title><rect x="45.3" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (252 samples, 0.15%)</title><rect x="45.3" y="227.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="48.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (236 samples, 0.14%)</title><rect x="47.2" y="291.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="50.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (408 samples, 0.25%)</title><rect x="48.9" y="291.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (198 samples, 0.12%)</title><rect x="48.9" y="275.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="51.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (210 samples, 0.13%)</title><rect x="50.3" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (204 samples, 0.13%)</title><rect x="50.3" y="259.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (204 samples, 0.13%)</title><rect x="50.3" y="243.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (204 samples, 0.13%)</title><rect x="50.3" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (204 samples, 0.13%)</title><rect x="50.3" y="211.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (204 samples, 0.13%)</title><rect x="50.3" y="195.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="53.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (591 samples, 0.36%)</title><rect x="51.8" y="291.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (591 samples, 0.36%)</title><rect x="51.8" y="275.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (177 samples, 0.11%)</title><rect x="51.8" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (177 samples, 0.11%)</title><rect x="51.8" y="243.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (177 samples, 0.11%)</title><rect x="51.8" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (177 samples, 0.11%)</title><rect x="51.8" y="211.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (414 samples, 0.25%)</title><rect x="53.1" y="259.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (414 samples, 0.25%)</title><rect x="53.1" y="243.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (280 samples, 0.17%)</title><rect x="53.1" y="227.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (109 samples, 0.07%)</title><rect x="55.1" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (109 samples, 0.07%)</title><rect x="55.1" y="211.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="58.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (19,936 samples, 12.23%)</title><rect x="56.1" y="291.0" width="144.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.1" y="302.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java.lang.StringBuilder (178 samples, 0.11%)</title><rect x="56.1" y="275.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="59.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,978 samples, 1.21%)</title><rect x="57.4" y="275.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,978 samples, 1.21%)</title><rect x="57.4" y="259.0" width="14.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,978 samples, 1.21%)</title><rect x="57.4" y="243.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="254.0"></text>
</g>
<g>
<title>byte[] (1,623 samples, 1.00%)</title><rect x="57.4" y="227.0" width="11.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="60.4" y="238.0"></text>
</g>
<g>
<title>byte[] (355 samples, 0.22%)</title><rect x="69.1" y="227.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="72.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (545 samples, 0.33%)</title><rect x="71.7" y="275.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (545 samples, 0.33%)</title><rect x="71.7" y="259.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.7" y="270.0"></text>
</g>
<g>
<title>byte[] (538 samples, 0.33%)</title><rect x="71.7" y="243.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,032 samples, 1.25%)</title><rect x="75.7" y="275.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,032 samples, 1.25%)</title><rect x="75.7" y="259.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,032 samples, 1.25%)</title><rect x="75.7" y="243.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.7" y="254.0"></text>
</g>
<g>
<title>byte[] (1,773 samples, 1.09%)</title><rect x="75.7" y="227.0" width="12.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="78.7" y="238.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.16%)</title><rect x="88.5" y="227.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (348 samples, 0.21%)</title><rect x="90.4" y="275.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (348 samples, 0.21%)</title><rect x="90.4" y="259.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (348 samples, 0.21%)</title><rect x="90.4" y="243.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="93.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (160 samples, 0.10%)</title><rect x="92.9" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.9" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (160 samples, 0.10%)</title><rect x="92.9" y="259.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="95.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (12,362 samples, 7.58%)</title><rect x="94.0" y="275.0" width="89.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="286.0">jdk/intern..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (164 samples, 0.10%)</title><rect x="94.0" y="259.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (164 samples, 0.10%)</title><rect x="94.0" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (164 samples, 0.10%)</title><rect x="94.0" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$532/952561455.get$Lambda (164 samples, 0.10%)</title><rect x="94.0" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$532 (164 samples, 0.10%)</title><rect x="94.0" y="195.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (5,606 samples, 3.44%)</title><rect x="95.2" y="259.0" width="40.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.2" y="270.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,020 samples, 1.85%)</title><rect x="95.2" y="243.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.2" y="254.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,020 samples, 1.85%)</title><rect x="95.2" y="227.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.2" y="238.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,020 samples, 1.85%)</title><rect x="95.2" y="211.0" width="21.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.2" y="222.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,020 samples, 1.85%)</title><rect x="95.2" y="195.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.2" y="206.0">j..</text>
</g>
<g>
<title>byte[] (2,746 samples, 1.68%)</title><rect x="95.2" y="179.0" width="19.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.2" y="190.0"></text>
</g>
<g>
<title>byte[] (274 samples, 0.17%)</title><rect x="115.1" y="179.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.1" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (388 samples, 0.24%)</title><rect x="117.1" y="243.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (172 samples, 0.11%)</title><rect x="117.1" y="227.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="120.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (216 samples, 0.13%)</title><rect x="118.3" y="227.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (216 samples, 0.13%)</title><rect x="118.3" y="211.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (216 samples, 0.13%)</title><rect x="118.3" y="195.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="121.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (217 samples, 0.13%)</title><rect x="119.9" y="243.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (101 samples, 0.06%)</title><rect x="119.9" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="122.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (116 samples, 0.07%)</title><rect x="120.6" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (116 samples, 0.07%)</title><rect x="120.6" y="211.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="123.6" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (193 samples, 0.12%)</title><rect x="121.5" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (193 samples, 0.12%)</title><rect x="121.5" y="227.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="124.5" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (119 samples, 0.07%)</title><rect x="122.9" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.9" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (119 samples, 0.07%)</title><rect x="122.9" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="125.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$532/952561455.test (1,669 samples, 1.02%)</title><rect x="123.7" y="243.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,669 samples, 1.02%)</title><rect x="123.7" y="227.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$85/11939193.test (1,669 samples, 1.02%)</title><rect x="123.7" y="211.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,669 samples, 1.02%)</title><rect x="123.7" y="195.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$78/302977067.test (1,669 samples, 1.02%)</title><rect x="123.7" y="179.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,669 samples, 1.02%)</title><rect x="123.7" y="163.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/657381435.test (1,669 samples, 1.02%)</title><rect x="123.7" y="147.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,669 samples, 1.02%)</title><rect x="123.7" y="131.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,669 samples, 1.02%)</title><rect x="123.7" y="115.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,669 samples, 1.02%)</title><rect x="123.7" y="99.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (797 samples, 0.49%)</title><rect x="123.7" y="83.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="126.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (872 samples, 0.54%)</title><rect x="129.5" y="83.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.5" y="94.0"></text>
</g>
<g>
<title>byte[] (872 samples, 0.54%)</title><rect x="129.5" y="67.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (6,592 samples, 4.04%)</title><rect x="135.8" y="259.0" width="47.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="270.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,592 samples, 4.04%)</title><rect x="135.8" y="243.0" width="47.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.8" y="254.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,592 samples, 4.04%)</title><rect x="135.8" y="227.0" width="47.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.8" y="238.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (103 samples, 0.06%)</title><rect x="135.8" y="211.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="138.8" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (158 samples, 0.10%)</title><rect x="136.6" y="211.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="139.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (308 samples, 0.19%)</title><rect x="137.7" y="211.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="140.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (106 samples, 0.07%)</title><rect x="139.9" y="211.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="142.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (215 samples, 0.13%)</title><rect x="140.7" y="211.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (215 samples, 0.13%)</title><rect x="140.7" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (215 samples, 0.13%)</title><rect x="140.7" y="179.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (215 samples, 0.13%)</title><rect x="140.7" y="163.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="143.7" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (221 samples, 0.14%)</title><rect x="142.3" y="211.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (221 samples, 0.14%)</title><rect x="142.3" y="195.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="145.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,137 samples, 3.15%)</title><rect x="143.9" y="211.0" width="37.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.9" y="222.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (5,137 samples, 3.15%)</title><rect x="143.9" y="195.0" width="37.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.9" y="206.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,137 samples, 3.15%)</title><rect x="143.9" y="179.0" width="37.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.9" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (942 samples, 0.58%)</title><rect x="143.9" y="163.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (942 samples, 0.58%)</title><rect x="143.9" y="147.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.9" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.get$Lambda (942 samples, 0.58%)</title><rect x="143.9" y="131.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.9" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$539 (942 samples, 0.58%)</title><rect x="143.9" y="115.0" width="6.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="146.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (393 samples, 0.24%)</title><rect x="150.7" y="163.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.accept (393 samples, 0.24%)</title><rect x="150.7" y="147.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (393 samples, 0.24%)</title><rect x="150.7" y="131.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (393 samples, 0.24%)</title><rect x="150.7" y="115.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (393 samples, 0.24%)</title><rect x="150.7" y="99.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (393 samples, 0.24%)</title><rect x="150.7" y="83.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (393 samples, 0.24%)</title><rect x="150.7" y="67.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (393 samples, 0.24%)</title><rect x="150.7" y="51.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (393 samples, 0.24%)</title><rect x="150.7" y="35.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="153.7" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,076 samples, 1.27%)</title><rect x="153.5" y="163.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,076 samples, 1.27%)</title><rect x="153.5" y="147.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,034 samples, 0.63%)</title><rect x="153.5" y="131.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,034 samples, 0.63%)</title><rect x="153.5" y="115.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,034 samples, 0.63%)</title><rect x="153.5" y="99.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="156.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (1,042 samples, 0.64%)</title><rect x="161.0" y="131.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,042 samples, 0.64%)</title><rect x="161.0" y="115.0" width="7.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,726 samples, 1.06%)</title><rect x="168.6" y="163.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,726 samples, 1.06%)</title><rect x="168.6" y="147.0" width="12.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (344 samples, 0.21%)</title><rect x="181.1" y="211.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (344 samples, 0.21%)</title><rect x="181.1" y="195.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="184.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (573 samples, 0.35%)</title><rect x="183.5" y="275.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (176 samples, 0.11%)</title><rect x="183.5" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.5" y="270.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.11%)</title><rect x="183.5" y="243.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="186.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (397 samples, 0.24%)</title><rect x="184.8" y="259.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (397 samples, 0.24%)</title><rect x="184.8" y="243.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/543846639.invoke (397 samples, 0.24%)</title><rect x="184.8" y="227.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (397 samples, 0.24%)</title><rect x="184.8" y="211.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (169 samples, 0.10%)</title><rect x="184.8" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (169 samples, 0.10%)</title><rect x="184.8" y="179.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="187.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (228 samples, 0.14%)</title><rect x="186.0" y="195.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (228 samples, 0.14%)</title><rect x="186.0" y="179.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.0" y="190.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.14%)</title><rect x="186.0" y="163.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="189.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (495 samples, 0.30%)</title><rect x="187.7" y="275.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (495 samples, 0.30%)</title><rect x="187.7" y="259.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (495 samples, 0.30%)</title><rect x="187.7" y="243.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (495 samples, 0.30%)</title><rect x="187.7" y="227.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/543846639.invoke (495 samples, 0.30%)</title><rect x="187.7" y="211.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (495 samples, 0.30%)</title><rect x="187.7" y="195.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (159 samples, 0.10%)</title><rect x="187.7" y="179.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (159 samples, 0.10%)</title><rect x="187.7" y="163.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="190.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (336 samples, 0.21%)</title><rect x="188.8" y="179.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (336 samples, 0.21%)</title><rect x="188.8" y="163.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="174.0"></text>
</g>
<g>
<title>byte[] (336 samples, 0.21%)</title><rect x="188.8" y="147.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,265 samples, 0.78%)</title><rect x="191.3" y="275.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.3" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (391 samples, 0.24%)</title><rect x="191.3" y="259.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="194.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (330 samples, 0.20%)</title><rect x="194.1" y="259.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (330 samples, 0.20%)</title><rect x="194.1" y="243.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="197.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (544 samples, 0.33%)</title><rect x="196.5" y="259.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (544 samples, 0.33%)</title><rect x="196.5" y="243.0" width="3.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="199.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (496 samples, 0.30%)</title><rect x="200.4" y="323.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (496 samples, 0.30%)</title><rect x="200.4" y="307.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (496 samples, 0.30%)</title><rect x="200.4" y="291.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="203.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (596 samples, 0.37%)</title><rect x="204.0" y="355.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="207.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (221 samples, 0.14%)</title><rect x="208.4" y="355.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="211.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,793 samples, 1.71%)</title><rect x="210.0" y="355.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (205 samples, 0.13%)</title><rect x="210.0" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (205 samples, 0.13%)</title><rect x="210.0" y="323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/56190756.get$Lambda (99 samples, 0.06%)</title><rect x="210.0" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$411 (99 samples, 0.06%)</title><rect x="210.0" y="291.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="213.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/544637637.get$Lambda (106 samples, 0.07%)</title><rect x="210.7" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$421 (106 samples, 0.07%)</title><rect x="210.7" y="291.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="213.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (277 samples, 0.17%)</title><rect x="211.5" y="339.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (232 samples, 0.14%)</title><rect x="213.5" y="339.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="216.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (267 samples, 0.16%)</title><rect x="215.2" y="339.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="218.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (785 samples, 0.48%)</title><rect x="217.1" y="339.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (785 samples, 0.48%)</title><rect x="217.1" y="323.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (785 samples, 0.48%)</title><rect x="217.1" y="307.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (785 samples, 0.48%)</title><rect x="217.1" y="291.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (785 samples, 0.48%)</title><rect x="217.1" y="275.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (785 samples, 0.48%)</title><rect x="217.1" y="259.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (785 samples, 0.48%)</title><rect x="217.1" y="243.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (785 samples, 0.48%)</title><rect x="217.1" y="227.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (785 samples, 0.48%)</title><rect x="217.1" y="211.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (264 samples, 0.16%)</title><rect x="217.1" y="195.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (264 samples, 0.16%)</title><rect x="217.1" y="179.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$430/849471415.get$Lambda (104 samples, 0.06%)</title><rect x="217.1" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$430 (104 samples, 0.06%)</title><rect x="217.1" y="147.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="220.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$436/99321411.get$Lambda (160 samples, 0.10%)</title><rect x="217.9" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$436 (160 samples, 0.10%)</title><rect x="217.9" y="147.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="220.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (222 samples, 0.14%)</title><rect x="219.0" y="195.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="222.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (299 samples, 0.18%)</title><rect x="220.6" y="195.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (299 samples, 0.18%)</title><rect x="220.6" y="179.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (118 samples, 0.07%)</title><rect x="220.6" y="163.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="223.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (181 samples, 0.11%)</title><rect x="221.5" y="163.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (181 samples, 0.11%)</title><rect x="221.5" y="147.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="224.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (779 samples, 0.48%)</title><rect x="222.8" y="339.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.8" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (175 samples, 0.11%)</title><rect x="222.8" y="323.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="225.8" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (382 samples, 0.23%)</title><rect x="224.0" y="323.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="227.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (222 samples, 0.14%)</title><rect x="226.8" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.8" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (222 samples, 0.14%)</title><rect x="226.8" y="307.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.8" y="318.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.14%)</title><rect x="226.8" y="291.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="229.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (248 samples, 0.15%)</title><rect x="228.4" y="339.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (248 samples, 0.15%)</title><rect x="228.4" y="323.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="231.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.15%)</title><rect x="230.2" y="467.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.15%)</title><rect x="230.2" y="451.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.15%)</title><rect x="230.2" y="435.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="233.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (435 samples, 0.27%)</title><rect x="232.0" y="499.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (435 samples, 0.27%)</title><rect x="232.0" y="483.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (215 samples, 0.13%)</title><rect x="232.0" y="467.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="235.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (220 samples, 0.13%)</title><rect x="233.5" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (220 samples, 0.13%)</title><rect x="233.5" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (220 samples, 0.13%)</title><rect x="233.5" y="435.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="236.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (15,472 samples, 9.49%)</title><rect x="235.1" y="499.0" width="112.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.1" y="510.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (269 samples, 0.17%)</title><rect x="235.1" y="483.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (269 samples, 0.17%)</title><rect x="235.1" y="467.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$363/1688663015.get$Lambda (181 samples, 0.11%)</title><rect x="235.1" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$363 (181 samples, 0.11%)</title><rect x="235.1" y="435.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="238.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$368/791125902.get$Lambda (88 samples, 0.05%)</title><rect x="236.4" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$368 (88 samples, 0.05%)</title><rect x="236.4" y="435.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="239.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (452 samples, 0.28%)</title><rect x="237.1" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (452 samples, 0.28%)</title><rect x="237.1" y="467.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$368/791125902.apply (235 samples, 0.14%)</title><rect x="237.1" y="451.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (235 samples, 0.14%)</title><rect x="237.1" y="435.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (235 samples, 0.14%)</title><rect x="237.1" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (235 samples, 0.14%)</title><rect x="237.1" y="403.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="240.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (217 samples, 0.13%)</title><rect x="238.8" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (217 samples, 0.13%)</title><rect x="238.8" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (217 samples, 0.13%)</title><rect x="238.8" y="419.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="241.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (233 samples, 0.14%)</title><rect x="240.3" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (233 samples, 0.14%)</title><rect x="240.3" y="467.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.14%)</title><rect x="240.3" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.14%)</title><rect x="240.3" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.14%)</title><rect x="240.3" y="419.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (14,518 samples, 8.91%)</title><rect x="242.0" y="483.0" width="105.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.0" y="494.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (173 samples, 0.11%)</title><rect x="242.0" y="467.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (173 samples, 0.11%)</title><rect x="242.0" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$223/1128961257.get$Lambda (173 samples, 0.11%)</title><rect x="242.0" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$223 (173 samples, 0.11%)</title><rect x="242.0" y="419.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="245.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (13,436 samples, 8.24%)</title><rect x="243.3" y="467.0" width="97.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.3" y="478.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (13,436 samples, 8.24%)</title><rect x="243.3" y="451.0" width="97.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.3" y="462.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13,225 samples, 8.11%)</title><rect x="243.3" y="435.0" width="95.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.3" y="446.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$223/1128961257.apply (13,225 samples, 8.11%)</title><rect x="243.3" y="419.0" width="95.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.3" y="430.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (13,225 samples, 8.11%)</title><rect x="243.3" y="403.0" width="95.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.3" y="414.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (13,225 samples, 8.11%)</title><rect x="243.3" y="387.0" width="95.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.3" y="398.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.07%)</title><rect x="243.3" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.07%)</title><rect x="243.3" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$352/524402461.get$Lambda (106 samples, 0.07%)</title><rect x="243.3" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$352 (106 samples, 0.07%)</title><rect x="243.3" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="246.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5,509 samples, 3.38%)</title><rect x="244.1" y="371.0" width="39.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.1" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5,509 samples, 3.38%)</title><rect x="244.1" y="355.0" width="39.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.1" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5,509 samples, 3.38%)</title><rect x="244.1" y="339.0" width="39.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.1" y="350.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$352/524402461.apply (5,304 samples, 3.25%)</title><rect x="244.1" y="323.0" width="38.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.1" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5,304 samples, 3.25%)</title><rect x="244.1" y="307.0" width="38.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.1" y="318.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5,304 samples, 3.25%)</title><rect x="244.1" y="291.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.1" y="302.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5,304 samples, 3.25%)</title><rect x="244.1" y="275.0" width="38.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.1" y="286.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3,390 samples, 2.08%)</title><rect x="244.1" y="259.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (960 samples, 0.59%)</title><rect x="244.1" y="243.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (175 samples, 0.11%)</title><rect x="244.1" y="227.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="247.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (419 samples, 0.26%)</title><rect x="245.3" y="227.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (419 samples, 0.26%)</title><rect x="245.3" y="211.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.3" y="222.0"></text>
</g>
<g>
<title>byte[] (418 samples, 0.26%)</title><rect x="245.3" y="195.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="248.3" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (366 samples, 0.22%)</title><rect x="248.4" y="227.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.4" y="238.0"></text>
</g>
<g>
<title>byte[] (360 samples, 0.22%)</title><rect x="248.4" y="211.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="251.4" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (161 samples, 0.10%)</title><rect x="251.0" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.0" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (161 samples, 0.10%)</title><rect x="251.0" y="227.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="254.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,626 samples, 1.00%)</title><rect x="252.2" y="243.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (180 samples, 0.11%)</title><rect x="252.2" y="227.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="255.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,174 samples, 0.72%)</title><rect x="253.5" y="227.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,174 samples, 0.72%)</title><rect x="253.5" y="211.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (817 samples, 0.50%)</title><rect x="253.5" y="195.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (817 samples, 0.50%)</title><rect x="253.5" y="179.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/797814020.get$Lambda (817 samples, 0.50%)</title><rect x="253.5" y="163.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$73 (817 samples, 0.50%)</title><rect x="253.5" y="147.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.5" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (357 samples, 0.22%)</title><rect x="259.4" y="195.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/797814020.run (357 samples, 0.22%)</title><rect x="259.4" y="179.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (357 samples, 0.22%)</title><rect x="259.4" y="163.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.4" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (357 samples, 0.22%)</title><rect x="259.4" y="147.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (357 samples, 0.22%)</title><rect x="259.4" y="131.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (357 samples, 0.22%)</title><rect x="259.4" y="115.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (272 samples, 0.17%)</title><rect x="262.0" y="227.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (272 samples, 0.17%)</title><rect x="262.0" y="211.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.0" y="222.0"></text>
</g>
<g>
<title>int[] (272 samples, 0.17%)</title><rect x="262.0" y="195.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="265.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (643 samples, 0.39%)</title><rect x="263.9" y="243.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.9" y="254.0"></text>
</g>
<g>
<title>byte[] (333 samples, 0.20%)</title><rect x="263.9" y="227.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="266.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (310 samples, 0.19%)</title><rect x="266.4" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (310 samples, 0.19%)</title><rect x="266.4" y="211.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (310 samples, 0.19%)</title><rect x="266.4" y="195.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="269.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,914 samples, 1.17%)</title><rect x="268.6" y="259.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (499 samples, 0.31%)</title><rect x="268.6" y="243.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="271.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (550 samples, 0.34%)</title><rect x="272.2" y="243.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (550 samples, 0.34%)</title><rect x="272.2" y="227.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="275.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (865 samples, 0.53%)</title><rect x="276.2" y="243.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (865 samples, 0.53%)</title><rect x="276.2" y="227.0" width="6.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="279.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.13%)</title><rect x="282.5" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.13%)</title><rect x="282.5" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (205 samples, 0.13%)</title><rect x="282.5" y="291.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="285.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (7,610 samples, 4.67%)</title><rect x="283.9" y="371.0" width="55.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.9" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (604 samples, 0.37%)</title><rect x="283.9" y="355.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="286.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (6,779 samples, 4.16%)</title><rect x="288.3" y="355.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.3" y="366.0">jdk/i..</text>
</g>
<g>
<title>java.lang.Object (94 samples, 0.06%)</title><rect x="288.3" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="291.3" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (240 samples, 0.15%)</title><rect x="289.0" y="339.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="292.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (150 samples, 0.09%)</title><rect x="290.8" y="339.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="293.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (292 samples, 0.18%)</title><rect x="291.9" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (292 samples, 0.18%)</title><rect x="291.9" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (292 samples, 0.18%)</title><rect x="291.9" y="307.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="294.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (172 samples, 0.11%)</title><rect x="294.0" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (172 samples, 0.11%)</title><rect x="294.0" y="323.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="297.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (499 samples, 0.31%)</title><rect x="295.2" y="339.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="298.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (343 samples, 0.21%)</title><rect x="298.9" y="339.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="301.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (421 samples, 0.26%)</title><rect x="301.4" y="339.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="304.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (463 samples, 0.28%)</title><rect x="304.4" y="339.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="307.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2,005 samples, 1.23%)</title><rect x="307.8" y="339.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (156 samples, 0.10%)</title><rect x="307.8" y="323.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="310.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (97 samples, 0.06%)</title><rect x="308.9" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="311.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (149 samples, 0.09%)</title><rect x="309.6" y="323.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="312.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (93 samples, 0.06%)</title><rect x="310.7" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="313.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.06%)</title><rect x="311.3" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.06%)</title><rect x="311.3" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.get$Lambda (101 samples, 0.06%)</title><rect x="311.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$344 (101 samples, 0.06%)</title><rect x="311.3" y="275.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="314.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (183 samples, 0.11%)</title><rect x="312.1" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (183 samples, 0.11%)</title><rect x="312.1" y="307.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="315.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (152 samples, 0.09%)</title><rect x="313.4" y="323.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="316.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (213 samples, 0.13%)</title><rect x="314.5" y="323.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="317.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (861 samples, 0.53%)</title><rect x="316.0" y="323.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (158 samples, 0.10%)</title><rect x="316.0" y="307.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="319.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (217 samples, 0.13%)</title><rect x="317.2" y="307.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="320.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (113 samples, 0.07%)</title><rect x="318.8" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (113 samples, 0.07%)</title><rect x="318.8" y="291.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="321.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (373 samples, 0.23%)</title><rect x="319.6" y="307.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (132 samples, 0.08%)</title><rect x="319.6" y="291.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="322.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (130 samples, 0.08%)</title><rect x="320.5" y="291.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="323.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (111 samples, 0.07%)</title><rect x="321.5" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="324.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,305 samples, 0.80%)</title><rect x="322.3" y="339.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (94 samples, 0.06%)</title><rect x="322.3" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="325.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (103 samples, 0.06%)</title><rect x="323.0" y="323.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="326.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (120 samples, 0.07%)</title><rect x="323.7" y="323.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="326.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (167 samples, 0.10%)</title><rect x="324.6" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (167 samples, 0.10%)</title><rect x="324.6" y="307.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="327.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (821 samples, 0.50%)</title><rect x="325.8" y="323.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (142 samples, 0.09%)</title><rect x="325.8" y="307.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="328.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (199 samples, 0.12%)</title><rect x="326.8" y="307.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="329.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (131 samples, 0.08%)</title><rect x="328.2" y="307.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (131 samples, 0.08%)</title><rect x="328.2" y="291.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="331.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (349 samples, 0.21%)</title><rect x="329.2" y="307.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (109 samples, 0.07%)</title><rect x="329.2" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="332.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (117 samples, 0.07%)</title><rect x="330.0" y="291.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="333.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (123 samples, 0.08%)</title><rect x="330.8" y="291.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="333.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (178 samples, 0.11%)</title><rect x="331.7" y="339.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (178 samples, 0.11%)</title><rect x="331.7" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (178 samples, 0.11%)</title><rect x="331.7" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.7" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (178 samples, 0.11%)</title><rect x="331.7" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (178 samples, 0.11%)</title><rect x="331.7" y="275.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (178 samples, 0.11%)</title><rect x="331.7" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.11%)</title><rect x="331.7" y="243.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (610 samples, 0.37%)</title><rect x="333.0" y="339.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (187 samples, 0.11%)</title><rect x="333.0" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (187 samples, 0.11%)</title><rect x="333.0" y="307.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1559228528.get$Lambda (187 samples, 0.11%)</title><rect x="333.0" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$239 (187 samples, 0.11%)</title><rect x="333.0" y="275.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="336.0" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (423 samples, 0.26%)</title><rect x="334.4" y="323.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1559228528.run (423 samples, 0.26%)</title><rect x="334.4" y="307.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (423 samples, 0.26%)</title><rect x="334.4" y="291.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.4" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (116 samples, 0.07%)</title><rect x="334.4" y="275.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.4" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (307 samples, 0.19%)</title><rect x="335.2" y="275.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.2" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (146 samples, 0.09%)</title><rect x="335.2" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="338.2" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (161 samples, 0.10%)</title><rect x="336.3" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.3" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (161 samples, 0.10%)</title><rect x="336.3" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.3" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (161 samples, 0.10%)</title><rect x="336.3" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.3" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (161 samples, 0.10%)</title><rect x="336.3" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.3" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (161 samples, 0.10%)</title><rect x="336.3" y="195.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="339.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (222 samples, 0.14%)</title><rect x="337.4" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.14%)</title><rect x="337.4" y="339.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="340.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.13%)</title><rect x="339.0" y="435.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.13%)</title><rect x="339.0" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (211 samples, 0.13%)</title><rect x="339.0" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="342.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (214 samples, 0.13%)</title><rect x="340.6" y="467.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (214 samples, 0.13%)</title><rect x="340.6" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (214 samples, 0.13%)</title><rect x="340.6" y="435.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (214 samples, 0.13%)</title><rect x="340.6" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (214 samples, 0.13%)</title><rect x="340.6" y="403.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="343.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (695 samples, 0.43%)</title><rect x="342.1" y="467.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (458 samples, 0.28%)</title><rect x="342.1" y="451.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (458 samples, 0.28%)</title><rect x="342.1" y="435.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2789112.linkToTargetMethod (458 samples, 0.28%)</title><rect x="342.1" y="419.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/962273869.invoke (458 samples, 0.28%)</title><rect x="342.1" y="403.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/132533114.invoke (458 samples, 0.28%)</title><rect x="342.1" y="387.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (458 samples, 0.28%)</title><rect x="342.1" y="371.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (142 samples, 0.09%)</title><rect x="342.1" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (142 samples, 0.09%)</title><rect x="342.1" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="345.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (316 samples, 0.19%)</title><rect x="343.1" y="355.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (316 samples, 0.19%)</title><rect x="343.1" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.1" y="350.0"></text>
</g>
<g>
<title>byte[] (316 samples, 0.19%)</title><rect x="343.1" y="323.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="346.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (237 samples, 0.15%)</title><rect x="345.4" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.15%)</title><rect x="345.4" y="435.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="348.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (266 samples, 0.16%)</title><rect x="347.1" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (266 samples, 0.16%)</title><rect x="347.1" y="531.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (266 samples, 0.16%)</title><rect x="347.1" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (266 samples, 0.16%)</title><rect x="347.1" y="499.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="350.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1,040 samples, 0.64%)</title><rect x="349.1" y="547.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (893 samples, 0.55%)</title><rect x="349.1" y="531.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="352.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (147 samples, 0.09%)</title><rect x="355.5" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (147 samples, 0.09%)</title><rect x="355.5" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (147 samples, 0.09%)</title><rect x="355.5" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.5" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (147 samples, 0.09%)</title><rect x="355.5" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (147 samples, 0.09%)</title><rect x="355.5" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (147 samples, 0.09%)</title><rect x="355.5" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (147 samples, 0.09%)</title><rect x="355.5" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.5" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (147 samples, 0.09%)</title><rect x="355.5" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (147 samples, 0.09%)</title><rect x="355.5" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.5" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (147 samples, 0.09%)</title><rect x="355.5" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.5" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (147 samples, 0.09%)</title><rect x="355.5" y="371.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="358.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get (32,818 samples, 20.14%)</title><rect x="356.6" y="627.0" width="237.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.6" y="638.0">ru/mail/polis/service/AsyncClie..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$handleLocal$3 (32,818 samples, 20.14%)</title><rect x="356.6" y="611.0" width="237.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.6" y="622.0">ru/mail/polis/service/AsyncClie..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.get (32,818 samples, 20.14%)</title><rect x="356.6" y="595.0" width="237.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.6" y="606.0">ru/mail/polis/service/AsyncClie..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,037 samples, 1.25%)</title><rect x="356.6" y="579.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,037 samples, 1.25%)</title><rect x="356.6" y="563.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,037 samples, 1.25%)</title><rect x="356.6" y="547.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,037 samples, 1.25%)</title><rect x="356.6" y="531.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.6" y="542.0"></text>
</g>
<g>
<title>byte[] (2,037 samples, 1.25%)</title><rect x="356.6" y="515.0" width="14.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="359.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (8,578 samples, 5.26%)</title><rect x="371.3" y="579.0" width="62.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.3" y="590.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Response (1,680 samples, 1.03%)</title><rect x="371.3" y="563.0" width="12.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="374.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6,898 samples, 4.23%)</title><rect x="383.5" y="563.0" width="50.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="574.0">one/n..</text>
</g>
<g>
<title>byte[] (2,891 samples, 1.77%)</title><rect x="383.5" y="547.0" width="20.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="386.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (2,354 samples, 1.44%)</title><rect x="404.4" y="547.0" width="17.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="407.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,653 samples, 1.01%)</title><rect x="421.5" y="547.0" width="12.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="424.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.get (10,286 samples, 6.31%)</title><rect x="433.5" y="579.0" width="74.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.5" y="590.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,319 samples, 2.04%)</title><rect x="433.5" y="563.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="574.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,319 samples, 2.04%)</title><rect x="433.5" y="547.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.5" y="558.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,319 samples, 2.04%)</title><rect x="433.5" y="531.0" width="24.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="436.5" y="542.0">j..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,158 samples, 1.32%)</title><rect x="457.5" y="563.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.5" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,158 samples, 1.32%)</title><rect x="457.5" y="547.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.5" y="558.0"></text>
</g>
<g>
<title>byte[] (2,158 samples, 1.32%)</title><rect x="457.5" y="531.0" width="15.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="460.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (4,809 samples, 2.95%)</title><rect x="473.1" y="563.0" width="34.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.1" y="574.0">ru..</text>
</g>
<g>
<title>byte[] (1,558 samples, 0.96%)</title><rect x="473.1" y="547.0" width="11.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="476.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3,251 samples, 1.99%)</title><rect x="484.4" y="547.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.4" y="558.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,251 samples, 1.99%)</title><rect x="484.4" y="531.0" width="23.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="487.4" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.isDeleted (9,680 samples, 5.94%)</title><rect x="507.9" y="579.0" width="70.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.9" y="590.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (4,134 samples, 2.54%)</title><rect x="507.9" y="563.0" width="30.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.9" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (4,134 samples, 2.54%)</title><rect x="507.9" y="547.0" width="30.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.9" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4,134 samples, 2.54%)</title><rect x="507.9" y="531.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,134 samples, 2.54%)</title><rect x="507.9" y="515.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.9" y="526.0">ja..</text>
</g>
<g>
<title>byte[] (4,134 samples, 2.54%)</title><rect x="507.9" y="499.0" width="30.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.9" y="510.0">by..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (5,546 samples, 3.40%)</title><rect x="537.9" y="563.0" width="40.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.9" y="574.0">ru/..</text>
</g>
<g>
<title>byte[] (2,196 samples, 1.35%)</title><rect x="537.9" y="547.0" width="15.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="540.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3,350 samples, 2.06%)</title><rect x="553.8" y="547.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.8" y="558.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,350 samples, 2.06%)</title><rect x="553.8" y="531.0" width="24.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="556.8" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (2,237 samples, 1.37%)</title><rect x="578.0" y="579.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.0" y="590.0"></text>
</g>
<g>
<title>byte[] (2,237 samples, 1.37%)</title><rect x="578.0" y="563.0" width="16.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="581.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,430 samples, 2.10%)</title><rect x="594.2" y="643.0" width="24.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.2" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,279 samples, 1.40%)</title><rect x="594.2" y="627.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,246 samples, 1.38%)</title><rect x="594.2" y="611.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,246 samples, 1.38%)</title><rect x="594.2" y="595.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,246 samples, 1.38%)</title><rect x="594.2" y="579.0" width="16.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,151 samples, 0.71%)</title><rect x="610.7" y="627.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,151 samples, 0.71%)</title><rect x="610.7" y="611.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,151 samples, 0.71%)</title><rect x="610.7" y="595.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,151 samples, 0.71%)</title><rect x="610.7" y="579.0" width="8.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$544/870026340.run (4,367 samples, 2.68%)</title><rect x="619.0" y="643.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.0" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4,367 samples, 2.68%)</title><rect x="619.0" y="627.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4,367 samples, 2.68%)</title><rect x="619.0" y="611.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (4,367 samples, 2.68%)</title><rect x="619.0" y="595.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,367 samples, 2.68%)</title><rect x="619.0" y="579.0" width="31.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,367 samples, 2.68%)</title><rect x="619.0" y="563.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,367 samples, 2.68%)</title><rect x="619.0" y="547.0" width="31.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,367 samples, 2.68%)</title><rect x="619.0" y="531.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,367 samples, 2.68%)</title><rect x="619.0" y="515.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,367 samples, 2.68%)</title><rect x="619.0" y="499.0" width="31.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4,367 samples, 2.68%)</title><rect x="619.0" y="483.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3,982 samples, 2.44%)</title><rect x="619.0" y="467.0" width="28.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.0" y="478.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (430 samples, 0.26%)</title><rect x="619.0" y="451.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (430 samples, 0.26%)</title><rect x="619.0" y="435.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$546/1278642675.get$Lambda (308 samples, 0.19%)</title><rect x="619.0" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$546 (308 samples, 0.19%)</title><rect x="619.0" y="403.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="622.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$567/981098721.get$Lambda (122 samples, 0.07%)</title><rect x="621.3" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$567 (122 samples, 0.07%)</title><rect x="621.3" y="403.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="624.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3,552 samples, 2.18%)</title><rect x="622.1" y="451.0" width="25.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.1" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (329 samples, 0.20%)</title><rect x="622.1" y="435.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="625.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,223 samples, 1.98%)</title><rect x="624.5" y="435.0" width="23.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,223 samples, 1.98%)</title><rect x="624.5" y="419.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.5" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,223 samples, 1.98%)</title><rect x="624.5" y="403.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,249 samples, 0.77%)</title><rect x="624.5" y="387.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (446 samples, 0.27%)</title><rect x="624.5" y="371.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="627.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$550/1834351860.apply (801 samples, 0.49%)</title><rect x="627.8" y="371.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (801 samples, 0.49%)</title><rect x="627.8" y="355.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (801 samples, 0.49%)</title><rect x="627.8" y="339.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (161 samples, 0.10%)</title><rect x="627.8" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (161 samples, 0.10%)</title><rect x="627.8" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (161 samples, 0.10%)</title><rect x="627.8" y="291.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="630.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (640 samples, 0.39%)</title><rect x="628.9" y="323.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.09%)</title><rect x="628.9" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.09%)</title><rect x="628.9" y="291.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/1686384082.get$Lambda (140 samples, 0.09%)</title><rect x="628.9" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$570 (140 samples, 0.09%)</title><rect x="628.9" y="259.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="631.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (500 samples, 0.31%)</title><rect x="629.9" y="307.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (500 samples, 0.31%)</title><rect x="629.9" y="291.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (285 samples, 0.17%)</title><rect x="629.9" y="275.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="632.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.13%)</title><rect x="632.0" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (215 samples, 0.13%)</title><rect x="632.0" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.13%)</title><rect x="632.0" y="243.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="635.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,974 samples, 1.21%)</title><rect x="633.6" y="387.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,974 samples, 1.21%)</title><rect x="633.6" y="371.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.apply (1,974 samples, 1.21%)</title><rect x="633.6" y="355.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,974 samples, 1.21%)</title><rect x="633.6" y="339.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,974 samples, 1.21%)</title><rect x="633.6" y="323.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.apply (1,974 samples, 1.21%)</title><rect x="633.6" y="307.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,974 samples, 1.21%)</title><rect x="633.6" y="291.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.07%)</title><rect x="633.6" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.07%)</title><rect x="633.6" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$550/1834351860.get$Lambda (109 samples, 0.07%)</title><rect x="633.6" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$550 (109 samples, 0.07%)</title><rect x="633.6" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (499 samples, 0.31%)</title><rect x="634.4" y="275.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (499 samples, 0.31%)</title><rect x="634.4" y="259.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (266 samples, 0.16%)</title><rect x="634.4" y="243.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="637.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.14%)</title><rect x="636.3" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.14%)</title><rect x="636.3" y="227.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.14%)</title><rect x="636.3" y="211.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="639.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (567 samples, 0.35%)</title><rect x="638.0" y="275.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.06%)</title><rect x="638.0" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.06%)</title><rect x="638.0" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$551/1036639044.get$Lambda (103 samples, 0.06%)</title><rect x="638.0" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$551 (103 samples, 0.06%)</title><rect x="638.0" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="641.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (464 samples, 0.28%)</title><rect x="638.7" y="259.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (464 samples, 0.28%)</title><rect x="638.7" y="243.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (246 samples, 0.15%)</title><rect x="638.7" y="227.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="641.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.13%)</title><rect x="640.5" y="227.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.13%)</title><rect x="640.5" y="211.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (218 samples, 0.13%)</title><rect x="640.5" y="195.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="643.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (799 samples, 0.49%)</title><rect x="642.1" y="275.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (457 samples, 0.28%)</title><rect x="642.1" y="259.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (229 samples, 0.14%)</title><rect x="642.1" y="243.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="645.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (228 samples, 0.14%)</title><rect x="643.7" y="243.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (228 samples, 0.14%)</title><rect x="643.7" y="227.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (228 samples, 0.14%)</title><rect x="643.7" y="211.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="646.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (342 samples, 0.21%)</title><rect x="645.4" y="259.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (175 samples, 0.11%)</title><rect x="645.4" y="243.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="648.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (167 samples, 0.10%)</title><rect x="646.7" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (167 samples, 0.10%)</title><rect x="646.7" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (167 samples, 0.10%)</title><rect x="646.7" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (167 samples, 0.10%)</title><rect x="646.7" y="195.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (167 samples, 0.10%)</title><rect x="646.7" y="179.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (167 samples, 0.10%)</title><rect x="646.7" y="163.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="649.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (385 samples, 0.24%)</title><rect x="647.9" y="467.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (385 samples, 0.24%)</title><rect x="647.9" y="451.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (385 samples, 0.24%)</title><rect x="647.9" y="435.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (385 samples, 0.24%)</title><rect x="647.9" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (385 samples, 0.24%)</title><rect x="647.9" y="403.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (385 samples, 0.24%)</title><rect x="647.9" y="387.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (161 samples, 0.10%)</title><rect x="647.9" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.9" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (161 samples, 0.10%)</title><rect x="647.9" y="355.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="650.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (224 samples, 0.14%)</title><rect x="649.0" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (224 samples, 0.14%)</title><rect x="649.0" y="355.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28,964 samples, 17.77%)</title><rect x="650.7" y="643.0" width="209.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.7" y="654.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (28,964 samples, 17.77%)</title><rect x="650.7" y="627.0" width="209.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.7" y="638.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (23,262 samples, 14.27%)</title><rect x="650.7" y="611.0" width="168.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="622.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (23,262 samples, 14.27%)</title><rect x="650.7" y="595.0" width="168.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.7" y="606.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (23,262 samples, 14.27%)</title><rect x="650.7" y="579.0" width="168.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.7" y="590.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (538 samples, 0.33%)</title><rect x="650.7" y="563.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (538 samples, 0.33%)</title><rect x="650.7" y="547.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (538 samples, 0.33%)</title><rect x="650.7" y="531.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (538 samples, 0.33%)</title><rect x="650.7" y="515.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423583818.linkToTargetMethod (283 samples, 0.17%)</title><rect x="650.7" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574268151.invoke (283 samples, 0.17%)</title><rect x="650.7" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (283 samples, 0.17%)</title><rect x="650.7" y="467.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (283 samples, 0.17%)</title><rect x="650.7" y="451.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (283 samples, 0.17%)</title><rect x="650.7" y="435.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.7" y="446.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.17%)</title><rect x="650.7" y="419.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="653.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (255 samples, 0.16%)</title><rect x="652.7" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (255 samples, 0.16%)</title><rect x="652.7" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (255 samples, 0.16%)</title><rect x="652.7" y="467.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (255 samples, 0.16%)</title><rect x="652.7" y="451.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (255 samples, 0.16%)</title><rect x="652.7" y="435.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (22,724 samples, 13.94%)</title><rect x="654.5" y="563.0" width="164.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.5" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (22,724 samples, 13.94%)</title><rect x="654.5" y="547.0" width="164.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.5" y="558.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (22,724 samples, 13.94%)</title><rect x="654.5" y="531.0" width="164.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.5" y="542.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (22,724 samples, 13.94%)</title><rect x="654.5" y="515.0" width="164.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.5" y="526.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10,787 samples, 6.62%)</title><rect x="654.5" y="499.0" width="78.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.5" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10,787 samples, 6.62%)</title><rect x="654.5" y="483.0" width="78.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.5" y="494.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10,787 samples, 6.62%)</title><rect x="654.5" y="467.0" width="78.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.5" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10,787 samples, 6.62%)</title><rect x="654.5" y="451.0" width="78.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.5" y="462.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10,787 samples, 6.62%)</title><rect x="654.5" y="435.0" width="78.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.5" y="446.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (10,787 samples, 6.62%)</title><rect x="654.5" y="419.0" width="78.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.5" y="430.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10,787 samples, 6.62%)</title><rect x="654.5" y="403.0" width="78.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.5" y="414.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10,486 samples, 6.43%)</title><rect x="654.5" y="387.0" width="76.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.5" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10,486 samples, 6.43%)</title><rect x="654.5" y="371.0" width="76.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.5" y="382.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10,256 samples, 6.29%)</title><rect x="654.5" y="355.0" width="74.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.5" y="366.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (200 samples, 0.12%)</title><rect x="654.5" y="339.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="657.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$551/1036639044.apply (193 samples, 0.12%)</title><rect x="656.0" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (193 samples, 0.12%)</title><rect x="656.0" y="323.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (193 samples, 0.12%)</title><rect x="656.0" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (193 samples, 0.12%)</title><rect x="656.0" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (193 samples, 0.12%)</title><rect x="656.0" y="275.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="659.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/1004347831.apply (9,440 samples, 5.79%)</title><rect x="657.4" y="339.0" width="68.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.4" y="350.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (9,440 samples, 5.79%)</title><rect x="657.4" y="323.0" width="68.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.4" y="334.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (167 samples, 0.10%)</title><rect x="657.4" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (167 samples, 0.10%)</title><rect x="657.4" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$663/395292897.get$Lambda (167 samples, 0.10%)</title><rect x="657.4" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$663 (167 samples, 0.10%)</title><rect x="657.4" y="259.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="660.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (471 samples, 0.29%)</title><rect x="658.6" y="307.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (471 samples, 0.29%)</title><rect x="658.6" y="291.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (263 samples, 0.16%)</title><rect x="658.6" y="275.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="661.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (208 samples, 0.13%)</title><rect x="660.5" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (208 samples, 0.13%)</title><rect x="660.5" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (208 samples, 0.13%)</title><rect x="660.5" y="243.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="663.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (8,802 samples, 5.40%)</title><rect x="662.0" y="307.0" width="63.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.0" y="318.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.07%)</title><rect x="662.0" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.07%)</title><rect x="662.0" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$655/2091751008.get$Lambda (109 samples, 0.07%)</title><rect x="662.0" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$655 (109 samples, 0.07%)</title><rect x="662.0" y="243.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="665.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (465 samples, 0.29%)</title><rect x="662.8" y="291.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (465 samples, 0.29%)</title><rect x="662.8" y="275.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (267 samples, 0.16%)</title><rect x="662.8" y="259.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="665.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.12%)</title><rect x="664.7" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.12%)</title><rect x="664.7" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.12%)</title><rect x="664.7" y="227.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="667.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (8,228 samples, 5.05%)</title><rect x="666.2" y="291.0" width="59.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.2" y="302.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$138/959561349.apply (553 samples, 0.34%)</title><rect x="666.2" y="275.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (553 samples, 0.34%)</title><rect x="666.2" y="259.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (553 samples, 0.34%)</title><rect x="666.2" y="243.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (203 samples, 0.12%)</title><rect x="666.2" y="227.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="669.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (350 samples, 0.21%)</title><rect x="667.6" y="227.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.6" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (163 samples, 0.10%)</title><rect x="667.6" y="211.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (187 samples, 0.11%)</title><rect x="668.8" y="211.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="671.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (7,675 samples, 4.71%)</title><rect x="670.2" y="275.0" width="55.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.2" y="286.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (234 samples, 0.14%)</title><rect x="670.2" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.14%)</title><rect x="670.2" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$642/1652146549.get$Lambda (103 samples, 0.06%)</title><rect x="670.2" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$642 (103 samples, 0.06%)</title><rect x="670.2" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$649/410742031.get$Lambda (131 samples, 0.08%)</title><rect x="670.9" y="227.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$649 (131 samples, 0.08%)</title><rect x="670.9" y="211.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="673.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/76253471.linkToTargetMethod (284 samples, 0.17%)</title><rect x="671.9" y="259.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1197189663.invokeStatic (284 samples, 0.17%)</title><rect x="671.9" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$593/1019219775.get$Lambda (284 samples, 0.17%)</title><rect x="671.9" y="227.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$593 (284 samples, 0.17%)</title><rect x="671.9" y="211.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="674.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,475 samples, 0.90%)</title><rect x="673.9" y="259.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (589 samples, 0.36%)</title><rect x="673.9" y="243.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (195 samples, 0.12%)</title><rect x="673.9" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (195 samples, 0.12%)</title><rect x="673.9" y="211.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="676.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (394 samples, 0.24%)</title><rect x="675.3" y="227.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.3" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (394 samples, 0.24%)</title><rect x="675.3" y="211.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="678.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (463 samples, 0.28%)</title><rect x="678.2" y="243.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (463 samples, 0.28%)</title><rect x="678.2" y="227.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (463 samples, 0.28%)</title><rect x="678.2" y="211.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (147 samples, 0.09%)</title><rect x="678.2" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (147 samples, 0.09%)</title><rect x="678.2" y="179.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (147 samples, 0.09%)</title><rect x="678.2" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.2" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (147 samples, 0.09%)</title><rect x="678.2" y="147.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="681.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$590/1926511506.get (152 samples, 0.09%)</title><rect x="679.2" y="195.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.2" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (152 samples, 0.09%)</title><rect x="679.2" y="179.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="682.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (164 samples, 0.10%)</title><rect x="680.3" y="195.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (164 samples, 0.10%)</title><rect x="680.3" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.3" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (164 samples, 0.10%)</title><rect x="680.3" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.3" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (164 samples, 0.10%)</title><rect x="680.3" y="147.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (423 samples, 0.26%)</title><rect x="681.5" y="243.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (422 samples, 0.26%)</title><rect x="681.5" y="227.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="684.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (979 samples, 0.60%)</title><rect x="684.6" y="259.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (498 samples, 0.31%)</title><rect x="684.6" y="243.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (276 samples, 0.17%)</title><rect x="684.6" y="227.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="687.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.14%)</title><rect x="686.6" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.14%)</title><rect x="686.6" y="211.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.14%)</title><rect x="686.6" y="195.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (481 samples, 0.30%)</title><rect x="688.2" y="243.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (481 samples, 0.30%)</title><rect x="688.2" y="227.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (270 samples, 0.17%)</title><rect x="688.2" y="211.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="691.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.13%)</title><rect x="690.2" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (211 samples, 0.13%)</title><rect x="690.2" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (211 samples, 0.13%)</title><rect x="690.2" y="179.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="693.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (163 samples, 0.10%)</title><rect x="691.7" y="259.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="694.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (227 samples, 0.14%)</title><rect x="692.9" y="259.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="695.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (214 samples, 0.13%)</title><rect x="694.5" y="259.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="697.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (112 samples, 0.07%)</title><rect x="696.1" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (112 samples, 0.07%)</title><rect x="696.1" y="243.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="699.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,987 samples, 2.45%)</title><rect x="696.9" y="259.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.9" y="270.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$593/1019219775.run (3,987 samples, 2.45%)</title><rect x="696.9" y="243.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.9" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3,987 samples, 2.45%)</title><rect x="696.9" y="227.0" width="28.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.9" y="238.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (488 samples, 0.30%)</title><rect x="696.9" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (488 samples, 0.30%)</title><rect x="696.9" y="195.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/71894497.get$Lambda (91 samples, 0.06%)</title><rect x="696.9" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$602 (91 samples, 0.06%)</title><rect x="696.9" y="163.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$612/541262814.get$Lambda (162 samples, 0.10%)</title><rect x="697.5" y="179.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$612 (162 samples, 0.10%)</title><rect x="697.5" y="163.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="700.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$629/449638901.get$Lambda (235 samples, 0.14%)</title><rect x="698.7" y="179.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$629 (235 samples, 0.14%)</title><rect x="698.7" y="163.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (535 samples, 0.33%)</title><rect x="700.4" y="211.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (535 samples, 0.33%)</title><rect x="700.4" y="195.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (316 samples, 0.19%)</title><rect x="700.4" y="179.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="703.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.13%)</title><rect x="702.7" y="179.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.13%)</title><rect x="702.7" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (219 samples, 0.13%)</title><rect x="702.7" y="147.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="705.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (242 samples, 0.15%)</title><rect x="704.3" y="211.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="707.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (222 samples, 0.14%)</title><rect x="706.0" y="211.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.14%)</title><rect x="706.0" y="195.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="709.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (648 samples, 0.40%)</title><rect x="707.6" y="211.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (648 samples, 0.40%)</title><rect x="707.6" y="195.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (174 samples, 0.11%)</title><rect x="707.6" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.11%)</title><rect x="707.6" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$636/145678626.get$Lambda (174 samples, 0.11%)</title><rect x="707.6" y="147.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$636 (174 samples, 0.11%)</title><rect x="707.6" y="131.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="710.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (474 samples, 0.29%)</title><rect x="708.9" y="179.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (474 samples, 0.29%)</title><rect x="708.9" y="163.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (474 samples, 0.29%)</title><rect x="708.9" y="147.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (244 samples, 0.15%)</title><rect x="708.9" y="131.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (230 samples, 0.14%)</title><rect x="710.7" y="131.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (230 samples, 0.14%)</title><rect x="710.7" y="115.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (230 samples, 0.14%)</title><rect x="710.7" y="99.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="713.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (656 samples, 0.40%)</title><rect x="712.3" y="211.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (656 samples, 0.40%)</title><rect x="712.3" y="195.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (656 samples, 0.40%)</title><rect x="712.3" y="179.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (656 samples, 0.40%)</title><rect x="712.3" y="163.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (152 samples, 0.09%)</title><rect x="712.3" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.09%)</title><rect x="712.3" y="131.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="715.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (504 samples, 0.31%)</title><rect x="713.4" y="147.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (504 samples, 0.31%)</title><rect x="713.4" y="131.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.4" y="142.0"></text>
</g>
<g>
<title>byte[] (496 samples, 0.30%)</title><rect x="713.4" y="115.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="716.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,196 samples, 0.73%)</title><rect x="717.1" y="211.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (378 samples, 0.23%)</title><rect x="717.1" y="195.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="720.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (818 samples, 0.50%)</title><rect x="719.8" y="195.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (818 samples, 0.50%)</title><rect x="719.8" y="179.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (818 samples, 0.50%)</title><rect x="719.8" y="163.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (818 samples, 0.50%)</title><rect x="719.8" y="147.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (174 samples, 0.11%)</title><rect x="719.8" y="131.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (174 samples, 0.11%)</title><rect x="719.8" y="115.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="722.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (644 samples, 0.40%)</title><rect x="721.1" y="131.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (644 samples, 0.40%)</title><rect x="721.1" y="115.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.1" y="126.0"></text>
</g>
<g>
<title>byte[] (632 samples, 0.39%)</title><rect x="721.1" y="99.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="724.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.apply (423 samples, 0.26%)</title><rect x="725.7" y="339.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (423 samples, 0.26%)</title><rect x="725.7" y="323.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (216 samples, 0.13%)</title><rect x="725.7" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (216 samples, 0.13%)</title><rect x="725.7" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (216 samples, 0.13%)</title><rect x="725.7" y="275.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.7" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (216 samples, 0.13%)</title><rect x="725.7" y="259.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (207 samples, 0.13%)</title><rect x="727.3" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (207 samples, 0.13%)</title><rect x="727.3" y="291.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="730.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (230 samples, 0.14%)</title><rect x="728.8" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (230 samples, 0.14%)</title><rect x="728.8" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$483/1866005702.apply (230 samples, 0.14%)</title><rect x="728.8" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (230 samples, 0.14%)</title><rect x="728.8" y="307.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (230 samples, 0.14%)</title><rect x="728.8" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (230 samples, 0.14%)</title><rect x="728.8" y="275.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="731.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/1686384082.apply (301 samples, 0.18%)</title><rect x="730.5" y="387.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (301 samples, 0.18%)</title><rect x="730.5" y="371.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (301 samples, 0.18%)</title><rect x="730.5" y="355.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="733.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (11,937 samples, 7.32%)</title><rect x="732.6" y="499.0" width="86.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.6" y="510.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (783 samples, 0.48%)</title><rect x="732.6" y="483.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (783 samples, 0.48%)</title><rect x="732.6" y="467.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (783 samples, 0.48%)</title><rect x="732.6" y="451.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (783 samples, 0.48%)</title><rect x="732.6" y="435.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (783 samples, 0.48%)</title><rect x="732.6" y="419.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.6" y="430.0"></text>
</g>
<g>
<title>byte[] (782 samples, 0.48%)</title><rect x="732.6" y="403.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,207 samples, 0.74%)</title><rect x="738.3" y="483.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (178 samples, 0.11%)</title><rect x="738.3" y="467.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="741.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (352 samples, 0.22%)</title><rect x="739.6" y="467.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (352 samples, 0.22%)</title><rect x="739.6" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (165 samples, 0.10%)</title><rect x="739.6" y="435.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="742.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (187 samples, 0.11%)</title><rect x="740.8" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.8" y="446.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.11%)</title><rect x="740.8" y="419.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="743.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (207 samples, 0.13%)</title><rect x="742.1" y="467.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (207 samples, 0.13%)</title><rect x="742.1" y="451.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.1" y="462.0"></text>
</g>
<g>
<title>byte[] (207 samples, 0.13%)</title><rect x="742.1" y="435.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="745.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (470 samples, 0.29%)</title><rect x="743.6" y="467.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (470 samples, 0.29%)</title><rect x="743.6" y="451.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.17%)</title><rect x="743.6" y="435.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (201 samples, 0.12%)</title><rect x="745.6" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.6" y="446.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.12%)</title><rect x="745.6" y="419.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="748.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3,356 samples, 2.06%)</title><rect x="747.1" y="483.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.1" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,356 samples, 2.06%)</title><rect x="747.1" y="467.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.1" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,356 samples, 2.06%)</title><rect x="747.1" y="451.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.1" y="462.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (118 samples, 0.07%)</title><rect x="747.1" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="750.1" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (160 samples, 0.10%)</title><rect x="747.9" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (316 samples, 0.19%)</title><rect x="749.1" y="435.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="752.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (122 samples, 0.07%)</title><rect x="751.4" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="754.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.13%)</title><rect x="752.2" y="435.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.13%)</title><rect x="752.2" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (207 samples, 0.13%)</title><rect x="752.2" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.2" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (207 samples, 0.13%)</title><rect x="752.2" y="387.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="755.2" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (202 samples, 0.12%)</title><rect x="753.7" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.7" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (202 samples, 0.12%)</title><rect x="753.7" y="419.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="756.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,943 samples, 1.19%)</title><rect x="755.2" y="435.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (1,943 samples, 1.19%)</title><rect x="755.2" y="419.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,943 samples, 1.19%)</title><rect x="755.2" y="403.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (336 samples, 0.21%)</title><rect x="755.2" y="387.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (336 samples, 0.21%)</title><rect x="755.2" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.get$Lambda (336 samples, 0.21%)</title><rect x="755.2" y="355.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.2" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$539 (336 samples, 0.21%)</title><rect x="755.2" y="339.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="758.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (395 samples, 0.24%)</title><rect x="757.6" y="387.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.accept (395 samples, 0.24%)</title><rect x="757.6" y="371.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (395 samples, 0.24%)</title><rect x="757.6" y="355.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (395 samples, 0.24%)</title><rect x="757.6" y="339.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (395 samples, 0.24%)</title><rect x="757.6" y="323.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (395 samples, 0.24%)</title><rect x="757.6" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (395 samples, 0.24%)</title><rect x="757.6" y="291.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (395 samples, 0.24%)</title><rect x="757.6" y="275.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (395 samples, 0.24%)</title><rect x="757.6" y="259.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="760.6" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (667 samples, 0.41%)</title><rect x="760.5" y="387.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (667 samples, 0.41%)</title><rect x="760.5" y="371.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (327 samples, 0.20%)</title><rect x="760.5" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (327 samples, 0.20%)</title><rect x="760.5" y="339.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (327 samples, 0.20%)</title><rect x="760.5" y="323.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="763.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (340 samples, 0.21%)</title><rect x="762.9" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (340 samples, 0.21%)</title><rect x="762.9" y="339.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="765.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (545 samples, 0.33%)</title><rect x="765.3" y="387.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (545 samples, 0.33%)</title><rect x="765.3" y="371.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="768.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (288 samples, 0.18%)</title><rect x="769.3" y="435.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (288 samples, 0.18%)</title><rect x="769.3" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="772.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (6,591 samples, 4.04%)</title><rect x="771.3" y="483.0" width="47.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.3" y="494.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (330 samples, 0.20%)</title><rect x="771.3" y="467.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="774.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (442 samples, 0.27%)</title><rect x="773.7" y="467.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (442 samples, 0.27%)</title><rect x="773.7" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.7" y="462.0"></text>
</g>
<g>
<title>byte[] (442 samples, 0.27%)</title><rect x="773.7" y="435.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="776.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (810 samples, 0.50%)</title><rect x="776.9" y="467.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (810 samples, 0.50%)</title><rect x="776.9" y="451.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (321 samples, 0.20%)</title><rect x="776.9" y="435.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="779.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (489 samples, 0.30%)</title><rect x="779.3" y="435.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.3" y="446.0"></text>
</g>
<g>
<title>byte[] (489 samples, 0.30%)</title><rect x="779.3" y="419.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="782.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (5,009 samples, 3.07%)</title><rect x="782.8" y="467.0" width="36.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.8" y="478.0">jdk..</text>
</g>
<g>
<title>java/lang/String.substring (1,453 samples, 0.89%)</title><rect x="782.8" y="451.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,453 samples, 0.89%)</title><rect x="782.8" y="435.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (628 samples, 0.39%)</title><rect x="782.8" y="419.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="785.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (825 samples, 0.51%)</title><rect x="787.3" y="419.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.3" y="430.0"></text>
</g>
<g>
<title>byte[] (825 samples, 0.51%)</title><rect x="787.3" y="403.0" width="6.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="790.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (787 samples, 0.48%)</title><rect x="793.3" y="451.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (787 samples, 0.48%)</title><rect x="793.3" y="435.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.3" y="446.0"></text>
</g>
<g>
<title>byte[] (434 samples, 0.27%)</title><rect x="793.3" y="419.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="796.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (353 samples, 0.22%)</title><rect x="796.5" y="419.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="799.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (679 samples, 0.42%)</title><rect x="799.0" y="451.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (679 samples, 0.42%)</title><rect x="799.0" y="435.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (679 samples, 0.42%)</title><rect x="799.0" y="419.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (293 samples, 0.18%)</title><rect x="799.0" y="403.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="802.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (386 samples, 0.24%)</title><rect x="801.1" y="403.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.1" y="414.0"></text>
</g>
<g>
<title>byte[] (386 samples, 0.24%)</title><rect x="801.1" y="387.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="804.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (779 samples, 0.48%)</title><rect x="803.9" y="451.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (779 samples, 0.48%)</title><rect x="803.9" y="435.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (779 samples, 0.48%)</title><rect x="803.9" y="419.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (779 samples, 0.48%)</title><rect x="803.9" y="403.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (779 samples, 0.48%)</title><rect x="803.9" y="387.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (779 samples, 0.48%)</title><rect x="803.9" y="371.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="806.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,311 samples, 0.80%)</title><rect x="809.6" y="451.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (449 samples, 0.28%)</title><rect x="809.6" y="435.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.6" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (449 samples, 0.28%)</title><rect x="809.6" y="419.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="812.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (528 samples, 0.32%)</title><rect x="812.8" y="435.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (520 samples, 0.32%)</title><rect x="812.8" y="419.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="815.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$579/406867462.apply (334 samples, 0.20%)</title><rect x="816.6" y="435.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (334 samples, 0.20%)</title><rect x="816.6" y="419.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.6" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (334 samples, 0.20%)</title><rect x="816.6" y="403.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="819.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,702 samples, 3.50%)</title><rect x="819.1" y="611.0" width="41.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.1" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,702 samples, 3.50%)</title><rect x="819.1" y="595.0" width="41.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.1" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,702 samples, 3.50%)</title><rect x="819.1" y="579.0" width="41.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.1" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (5,702 samples, 3.50%)</title><rect x="819.1" y="563.0" width="41.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.1" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,702 samples, 3.50%)</title><rect x="819.1" y="547.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.1" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (740 samples, 0.45%)</title><rect x="819.1" y="531.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (244 samples, 0.15%)</title><rect x="819.1" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (244 samples, 0.15%)</title><rect x="819.1" y="499.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$430/849471415.get$Lambda (107 samples, 0.07%)</title><rect x="819.1" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$430 (107 samples, 0.07%)</title><rect x="819.1" y="467.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="822.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$436/99321411.get$Lambda (137 samples, 0.08%)</title><rect x="819.8" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$436 (137 samples, 0.08%)</title><rect x="819.8" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="822.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (248 samples, 0.15%)</title><rect x="820.8" y="515.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="823.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (248 samples, 0.15%)</title><rect x="822.6" y="515.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (248 samples, 0.15%)</title><rect x="822.6" y="499.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (99 samples, 0.06%)</title><rect x="822.6" y="483.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="825.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (149 samples, 0.09%)</title><rect x="823.3" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (149 samples, 0.09%)</title><rect x="823.3" y="467.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (4,956 samples, 3.04%)</title><rect x="824.4" y="531.0" width="35.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.4" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,956 samples, 3.04%)</title><rect x="824.4" y="515.0" width="35.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.4" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,956 samples, 3.04%)</title><rect x="824.4" y="499.0" width="35.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.4" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,956 samples, 3.04%)</title><rect x="824.4" y="483.0" width="35.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.4" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,956 samples, 3.04%)</title><rect x="824.4" y="467.0" width="35.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.4" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,956 samples, 3.04%)</title><rect x="824.4" y="451.0" width="35.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.4" y="462.0">jdk..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (341 samples, 0.21%)</title><rect x="824.4" y="435.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (341 samples, 0.21%)</title><rect x="824.4" y="419.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (341 samples, 0.21%)</title><rect x="824.4" y="403.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="827.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (150 samples, 0.09%)</title><rect x="826.9" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.9" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (150 samples, 0.09%)</title><rect x="826.9" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="829.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/71894497.run (3,054 samples, 1.87%)</title><rect x="828.0" y="435.0" width="22.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,054 samples, 1.87%)</title><rect x="828.0" y="419.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.0" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,054 samples, 1.87%)</title><rect x="828.0" y="403.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.0" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (921 samples, 0.57%)</title><rect x="828.0" y="387.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (641 samples, 0.39%)</title><rect x="828.0" y="371.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (231 samples, 0.14%)</title><rect x="828.0" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.0" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (231 samples, 0.14%)</title><rect x="828.0" y="339.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="831.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (410 samples, 0.25%)</title><rect x="829.7" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (410 samples, 0.25%)</title><rect x="829.7" y="339.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="832.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (280 samples, 0.17%)</title><rect x="832.6" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (280 samples, 0.17%)</title><rect x="832.6" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (280 samples, 0.17%)</title><rect x="832.6" y="339.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (164 samples, 0.10%)</title><rect x="832.6" y="323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.6" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (164 samples, 0.10%)</title><rect x="832.6" y="307.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="835.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (116 samples, 0.07%)</title><rect x="833.8" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (116 samples, 0.07%)</title><rect x="833.8" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.8" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (116 samples, 0.07%)</title><rect x="833.8" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.8" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (116 samples, 0.07%)</title><rect x="833.8" y="275.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="836.8" y="286.0"></text>
</g>
<g>
<title>java/util/Optional.map (92 samples, 0.06%)</title><rect x="834.6" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.6" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (92 samples, 0.06%)</title><rect x="834.6" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.6" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.of (92 samples, 0.06%)</title><rect x="834.6" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.6" y="366.0"></text>
</g>
<g>
<title>java.util.Optional (92 samples, 0.06%)</title><rect x="834.6" y="339.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="837.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,041 samples, 1.25%)</title><rect x="835.3" y="387.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (163 samples, 0.10%)</title><rect x="835.3" y="371.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.3" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (163 samples, 0.10%)</title><rect x="835.3" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.3" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (163 samples, 0.10%)</title><rect x="835.3" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (163 samples, 0.10%)</title><rect x="835.3" y="323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (163 samples, 0.10%)</title><rect x="835.3" y="307.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="838.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,878 samples, 1.15%)</title><rect x="836.5" y="371.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (832 samples, 0.51%)</title><rect x="836.5" y="355.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.5" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (169 samples, 0.10%)</title><rect x="836.5" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (169 samples, 0.10%)</title><rect x="836.5" y="323.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (169 samples, 0.10%)</title><rect x="836.5" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (169 samples, 0.10%)</title><rect x="836.5" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.5" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (169 samples, 0.10%)</title><rect x="836.5" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.5" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (169 samples, 0.10%)</title><rect x="836.5" y="259.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="839.5" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (152 samples, 0.09%)</title><rect x="837.7" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (152 samples, 0.09%)</title><rect x="837.7" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (152 samples, 0.09%)</title><rect x="837.7" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.7" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (152 samples, 0.09%)</title><rect x="837.7" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.7" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (152 samples, 0.09%)</title><rect x="837.7" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.7" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (152 samples, 0.09%)</title><rect x="837.7" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="840.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (189 samples, 0.12%)</title><rect x="838.8" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (189 samples, 0.12%)</title><rect x="838.8" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (189 samples, 0.12%)</title><rect x="838.8" y="307.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="841.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (152 samples, 0.09%)</title><rect x="840.2" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (152 samples, 0.09%)</title><rect x="840.2" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (152 samples, 0.09%)</title><rect x="840.2" y="307.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="843.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (169 samples, 0.10%)</title><rect x="841.3" y="339.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="844.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (306 samples, 0.19%)</title><rect x="842.5" y="355.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (158 samples, 0.10%)</title><rect x="842.5" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (158 samples, 0.10%)</title><rect x="842.5" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (158 samples, 0.10%)</title><rect x="842.5" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (158 samples, 0.10%)</title><rect x="842.5" y="291.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="845.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (148 samples, 0.09%)</title><rect x="843.7" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (148 samples, 0.09%)</title><rect x="843.7" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (148 samples, 0.09%)</title><rect x="843.7" y="307.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="846.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (740 samples, 0.45%)</title><rect x="844.7" y="355.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (179 samples, 0.11%)</title><rect x="844.7" y="339.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="847.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (561 samples, 0.34%)</title><rect x="846.0" y="339.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (153 samples, 0.09%)</title><rect x="846.0" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (153 samples, 0.09%)</title><rect x="846.0" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (153 samples, 0.09%)</title><rect x="846.0" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (153 samples, 0.09%)</title><rect x="846.0" y="275.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="849.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (408 samples, 0.25%)</title><rect x="847.1" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (408 samples, 0.25%)</title><rect x="847.1" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (289 samples, 0.18%)</title><rect x="847.1" y="291.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (119 samples, 0.07%)</title><rect x="849.2" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (119 samples, 0.07%)</title><rect x="849.2" y="275.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="852.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (856 samples, 0.53%)</title><rect x="850.1" y="435.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (856 samples, 0.53%)</title><rect x="850.1" y="419.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (856 samples, 0.53%)</title><rect x="850.1" y="403.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (427 samples, 0.26%)</title><rect x="850.1" y="387.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (427 samples, 0.26%)</title><rect x="850.1" y="371.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (427 samples, 0.26%)</title><rect x="850.1" y="355.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (427 samples, 0.26%)</title><rect x="850.1" y="339.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$642/1652146549.accept (427 samples, 0.26%)</title><rect x="850.1" y="323.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (427 samples, 0.26%)</title><rect x="850.1" y="307.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (427 samples, 0.26%)</title><rect x="850.1" y="291.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (427 samples, 0.26%)</title><rect x="850.1" y="275.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (427 samples, 0.26%)</title><rect x="850.1" y="259.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$663/395292897.apply (427 samples, 0.26%)</title><rect x="850.1" y="243.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (427 samples, 0.26%)</title><rect x="850.1" y="227.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (427 samples, 0.26%)</title><rect x="850.1" y="211.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="853.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (429 samples, 0.26%)</title><rect x="853.2" y="387.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.2" y="398.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.13%)</title><rect x="853.2" y="371.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="856.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (215 samples, 0.13%)</title><rect x="854.7" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (215 samples, 0.13%)</title><rect x="854.7" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.7" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (215 samples, 0.13%)</title><rect x="854.7" y="339.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="857.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (555 samples, 0.34%)</title><rect x="856.3" y="435.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (555 samples, 0.34%)</title><rect x="856.3" y="419.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (555 samples, 0.34%)</title><rect x="856.3" y="403.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (555 samples, 0.34%)</title><rect x="856.3" y="387.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (555 samples, 0.34%)</title><rect x="856.3" y="371.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (153 samples, 0.09%)</title><rect x="856.3" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.09%)</title><rect x="856.3" y="339.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="859.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (402 samples, 0.25%)</title><rect x="857.4" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (402 samples, 0.25%)</title><rect x="857.4" y="339.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (402 samples, 0.25%)</title><rect x="857.4" y="323.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="860.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (10,115 samples, 6.21%)</title><rect x="860.3" y="691.0" width="73.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.3" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (10,115 samples, 6.21%)</title><rect x="860.3" y="675.0" width="73.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.3" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (10,115 samples, 6.21%)</title><rect x="860.3" y="659.0" width="73.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.3" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (10,115 samples, 6.21%)</title><rect x="860.3" y="643.0" width="73.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.3" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (10,115 samples, 6.21%)</title><rect x="860.3" y="627.0" width="73.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.3" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (10,115 samples, 6.21%)</title><rect x="860.3" y="611.0" width="73.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.3" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10,115 samples, 6.21%)</title><rect x="860.3" y="595.0" width="73.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.3" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10,115 samples, 6.21%)</title><rect x="860.3" y="579.0" width="73.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.3" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10,115 samples, 6.21%)</title><rect x="860.3" y="563.0" width="73.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.3" y="574.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (3,444 samples, 2.11%)</title><rect x="860.3" y="547.0" width="25.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.3" y="558.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.accept (3,444 samples, 2.11%)</title><rect x="860.3" y="531.0" width="25.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.3" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$resolve$0 (3,444 samples, 2.11%)</title><rect x="860.3" y="515.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.3" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (3,444 samples, 2.11%)</title><rect x="860.3" y="499.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.3" y="510.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,444 samples, 2.11%)</title><rect x="860.3" y="483.0" width="25.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.3" y="494.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,444 samples, 2.11%)</title><rect x="860.3" y="467.0" width="25.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.3" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,735 samples, 1.06%)</title><rect x="860.3" y="451.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,735 samples, 1.06%)</title><rect x="860.3" y="435.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,716 samples, 1.05%)</title><rect x="860.3" y="419.0" width="12.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="863.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,709 samples, 1.05%)</title><rect x="872.9" y="451.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.9" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (802 samples, 0.49%)</title><rect x="872.9" y="435.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="875.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (907 samples, 0.56%)</title><rect x="878.7" y="435.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (907 samples, 0.56%)</title><rect x="878.7" y="419.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (907 samples, 0.56%)</title><rect x="878.7" y="403.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (907 samples, 0.56%)</title><rect x="878.7" y="387.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (907 samples, 0.56%)</title><rect x="878.7" y="371.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="881.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6,671 samples, 4.09%)</title><rect x="885.3" y="547.0" width="48.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.3" y="558.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$187/991325733.apply (6,671 samples, 4.09%)</title><rect x="885.3" y="531.0" width="48.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="542.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertResponse (6,671 samples, 4.09%)</title><rect x="885.3" y="515.0" width="48.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.3" y="526.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.valueOf (2,081 samples, 1.28%)</title><rect x="885.3" y="499.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2,081 samples, 1.28%)</title><rect x="885.3" y="483.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>byte[] (1,128 samples, 0.69%)</title><rect x="885.3" y="467.0" width="8.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="888.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (953 samples, 0.58%)</title><rect x="893.5" y="467.0" width="6.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="896.5" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (937 samples, 0.57%)</title><rect x="900.4" y="499.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="903.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,653 samples, 2.24%)</title><rect x="907.1" y="499.0" width="26.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.1" y="510.0">o..</text>
</g>
<g>
<title>byte[] (1,526 samples, 0.94%)</title><rect x="907.1" y="483.0" width="11.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="910.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (1,257 samples, 0.77%)</title><rect x="918.2" y="483.0" width="9.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="921.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (870 samples, 0.53%)</title><rect x="927.3" y="483.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="930.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,887 samples, 1.77%)</title><rect x="933.6" y="691.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.03%)</title><rect x="933.6" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.03%)</title><rect x="933.6" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$477/334303939.get$Lambda (49 samples, 0.03%)</title><rect x="933.6" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$477 (49 samples, 0.03%)</title><rect x="933.6" y="627.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="936.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (64 samples, 0.04%)</title><rect x="934.0" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.04%)</title><rect x="934.0" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$516/1789985635.get$Lambda (64 samples, 0.04%)</title><rect x="934.0" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$516 (64 samples, 0.04%)</title><rect x="934.0" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="937.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (839 samples, 0.51%)</title><rect x="934.4" y="675.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$518/283147200.accept (727 samples, 0.45%)</title><rect x="934.4" y="659.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (727 samples, 0.45%)</title><rect x="934.4" y="643.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (727 samples, 0.45%)</title><rect x="934.4" y="627.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (727 samples, 0.45%)</title><rect x="934.4" y="611.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (727 samples, 0.45%)</title><rect x="934.4" y="595.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (727 samples, 0.45%)</title><rect x="934.4" y="579.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (727 samples, 0.45%)</title><rect x="934.4" y="563.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (727 samples, 0.45%)</title><rect x="934.4" y="547.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (727 samples, 0.45%)</title><rect x="934.4" y="531.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (727 samples, 0.45%)</title><rect x="934.4" y="515.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (727 samples, 0.45%)</title><rect x="934.4" y="499.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (727 samples, 0.45%)</title><rect x="934.4" y="483.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (181 samples, 0.11%)</title><rect x="934.4" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (181 samples, 0.11%)</title><rect x="934.4" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (181 samples, 0.11%)</title><rect x="934.4" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (81 samples, 0.05%)</title><rect x="934.4" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (81 samples, 0.05%)</title><rect x="934.4" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (81 samples, 0.05%)</title><rect x="934.4" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (81 samples, 0.05%)</title><rect x="934.4" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (81 samples, 0.05%)</title><rect x="934.4" y="355.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="937.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.06%)</title><rect x="935.0" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.06%)</title><rect x="935.0" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (100 samples, 0.06%)</title><rect x="935.0" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 0.06%)</title><rect x="935.0" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (100 samples, 0.06%)</title><rect x="935.0" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (100 samples, 0.06%)</title><rect x="935.0" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (100 samples, 0.06%)</title><rect x="935.0" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (100 samples, 0.06%)</title><rect x="935.0" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="938.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (58 samples, 0.04%)</title><rect x="935.8" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.04%)</title><rect x="935.8" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.04%)</title><rect x="935.8" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (58 samples, 0.04%)</title><rect x="935.8" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (58 samples, 0.04%)</title><rect x="935.8" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="938.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (478 samples, 0.29%)</title><rect x="936.2" y="467.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (245 samples, 0.15%)</title><rect x="936.2" y="451.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (175 samples, 0.11%)</title><rect x="936.2" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (175 samples, 0.11%)</title><rect x="936.2" y="419.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="939.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (70 samples, 0.04%)</title><rect x="937.5" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (70 samples, 0.04%)</title><rect x="937.5" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (70 samples, 0.04%)</title><rect x="937.5" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="940.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (233 samples, 0.14%)</title><rect x="938.0" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$270/992642972.get (233 samples, 0.14%)</title><rect x="938.0" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (233 samples, 0.14%)</title><rect x="938.0" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (233 samples, 0.14%)</title><rect x="938.0" y="403.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (232 samples, 0.14%)</title><rect x="938.0" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.0" y="398.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.13%)</title><rect x="938.1" y="371.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$530/286927879.accept (112 samples, 0.07%)</title><rect x="939.7" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (112 samples, 0.07%)</title><rect x="939.7" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$516/1789985635.run (112 samples, 0.07%)</title><rect x="939.7" y="627.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (112 samples, 0.07%)</title><rect x="939.7" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (112 samples, 0.07%)</title><rect x="939.7" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (112 samples, 0.07%)</title><rect x="939.7" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (112 samples, 0.07%)</title><rect x="939.7" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (112 samples, 0.07%)</title><rect x="939.7" y="547.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="942.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (168 samples, 0.10%)</title><rect x="940.7" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (91 samples, 0.06%)</title><rect x="940.7" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (91 samples, 0.06%)</title><rect x="940.7" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (91 samples, 0.06%)</title><rect x="940.7" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (91 samples, 0.06%)</title><rect x="940.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (91 samples, 0.06%)</title><rect x="940.7" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (91 samples, 0.06%)</title><rect x="940.7" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.7" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (91 samples, 0.06%)</title><rect x="940.7" y="563.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="943.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (77 samples, 0.05%)</title><rect x="941.4" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (77 samples, 0.05%)</title><rect x="941.4" y="643.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="944.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (671 samples, 0.41%)</title><rect x="941.9" y="675.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$293/88605173.run (337 samples, 0.21%)</title><rect x="941.9" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (337 samples, 0.21%)</title><rect x="941.9" y="643.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (337 samples, 0.21%)</title><rect x="941.9" y="627.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (337 samples, 0.21%)</title><rect x="941.9" y="611.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (337 samples, 0.21%)</title><rect x="941.9" y="595.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (337 samples, 0.21%)</title><rect x="941.9" y="579.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (337 samples, 0.21%)</title><rect x="941.9" y="563.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (337 samples, 0.21%)</title><rect x="941.9" y="547.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (308 samples, 0.19%)</title><rect x="942.0" y="531.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (308 samples, 0.19%)</title><rect x="942.0" y="515.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="945.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (192 samples, 0.12%)</title><rect x="942.0" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (192 samples, 0.12%)</title><rect x="942.0" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (192 samples, 0.12%)</title><rect x="942.0" y="467.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423583818.linkToTargetMethod (140 samples, 0.09%)</title><rect x="942.0" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574268151.invoke (140 samples, 0.09%)</title><rect x="942.0" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.09%)</title><rect x="942.0" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (140 samples, 0.09%)</title><rect x="942.0" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (140 samples, 0.09%)</title><rect x="942.0" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.0" y="398.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.09%)</title><rect x="942.0" y="371.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="945.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (52 samples, 0.03%)</title><rect x="943.0" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.03%)</title><rect x="943.0" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.03%)</title><rect x="943.0" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (52 samples, 0.03%)</title><rect x="943.0" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (52 samples, 0.03%)</title><rect x="943.0" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="946.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (116 samples, 0.07%)</title><rect x="943.4" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.07%)</title><rect x="943.4" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.07%)</title><rect x="943.4" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (116 samples, 0.07%)</title><rect x="943.4" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (116 samples, 0.07%)</title><rect x="943.4" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (116 samples, 0.07%)</title><rect x="943.4" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (116 samples, 0.07%)</title><rect x="943.4" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (116 samples, 0.07%)</title><rect x="943.4" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (116 samples, 0.07%)</title><rect x="943.4" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="946.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$314/275545491.run (334 samples, 0.20%)</title><rect x="944.4" y="659.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (334 samples, 0.20%)</title><rect x="944.4" y="643.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.07%)</title><rect x="944.4" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.07%)</title><rect x="944.4" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$544/870026340.get$Lambda (115 samples, 0.07%)</title><rect x="944.4" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$544 (115 samples, 0.07%)</title><rect x="944.4" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="947.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (218 samples, 0.13%)</title><rect x="945.2" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="948.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (218 samples, 0.13%)</title><rect x="945.2" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (218 samples, 0.13%)</title><rect x="945.2" y="595.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (218 samples, 0.13%)</title><rect x="945.2" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (218 samples, 0.13%)</title><rect x="945.2" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (218 samples, 0.13%)</title><rect x="945.2" y="547.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (187 samples, 0.11%)</title><rect x="946.8" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (38 samples, 0.02%)</title><rect x="946.8" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.8" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (38 samples, 0.02%)</title><rect x="946.8" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (38 samples, 0.02%)</title><rect x="946.8" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.02%)</title><rect x="946.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.8" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.02%)</title><rect x="946.8" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="949.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (149 samples, 0.09%)</title><rect x="947.1" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (39 samples, 0.02%)</title><rect x="947.2" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.2" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (39 samples, 0.02%)</title><rect x="947.2" y="627.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="950.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (82 samples, 0.05%)</title><rect x="947.5" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.5" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (56 samples, 0.03%)</title><rect x="947.7" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (577 samples, 0.35%)</title><rect x="948.1" y="675.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.03%)</title><rect x="948.1" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.03%)</title><rect x="948.1" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$472/942966156.get$Lambda (51 samples, 0.03%)</title><rect x="948.1" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$472 (51 samples, 0.03%)</title><rect x="948.1" y="611.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="951.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (323 samples, 0.20%)</title><rect x="948.5" y="659.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (139 samples, 0.09%)</title><rect x="948.5" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (139 samples, 0.09%)</title><rect x="948.5" y="627.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="951.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (184 samples, 0.11%)</title><rect x="949.5" y="643.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (184 samples, 0.11%)</title><rect x="949.5" y="627.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="952.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (203 samples, 0.12%)</title><rect x="950.8" y="659.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (203 samples, 0.12%)</title><rect x="950.8" y="643.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="953.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (59 samples, 0.04%)</title><rect x="952.3" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (59 samples, 0.04%)</title><rect x="952.3" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.3" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (59 samples, 0.04%)</title><rect x="952.3" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (59 samples, 0.04%)</title><rect x="952.3" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (59 samples, 0.04%)</title><rect x="952.3" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.3" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (59 samples, 0.04%)</title><rect x="952.3" y="595.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="955.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (149 samples, 0.09%)</title><rect x="952.7" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (149 samples, 0.09%)</title><rect x="952.7" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (149 samples, 0.09%)</title><rect x="952.7" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (149 samples, 0.09%)</title><rect x="952.7" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (47 samples, 0.03%)</title><rect x="952.7" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (47 samples, 0.03%)</title><rect x="952.7" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="955.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (102 samples, 0.06%)</title><rect x="953.1" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (102 samples, 0.06%)</title><rect x="953.1" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (102 samples, 0.06%)</title><rect x="953.1" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (102 samples, 0.06%)</title><rect x="953.1" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (102 samples, 0.06%)</title><rect x="953.1" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (102 samples, 0.06%)</title><rect x="953.1" y="531.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="956.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (65 samples, 0.04%)</title><rect x="953.8" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (65 samples, 0.04%)</title><rect x="953.8" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (65 samples, 0.04%)</title><rect x="953.8" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (65 samples, 0.04%)</title><rect x="953.8" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (60 samples, 0.04%)</title><rect x="953.8" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (60 samples, 0.04%)</title><rect x="953.8" y="595.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="956.8" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32,530 samples, 19.96%)</title><rect x="954.5" y="691.0" width="235.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.5" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2,165 samples, 1.33%)</title><rect x="954.5" y="675.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1,058 samples, 0.65%)</title><rect x="954.5" y="659.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.5" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (285 samples, 0.17%)</title><rect x="954.5" y="643.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="957.5" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (281 samples, 0.17%)</title><rect x="956.5" y="643.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="959.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (492 samples, 0.30%)</title><rect x="958.6" y="643.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (492 samples, 0.30%)</title><rect x="958.6" y="627.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (492 samples, 0.30%)</title><rect x="958.6" y="611.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (492 samples, 0.30%)</title><rect x="958.6" y="595.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="961.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,107 samples, 0.68%)</title><rect x="962.1" y="659.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,107 samples, 0.68%)</title><rect x="962.1" y="643.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,107 samples, 0.68%)</title><rect x="962.1" y="627.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1,107 samples, 0.68%)</title><rect x="962.1" y="611.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (740 samples, 0.45%)</title><rect x="962.1" y="595.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.1" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (740 samples, 0.45%)</title><rect x="962.1" y="579.0" width="5.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="965.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (367 samples, 0.23%)</title><rect x="967.5" y="595.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (367 samples, 0.23%)</title><rect x="967.5" y="579.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (367 samples, 0.23%)</title><rect x="967.5" y="563.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (367 samples, 0.23%)</title><rect x="967.5" y="547.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (367 samples, 0.23%)</title><rect x="967.5" y="531.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.5" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (367 samples, 0.23%)</title><rect x="967.5" y="515.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (30,365 samples, 18.63%)</title><rect x="970.2" y="675.0" width="219.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.2" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30,365 samples, 18.63%)</title><rect x="970.2" y="659.0" width="219.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.2" y="670.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29,775 samples, 18.27%)</title><rect x="970.2" y="643.0" width="215.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.2" y="654.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,686 samples, 9.62%)</title><rect x="970.2" y="627.0" width="113.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.2" y="638.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,686 samples, 9.62%)</title><rect x="970.2" y="611.0" width="113.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.2" y="622.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (14,962 samples, 9.18%)</title><rect x="970.2" y="595.0" width="108.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.2" y="606.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (614 samples, 0.38%)</title><rect x="970.2" y="579.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (614 samples, 0.38%)</title><rect x="970.2" y="563.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (614 samples, 0.38%)</title><rect x="970.2" y="547.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (614 samples, 0.38%)</title><rect x="970.2" y="531.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (313 samples, 0.19%)</title><rect x="970.2" y="515.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (301 samples, 0.18%)</title><rect x="972.4" y="515.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.4" y="526.0"></text>
</g>
<g>
<title>byte[] (301 samples, 0.18%)</title><rect x="972.4" y="499.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="975.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.entity (14,348 samples, 8.80%)</title><rect x="974.6" y="579.0" width="103.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.6" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (519 samples, 0.32%)</title><rect x="974.6" y="563.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (519 samples, 0.32%)</title><rect x="974.6" y="547.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (519 samples, 0.32%)</title><rect x="974.6" y="531.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="977.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (535 samples, 0.33%)</title><rect x="978.4" y="563.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (535 samples, 0.33%)</title><rect x="978.4" y="547.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (535 samples, 0.33%)</title><rect x="978.4" y="531.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (249 samples, 0.15%)</title><rect x="978.4" y="515.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="981.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (286 samples, 0.18%)</title><rect x="980.2" y="515.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.2" y="526.0"></text>
</g>
<g>
<title>byte[] (286 samples, 0.18%)</title><rect x="980.2" y="499.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="983.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handle (9,819 samples, 6.02%)</title><rect x="982.2" y="563.0" width="71.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.2" y="574.0">ru/mail/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (51 samples, 0.03%)</title><rect x="982.2" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="985.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (49 samples, 0.03%)</title><rect x="982.6" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (49 samples, 0.03%)</title><rect x="982.6" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (49 samples, 0.03%)</title><rect x="982.6" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.03%)</title><rect x="982.6" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.6" y="510.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="982.6" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="985.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.04%)</title><rect x="983.0" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.04%)</title><rect x="983.0" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.0" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.04%)</title><rect x="983.0" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="986.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (103 samples, 0.06%)</title><rect x="983.5" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (81 samples, 0.05%)</title><rect x="983.6" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (81 samples, 0.05%)</title><rect x="983.6" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (44 samples, 0.03%)</title><rect x="983.6" y="499.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="986.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (36 samples, 0.02%)</title><rect x="984.0" y="499.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="987.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.proxy (8,138 samples, 4.99%)</title><rect x="984.2" y="547.0" width="58.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.2" y="558.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (196 samples, 0.12%)</title><rect x="984.2" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (196 samples, 0.12%)</title><rect x="984.2" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (103 samples, 0.06%)</title><rect x="984.2" y="499.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="987.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.06%)</title><rect x="985.0" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.06%)</title><rect x="985.0" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.06%)</title><rect x="985.0" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="988.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (213 samples, 0.13%)</title><rect x="985.6" y="531.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (213 samples, 0.13%)</title><rect x="985.6" y="515.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (128 samples, 0.08%)</title><rect x="985.6" y="499.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="988.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.05%)</title><rect x="986.6" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.05%)</title><rect x="986.6" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.05%)</title><rect x="986.6" y="467.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="989.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (5,428 samples, 3.33%)</title><rect x="987.2" y="531.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.2" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,428 samples, 3.33%)</title><rect x="987.2" y="515.0" width="39.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.2" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,428 samples, 3.33%)</title><rect x="987.2" y="499.0" width="39.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.2" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,428 samples, 3.33%)</title><rect x="987.2" y="483.0" width="39.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.2" y="494.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.03%)</title><rect x="987.2" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.03%)</title><rect x="987.2" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$173/958672610.get$Lambda (55 samples, 0.03%)</title><rect x="987.2" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$173 (55 samples, 0.03%)</title><rect x="987.2" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="990.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (197 samples, 0.12%)</title><rect x="987.6" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (197 samples, 0.12%)</title><rect x="987.6" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (120 samples, 0.07%)</title><rect x="987.6" y="435.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="990.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.05%)</title><rect x="988.4" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.05%)</title><rect x="988.4" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.05%)</title><rect x="988.4" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="991.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (207 samples, 0.13%)</title><rect x="989.0" y="467.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (207 samples, 0.13%)</title><rect x="989.0" y="451.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (118 samples, 0.07%)</title><rect x="989.0" y="435.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="992.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.05%)</title><rect x="989.9" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.05%)</title><rect x="989.9" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.05%)</title><rect x="989.9" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="992.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (176 samples, 0.11%)</title><rect x="990.5" y="467.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="993.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (281 samples, 0.17%)</title><rect x="991.8" y="467.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="994.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,421 samples, 1.49%)</title><rect x="993.8" y="467.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (326 samples, 0.20%)</title><rect x="993.8" y="451.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (267 samples, 0.16%)</title><rect x="993.8" y="435.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (93 samples, 0.06%)</title><rect x="993.8" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.8" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (93 samples, 0.06%)</title><rect x="993.8" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="996.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (174 samples, 0.11%)</title><rect x="994.5" y="419.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.5" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (174 samples, 0.11%)</title><rect x="994.5" y="403.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="997.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (59 samples, 0.04%)</title><rect x="995.7" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (59 samples, 0.04%)</title><rect x="995.7" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (59 samples, 0.04%)</title><rect x="995.7" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (59 samples, 0.04%)</title><rect x="995.7" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (59 samples, 0.04%)</title><rect x="995.7" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="998.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (494 samples, 0.30%)</title><rect x="996.2" y="451.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (494 samples, 0.30%)</title><rect x="996.2" y="435.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.2" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (75 samples, 0.05%)</title><rect x="996.2" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="999.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (147 samples, 0.09%)</title><rect x="996.7" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="999.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (43 samples, 0.03%)</title><rect x="997.8" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1000.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.05%)</title><rect x="998.1" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.05%)</title><rect x="998.1" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (88 samples, 0.05%)</title><rect x="998.1" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (88 samples, 0.05%)</title><rect x="998.1" y="371.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (141 samples, 0.09%)</title><rect x="998.7" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (141 samples, 0.09%)</title><rect x="998.7" y="403.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1001.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (44 samples, 0.03%)</title><rect x="999.7" y="451.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1002.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,165 samples, 0.71%)</title><rect x="1000.1" y="451.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.1" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,165 samples, 0.71%)</title><rect x="1000.1" y="435.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.1" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,071 samples, 0.66%)</title><rect x="1000.1" y="419.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.1" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,071 samples, 0.66%)</title><rect x="1000.1" y="403.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.1" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,071 samples, 0.66%)</title><rect x="1000.1" y="387.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.1" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (260 samples, 0.16%)</title><rect x="1000.1" y="371.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1003.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (262 samples, 0.16%)</title><rect x="1001.9" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.9" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (262 samples, 0.16%)</title><rect x="1001.9" y="355.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.9" y="366.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.16%)</title><rect x="1001.9" y="339.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1004.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (549 samples, 0.34%)</title><rect x="1003.8" y="371.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (549 samples, 0.34%)</title><rect x="1003.8" y="355.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.13%)</title><rect x="1003.8" y="339.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1006.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (329 samples, 0.20%)</title><rect x="1005.4" y="339.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.4" y="350.0"></text>
</g>
<g>
<title>byte[] (329 samples, 0.20%)</title><rect x="1005.4" y="323.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1008.4" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (94 samples, 0.06%)</title><rect x="1007.8" y="419.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1010.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (128 samples, 0.08%)</title><rect x="1008.5" y="451.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (128 samples, 0.08%)</title><rect x="1008.5" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1011.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (264 samples, 0.16%)</title><rect x="1009.4" y="451.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (68 samples, 0.04%)</title><rect x="1009.4" y="435.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1012.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (62 samples, 0.04%)</title><rect x="1009.9" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.04%)</title><rect x="1009.9" y="419.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1012.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (134 samples, 0.08%)</title><rect x="1010.4" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (134 samples, 0.08%)</title><rect x="1010.4" y="419.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1013.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,282 samples, 0.79%)</title><rect x="1011.3" y="467.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1014.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (44 samples, 0.03%)</title><rect x="1011.3" y="451.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1014.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (223 samples, 0.14%)</title><rect x="1011.7" y="451.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1014.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (37 samples, 0.02%)</title><rect x="1013.3" y="451.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (37 samples, 0.02%)</title><rect x="1013.3" y="435.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1016.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (978 samples, 0.60%)</title><rect x="1013.5" y="451.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (978 samples, 0.60%)</title><rect x="1013.5" y="435.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (100 samples, 0.06%)</title><rect x="1013.5" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1016.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (115 samples, 0.07%)</title><rect x="1014.3" y="419.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1017.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (448 samples, 0.27%)</title><rect x="1015.1" y="419.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1018.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (448 samples, 0.27%)</title><rect x="1015.1" y="403.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (448 samples, 0.27%)</title><rect x="1015.1" y="387.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (448 samples, 0.27%)</title><rect x="1015.1" y="371.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.1" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (448 samples, 0.27%)</title><rect x="1015.1" y="355.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1018.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (162 samples, 0.10%)</title><rect x="1018.3" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (162 samples, 0.10%)</title><rect x="1018.3" y="403.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (45 samples, 0.03%)</title><rect x="1018.3" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (45 samples, 0.03%)</title><rect x="1018.3" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1021.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (117 samples, 0.07%)</title><rect x="1018.7" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (117 samples, 0.07%)</title><rect x="1018.7" y="371.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1021.7" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (153 samples, 0.09%)</title><rect x="1019.5" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (153 samples, 0.09%)</title><rect x="1019.5" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (153 samples, 0.09%)</title><rect x="1019.5" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1022.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (809 samples, 0.50%)</title><rect x="1020.6" y="467.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (173 samples, 0.11%)</title><rect x="1020.6" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (91 samples, 0.06%)</title><rect x="1020.6" y="435.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1023.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (82 samples, 0.05%)</title><rect x="1021.3" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (82 samples, 0.05%)</title><rect x="1021.3" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (82 samples, 0.05%)</title><rect x="1021.3" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (82 samples, 0.05%)</title><rect x="1021.3" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (82 samples, 0.05%)</title><rect x="1021.3" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1024.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (91 samples, 0.06%)</title><rect x="1021.9" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1024.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (545 samples, 0.33%)</title><rect x="1022.5" y="451.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.06%)</title><rect x="1022.5" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.06%)</title><rect x="1022.5" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/895526520.get$Lambda (50 samples, 0.03%)</title><rect x="1022.5" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$153 (50 samples, 0.03%)</title><rect x="1022.5" y="387.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1025.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/1004347831.get$Lambda (54 samples, 0.03%)</title><rect x="1022.9" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$161 (54 samples, 0.03%)</title><rect x="1022.9" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1025.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (441 samples, 0.27%)</title><rect x="1023.3" y="435.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (441 samples, 0.27%)</title><rect x="1023.3" y="419.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (245 samples, 0.15%)</title><rect x="1023.3" y="403.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1026.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (196 samples, 0.12%)</title><rect x="1025.1" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1028.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (196 samples, 0.12%)</title><rect x="1025.1" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1028.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (196 samples, 0.12%)</title><rect x="1025.1" y="371.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1028.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertRequest (2,301 samples, 1.41%)</title><rect x="1026.5" y="531.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (242 samples, 0.15%)</title><rect x="1026.5" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/807657332.invoke (242 samples, 0.15%)</title><rect x="1026.5" y="499.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (242 samples, 0.15%)</title><rect x="1026.5" y="483.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (65 samples, 0.04%)</title><rect x="1026.5" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.04%)</title><rect x="1026.5" y="451.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1029.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (177 samples, 0.11%)</title><rect x="1026.9" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (177 samples, 0.11%)</title><rect x="1026.9" y="451.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.9" y="462.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.11%)</title><rect x="1026.9" y="435.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1029.9" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (1,159 samples, 0.71%)</title><rect x="1028.2" y="515.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.2" y="526.0"></text>
</g>
<g>
<title>java.net.URI (231 samples, 0.14%)</title><rect x="1028.2" y="499.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1031.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (928 samples, 0.57%)</title><rect x="1029.9" y="499.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1032.9" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (93 samples, 0.06%)</title><rect x="1029.9" y="483.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1032.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (835 samples, 0.51%)</title><rect x="1030.6" y="483.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (127 samples, 0.08%)</title><rect x="1030.6" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (127 samples, 0.08%)</title><rect x="1030.6" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.04%)</title><rect x="1030.6" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1033.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.04%)</title><rect x="1031.0" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.0" y="446.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.04%)</title><rect x="1031.0" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1034.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (708 samples, 0.43%)</title><rect x="1031.5" y="467.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (355 samples, 0.22%)</title><rect x="1031.5" y="451.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (355 samples, 0.22%)</title><rect x="1031.5" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.09%)</title><rect x="1031.5" y="419.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1034.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (211 samples, 0.13%)</title><rect x="1032.5" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.5" y="430.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.13%)</title><rect x="1032.5" y="403.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1035.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (353 samples, 0.22%)</title><rect x="1034.1" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (176 samples, 0.11%)</title><rect x="1034.1" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (176 samples, 0.11%)</title><rect x="1034.1" y="419.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.04%)</title><rect x="1034.1" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1037.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.07%)</title><rect x="1034.6" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.6" y="414.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.07%)</title><rect x="1034.6" y="387.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1037.6" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (177 samples, 0.11%)</title><rect x="1035.3" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (177 samples, 0.11%)</title><rect x="1035.3" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (177 samples, 0.11%)</title><rect x="1035.3" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (177 samples, 0.11%)</title><rect x="1035.3" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.04%)</title><rect x="1035.3" y="371.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1038.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.07%)</title><rect x="1035.9" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.9" y="382.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.07%)</title><rect x="1035.9" y="355.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1038.9" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (281 samples, 0.17%)</title><rect x="1036.6" y="515.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (105 samples, 0.06%)</title><rect x="1036.6" y="499.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1039.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (176 samples, 0.11%)</title><rect x="1037.4" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (35 samples, 0.02%)</title><rect x="1037.4" y="483.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1040.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (141 samples, 0.09%)</title><rect x="1037.6" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (141 samples, 0.09%)</title><rect x="1037.6" y="467.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1040.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (619 samples, 0.38%)</title><rect x="1038.7" y="515.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (113 samples, 0.07%)</title><rect x="1038.7" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1041.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (506 samples, 0.31%)</title><rect x="1039.5" y="499.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (463 samples, 0.28%)</title><rect x="1039.5" y="483.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (463 samples, 0.28%)</title><rect x="1039.5" y="467.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.5" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (58 samples, 0.04%)</title><rect x="1039.5" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1042.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (125 samples, 0.08%)</title><rect x="1039.9" y="451.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1042.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (46 samples, 0.03%)</title><rect x="1040.8" y="451.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1043.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.06%)</title><rect x="1041.1" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.06%)</title><rect x="1041.1" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (97 samples, 0.06%)</title><rect x="1041.1" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.1" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (97 samples, 0.06%)</title><rect x="1041.1" y="403.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1044.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (137 samples, 0.08%)</title><rect x="1041.8" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (137 samples, 0.08%)</title><rect x="1041.8" y="435.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1044.8" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (43 samples, 0.03%)</title><rect x="1042.8" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (43 samples, 0.03%)</title><rect x="1042.8" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (43 samples, 0.03%)</title><rect x="1042.8" y="451.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1045.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.resolve (520 samples, 0.32%)</title><rect x="1043.1" y="547.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="1043.1" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="1043.1" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$213/662176101.get$Lambda (44 samples, 0.03%)</title><rect x="1043.1" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.1" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$213 (44 samples, 0.03%)</title><rect x="1043.1" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1046.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1286946432.linkToTargetMethod (49 samples, 0.03%)</title><rect x="1043.5" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1840111587.invokeStatic (49 samples, 0.03%)</title><rect x="1043.5" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.get$Lambda (49 samples, 0.03%)</title><rect x="1043.5" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.5" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$205 (49 samples, 0.03%)</title><rect x="1043.5" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1046.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (246 samples, 0.15%)</title><rect x="1043.8" y="531.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (246 samples, 0.15%)</title><rect x="1043.8" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (54 samples, 0.03%)</title><rect x="1043.8" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1046.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (127 samples, 0.08%)</title><rect x="1044.4" y="499.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (74 samples, 0.05%)</title><rect x="1044.4" y="483.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1047.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (35 samples, 0.02%)</title><rect x="1045.0" y="483.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1048.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (35 samples, 0.02%)</title><rect x="1045.3" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (35 samples, 0.02%)</title><rect x="1045.3" y="483.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1048.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (89 samples, 0.05%)</title><rect x="1045.6" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (89 samples, 0.05%)</title><rect x="1045.6" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (58 samples, 0.04%)</title><rect x="1045.6" y="499.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1048.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (92 samples, 0.06%)</title><rect x="1046.2" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (92 samples, 0.06%)</title><rect x="1046.2" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (63 samples, 0.04%)</title><rect x="1046.2" y="499.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1049.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (47 samples, 0.03%)</title><rect x="1046.9" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.03%)</title><rect x="1046.9" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1049.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.markTargetRequest (840 samples, 0.52%)</title><rect x="1047.2" y="547.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (241 samples, 0.15%)</title><rect x="1047.2" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.03%)</title><rect x="1047.2" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$120/426447819.get$Lambda (48 samples, 0.03%)</title><rect x="1047.2" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$120 (48 samples, 0.03%)</title><rect x="1047.2" y="483.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1050.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (193 samples, 0.12%)</title><rect x="1047.6" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.12%)</title><rect x="1047.6" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (66 samples, 0.04%)</title><rect x="1047.6" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.04%)</title><rect x="1047.6" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1050.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (127 samples, 0.08%)</title><rect x="1048.1" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (127 samples, 0.08%)</title><rect x="1048.1" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.1" y="478.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.08%)</title><rect x="1048.1" y="451.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1051.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (256 samples, 0.16%)</title><rect x="1049.0" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (83 samples, 0.05%)</title><rect x="1049.0" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.0" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (83 samples, 0.05%)</title><rect x="1049.0" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.0" y="510.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (83 samples, 0.05%)</title><rect x="1049.0" y="483.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1052.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (173 samples, 0.11%)</title><rect x="1049.6" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (173 samples, 0.11%)</title><rect x="1049.6" y="499.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1052.6" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (114 samples, 0.07%)</title><rect x="1050.8" y="531.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1053.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (229 samples, 0.14%)</title><rect x="1051.7" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (229 samples, 0.14%)</title><rect x="1051.7" y="515.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1054.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (770 samples, 0.47%)</title><rect x="1053.3" y="563.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (264 samples, 0.16%)</title><rect x="1053.3" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (264 samples, 0.16%)</title><rect x="1053.3" y="531.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get$Lambda (264 samples, 0.16%)</title><rect x="1053.3" y="515.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$118 (264 samples, 0.16%)</title><rect x="1053.3" y="499.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1056.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (506 samples, 0.31%)</title><rect x="1055.2" y="547.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (506 samples, 0.31%)</title><rect x="1055.2" y="531.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (250 samples, 0.15%)</title><rect x="1055.2" y="515.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1058.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (251 samples, 0.15%)</title><rect x="1057.0" y="515.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1060.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (2,705 samples, 1.66%)</title><rect x="1058.9" y="563.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,705 samples, 1.66%)</title><rect x="1058.9" y="547.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,005 samples, 1.23%)</title><rect x="1058.9" y="531.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1061.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (986 samples, 0.60%)</title><rect x="1058.9" y="515.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (986 samples, 0.60%)</title><rect x="1058.9" y="499.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.9" y="510.0"></text>
</g>
<g>
<title>byte[] (986 samples, 0.60%)</title><rect x="1058.9" y="483.0" width="7.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1061.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,019 samples, 0.63%)</title><rect x="1066.0" y="515.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.0" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (490 samples, 0.30%)</title><rect x="1066.0" y="499.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1069.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (529 samples, 0.32%)</title><rect x="1069.6" y="499.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (529 samples, 0.32%)</title><rect x="1069.6" y="483.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (529 samples, 0.32%)</title><rect x="1069.6" y="467.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (529 samples, 0.32%)</title><rect x="1069.6" y="451.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.6" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (529 samples, 0.32%)</title><rect x="1069.6" y="435.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1072.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (700 samples, 0.43%)</title><rect x="1073.4" y="531.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (700 samples, 0.43%)</title><rect x="1073.4" y="515.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (700 samples, 0.43%)</title><rect x="1073.4" y="499.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (260 samples, 0.16%)</title><rect x="1073.4" y="483.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1076.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (440 samples, 0.27%)</title><rect x="1075.3" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.3" y="494.0"></text>
</g>
<g>
<title>byte[] (440 samples, 0.27%)</title><rect x="1075.3" y="467.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1078.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (724 samples, 0.44%)</title><rect x="1078.5" y="595.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (724 samples, 0.44%)</title><rect x="1078.5" y="579.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (724 samples, 0.44%)</title><rect x="1078.5" y="563.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (313 samples, 0.19%)</title><rect x="1078.5" y="547.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1081.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (411 samples, 0.25%)</title><rect x="1080.7" y="547.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.7" y="558.0"></text>
</g>
<g>
<title>byte[] (411 samples, 0.25%)</title><rect x="1080.7" y="531.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1083.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,323 samples, 2.04%)</title><rect x="1083.7" y="627.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.7" y="638.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (513 samples, 0.31%)</title><rect x="1083.7" y="611.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1086.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (979 samples, 0.60%)</title><rect x="1087.4" y="611.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (979 samples, 0.60%)</title><rect x="1087.4" y="595.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1090.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,831 samples, 1.12%)</title><rect x="1094.5" y="611.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,831 samples, 1.12%)</title><rect x="1094.5" y="595.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.5" y="606.0"></text>
</g>
<g>
<title>char[] (1,031 samples, 0.63%)</title><rect x="1094.5" y="579.0" width="7.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1097.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (267 samples, 0.16%)</title><rect x="1102.0" y="579.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1105.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (533 samples, 0.33%)</title><rect x="1103.9" y="579.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (533 samples, 0.33%)</title><rect x="1103.9" y="563.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (533 samples, 0.33%)</title><rect x="1103.9" y="547.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.9" y="558.0"></text>
</g>
<g>
<title>byte[] (533 samples, 0.33%)</title><rect x="1103.9" y="531.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1106.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (158 samples, 0.10%)</title><rect x="1107.8" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.8" y="638.0"></text>
</g>
<g>
<title>byte[] (158 samples, 0.10%)</title><rect x="1107.8" y="611.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1110.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (566 samples, 0.35%)</title><rect x="1108.9" y="627.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (566 samples, 0.35%)</title><rect x="1108.9" y="611.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (566 samples, 0.35%)</title><rect x="1108.9" y="595.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.17%)</title><rect x="1108.9" y="579.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1111.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (297 samples, 0.18%)</title><rect x="1110.9" y="579.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.9" y="590.0"></text>
</g>
<g>
<title>byte[] (297 samples, 0.18%)</title><rect x="1110.9" y="563.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1113.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,042 samples, 6.16%)</title><rect x="1113.0" y="627.0" width="72.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.0" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,042 samples, 6.16%)</title><rect x="1113.0" y="611.0" width="72.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.0" y="622.0">one/nio/..</text>
</g>
<g>
<title>char[] (5,030 samples, 3.09%)</title><rect x="1113.0" y="595.0" width="36.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1116.0" y="606.0">cha..</text>
</g>
<g>
<title>java.lang.String (1,632 samples, 1.00%)</title><rect x="1149.4" y="595.0" width="11.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1152.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,380 samples, 2.07%)</title><rect x="1161.3" y="595.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.3" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,380 samples, 2.07%)</title><rect x="1161.3" y="579.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,380 samples, 2.07%)</title><rect x="1161.3" y="563.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.3" y="574.0">j..</text>
</g>
<g>
<title>byte[] (3,380 samples, 2.07%)</title><rect x="1161.3" y="547.0" width="24.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1164.3" y="558.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.read (590 samples, 0.36%)</title><rect x="1185.7" y="643.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (590 samples, 0.36%)</title><rect x="1185.7" y="627.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (590 samples, 0.36%)</title><rect x="1185.7" y="611.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (590 samples, 0.36%)</title><rect x="1185.7" y="595.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
</g>
</svg>
