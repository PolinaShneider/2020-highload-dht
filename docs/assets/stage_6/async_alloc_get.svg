<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (23,368 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (11,115 samples, 47.57%)</title><rect x="10.0" y="691.0" width="561.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,115 samples, 47.57%)</title><rect x="10.0" y="675.0" width="561.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,115 samples, 47.57%)</title><rect x="10.0" y="659.0" width="561.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,250 samples, 35.30%)</title><rect x="10.0" y="643.0" width="416.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,298 samples, 9.83%)</title><rect x="10.0" y="627.0" width="116.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,298 samples, 9.83%)</title><rect x="10.0" y="611.0" width="116.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/conc..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (6 samples, 0.03%)</title><rect x="10.0" y="595.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/474961723.apply (2,292 samples, 9.81%)</title><rect x="10.3" y="595.0" width="115.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.3" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,292 samples, 9.81%)</title><rect x="10.3" y="579.0" width="115.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.3" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,292 samples, 9.81%)</title><rect x="10.3" y="563.0" width="115.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="10.3" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="10.3" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$421/1707489388.get$Lambda (8 samples, 0.03%)</title><rect x="10.3" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$421 (8 samples, 0.03%)</title><rect x="10.3" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1145134436.get$Lambda (6 samples, 0.03%)</title><rect x="10.7" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$428 (6 samples, 0.03%)</title><rect x="10.7" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (21 samples, 0.09%)</title><rect x="11.0" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (21 samples, 0.09%)</title><rect x="11.0" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (12 samples, 0.05%)</title><rect x="11.0" y="515.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="11.6" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="11.6" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="11.6" y="483.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="14.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (48 samples, 0.21%)</title><rect x="12.1" y="547.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (48 samples, 0.21%)</title><rect x="12.1" y="531.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (20 samples, 0.09%)</title><rect x="12.1" y="515.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.12%)</title><rect x="13.1" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.12%)</title><rect x="13.1" y="499.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.12%)</title><rect x="13.1" y="483.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,139 samples, 9.15%)</title><rect x="14.5" y="547.0" width="108.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,139 samples, 9.15%)</title><rect x="14.5" y="531.0" width="108.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,139 samples, 9.15%)</title><rect x="14.5" y="515.0" width="108.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.10%)</title><rect x="14.5" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.10%)</title><rect x="14.5" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.get$Lambda (9 samples, 0.04%)</title><rect x="14.5" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (9 samples, 0.04%)</title><rect x="14.5" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="17.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/68056152.get$Lambda (7 samples, 0.03%)</title><rect x="14.9" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$197 (7 samples, 0.03%)</title><rect x="14.9" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/2019708730.get$Lambda (7 samples, 0.03%)</title><rect x="15.3" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$351 (7 samples, 0.03%)</title><rect x="15.3" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,352 samples, 5.79%)</title><rect x="15.7" y="499.0" width="68.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.7" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,352 samples, 5.79%)</title><rect x="15.7" y="483.0" width="68.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,337 samples, 5.72%)</title><rect x="15.7" y="467.0" width="67.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.7" y="478.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/2019708730.apply (1,337 samples, 5.72%)</title><rect x="15.7" y="451.0" width="67.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.7" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,337 samples, 5.72%)</title><rect x="15.7" y="435.0" width="67.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.7" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,337 samples, 5.72%)</title><rect x="15.7" y="419.0" width="67.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.7" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/68056152.apply (1,337 samples, 5.72%)</title><rect x="15.7" y="403.0" width="67.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.7" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,337 samples, 5.72%)</title><rect x="15.7" y="387.0" width="67.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="398.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (30 samples, 0.13%)</title><rect x="15.7" y="371.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (30 samples, 0.13%)</title><rect x="15.7" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (10 samples, 0.04%)</title><rect x="15.7" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="18.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.04%)</title><rect x="16.2" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/20756969.apply (10 samples, 0.04%)</title><rect x="16.2" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10 samples, 0.04%)</title><rect x="16.2" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10 samples, 0.04%)</title><rect x="16.2" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.apply (10 samples, 0.04%)</title><rect x="16.2" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10 samples, 0.04%)</title><rect x="16.2" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.04%)</title><rect x="16.3" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.03%)</title><rect x="16.3" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.03%)</title><rect x="16.3" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (8 samples, 0.03%)</title><rect x="16.3" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.03%)</title><rect x="16.3" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.03%)</title><rect x="16.3" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.03%)</title><rect x="16.3" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.03%)</title><rect x="16.3" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="19.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="16.7" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="16.7" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="16.7" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (19 samples, 0.08%)</title><rect x="17.2" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (19 samples, 0.08%)</title><rect x="17.2" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (12 samples, 0.05%)</title><rect x="17.2" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="17.8" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="17.8" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="17.8" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="20.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,287 samples, 5.51%)</title><rect x="18.2" y="371.0" width="65.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.2" y="382.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="18.2" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="18.2" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/895303210.get$Lambda (6 samples, 0.03%)</title><rect x="18.2" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$408 (6 samples, 0.03%)</title><rect x="18.2" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="21.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,098 samples, 4.70%)</title><rect x="18.6" y="355.0" width="55.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.6" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,098 samples, 4.70%)</title><rect x="18.6" y="339.0" width="55.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.6" y="350.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (13 samples, 0.06%)</title><rect x="18.6" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="21.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/895303210.apply (1,067 samples, 4.57%)</title><rect x="19.3" y="323.0" width="53.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.3" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,067 samples, 4.57%)</title><rect x="19.3" y="307.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="19.3" y="291.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="19.3" y="275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$439/703373061.get$Lambda (5 samples, 0.02%)</title><rect x="19.3" y="259.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$439 (5 samples, 0.02%)</title><rect x="19.3" y="243.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="22.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.09%)</title><rect x="19.5" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.09%)</title><rect x="19.5" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.05%)</title><rect x="19.5" y="259.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="22.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="20.1" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="20.1" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="20.1" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="20.6" y="291.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="23.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.08%)</title><rect x="21.0" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.07%)</title><rect x="21.1" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (13 samples, 0.06%)</title><rect x="21.1" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (13 samples, 0.06%)</title><rect x="21.1" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (13 samples, 0.06%)</title><rect x="21.1" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (13 samples, 0.06%)</title><rect x="21.1" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.06%)</title><rect x="21.1" y="195.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (25 samples, 0.11%)</title><rect x="21.9" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.11%)</title><rect x="21.9" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (6 samples, 0.03%)</title><rect x="21.9" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.03%)</title><rect x="21.9" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.03%)</title><rect x="21.9" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (6 samples, 0.03%)</title><rect x="21.9" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="24.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (19 samples, 0.08%)</title><rect x="22.2" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (19 samples, 0.08%)</title><rect x="22.2" y="243.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (13 samples, 0.06%)</title><rect x="22.2" y="227.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.03%)</title><rect x="22.9" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (6 samples, 0.03%)</title><rect x="22.9" y="211.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (990 samples, 4.24%)</title><rect x="23.2" y="291.0" width="50.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.2" y="302.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.03%)</title><rect x="23.2" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (97 samples, 0.42%)</title><rect x="23.5" y="275.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (97 samples, 0.42%)</title><rect x="23.5" y="259.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (97 samples, 0.42%)</title><rect x="23.5" y="243.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.5" y="254.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.42%)</title><rect x="23.5" y="227.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="26.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="28.4" y="275.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="28.4" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.4" y="270.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="28.4" y="243.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="31.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (114 samples, 0.49%)</title><rect x="29.9" y="275.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.49%)</title><rect x="29.9" y="259.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.49%)</title><rect x="29.9" y="243.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.9" y="254.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.49%)</title><rect x="29.9" y="227.0" width="5.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="32.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="35.7" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="35.7" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.06%)</title><rect x="35.7" y="243.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="38.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (11 samples, 0.05%)</title><rect x="36.5" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (11 samples, 0.05%)</title><rect x="36.5" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (609 samples, 2.61%)</title><rect x="37.0" y="275.0" width="30.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.0" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (7 samples, 0.03%)</title><rect x="37.0" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="37.0" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="37.0" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$446/1530018831.get$Lambda (7 samples, 0.03%)</title><rect x="37.0" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$446 (7 samples, 0.03%)</title><rect x="37.0" y="195.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="40.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (279 samples, 1.19%)</title><rect x="37.4" y="259.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (136 samples, 0.58%)</title><rect x="37.4" y="243.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (136 samples, 0.58%)</title><rect x="37.4" y="227.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.4" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (136 samples, 0.58%)</title><rect x="37.4" y="211.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (136 samples, 0.58%)</title><rect x="37.4" y="195.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.4" y="206.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.58%)</title><rect x="37.4" y="179.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="40.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (26 samples, 0.11%)</title><rect x="44.2" y="243.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (26 samples, 0.11%)</title><rect x="44.2" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (26 samples, 0.11%)</title><rect x="44.2" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (26 samples, 0.11%)</title><rect x="44.2" y="195.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="47.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (19 samples, 0.08%)</title><rect x="45.5" y="243.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.5" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (11 samples, 0.05%)</title><rect x="45.5" y="227.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="48.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (8 samples, 0.03%)</title><rect x="46.1" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (8 samples, 0.03%)</title><rect x="46.1" y="211.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="49.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$446/1530018831.test (98 samples, 0.42%)</title><rect x="46.5" y="243.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (98 samples, 0.42%)</title><rect x="46.5" y="227.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$87/888473870.test (98 samples, 0.42%)</title><rect x="46.5" y="211.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (98 samples, 0.42%)</title><rect x="46.5" y="195.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.5" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1714550218.test (98 samples, 0.42%)</title><rect x="46.5" y="179.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (98 samples, 0.42%)</title><rect x="46.5" y="163.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/718068661.test (98 samples, 0.42%)</title><rect x="46.5" y="147.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (98 samples, 0.42%)</title><rect x="46.5" y="131.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (98 samples, 0.42%)</title><rect x="46.5" y="115.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.42%)</title><rect x="46.5" y="99.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.21%)</title><rect x="46.5" y="83.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="49.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.21%)</title><rect x="49.0" y="83.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.0" y="94.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.21%)</title><rect x="49.0" y="67.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="52.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (323 samples, 1.38%)</title><rect x="51.5" y="259.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (323 samples, 1.38%)</title><rect x="51.5" y="243.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (323 samples, 1.38%)</title><rect x="51.5" y="227.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.03%)</title><rect x="51.5" y="211.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="51.9" y="211.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="54.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (19 samples, 0.08%)</title><rect x="52.4" y="211.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="55.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (5 samples, 0.02%)</title><rect x="53.4" y="211.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="56.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="53.6" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="53.6" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (7 samples, 0.03%)</title><rect x="53.6" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.6" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (7 samples, 0.03%)</title><rect x="53.6" y="163.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="56.6" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (10 samples, 0.04%)</title><rect x="54.0" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.0" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (10 samples, 0.04%)</title><rect x="54.0" y="195.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (246 samples, 1.05%)</title><rect x="54.5" y="211.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (246 samples, 1.05%)</title><rect x="54.5" y="195.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (246 samples, 1.05%)</title><rect x="54.5" y="179.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.28%)</title><rect x="54.5" y="163.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.28%)</title><rect x="54.5" y="147.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.5" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (65 samples, 0.28%)</title><rect x="54.5" y="131.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.5" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (65 samples, 0.28%)</title><rect x="54.5" y="115.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="57.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (18 samples, 0.08%)</title><rect x="57.8" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.8" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (18 samples, 0.08%)</title><rect x="57.8" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.8" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (18 samples, 0.08%)</title><rect x="57.8" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.08%)</title><rect x="57.8" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.08%)</title><rect x="57.8" y="99.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.8" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.08%)</title><rect x="57.8" y="83.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.8" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.08%)</title><rect x="57.8" y="67.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.8" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.08%)</title><rect x="57.8" y="51.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.8" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.08%)</title><rect x="57.8" y="35.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.8" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (96 samples, 0.41%)</title><rect x="58.7" y="163.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (96 samples, 0.41%)</title><rect x="58.7" y="147.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.18%)</title><rect x="58.7" y="131.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.18%)</title><rect x="58.7" y="115.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.18%)</title><rect x="58.7" y="99.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="61.7" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.24%)</title><rect x="60.7" y="131.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.24%)</title><rect x="60.7" y="115.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="63.7" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (67 samples, 0.29%)</title><rect x="63.5" y="163.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.5" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (67 samples, 0.29%)</title><rect x="63.5" y="147.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="66.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.07%)</title><rect x="66.9" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.07%)</title><rect x="66.9" y="195.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="69.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (32 samples, 0.14%)</title><rect x="67.8" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (11 samples, 0.05%)</title><rect x="67.8" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.8" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="67.8" y="243.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="68.3" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (21 samples, 0.09%)</title><rect x="68.3" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1011279482.invoke (21 samples, 0.09%)</title><rect x="68.3" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="68.3" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (9 samples, 0.04%)</title><rect x="68.3" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="68.3" y="179.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.05%)</title><rect x="68.8" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.05%)</title><rect x="68.8" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.8" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="68.8" y="163.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="71.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (22 samples, 0.09%)</title><rect x="69.4" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (22 samples, 0.09%)</title><rect x="69.4" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.09%)</title><rect x="69.4" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (22 samples, 0.09%)</title><rect x="69.4" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1011279482.invoke (22 samples, 0.09%)</title><rect x="69.4" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="69.4" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.03%)</title><rect x="69.4" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="69.4" y="163.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="72.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.06%)</title><rect x="69.7" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.06%)</title><rect x="69.7" y="163.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.7" y="174.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="69.7" y="147.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="72.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (53 samples, 0.23%)</title><rect x="70.5" y="275.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.08%)</title><rect x="70.5" y="259.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (11 samples, 0.05%)</title><rect x="71.5" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="71.5" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.10%)</title><rect x="72.0" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (23 samples, 0.10%)</title><rect x="72.0" y="243.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="73.2" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="73.2" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="73.2" y="291.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (26 samples, 0.11%)</title><rect x="74.1" y="355.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="75.4" y="355.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="78.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (143 samples, 0.61%)</title><rect x="75.9" y="355.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="75.9" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="75.9" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$366/132964022.get$Lambda (6 samples, 0.03%)</title><rect x="75.9" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$366 (6 samples, 0.03%)</title><rect x="75.9" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="78.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$370/1247519959.get$Lambda (5 samples, 0.02%)</title><rect x="76.3" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$370 (5 samples, 0.02%)</title><rect x="76.3" y="291.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="79.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (18 samples, 0.08%)</title><rect x="76.5" y="339.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="79.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (14 samples, 0.06%)</title><rect x="77.4" y="339.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="80.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (14 samples, 0.06%)</title><rect x="78.1" y="339.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (47 samples, 0.20%)</title><rect x="78.8" y="339.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.20%)</title><rect x="78.8" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.20%)</title><rect x="78.8" y="307.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (47 samples, 0.20%)</title><rect x="78.8" y="291.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (47 samples, 0.20%)</title><rect x="78.8" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (47 samples, 0.20%)</title><rect x="78.8" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (47 samples, 0.20%)</title><rect x="78.8" y="243.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (47 samples, 0.20%)</title><rect x="78.8" y="227.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (47 samples, 0.20%)</title><rect x="78.8" y="211.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="78.8" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="78.8" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$378/892894604.get$Lambda (8 samples, 0.03%)</title><rect x="78.8" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$378 (8 samples, 0.03%)</title><rect x="78.8" y="147.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="81.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$383/883977638.get$Lambda (13 samples, 0.06%)</title><rect x="79.2" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$383 (13 samples, 0.06%)</title><rect x="79.2" y="147.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="82.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (9 samples, 0.04%)</title><rect x="79.9" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="82.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (17 samples, 0.07%)</title><rect x="80.3" y="195.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (17 samples, 0.07%)</title><rect x="80.3" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.03%)</title><rect x="80.3" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.04%)</title><rect x="80.7" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.04%)</title><rect x="80.7" y="147.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="83.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (28 samples, 0.12%)</title><rect x="81.2" y="339.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (10 samples, 0.04%)</title><rect x="81.2" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="84.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.04%)</title><rect x="81.7" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="84.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="82.2" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.2" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="82.2" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.2" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="82.2" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (11 samples, 0.05%)</title><rect x="82.6" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="82.6" y="323.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="85.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="83.2" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="83.2" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="83.2" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="86.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.09%)</title><rect x="83.9" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.09%)</title><rect x="83.9" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (14 samples, 0.06%)</title><rect x="83.9" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="84.6" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="84.6" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="84.6" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="87.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (742 samples, 3.18%)</title><rect x="85.0" y="499.0" width="37.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.0" y="510.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="85.0" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="85.0" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$337/1386664033.get$Lambda (7 samples, 0.03%)</title><rect x="85.0" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$337 (7 samples, 0.03%)</title><rect x="85.0" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/2092764557.get$Lambda (5 samples, 0.02%)</title><rect x="85.4" y="451.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$346 (5 samples, 0.02%)</title><rect x="85.4" y="435.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="88.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (26 samples, 0.11%)</title><rect x="85.6" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (26 samples, 0.11%)</title><rect x="85.6" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/2092764557.apply (11 samples, 0.05%)</title><rect x="85.6" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (11 samples, 0.05%)</title><rect x="85.6" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.05%)</title><rect x="85.6" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="85.6" y="403.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="88.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="86.2" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="86.2" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="86.2" y="419.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="89.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.04%)</title><rect x="87.0" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.04%)</title><rect x="87.0" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="87.0" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="87.0" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="87.0" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="90.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (695 samples, 2.97%)</title><rect x="87.4" y="483.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.4" y="494.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="87.4" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="87.4" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/234148462.get$Lambda (6 samples, 0.03%)</title><rect x="87.4" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$208 (6 samples, 0.03%)</title><rect x="87.4" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (647 samples, 2.77%)</title><rect x="87.7" y="467.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.7" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (647 samples, 2.77%)</title><rect x="87.7" y="451.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.7" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (636 samples, 2.72%)</title><rect x="87.7" y="435.0" width="32.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.7" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/234148462.apply (636 samples, 2.72%)</title><rect x="87.7" y="419.0" width="32.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.7" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (636 samples, 2.72%)</title><rect x="87.7" y="403.0" width="32.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.7" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (636 samples, 2.72%)</title><rect x="87.7" y="387.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.7" y="398.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (266 samples, 1.14%)</title><rect x="87.9" y="371.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (266 samples, 1.14%)</title><rect x="87.9" y="355.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (266 samples, 1.14%)</title><rect x="87.9" y="339.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$331/604314710.apply (254 samples, 1.09%)</title><rect x="87.9" y="323.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (254 samples, 1.09%)</title><rect x="87.9" y="307.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (254 samples, 1.09%)</title><rect x="87.9" y="291.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (254 samples, 1.09%)</title><rect x="87.9" y="275.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (161 samples, 0.69%)</title><rect x="87.9" y="259.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.9" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (40 samples, 0.17%)</title><rect x="87.9" y="243.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="87.9" y="227.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="90.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.06%)</title><rect x="88.4" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.06%)</title><rect x="88.4" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="222.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="88.4" y="195.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="91.4" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (16 samples, 0.07%)</title><rect x="89.1" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.1" y="238.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="89.1" y="211.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="92.1" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (11 samples, 0.05%)</title><rect x="89.9" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.9" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (11 samples, 0.05%)</title><rect x="89.9" y="227.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="92.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (78 samples, 0.33%)</title><rect x="90.5" y="243.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (11 samples, 0.05%)</title><rect x="90.5" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="93.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (54 samples, 0.23%)</title><rect x="91.0" y="227.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (54 samples, 0.23%)</title><rect x="91.0" y="211.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (40 samples, 0.17%)</title><rect x="91.0" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.17%)</title><rect x="91.0" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$75/1932274274.get$Lambda (40 samples, 0.17%)</title><rect x="91.0" y="163.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$75 (40 samples, 0.17%)</title><rect x="91.0" y="147.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.0" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.06%)</title><rect x="93.1" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$75/1932274274.run (14 samples, 0.06%)</title><rect x="93.1" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (14 samples, 0.06%)</title><rect x="93.1" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.1" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (14 samples, 0.06%)</title><rect x="93.1" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.06%)</title><rect x="93.1" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.1" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.06%)</title><rect x="93.1" y="115.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (13 samples, 0.06%)</title><rect x="93.8" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (13 samples, 0.06%)</title><rect x="93.8" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.8" y="222.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.06%)</title><rect x="93.8" y="195.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="96.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (32 samples, 0.14%)</title><rect x="94.4" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.4" y="254.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="94.4" y="227.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="95.3" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.06%)</title><rect x="95.3" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.06%)</title><rect x="95.3" y="195.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="98.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (93 samples, 0.40%)</title><rect x="96.0" y="259.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.11%)</title><rect x="96.0" y="243.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="99.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (24 samples, 0.10%)</title><rect x="97.3" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.10%)</title><rect x="97.3" y="227.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="100.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (44 samples, 0.19%)</title><rect x="98.5" y="243.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (44 samples, 0.19%)</title><rect x="98.5" y="227.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="101.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="100.7" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="100.7" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="100.7" y="291.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="103.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (366 samples, 1.57%)</title><rect x="101.3" y="371.0" width="18.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (26 samples, 0.11%)</title><rect x="101.3" y="355.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="104.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (331 samples, 1.42%)</title><rect x="102.7" y="355.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.02%)</title><rect x="102.7" y="339.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="105.7" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (11 samples, 0.05%)</title><rect x="102.9" y="339.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="105.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (9 samples, 0.04%)</title><rect x="103.5" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="106.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (16 samples, 0.07%)</title><rect x="103.9" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (16 samples, 0.07%)</title><rect x="103.9" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (16 samples, 0.07%)</title><rect x="103.9" y="307.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="106.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (5 samples, 0.02%)</title><rect x="104.7" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5 samples, 0.02%)</title><rect x="104.7" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="107.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (18 samples, 0.08%)</title><rect x="105.0" y="339.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="108.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (20 samples, 0.09%)</title><rect x="105.9" y="339.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="108.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (28 samples, 0.12%)</title><rect x="106.9" y="339.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="109.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.12%)</title><rect x="108.3" y="339.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="111.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (86 samples, 0.37%)</title><rect x="109.7" y="339.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.03%)</title><rect x="110.0" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="113.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="110.6" y="323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="110.6" y="307.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.get$Lambda (5 samples, 0.02%)</title><rect x="110.6" y="291.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$319 (5 samples, 0.02%)</title><rect x="110.6" y="275.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (8 samples, 0.03%)</title><rect x="110.8" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.03%)</title><rect x="110.8" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="113.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="111.3" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="114.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (43 samples, 0.18%)</title><rect x="111.9" y="323.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (9 samples, 0.04%)</title><rect x="111.9" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="114.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (11 samples, 0.05%)</title><rect x="112.3" y="307.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (19 samples, 0.08%)</title><rect x="113.1" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (9 samples, 0.04%)</title><rect x="113.3" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="116.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (6 samples, 0.03%)</title><rect x="113.7" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="116.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (70 samples, 0.30%)</title><rect x="114.0" y="339.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (7 samples, 0.03%)</title><rect x="114.0" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="117.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (7 samples, 0.03%)</title><rect x="114.6" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (11 samples, 0.05%)</title><rect x="114.9" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.05%)</title><rect x="114.9" y="307.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="117.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (41 samples, 0.18%)</title><rect x="115.5" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (10 samples, 0.04%)</title><rect x="115.5" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (11 samples, 0.05%)</title><rect x="116.0" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="119.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (6 samples, 0.03%)</title><rect x="116.5" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (6 samples, 0.03%)</title><rect x="116.5" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="119.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (14 samples, 0.06%)</title><rect x="116.9" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (7 samples, 0.03%)</title><rect x="117.1" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="120.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (11 samples, 0.05%)</title><rect x="117.6" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (11 samples, 0.05%)</title><rect x="117.6" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (7 samples, 0.03%)</title><rect x="117.8" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.03%)</title><rect x="117.8" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.03%)</title><rect x="117.8" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (7 samples, 0.03%)</title><rect x="117.8" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="117.8" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="120.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (25 samples, 0.11%)</title><rect x="118.1" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (5 samples, 0.02%)</title><rect x="118.1" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="118.1" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$231/2052440742.get$Lambda (5 samples, 0.02%)</title><rect x="118.1" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$231 (5 samples, 0.02%)</title><rect x="118.1" y="275.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="121.1" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.09%)</title><rect x="118.4" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$231/2052440742.run (20 samples, 0.09%)</title><rect x="118.4" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (20 samples, 0.09%)</title><rect x="118.4" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.4" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (7 samples, 0.03%)</title><rect x="118.4" y="275.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="121.4" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (13 samples, 0.06%)</title><rect x="118.7" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.7" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (7 samples, 0.03%)</title><rect x="118.7" y="259.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="121.7" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.03%)</title><rect x="119.1" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.03%)</title><rect x="119.1" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.1" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.03%)</title><rect x="119.1" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.1" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.03%)</title><rect x="119.1" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.1" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (6 samples, 0.03%)</title><rect x="119.1" y="195.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="122.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.04%)</title><rect x="119.4" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="119.4" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="122.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="119.8" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="119.8" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="119.8" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="122.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.04%)</title><rect x="120.4" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10 samples, 0.04%)</title><rect x="120.4" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="120.4" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="120.4" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="120.4" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="123.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (32 samples, 0.14%)</title><rect x="120.9" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (23 samples, 0.10%)</title><rect x="120.9" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (23 samples, 0.10%)</title><rect x="120.9" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1377865909.linkToTargetMethod (23 samples, 0.10%)</title><rect x="120.9" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1557127930.invoke (23 samples, 0.10%)</title><rect x="120.9" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1456441596.invoke (23 samples, 0.10%)</title><rect x="120.9" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.10%)</title><rect x="120.9" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.03%)</title><rect x="120.9" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="120.9" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="123.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.07%)</title><rect x="121.2" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.07%)</title><rect x="121.2" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.2" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="121.2" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="124.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.04%)</title><rect x="122.1" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="122.1" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="125.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (10 samples, 0.04%)</title><rect x="122.5" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (10 samples, 0.04%)</title><rect x="122.5" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.04%)</title><rect x="122.5" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.04%)</title><rect x="122.5" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="125.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (60 samples, 0.26%)</title><rect x="123.0" y="547.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (40 samples, 0.17%)</title><rect x="123.0" y="531.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="126.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (20 samples, 0.09%)</title><rect x="125.0" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (20 samples, 0.09%)</title><rect x="125.0" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.06%)</title><rect x="125.0" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.06%)</title><rect x="125.0" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (15 samples, 0.06%)</title><rect x="125.0" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (15 samples, 0.06%)</title><rect x="125.0" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.0" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (15 samples, 0.06%)</title><rect x="125.0" y="435.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="128.0" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.02%)</title><rect x="125.8" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.8" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (5 samples, 0.02%)</title><rect x="125.8" y="483.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.02%)</title><rect x="125.8" y="467.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.02%)</title><rect x="125.8" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (5 samples, 0.02%)</title><rect x="125.8" y="435.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.02%)</title><rect x="125.8" y="419.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.02%)</title><rect x="125.8" y="403.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.8" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (5 samples, 0.02%)</title><rect x="125.8" y="387.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.8" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (5 samples, 0.02%)</title><rect x="125.8" y="371.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$597/1897477583.get (5,952 samples, 25.47%)</title><rect x="126.0" y="627.0" width="300.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.0" y="638.0">ru/mail/polis/service/ReplicationHandler..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleGet$0 (5,952 samples, 25.47%)</title><rect x="126.0" y="611.0" width="300.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="622.0">ru/mail/polis/service/ReplicationHandler..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValue (5,952 samples, 25.47%)</title><rect x="126.0" y="595.0" width="300.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.0" y="606.0">ru/mail/polis/dao/DaoEngine.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.getValueFromBytes (3,634 samples, 15.55%)</title><rect x="126.0" y="579.0" width="183.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.0" y="590.0">ru/mail/polis/dao/DaoEng..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,165 samples, 4.99%)</title><rect x="126.0" y="563.0" width="58.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.0" y="574.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,165 samples, 4.99%)</title><rect x="126.0" y="547.0" width="58.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.0" y="558.0">org/ro..</text>
</g>
<g>
<title>byte[] (1,165 samples, 4.99%)</title><rect x="126.0" y="531.0" width="58.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="129.0" y="542.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (2,469 samples, 10.57%)</title><rect x="184.9" y="563.0" width="124.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.9" y="574.0">ru/mail/polis/u..</text>
</g>
<g>
<title>byte[] (775 samples, 3.32%)</title><rect x="184.9" y="547.0" width="39.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="187.9" y="558.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,694 samples, 7.25%)</title><rect x="224.0" y="547.0" width="85.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.0" y="558.0">java/nio/H..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,694 samples, 7.25%)</title><rect x="224.0" y="531.0" width="85.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="227.0" y="542.0">java.nio.H..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.composeFromBytes (2,318 samples, 9.92%)</title><rect x="309.5" y="579.0" width="117.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.5" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,471 samples, 6.29%)</title><rect x="309.5" y="563.0" width="74.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.5" y="574.0">java/nio..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,471 samples, 6.29%)</title><rect x="309.5" y="547.0" width="74.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.5" y="558.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,471 samples, 6.29%)</title><rect x="309.5" y="531.0" width="74.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="312.5" y="542.0">java.nio..</text>
</g>
<g>
<title>ru.mail.polis.service.Value (847 samples, 3.62%)</title><rect x="383.8" y="563.0" width="42.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="386.8" y="574.0">ru.m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (952 samples, 4.07%)</title><rect x="426.6" y="643.0" width="48.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.6" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (952 samples, 4.07%)</title><rect x="426.6" y="627.0" width="48.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.6" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (940 samples, 4.02%)</title><rect x="426.6" y="611.0" width="47.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.6" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (940 samples, 4.02%)</title><rect x="426.6" y="595.0" width="47.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.6" y="606.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (940 samples, 4.02%)</title><rect x="426.6" y="579.0" width="47.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="429.6" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12 samples, 0.05%)</title><rect x="474.1" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12 samples, 0.05%)</title><rect x="474.1" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12 samples, 0.05%)</title><rect x="474.1" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (12 samples, 0.05%)</title><rect x="474.1" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.05%)</title><rect x="474.1" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="477.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$445/383899907.run (180 samples, 0.77%)</title><rect x="474.7" y="643.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (180 samples, 0.77%)</title><rect x="474.7" y="627.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (180 samples, 0.77%)</title><rect x="474.7" y="611.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (180 samples, 0.77%)</title><rect x="474.7" y="595.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (180 samples, 0.77%)</title><rect x="474.7" y="579.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (180 samples, 0.77%)</title><rect x="474.7" y="563.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (180 samples, 0.77%)</title><rect x="474.7" y="547.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (180 samples, 0.77%)</title><rect x="474.7" y="531.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (180 samples, 0.77%)</title><rect x="474.7" y="515.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (180 samples, 0.77%)</title><rect x="474.7" y="499.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (180 samples, 0.77%)</title><rect x="474.7" y="483.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (165 samples, 0.71%)</title><rect x="474.7" y="467.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="474.7" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="474.7" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$454/401574555.get$Lambda (7 samples, 0.03%)</title><rect x="474.7" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$454 (7 samples, 0.03%)</title><rect x="474.7" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="477.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$493/1845279560.get$Lambda (6 samples, 0.03%)</title><rect x="475.0" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$493 (6 samples, 0.03%)</title><rect x="475.0" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="478.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (152 samples, 0.65%)</title><rect x="475.3" y="451.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (9 samples, 0.04%)</title><rect x="475.3" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="478.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (143 samples, 0.61%)</title><rect x="475.8" y="435.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (143 samples, 0.61%)</title><rect x="475.8" y="419.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (143 samples, 0.61%)</title><rect x="475.8" y="403.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (60 samples, 0.26%)</title><rect x="475.8" y="387.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (28 samples, 0.12%)</title><rect x="475.8" y="371.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="478.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$469/603544558.apply (32 samples, 0.14%)</title><rect x="477.2" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (32 samples, 0.14%)</title><rect x="477.2" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (32 samples, 0.14%)</title><rect x="477.2" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.03%)</title><rect x="477.2" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.2" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.03%)</title><rect x="477.2" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.2" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (8 samples, 0.03%)</title><rect x="477.2" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="480.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (24 samples, 0.10%)</title><rect x="477.6" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (20 samples, 0.09%)</title><rect x="477.8" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (20 samples, 0.09%)</title><rect x="477.8" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (11 samples, 0.05%)</title><rect x="477.8" y="275.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="480.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="478.4" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="478.4" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="478.4" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="481.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (83 samples, 0.36%)</title><rect x="478.8" y="387.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (83 samples, 0.36%)</title><rect x="478.8" y="371.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/20756969.apply (83 samples, 0.36%)</title><rect x="478.8" y="355.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (83 samples, 0.36%)</title><rect x="478.8" y="339.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (83 samples, 0.36%)</title><rect x="478.8" y="323.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.apply (83 samples, 0.36%)</title><rect x="478.8" y="307.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (83 samples, 0.36%)</title><rect x="478.8" y="291.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (28 samples, 0.12%)</title><rect x="478.8" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (28 samples, 0.12%)</title><rect x="478.8" y="259.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (16 samples, 0.07%)</title><rect x="478.8" y="243.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="481.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="479.6" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="479.6" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="479.6" y="211.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="482.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (23 samples, 0.10%)</title><rect x="480.2" y="275.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.09%)</title><rect x="480.4" y="259.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20 samples, 0.09%)</title><rect x="480.4" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (8 samples, 0.03%)</title><rect x="480.4" y="227.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="483.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="480.8" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="480.8" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="480.8" y="195.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="483.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (32 samples, 0.14%)</title><rect x="481.4" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (17 samples, 0.07%)</title><rect x="481.4" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (7 samples, 0.03%)</title><rect x="481.4" y="243.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="484.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (10 samples, 0.04%)</title><rect x="481.7" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (10 samples, 0.04%)</title><rect x="481.7" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="481.7" y="211.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="484.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.06%)</title><rect x="482.2" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (6 samples, 0.03%)</title><rect x="482.2" y="243.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="485.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.04%)</title><rect x="482.5" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (9 samples, 0.04%)</title><rect x="482.5" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.04%)</title><rect x="482.5" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (9 samples, 0.04%)</title><rect x="482.5" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (9 samples, 0.04%)</title><rect x="482.5" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.04%)</title><rect x="482.5" y="163.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="485.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.06%)</title><rect x="483.0" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.06%)</title><rect x="483.0" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (15 samples, 0.06%)</title><rect x="483.0" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (15 samples, 0.06%)</title><rect x="483.0" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (15 samples, 0.06%)</title><rect x="483.0" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (15 samples, 0.06%)</title><rect x="483.0" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (12 samples, 0.05%)</title><rect x="483.2" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (12 samples, 0.05%)</title><rect x="483.2" y="355.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="486.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,733 samples, 7.42%)</title><rect x="483.8" y="643.0" width="87.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.8" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,733 samples, 7.42%)</title><rect x="483.8" y="627.0" width="87.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.8" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,433 samples, 6.13%)</title><rect x="483.8" y="611.0" width="72.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.8" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (1,433 samples, 6.13%)</title><rect x="483.8" y="595.0" width="72.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.8" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,433 samples, 6.13%)</title><rect x="483.8" y="579.0" width="72.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.8" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 0.11%)</title><rect x="483.8" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.11%)</title><rect x="483.8" y="547.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.11%)</title><rect x="483.8" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.11%)</title><rect x="483.8" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (15 samples, 0.06%)</title><rect x="483.8" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802243390.invoke (15 samples, 0.06%)</title><rect x="483.8" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.06%)</title><rect x="483.8" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.06%)</title><rect x="483.8" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.06%)</title><rect x="483.8" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.8" y="446.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="483.8" y="419.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="486.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.04%)</title><rect x="484.5" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="484.5" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="484.5" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (10 samples, 0.04%)</title><rect x="484.5" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (10 samples, 0.04%)</title><rect x="484.5" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="487.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,408 samples, 6.03%)</title><rect x="485.0" y="563.0" width="71.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.0" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,408 samples, 6.03%)</title><rect x="485.0" y="547.0" width="71.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,408 samples, 6.03%)</title><rect x="485.0" y="531.0" width="71.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,408 samples, 6.03%)</title><rect x="485.0" y="515.0" width="71.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (623 samples, 2.67%)</title><rect x="485.0" y="499.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.0" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (623 samples, 2.67%)</title><rect x="485.0" y="483.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.0" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (623 samples, 2.67%)</title><rect x="485.0" y="467.0" width="31.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (623 samples, 2.67%)</title><rect x="485.0" y="451.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.0" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (623 samples, 2.67%)</title><rect x="485.0" y="435.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.0" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (623 samples, 2.67%)</title><rect x="485.0" y="419.0" width="31.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.0" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (623 samples, 2.67%)</title><rect x="485.0" y="403.0" width="31.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.0" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (607 samples, 2.60%)</title><rect x="485.0" y="387.0" width="30.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.0" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (607 samples, 2.60%)</title><rect x="485.0" y="371.0" width="30.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.0" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (601 samples, 2.57%)</title><rect x="485.0" y="355.0" width="30.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.0" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.05%)</title><rect x="485.0" y="339.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="488.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$474/456745370.apply (11 samples, 0.05%)</title><rect x="485.6" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (11 samples, 0.05%)</title><rect x="485.6" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (11 samples, 0.05%)</title><rect x="485.6" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.05%)</title><rect x="485.6" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="485.6" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="488.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1117015311.apply (568 samples, 2.43%)</title><rect x="486.2" y="339.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.2" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (568 samples, 2.43%)</title><rect x="486.2" y="323.0" width="28.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.2" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="486.2" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="486.2" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$579/1449206276.get$Lambda (10 samples, 0.04%)</title><rect x="486.2" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$579 (10 samples, 0.04%)</title><rect x="486.2" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="489.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (28 samples, 0.12%)</title><rect x="486.7" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (28 samples, 0.12%)</title><rect x="486.7" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (19 samples, 0.08%)</title><rect x="486.7" y="275.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="489.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="487.6" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="487.6" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="487.6" y="243.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (530 samples, 2.27%)</title><rect x="488.1" y="307.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.1" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="488.1" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="488.1" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$574/1867618638.get$Lambda (5 samples, 0.02%)</title><rect x="488.1" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$574 (5 samples, 0.02%)</title><rect x="488.1" y="243.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="491.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.08%)</title><rect x="488.4" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.08%)</title><rect x="488.4" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.04%)</title><rect x="488.4" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="491.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="488.9" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="488.9" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="488.9" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="491.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (506 samples, 2.17%)</title><rect x="489.3" y="291.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.3" y="302.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (367 samples, 1.57%)</title><rect x="489.3" y="275.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="489.3" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="489.3" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$568/1313816771.get$Lambda (5 samples, 0.02%)</title><rect x="489.5" y="227.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$568 (5 samples, 0.02%)</title><rect x="489.5" y="211.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="492.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/658369320.linkToTargetMethod (15 samples, 0.06%)</title><rect x="489.7" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1252363019.invokeStatic (15 samples, 0.06%)</title><rect x="489.7" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$526/101177499.get$Lambda (15 samples, 0.06%)</title><rect x="489.7" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$526 (15 samples, 0.06%)</title><rect x="489.7" y="211.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="492.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (78 samples, 0.33%)</title><rect x="490.5" y="259.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (27 samples, 0.12%)</title><rect x="490.5" y="243.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="493.5" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (14 samples, 0.06%)</title><rect x="490.5" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.5" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (14 samples, 0.06%)</title><rect x="490.5" y="211.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="493.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.06%)</title><rect x="491.2" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.06%)</title><rect x="491.2" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="494.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (30 samples, 0.13%)</title><rect x="491.8" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (30 samples, 0.13%)</title><rect x="491.8" y="227.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (30 samples, 0.13%)</title><rect x="491.8" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.04%)</title><rect x="491.8" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.04%)</title><rect x="491.8" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (9 samples, 0.04%)</title><rect x="491.8" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (9 samples, 0.04%)</title><rect x="491.8" y="147.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="494.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$517/1629819744.get (12 samples, 0.05%)</title><rect x="492.3" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (12 samples, 0.05%)</title><rect x="492.3" y="179.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="495.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.04%)</title><rect x="492.9" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.04%)</title><rect x="492.9" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.9" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.04%)</title><rect x="492.9" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.9" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.04%)</title><rect x="492.9" y="147.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="495.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (21 samples, 0.09%)</title><rect x="493.4" y="243.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (21 samples, 0.09%)</title><rect x="493.4" y="227.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="496.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (40 samples, 0.17%)</title><rect x="494.4" y="259.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.06%)</title><rect x="494.4" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.02%)</title><rect x="494.4" y="227.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="497.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="494.7" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="494.7" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="494.7" y="195.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="497.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (27 samples, 0.12%)</title><rect x="495.1" y="243.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.12%)</title><rect x="495.1" y="227.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.08%)</title><rect x="495.1" y="211.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="498.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="496.0" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="496.0" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="496.0" y="179.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="499.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (5 samples, 0.02%)</title><rect x="496.4" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="499.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (6 samples, 0.03%)</title><rect x="496.7" y="259.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="499.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="497.0" y="259.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="500.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (5 samples, 0.02%)</title><rect x="497.6" y="259.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (5 samples, 0.02%)</title><rect x="497.6" y="243.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="500.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (175 samples, 0.75%)</title><rect x="497.8" y="259.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$526/101177499.run (175 samples, 0.75%)</title><rect x="497.8" y="243.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (175 samples, 0.75%)</title><rect x="497.8" y="227.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="497.8" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="497.8" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/818419977.get$Lambda (6 samples, 0.03%)</title><rect x="498.2" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (6 samples, 0.03%)</title><rect x="498.2" y="163.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="501.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.07%)</title><rect x="498.6" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.07%)</title><rect x="498.6" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.03%)</title><rect x="498.6" y="179.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="501.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="499.0" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="499.0" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="499.0" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="502.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (9 samples, 0.04%)</title><rect x="499.4" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="502.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (6 samples, 0.03%)</title><rect x="499.9" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="499.9" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="502.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (27 samples, 0.12%)</title><rect x="500.2" y="211.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (27 samples, 0.12%)</title><rect x="500.2" y="195.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="500.2" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="500.2" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$557/234067677.get$Lambda (8 samples, 0.03%)</title><rect x="500.2" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$557 (8 samples, 0.03%)</title><rect x="500.2" y="131.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="503.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.08%)</title><rect x="500.6" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.08%)</title><rect x="500.6" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.08%)</title><rect x="500.6" y="147.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.05%)</title><rect x="500.6" y="131.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="503.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="501.1" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="501.1" y="115.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="501.1" y="99.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="504.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (30 samples, 0.13%)</title><rect x="501.5" y="211.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.13%)</title><rect x="501.5" y="195.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (30 samples, 0.13%)</title><rect x="501.5" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.13%)</title><rect x="501.5" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.12%)</title><rect x="501.7" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.12%)</title><rect x="501.7" y="131.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.7" y="142.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="501.7" y="115.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="504.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (72 samples, 0.31%)</title><rect x="503.0" y="211.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (19 samples, 0.08%)</title><rect x="503.0" y="195.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="506.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (53 samples, 0.23%)</title><rect x="504.0" y="195.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.23%)</title><rect x="504.0" y="179.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (53 samples, 0.23%)</title><rect x="504.0" y="163.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.23%)</title><rect x="504.0" y="147.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.05%)</title><rect x="504.0" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="504.0" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="507.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.18%)</title><rect x="504.6" y="131.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.18%)</title><rect x="504.6" y="115.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.6" y="126.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.18%)</title><rect x="504.6" y="99.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="507.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (23 samples, 0.10%)</title><rect x="506.7" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (23 samples, 0.10%)</title><rect x="506.7" y="243.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (23 samples, 0.10%)</title><rect x="506.7" y="227.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (23 samples, 0.10%)</title><rect x="506.7" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (17 samples, 0.07%)</title><rect x="506.7" y="195.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="507.5" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="507.5" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="507.5" y="163.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="510.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.apply (139 samples, 0.59%)</title><rect x="507.8" y="275.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (7 samples, 0.03%)</title><rect x="507.8" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1417628311.invokeStatic (7 samples, 0.03%)</title><rect x="507.8" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler$$Lambda$630/1562448074.get$Lambda (7 samples, 0.03%)</title><rect x="507.8" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.8" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.service.handlers.GetBodyHandler$$Lambda$630 (7 samples, 0.03%)</title><rect x="507.8" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="510.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (93 samples, 0.40%)</title><rect x="508.2" y="259.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (33 samples, 0.14%)</title><rect x="508.2" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (15 samples, 0.06%)</title><rect x="508.2" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.2" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (15 samples, 0.06%)</title><rect x="508.2" y="211.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.08%)</title><rect x="509.0" y="227.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.08%)</title><rect x="509.0" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="512.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (42 samples, 0.18%)</title><rect x="509.9" y="243.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (42 samples, 0.18%)</title><rect x="509.9" y="227.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (42 samples, 0.18%)</title><rect x="509.9" y="211.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (26 samples, 0.11%)</title><rect x="509.9" y="195.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (19 samples, 0.08%)</title><rect x="509.9" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (19 samples, 0.08%)</title><rect x="509.9" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (19 samples, 0.08%)</title><rect x="509.9" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (19 samples, 0.08%)</title><rect x="509.9" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (19 samples, 0.08%)</title><rect x="509.9" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.9" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$511/1420136804.applyAsLong (11 samples, 0.05%)</title><rect x="509.9" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.9" y="110.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (11 samples, 0.05%)</title><rect x="509.9" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (11 samples, 0.05%)</title><rect x="509.9" y="67.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Long (11 samples, 0.05%)</title><rect x="509.9" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="512.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (8 samples, 0.03%)</title><rect x="510.4" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.4" y="110.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (8 samples, 0.03%)</title><rect x="510.4" y="83.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.4" y="94.0"></text>
</g>
<g>
<title>java.lang.Long (8 samples, 0.03%)</title><rect x="510.4" y="67.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="513.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.03%)</title><rect x="510.8" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (7 samples, 0.03%)</title><rect x="510.8" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (7 samples, 0.03%)</title><rect x="510.8" y="147.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="513.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$517/1629819744.get (7 samples, 0.03%)</title><rect x="511.2" y="195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.2" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (7 samples, 0.03%)</title><rect x="511.2" y="179.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="514.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.04%)</title><rect x="511.5" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.04%)</title><rect x="511.5" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.5" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.04%)</title><rect x="511.5" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.5" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.04%)</title><rect x="511.5" y="147.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="514.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (18 samples, 0.08%)</title><rect x="512.0" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (18 samples, 0.08%)</title><rect x="512.0" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="515.0" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (5 samples, 0.02%)</title><rect x="512.9" y="259.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (5 samples, 0.02%)</title><rect x="512.9" y="243.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="515.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (34 samples, 0.15%)</title><rect x="513.1" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (10 samples, 0.04%)</title><rect x="513.1" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="516.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (24 samples, 0.10%)</title><rect x="513.7" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.7" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="513.7" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="516.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="514.2" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="517.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$421/1707489388.apply (10 samples, 0.04%)</title><rect x="514.9" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (10 samples, 0.04%)</title><rect x="514.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (7 samples, 0.03%)</title><rect x="515.0" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="515.0" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="518.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.03%)</title><rect x="515.4" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.03%)</title><rect x="515.4" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1145134436.apply (6 samples, 0.03%)</title><rect x="515.4" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.03%)</title><rect x="515.4" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.03%)</title><rect x="515.4" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="515.4" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="518.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/833363224.apply (16 samples, 0.07%)</title><rect x="515.7" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (16 samples, 0.07%)</title><rect x="515.7" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (16 samples, 0.07%)</title><rect x="515.7" y="355.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="518.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (785 samples, 3.36%)</title><rect x="516.5" y="499.0" width="39.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (54 samples, 0.23%)</title><rect x="516.5" y="483.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (54 samples, 0.23%)</title><rect x="516.5" y="467.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (54 samples, 0.23%)</title><rect x="516.5" y="451.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (54 samples, 0.23%)</title><rect x="516.5" y="435.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.23%)</title><rect x="516.5" y="419.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.5" y="430.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.23%)</title><rect x="516.5" y="403.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="519.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (71 samples, 0.30%)</title><rect x="519.2" y="483.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="519.2" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="522.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.06%)</title><rect x="519.8" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.06%)</title><rect x="519.8" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="519.8" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="522.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.03%)</title><rect x="520.2" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.2" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="520.2" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="523.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (12 samples, 0.05%)</title><rect x="520.5" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (12 samples, 0.05%)</title><rect x="520.5" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.5" y="462.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="520.5" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="523.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (33 samples, 0.14%)</title><rect x="521.1" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.14%)</title><rect x="521.1" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="521.1" y="435.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="524.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="522.2" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.2" y="446.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="522.2" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="525.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (197 samples, 0.84%)</title><rect x="522.8" y="483.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (197 samples, 0.84%)</title><rect x="522.8" y="467.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (197 samples, 0.84%)</title><rect x="522.8" y="451.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.02%)</title><rect x="523.0" y="435.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="526.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (20 samples, 0.09%)</title><rect x="523.2" y="435.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="526.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="524.4" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="524.4" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (7 samples, 0.03%)</title><rect x="524.4" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.4" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (7 samples, 0.03%)</title><rect x="524.4" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="527.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (9 samples, 0.04%)</title><rect x="524.8" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (9 samples, 0.04%)</title><rect x="524.8" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="527.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (136 samples, 0.58%)</title><rect x="525.2" y="435.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (136 samples, 0.58%)</title><rect x="525.2" y="419.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (136 samples, 0.58%)</title><rect x="525.2" y="403.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.11%)</title><rect x="525.2" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="525.2" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (25 samples, 0.11%)</title><rect x="525.2" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.2" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (25 samples, 0.11%)</title><rect x="525.2" y="339.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="528.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.05%)</title><rect x="526.5" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (12 samples, 0.05%)</title><rect x="526.5" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (12 samples, 0.05%)</title><rect x="526.5" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.05%)</title><rect x="526.5" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.05%)</title><rect x="526.5" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.05%)</title><rect x="526.5" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.05%)</title><rect x="526.5" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="526.5" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="526.5" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="529.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (58 samples, 0.25%)</title><rect x="527.1" y="387.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.1" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (58 samples, 0.25%)</title><rect x="527.1" y="371.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (27 samples, 0.12%)</title><rect x="527.1" y="355.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.12%)</title><rect x="527.1" y="339.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.12%)</title><rect x="527.1" y="323.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="530.1" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (31 samples, 0.13%)</title><rect x="528.4" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (31 samples, 0.13%)</title><rect x="528.4" y="339.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="531.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.18%)</title><rect x="530.0" y="387.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.18%)</title><rect x="530.0" y="371.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="533.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (13 samples, 0.06%)</title><rect x="532.1" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="532.1" y="419.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="535.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (463 samples, 1.98%)</title><rect x="532.7" y="483.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.7" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.10%)</title><rect x="532.7" y="467.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="535.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="534.0" y="467.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="534.0" y="451.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.0" y="462.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="534.0" y="435.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="537.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (56 samples, 0.24%)</title><rect x="535.5" y="467.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.24%)</title><rect x="535.5" y="451.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="535.5" y="435.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="538.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.17%)</title><rect x="536.3" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.3" y="446.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="536.3" y="419.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (353 samples, 1.51%)</title><rect x="538.3" y="467.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.45%)</title><rect x="538.3" y="451.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.45%)</title><rect x="538.3" y="435.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.20%)</title><rect x="538.3" y="419.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="541.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.25%)</title><rect x="540.6" y="419.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.6" y="430.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.25%)</title><rect x="540.6" y="403.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="543.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (52 samples, 0.22%)</title><rect x="543.6" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (52 samples, 0.22%)</title><rect x="543.6" y="435.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.6" y="446.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="543.6" y="419.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="546.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.08%)</title><rect x="545.3" y="419.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="548.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (59 samples, 0.25%)</title><rect x="546.2" y="451.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (59 samples, 0.25%)</title><rect x="546.2" y="435.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.25%)</title><rect x="546.2" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.14%)</title><rect x="546.2" y="403.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="549.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.11%)</title><rect x="547.9" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.9" y="414.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="547.9" y="387.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="550.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.21%)</title><rect x="549.2" y="451.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.21%)</title><rect x="549.2" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.21%)</title><rect x="549.2" y="419.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.21%)</title><rect x="549.2" y="403.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.21%)</title><rect x="549.2" y="387.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.21%)</title><rect x="549.2" y="371.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="552.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (87 samples, 0.37%)</title><rect x="551.7" y="451.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (33 samples, 0.14%)</title><rect x="551.7" y="435.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (33 samples, 0.14%)</title><rect x="551.7" y="419.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="554.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (27 samples, 0.12%)</title><rect x="553.4" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (27 samples, 0.12%)</title><rect x="553.4" y="419.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="556.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$504/1187071485.apply (27 samples, 0.12%)</title><rect x="554.8" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (27 samples, 0.12%)</title><rect x="554.8" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.12%)</title><rect x="554.8" y="403.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="557.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (300 samples, 1.28%)</title><rect x="556.1" y="611.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (300 samples, 1.28%)</title><rect x="556.1" y="595.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (300 samples, 1.28%)</title><rect x="556.1" y="579.0" width="15.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (300 samples, 1.28%)</title><rect x="556.1" y="563.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (300 samples, 1.28%)</title><rect x="556.1" y="547.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (42 samples, 0.18%)</title><rect x="556.1" y="531.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="556.1" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="556.1" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$383/883977638.get$Lambda (8 samples, 0.03%)</title><rect x="556.2" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$383 (8 samples, 0.03%)</title><rect x="556.2" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="559.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (10 samples, 0.04%)</title><rect x="556.6" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="559.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (22 samples, 0.09%)</title><rect x="557.1" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (22 samples, 0.09%)</title><rect x="557.1" y="499.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (11 samples, 0.05%)</title><rect x="557.1" y="483.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="560.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (11 samples, 0.05%)</title><rect x="557.7" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.05%)</title><rect x="557.7" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="560.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (257 samples, 1.10%)</title><rect x="558.2" y="531.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (257 samples, 1.10%)</title><rect x="558.2" y="515.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (257 samples, 1.10%)</title><rect x="558.2" y="499.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (257 samples, 1.10%)</title><rect x="558.2" y="483.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (257 samples, 1.10%)</title><rect x="558.2" y="467.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (257 samples, 1.10%)</title><rect x="558.2" y="451.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.09%)</title><rect x="558.2" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.09%)</title><rect x="558.2" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.2" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.09%)</title><rect x="558.2" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="561.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (11 samples, 0.05%)</title><rect x="559.2" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.2" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (11 samples, 0.05%)</title><rect x="559.2" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="562.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1893889011.run (126 samples, 0.54%)</title><rect x="559.8" y="435.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (126 samples, 0.54%)</title><rect x="559.8" y="419.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (126 samples, 0.54%)</title><rect x="559.8" y="403.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (42 samples, 0.18%)</title><rect x="559.8" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (35 samples, 0.15%)</title><rect x="559.8" y="371.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.8" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (10 samples, 0.04%)</title><rect x="559.8" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.8" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (10 samples, 0.04%)</title><rect x="559.8" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="562.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.11%)</title><rect x="560.3" y="355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.11%)</title><rect x="560.3" y="339.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="563.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.03%)</title><rect x="561.6" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.03%)</title><rect x="561.6" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.03%)</title><rect x="561.6" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (84 samples, 0.36%)</title><rect x="561.9" y="387.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.03%)</title><rect x="561.9" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.9" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.03%)</title><rect x="561.9" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (8 samples, 0.03%)</title><rect x="561.9" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (8 samples, 0.03%)</title><rect x="561.9" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (8 samples, 0.03%)</title><rect x="561.9" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="564.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (76 samples, 0.33%)</title><rect x="562.3" y="371.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (24 samples, 0.10%)</title><rect x="562.3" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.3" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.02%)</title><rect x="562.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.02%)</title><rect x="562.5" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.02%)</title><rect x="562.5" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="565.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (15 samples, 0.06%)</title><rect x="562.8" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="565.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (13 samples, 0.06%)</title><rect x="563.5" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.03%)</title><rect x="563.5" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.03%)</title><rect x="563.5" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.03%)</title><rect x="563.5" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="563.5" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="566.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.03%)</title><rect x="563.8" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.03%)</title><rect x="563.8" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.03%)</title><rect x="563.8" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="566.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (39 samples, 0.17%)</title><rect x="564.2" y="355.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (9 samples, 0.04%)</title><rect x="564.2" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="567.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (30 samples, 0.13%)</title><rect x="564.7" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (27 samples, 0.12%)</title><rect x="564.8" y="323.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (27 samples, 0.12%)</title><rect x="564.8" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (19 samples, 0.08%)</title><rect x="564.8" y="291.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="567.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (8 samples, 0.03%)</title><rect x="565.8" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (8 samples, 0.03%)</title><rect x="565.8" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="568.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (74 samples, 0.32%)</title><rect x="566.2" y="435.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (74 samples, 0.32%)</title><rect x="566.2" y="419.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (74 samples, 0.32%)</title><rect x="566.2" y="403.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (74 samples, 0.32%)</title><rect x="566.2" y="387.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (52 samples, 0.22%)</title><rect x="566.2" y="371.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 0.22%)</title><rect x="566.2" y="355.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (30 samples, 0.13%)</title><rect x="566.2" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler$$Lambda$630/1562448074.apply (30 samples, 0.13%)</title><rect x="566.2" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/GetBodyHandler.lambda$apply$0 (30 samples, 0.13%)</title><rect x="566.2" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.09%)</title><rect x="566.2" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.09%)</title><rect x="566.2" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.09%)</title><rect x="566.2" y="259.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="569.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.resolveExistingValue (10 samples, 0.04%)</title><rect x="567.2" y="291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.2" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.Value (10 samples, 0.04%)</title><rect x="567.2" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="570.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.09%)</title><rect x="567.7" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (22 samples, 0.09%)</title><rect x="567.7" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$563/1604018323.accept (22 samples, 0.09%)</title><rect x="567.7" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (22 samples, 0.09%)</title><rect x="567.7" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (22 samples, 0.09%)</title><rect x="567.7" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.09%)</title><rect x="567.7" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.09%)</title><rect x="567.7" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$579/1449206276.apply (22 samples, 0.09%)</title><rect x="567.7" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (22 samples, 0.09%)</title><rect x="567.7" y="211.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (22 samples, 0.09%)</title><rect x="567.7" y="195.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="570.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (22 samples, 0.09%)</title><rect x="568.8" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.8" y="382.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="568.8" y="355.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="571.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="403.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (26 samples, 0.11%)</title><rect x="569.9" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (26 samples, 0.11%)</title><rect x="569.9" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.03%)</title><rect x="569.9" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="569.9" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="572.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.09%)</title><rect x="570.2" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.09%)</title><rect x="570.2" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.09%)</title><rect x="570.2" y="291.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="573.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (72 samples, 0.31%)</title><rect x="571.3" y="691.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (72 samples, 0.31%)</title><rect x="571.3" y="675.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (72 samples, 0.31%)</title><rect x="571.3" y="659.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (72 samples, 0.31%)</title><rect x="571.3" y="643.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (72 samples, 0.31%)</title><rect x="571.3" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (72 samples, 0.31%)</title><rect x="571.3" y="611.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (72 samples, 0.31%)</title><rect x="571.3" y="595.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (72 samples, 0.31%)</title><rect x="571.3" y="579.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (72 samples, 0.31%)</title><rect x="571.3" y="563.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (72 samples, 0.31%)</title><rect x="571.3" y="547.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (72 samples, 0.31%)</title><rect x="571.3" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.31%)</title><rect x="571.3" y="515.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (72 samples, 0.31%)</title><rect x="571.3" y="499.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (72 samples, 0.31%)</title><rect x="571.3" y="483.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (72 samples, 0.31%)</title><rect x="571.3" y="467.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (72 samples, 0.31%)</title><rect x="571.3" y="451.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (72 samples, 0.31%)</title><rect x="571.3" y="435.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="574.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,064 samples, 4.55%)</title><rect x="574.9" y="691.0" width="53.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.9" y="702.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="574.9" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="574.9" y="659.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$420/1911998157.get$Lambda (17 samples, 0.07%)</title><rect x="574.9" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$420 (17 samples, 0.07%)</title><rect x="574.9" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="577.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (25 samples, 0.11%)</title><rect x="576.0" y="675.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="576.0" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$430/877989757.get$Lambda (25 samples, 0.11%)</title><rect x="576.0" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$430 (25 samples, 0.11%)</title><rect x="576.0" y="627.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="579.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (190 samples, 0.81%)</title><rect x="577.2" y="675.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$434/1816691911.accept (159 samples, 0.68%)</title><rect x="577.2" y="659.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (159 samples, 0.68%)</title><rect x="577.2" y="643.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (159 samples, 0.68%)</title><rect x="577.2" y="627.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (159 samples, 0.68%)</title><rect x="577.2" y="611.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (159 samples, 0.68%)</title><rect x="577.2" y="595.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (159 samples, 0.68%)</title><rect x="577.2" y="579.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.68%)</title><rect x="577.2" y="563.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.68%)</title><rect x="577.2" y="547.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (159 samples, 0.68%)</title><rect x="577.2" y="531.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (159 samples, 0.68%)</title><rect x="577.2" y="515.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (159 samples, 0.68%)</title><rect x="577.2" y="499.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (159 samples, 0.68%)</title><rect x="577.2" y="483.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (31 samples, 0.13%)</title><rect x="577.2" y="467.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (31 samples, 0.13%)</title><rect x="577.2" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (31 samples, 0.13%)</title><rect x="577.2" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (30 samples, 0.13%)</title><rect x="577.2" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (30 samples, 0.13%)</title><rect x="577.2" y="403.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (30 samples, 0.13%)</title><rect x="577.2" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (30 samples, 0.13%)</title><rect x="577.2" y="371.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (30 samples, 0.13%)</title><rect x="577.2" y="355.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="580.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.08%)</title><rect x="578.8" y="467.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="578.8" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="578.8" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (19 samples, 0.08%)</title><rect x="578.8" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (19 samples, 0.08%)</title><rect x="578.8" y="403.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (109 samples, 0.47%)</title><rect x="579.8" y="467.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (65 samples, 0.28%)</title><rect x="579.8" y="451.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.18%)</title><rect x="579.8" y="435.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.18%)</title><rect x="579.8" y="419.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="582.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (23 samples, 0.10%)</title><rect x="581.9" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (23 samples, 0.10%)</title><rect x="581.9" y="419.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.9" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (23 samples, 0.10%)</title><rect x="581.9" y="403.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="584.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (44 samples, 0.19%)</title><rect x="583.0" y="451.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$256/90328890.get (44 samples, 0.19%)</title><rect x="583.0" y="435.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (44 samples, 0.19%)</title><rect x="583.0" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (44 samples, 0.19%)</title><rect x="583.0" y="403.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.18%)</title><rect x="583.1" y="387.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.1" y="398.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="583.3" y="371.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$442/2143991438.accept (31 samples, 0.13%)</title><rect x="585.3" y="659.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (31 samples, 0.13%)</title><rect x="585.3" y="643.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$430/877989757.run (31 samples, 0.13%)</title><rect x="585.3" y="627.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (31 samples, 0.13%)</title><rect x="585.3" y="611.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (31 samples, 0.13%)</title><rect x="585.3" y="595.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (31 samples, 0.13%)</title><rect x="585.3" y="579.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (31 samples, 0.13%)</title><rect x="585.3" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (31 samples, 0.13%)</title><rect x="585.3" y="547.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="588.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (71 samples, 0.30%)</title><rect x="586.8" y="675.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.8" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (71 samples, 0.30%)</title><rect x="586.8" y="659.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="589.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (31 samples, 0.13%)</title><rect x="590.4" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.08%)</title><rect x="590.4" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (19 samples, 0.08%)</title><rect x="590.4" y="643.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (19 samples, 0.08%)</title><rect x="590.4" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.08%)</title><rect x="590.4" y="611.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (19 samples, 0.08%)</title><rect x="590.4" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (19 samples, 0.08%)</title><rect x="590.4" y="579.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (19 samples, 0.08%)</title><rect x="590.4" y="563.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="593.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (12 samples, 0.05%)</title><rect x="591.4" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (12 samples, 0.05%)</title><rect x="591.4" y="643.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="594.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (63 samples, 0.27%)</title><rect x="592.0" y="675.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$282/549125360.run (40 samples, 0.17%)</title><rect x="592.0" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (40 samples, 0.17%)</title><rect x="592.0" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.17%)</title><rect x="592.0" y="627.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.17%)</title><rect x="592.0" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.17%)</title><rect x="592.0" y="595.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.17%)</title><rect x="592.0" y="579.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (40 samples, 0.17%)</title><rect x="592.0" y="563.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (40 samples, 0.17%)</title><rect x="592.0" y="547.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (39 samples, 0.17%)</title><rect x="592.0" y="531.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (39 samples, 0.17%)</title><rect x="592.0" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (37 samples, 0.16%)</title><rect x="592.0" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (37 samples, 0.16%)</title><rect x="592.0" y="483.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (37 samples, 0.16%)</title><rect x="592.0" y="467.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (24 samples, 0.10%)</title><rect x="592.0" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802243390.invoke (24 samples, 0.10%)</title><rect x="592.0" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="592.0" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.10%)</title><rect x="592.0" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.10%)</title><rect x="592.0" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.0" y="398.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="592.0" y="371.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.06%)</title><rect x="593.2" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="593.2" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="593.2" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (13 samples, 0.06%)</title><rect x="593.2" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (13 samples, 0.06%)</title><rect x="593.2" y="387.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$297/974608749.run (23 samples, 0.10%)</title><rect x="594.0" y="659.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (23 samples, 0.10%)</title><rect x="594.0" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.09%)</title><rect x="594.0" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="594.0" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$445/383899907.get$Lambda (22 samples, 0.09%)</title><rect x="594.0" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$445 (22 samples, 0.09%)</title><rect x="594.0" y="579.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="597.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (268 samples, 1.15%)</title><rect x="595.2" y="675.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.2" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (47 samples, 0.20%)</title><rect x="595.2" y="659.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.2" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (47 samples, 0.20%)</title><rect x="595.2" y="643.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.2" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (47 samples, 0.20%)</title><rect x="595.2" y="627.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.2" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (47 samples, 0.20%)</title><rect x="595.2" y="611.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.2" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (47 samples, 0.20%)</title><rect x="595.2" y="595.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="598.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (221 samples, 0.95%)</title><rect x="597.5" y="659.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.12%)</title><rect x="597.5" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.12%)</title><rect x="597.5" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$593/1526447846.get$Lambda (28 samples, 0.12%)</title><rect x="597.5" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$593 (28 samples, 0.12%)</title><rect x="597.5" y="595.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (56 samples, 0.24%)</title><rect x="598.9" y="643.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (56 samples, 0.24%)</title><rect x="598.9" y="627.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="601.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (33 samples, 0.14%)</title><rect x="601.8" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.8" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (33 samples, 0.14%)</title><rect x="601.8" y="627.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.8" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (33 samples, 0.14%)</title><rect x="601.8" y="611.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="604.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (104 samples, 0.45%)</title><rect x="603.4" y="643.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (54 samples, 0.23%)</title><rect x="603.4" y="627.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="606.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (50 samples, 0.21%)</title><rect x="606.2" y="627.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (50 samples, 0.21%)</title><rect x="606.2" y="611.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (50 samples, 0.21%)</title><rect x="606.2" y="595.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="609.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (137 samples, 0.59%)</title><rect x="608.7" y="675.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="608.7" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="608.7" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$417/1745229928.get$Lambda (9 samples, 0.04%)</title><rect x="608.7" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$417 (9 samples, 0.04%)</title><rect x="608.7" y="611.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="611.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (77 samples, 0.33%)</title><rect x="609.1" y="659.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (32 samples, 0.14%)</title><rect x="609.1" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (32 samples, 0.14%)</title><rect x="609.1" y="627.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (45 samples, 0.19%)</title><rect x="610.8" y="643.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (45 samples, 0.19%)</title><rect x="610.8" y="627.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="613.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (51 samples, 0.22%)</title><rect x="613.0" y="659.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (51 samples, 0.22%)</title><rect x="613.0" y="643.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (173 samples, 0.74%)</title><rect x="615.6" y="675.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (83 samples, 0.36%)</title><rect x="615.6" y="659.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (83 samples, 0.36%)</title><rect x="615.6" y="643.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (83 samples, 0.36%)</title><rect x="615.6" y="627.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (83 samples, 0.36%)</title><rect x="615.6" y="611.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (83 samples, 0.36%)</title><rect x="615.6" y="595.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="618.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (90 samples, 0.39%)</title><rect x="619.8" y="659.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (90 samples, 0.39%)</title><rect x="619.8" y="643.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (90 samples, 0.39%)</title><rect x="619.8" y="627.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (90 samples, 0.39%)</title><rect x="619.8" y="611.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (43 samples, 0.18%)</title><rect x="624.3" y="675.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (43 samples, 0.18%)</title><rect x="624.3" y="659.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (43 samples, 0.18%)</title><rect x="624.3" y="643.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (43 samples, 0.18%)</title><rect x="624.3" y="627.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (25 samples, 0.11%)</title><rect x="624.3" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (25 samples, 0.11%)</title><rect x="624.3" y="595.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="627.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (18 samples, 0.08%)</title><rect x="625.6" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (18 samples, 0.08%)</title><rect x="625.6" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (18 samples, 0.08%)</title><rect x="625.6" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (18 samples, 0.08%)</title><rect x="625.6" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (18 samples, 0.08%)</title><rect x="625.6" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (18 samples, 0.08%)</title><rect x="625.6" y="531.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (19 samples, 0.08%)</title><rect x="626.5" y="675.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 0.08%)</title><rect x="626.5" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (19 samples, 0.08%)</title><rect x="626.5" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (19 samples, 0.08%)</title><rect x="626.5" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (17 samples, 0.07%)</title><rect x="626.5" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (17 samples, 0.07%)</title><rect x="626.5" y="595.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="629.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (23 samples, 0.10%)</title><rect x="627.5" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (23 samples, 0.10%)</title><rect x="627.5" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (23 samples, 0.10%)</title><rect x="627.5" y="643.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (23 samples, 0.10%)</title><rect x="627.5" y="627.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="630.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (11,117 samples, 47.57%)</title><rect x="628.6" y="691.0" width="561.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (526 samples, 2.25%)</title><rect x="628.6" y="675.0" width="26.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.6" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (246 samples, 1.05%)</title><rect x="628.6" y="659.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.6" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (70 samples, 0.30%)</title><rect x="628.6" y="643.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="631.6" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (61 samples, 0.26%)</title><rect x="632.2" y="643.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="635.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (115 samples, 0.49%)</title><rect x="635.2" y="643.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (115 samples, 0.49%)</title><rect x="635.2" y="627.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (115 samples, 0.49%)</title><rect x="635.2" y="611.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.2" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (115 samples, 0.49%)</title><rect x="635.2" y="595.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="638.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (280 samples, 1.20%)</title><rect x="641.1" y="659.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (280 samples, 1.20%)</title><rect x="641.1" y="643.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (280 samples, 1.20%)</title><rect x="641.1" y="627.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (280 samples, 1.20%)</title><rect x="641.1" y="611.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (190 samples, 0.81%)</title><rect x="641.1" y="595.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.1" y="606.0"></text>
</g>
<g>
<title>java.lang.Integer (190 samples, 0.81%)</title><rect x="641.1" y="579.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="644.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (90 samples, 0.39%)</title><rect x="650.6" y="595.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (90 samples, 0.39%)</title><rect x="650.6" y="579.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (90 samples, 0.39%)</title><rect x="650.6" y="563.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (90 samples, 0.39%)</title><rect x="650.6" y="547.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (90 samples, 0.39%)</title><rect x="650.6" y="531.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (90 samples, 0.39%)</title><rect x="650.6" y="515.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="653.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10,591 samples, 45.32%)</title><rect x="655.2" y="675.0" width="534.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.2" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10,591 samples, 45.32%)</title><rect x="655.2" y="659.0" width="534.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.2" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10,473 samples, 44.82%)</title><rect x="655.2" y="643.0" width="528.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.2" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,205 samples, 30.83%)</title><rect x="655.2" y="627.0" width="363.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.2" y="638.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,205 samples, 30.83%)</title><rect x="655.2" y="611.0" width="363.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.2" y="622.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (7,064 samples, 30.23%)</title><rect x="655.2" y="595.0" width="356.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.2" y="606.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (123 samples, 0.53%)</title><rect x="655.2" y="579.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (123 samples, 0.53%)</title><rect x="655.2" y="563.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (123 samples, 0.53%)</title><rect x="655.2" y="547.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (123 samples, 0.53%)</title><rect x="655.2" y="531.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.26%)</title><rect x="655.2" y="515.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="658.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.27%)</title><rect x="658.2" y="515.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.2" y="526.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.27%)</title><rect x="658.2" y="499.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="661.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (6,941 samples, 29.70%)</title><rect x="661.4" y="579.0" width="350.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.4" y="590.0">ru/mail/polis/service/ReplicationServiceImpl.ent..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (142 samples, 0.61%)</title><rect x="661.4" y="563.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (142 samples, 0.61%)</title><rect x="661.4" y="547.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.61%)</title><rect x="661.4" y="531.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.32%)</title><rect x="661.4" y="515.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="664.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (68 samples, 0.29%)</title><rect x="665.1" y="515.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.1" y="526.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.29%)</title><rect x="665.1" y="499.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="668.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (6,799 samples, 29.10%)</title><rect x="668.6" y="563.0" width="343.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="574.0">ru/mail/polis/service/ReplicationHandler.handle</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleGet (6,429 samples, 27.51%)</title><rect x="668.6" y="547.0" width="324.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.6" y="558.0">ru/mail/polis/service/ReplicationHandler.mul..</text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (42 samples, 0.18%)</title><rect x="668.6" y="531.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (42 samples, 0.18%)</title><rect x="668.6" y="515.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.singletonIterator (42 samples, 0.18%)</title><rect x="668.6" y="499.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$9 (42 samples, 0.18%)</title><rect x="668.6" y="483.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="671.6" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (138 samples, 0.59%)</title><rect x="670.7" y="531.0" width="7.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="673.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.34%)</title><rect x="677.7" y="531.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.34%)</title><rect x="677.7" y="515.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$597/1897477583.get$Lambda (79 samples, 0.34%)</title><rect x="677.7" y="499.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.7" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$597 (79 samples, 0.34%)</title><rect x="677.7" y="483.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="680.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (158 samples, 0.68%)</title><rect x="681.7" y="531.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (158 samples, 0.68%)</title><rect x="681.7" y="515.0" width="7.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="684.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (27 samples, 0.12%)</title><rect x="689.6" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (20 samples, 0.09%)</title><rect x="689.6" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.6" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (20 samples, 0.09%)</title><rect x="689.6" y="499.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="692.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (7 samples, 0.03%)</title><rect x="690.6" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.6" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (7 samples, 0.03%)</title><rect x="690.6" y="499.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="693.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (154 samples, 0.66%)</title><rect x="691.0" y="531.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (154 samples, 0.66%)</title><rect x="691.0" y="515.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (83 samples, 0.36%)</title><rect x="691.0" y="499.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="694.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (68 samples, 0.29%)</title><rect x="695.2" y="499.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="698.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (67 samples, 0.29%)</title><rect x="698.8" y="531.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (67 samples, 0.29%)</title><rect x="698.8" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.14%)</title><rect x="698.8" y="499.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="701.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.15%)</title><rect x="700.4" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.15%)</title><rect x="700.4" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.15%)</title><rect x="700.4" y="467.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="703.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,820 samples, 7.79%)</title><rect x="702.2" y="531.0" width="91.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.2" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,820 samples, 7.79%)</title><rect x="702.2" y="515.0" width="91.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.2" y="526.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,820 samples, 7.79%)</title><rect x="702.2" y="499.0" width="91.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.2" y="510.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,820 samples, 7.79%)</title><rect x="702.2" y="483.0" width="91.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.2" y="494.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="702.2" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="702.2" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$173/1240135518.get$Lambda (16 samples, 0.07%)</title><rect x="702.2" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$173 (16 samples, 0.07%)</title><rect x="702.2" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="705.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (67 samples, 0.29%)</title><rect x="703.0" y="467.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (67 samples, 0.29%)</title><rect x="703.0" y="451.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (41 samples, 0.18%)</title><rect x="703.0" y="435.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="706.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="705.0" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="705.0" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.11%)</title><rect x="705.0" y="403.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="708.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (66 samples, 0.28%)</title><rect x="706.3" y="467.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (66 samples, 0.28%)</title><rect x="706.3" y="451.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.15%)</title><rect x="706.3" y="435.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.13%)</title><rect x="708.1" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.13%)</title><rect x="708.1" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.13%)</title><rect x="708.1" y="403.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="711.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (66 samples, 0.28%)</title><rect x="709.7" y="467.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="712.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (91 samples, 0.39%)</title><rect x="713.0" y="467.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="716.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (926 samples, 3.96%)</title><rect x="717.6" y="467.0" width="46.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.6" y="478.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (97 samples, 0.42%)</title><rect x="717.6" y="451.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (74 samples, 0.32%)</title><rect x="717.6" y="435.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (31 samples, 0.13%)</title><rect x="717.6" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.6" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (31 samples, 0.13%)</title><rect x="717.6" y="403.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="720.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (43 samples, 0.18%)</title><rect x="719.2" y="419.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (43 samples, 0.18%)</title><rect x="719.2" y="403.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (23 samples, 0.10%)</title><rect x="721.3" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.10%)</title><rect x="721.3" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.10%)</title><rect x="721.3" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (23 samples, 0.10%)</title><rect x="721.3" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (23 samples, 0.10%)</title><rect x="721.3" y="371.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="724.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (362 samples, 1.55%)</title><rect x="722.5" y="451.0" width="18.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (362 samples, 1.55%)</title><rect x="722.5" y="435.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.04%)</title><rect x="722.5" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="725.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.07%)</title><rect x="723.0" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="726.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.16%)</title><rect x="723.8" y="419.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="726.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (13 samples, 0.06%)</title><rect x="725.7" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="728.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="726.4" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="726.4" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (26 samples, 0.11%)</title><rect x="726.4" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (26 samples, 0.11%)</title><rect x="726.4" y="371.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="729.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (182 samples, 0.78%)</title><rect x="727.7" y="419.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (182 samples, 0.78%)</title><rect x="727.7" y="403.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (182 samples, 0.78%)</title><rect x="727.7" y="387.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (182 samples, 0.78%)</title><rect x="727.7" y="371.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (71 samples, 0.30%)</title><rect x="727.7" y="355.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (46 samples, 0.20%)</title><rect x="727.7" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (46 samples, 0.20%)</title><rect x="727.7" y="323.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.20%)</title><rect x="727.7" y="307.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.20%)</title><rect x="727.7" y="291.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.20%)</title><rect x="727.7" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.20%)</title><rect x="727.7" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.20%)</title><rect x="727.7" y="243.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.20%)</title><rect x="727.7" y="227.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="730.7" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (25 samples, 0.11%)</title><rect x="730.0" y="339.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.0" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (25 samples, 0.11%)</title><rect x="730.0" y="323.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="733.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.12%)</title><rect x="731.3" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.12%)</title><rect x="731.3" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (29 samples, 0.12%)</title><rect x="731.3" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.3" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (29 samples, 0.12%)</title><rect x="731.3" y="307.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="734.3" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (34 samples, 0.15%)</title><rect x="732.8" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (34 samples, 0.15%)</title><rect x="732.8" y="339.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (19 samples, 0.08%)</title><rect x="732.8" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="732.8" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.08%)</title><rect x="732.8" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="735.8" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (15 samples, 0.06%)</title><rect x="733.7" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (15 samples, 0.06%)</title><rect x="733.7" y="307.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="736.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.21%)</title><rect x="734.5" y="355.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.21%)</title><rect x="734.5" y="339.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="737.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (36 samples, 0.15%)</title><rect x="736.9" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.9" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (36 samples, 0.15%)</title><rect x="736.9" y="403.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="739.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.18%)</title><rect x="738.7" y="419.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.18%)</title><rect x="738.7" y="403.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="741.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (18 samples, 0.08%)</title><rect x="740.8" y="451.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="743.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (337 samples, 1.44%)</title><rect x="741.7" y="451.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.7" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (337 samples, 1.44%)</title><rect x="741.7" y="435.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.7" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (311 samples, 1.33%)</title><rect x="741.7" y="419.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.7" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (311 samples, 1.33%)</title><rect x="741.7" y="403.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.7" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (311 samples, 1.33%)</title><rect x="741.7" y="387.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.7" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (85 samples, 0.36%)</title><rect x="741.7" y="371.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="744.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (83 samples, 0.36%)</title><rect x="746.0" y="371.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.0" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (83 samples, 0.36%)</title><rect x="746.0" y="355.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.0" y="366.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.36%)</title><rect x="746.0" y="339.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="749.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (143 samples, 0.61%)</title><rect x="750.2" y="371.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.61%)</title><rect x="750.2" y="355.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.31%)</title><rect x="750.2" y="339.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="753.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (71 samples, 0.30%)</title><rect x="753.8" y="339.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.8" y="350.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.30%)</title><rect x="753.8" y="323.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="756.8" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (26 samples, 0.11%)</title><rect x="757.4" y="419.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="760.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (45 samples, 0.19%)</title><rect x="758.7" y="451.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (45 samples, 0.19%)</title><rect x="758.7" y="435.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="761.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (67 samples, 0.29%)</title><rect x="761.0" y="451.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="761.0" y="435.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="764.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (16 samples, 0.07%)</title><rect x="761.6" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="761.6" y="419.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="764.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (39 samples, 0.17%)</title><rect x="762.4" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (39 samples, 0.17%)</title><rect x="762.4" y="419.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="765.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (391 samples, 1.67%)</title><rect x="764.4" y="467.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (24 samples, 0.10%)</title><rect x="764.4" y="451.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="767.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (40 samples, 0.17%)</title><rect x="765.6" y="451.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="768.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (12 samples, 0.05%)</title><rect x="767.6" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (12 samples, 0.05%)</title><rect x="767.6" y="435.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="770.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (315 samples, 1.35%)</title><rect x="768.2" y="451.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (315 samples, 1.35%)</title><rect x="768.2" y="435.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.11%)</title><rect x="768.2" y="419.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="771.2" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (31 samples, 0.13%)</title><rect x="769.5" y="419.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="772.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (156 samples, 0.67%)</title><rect x="771.0" y="419.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (156 samples, 0.67%)</title><rect x="771.0" y="403.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.0" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (156 samples, 0.67%)</title><rect x="771.0" y="387.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (156 samples, 0.67%)</title><rect x="771.0" y="371.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.0" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (156 samples, 0.67%)</title><rect x="771.0" y="355.0" width="7.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="774.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (58 samples, 0.25%)</title><rect x="778.9" y="419.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (58 samples, 0.25%)</title><rect x="778.9" y="403.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (12 samples, 0.05%)</title><rect x="778.9" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (12 samples, 0.05%)</title><rect x="778.9" y="371.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="781.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (46 samples, 0.20%)</title><rect x="779.5" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (46 samples, 0.20%)</title><rect x="779.5" y="371.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="782.5" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (45 samples, 0.19%)</title><rect x="781.8" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (45 samples, 0.19%)</title><rect x="781.8" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.8" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (45 samples, 0.19%)</title><rect x="781.8" y="387.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="784.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (197 samples, 0.84%)</title><rect x="784.1" y="467.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (27 samples, 0.12%)</title><rect x="784.1" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (27 samples, 0.12%)</title><rect x="784.1" y="435.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="787.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.12%)</title><rect x="785.5" y="451.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="788.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (143 samples, 0.61%)</title><rect x="786.8" y="451.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="786.8" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="786.8" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/474961723.get$Lambda (19 samples, 0.08%)</title><rect x="786.8" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$154 (19 samples, 0.08%)</title><rect x="786.8" y="387.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1117015311.get$Lambda (12 samples, 0.05%)</title><rect x="787.8" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$159 (12 samples, 0.05%)</title><rect x="787.8" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="790.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (112 samples, 0.48%)</title><rect x="788.4" y="435.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (112 samples, 0.48%)</title><rect x="788.4" y="419.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (69 samples, 0.30%)</title><rect x="788.4" y="403.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="791.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.18%)</title><rect x="791.9" y="403.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.18%)</title><rect x="791.9" y="387.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.18%)</title><rect x="791.9" y="371.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="794.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (426 samples, 1.82%)</title><rect x="794.1" y="531.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.1" y="542.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (36 samples, 0.15%)</title><rect x="794.1" y="515.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="797.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (390 samples, 1.67%)</title><rect x="795.9" y="515.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (379 samples, 1.62%)</title><rect x="795.9" y="499.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (379 samples, 1.62%)</title><rect x="795.9" y="483.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.9" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (14 samples, 0.06%)</title><rect x="795.9" y="467.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="798.9" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.07%)</title><rect x="796.6" y="467.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="799.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.20%)</title><rect x="797.4" y="467.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="800.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (15 samples, 0.06%)</title><rect x="799.8" y="467.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="802.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.14%)</title><rect x="800.5" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.14%)</title><rect x="800.5" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (32 samples, 0.14%)</title><rect x="800.5" y="435.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (32 samples, 0.14%)</title><rect x="800.5" y="419.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="803.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (37 samples, 0.16%)</title><rect x="802.1" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.1" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (37 samples, 0.16%)</title><rect x="802.1" y="451.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="805.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (171 samples, 0.73%)</title><rect x="804.0" y="467.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (171 samples, 0.73%)</title><rect x="804.0" y="451.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (171 samples, 0.73%)</title><rect x="804.0" y="435.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.09%)</title><rect x="804.0" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.09%)</title><rect x="804.0" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (20 samples, 0.09%)</title><rect x="804.0" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.0" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (20 samples, 0.09%)</title><rect x="804.0" y="371.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="807.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (55 samples, 0.24%)</title><rect x="805.0" y="419.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (55 samples, 0.24%)</title><rect x="805.0" y="403.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (55 samples, 0.24%)</title><rect x="805.0" y="387.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (55 samples, 0.24%)</title><rect x="805.0" y="371.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (55 samples, 0.24%)</title><rect x="805.0" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (55 samples, 0.24%)</title><rect x="805.0" y="339.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (55 samples, 0.24%)</title><rect x="805.0" y="323.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.24%)</title><rect x="805.0" y="307.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.24%)</title><rect x="805.0" y="291.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="808.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (47 samples, 0.20%)</title><rect x="807.8" y="419.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.8" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (47 samples, 0.20%)</title><rect x="807.8" y="403.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (26 samples, 0.11%)</title><rect x="807.8" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.11%)</title><rect x="807.8" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.11%)</title><rect x="807.8" y="355.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="810.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (21 samples, 0.09%)</title><rect x="809.1" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (21 samples, 0.09%)</title><rect x="809.1" y="371.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="812.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (49 samples, 0.21%)</title><rect x="810.2" y="419.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (49 samples, 0.21%)</title><rect x="810.2" y="403.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="813.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (47 samples, 0.20%)</title><rect x="812.6" y="467.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.20%)</title><rect x="812.6" y="451.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="815.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (11 samples, 0.05%)</title><rect x="815.0" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.0" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.05%)</title><rect x="815.0" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.0" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.05%)</title><rect x="815.0" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="818.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (733 samples, 3.14%)</title><rect x="815.6" y="531.0" width="37.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.6" y="542.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (596 samples, 2.55%)</title><rect x="815.6" y="515.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.6" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (352 samples, 1.51%)</title><rect x="815.6" y="499.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (352 samples, 1.51%)</title><rect x="815.6" y="483.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.6" y="494.0"></text>
</g>
<g>
<title>byte[] (352 samples, 1.51%)</title><rect x="815.6" y="467.0" width="17.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="818.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 1.04%)</title><rect x="833.3" y="499.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (120 samples, 0.51%)</title><rect x="833.3" y="483.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="836.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 0.53%)</title><rect x="839.4" y="483.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (124 samples, 0.53%)</title><rect x="839.4" y="467.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (124 samples, 0.53%)</title><rect x="839.4" y="451.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (124 samples, 0.53%)</title><rect x="839.4" y="435.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.53%)</title><rect x="839.4" y="419.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="842.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (137 samples, 0.59%)</title><rect x="845.7" y="515.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (137 samples, 0.59%)</title><rect x="845.7" y="499.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (137 samples, 0.59%)</title><rect x="845.7" y="483.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.16%)</title><rect x="845.7" y="467.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="848.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (100 samples, 0.43%)</title><rect x="847.5" y="467.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.5" y="478.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.43%)</title><rect x="847.5" y="451.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="850.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (152 samples, 0.65%)</title><rect x="852.6" y="531.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (152 samples, 0.65%)</title><rect x="852.6" y="515.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (152 samples, 0.65%)</title><rect x="852.6" y="499.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.37%)</title><rect x="852.6" y="483.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="855.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.28%)</title><rect x="856.9" y="483.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.9" y="494.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.28%)</title><rect x="856.9" y="467.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="859.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureGet (1,754 samples, 7.51%)</title><rect x="860.3" y="531.0" width="88.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.3" y="542.0">ru/mail/po..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (39 samples, 0.17%)</title><rect x="860.3" y="515.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="863.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (80 samples, 0.34%)</title><rect x="862.2" y="515.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.2" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (80 samples, 0.34%)</title><rect x="862.2" y="499.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="865.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (146 samples, 0.62%)</title><rect x="866.3" y="515.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (146 samples, 0.62%)</title><rect x="866.3" y="499.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (146 samples, 0.62%)</title><rect x="866.3" y="483.0" width="7.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="869.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.syncValues (777 samples, 3.33%)</title><rect x="873.6" y="515.0" width="39.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.6" y="526.0">ru/..</text>
</g>
<g>
<title>java/util/Collection.stream (270 samples, 1.16%)</title><rect x="873.6" y="499.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (136 samples, 0.58%)</title><rect x="873.6" y="483.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.6" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (136 samples, 0.58%)</title><rect x="873.6" y="467.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (134 samples, 0.57%)</title><rect x="880.5" y="483.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="883.5" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (134 samples, 0.57%)</title><rect x="880.5" y="467.0" width="6.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="883.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (38 samples, 0.16%)</title><rect x="887.3" y="499.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.16%)</title><rect x="887.3" y="483.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.16%)</title><rect x="887.3" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$612/965082197.get$Lambda (38 samples, 0.16%)</title><rect x="887.3" y="451.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.3" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$612 (38 samples, 0.16%)</title><rect x="887.3" y="435.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="890.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (182 samples, 0.78%)</title><rect x="889.2" y="499.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.2" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (182 samples, 0.78%)</title><rect x="889.2" y="483.0" width="9.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="892.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (287 samples, 1.23%)</title><rect x="898.4" y="499.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.4" y="510.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (37 samples, 0.16%)</title><rect x="898.4" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.16%)</title><rect x="898.4" y="467.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.16%)</title><rect x="898.4" y="451.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.4" y="462.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$618/2068837807.get$Lambda (37 samples, 0.16%)</title><rect x="898.4" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.4" y="446.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$618 (37 samples, 0.16%)</title><rect x="898.4" y="419.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="901.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (250 samples, 1.07%)</title><rect x="900.3" y="483.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (175 samples, 0.75%)</title><rect x="900.3" y="467.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (175 samples, 0.75%)</title><rect x="900.3" y="451.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (80 samples, 0.34%)</title><rect x="900.3" y="435.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (80 samples, 0.34%)</title><rect x="900.3" y="419.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (80 samples, 0.34%)</title><rect x="900.3" y="403.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.3" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (80 samples, 0.34%)</title><rect x="900.3" y="387.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="903.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (64 samples, 0.27%)</title><rect x="904.3" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (64 samples, 0.27%)</title><rect x="904.3" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.3" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (64 samples, 0.27%)</title><rect x="904.3" y="403.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="907.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (31 samples, 0.13%)</title><rect x="907.5" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (31 samples, 0.13%)</title><rect x="907.5" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.5" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (31 samples, 0.13%)</title><rect x="907.5" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.5" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (31 samples, 0.13%)</title><rect x="907.5" y="387.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="910.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (75 samples, 0.32%)</title><rect x="909.1" y="467.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (75 samples, 0.32%)</title><rect x="909.1" y="451.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="912.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.toResponse (712 samples, 3.05%)</title><rect x="912.9" y="515.0" width="35.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.9" y="526.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (68 samples, 0.29%)</title><rect x="912.9" y="499.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="915.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (249 samples, 1.07%)</title><rect x="916.3" y="499.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.3" y="510.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.45%)</title><rect x="916.3" y="483.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="919.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (80 samples, 0.34%)</title><rect x="921.6" y="483.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="924.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.28%)</title><rect x="925.6" y="483.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="928.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.addTimestampHeader (163 samples, 0.70%)</title><rect x="928.9" y="499.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (163 samples, 0.70%)</title><rect x="928.9" y="483.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/496712508.invoke (163 samples, 0.70%)</title><rect x="928.9" y="467.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.70%)</title><rect x="928.9" y="451.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (67 samples, 0.29%)</title><rect x="928.9" y="435.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.29%)</title><rect x="928.9" y="419.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="931.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (96 samples, 0.41%)</title><rect x="932.3" y="435.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (96 samples, 0.41%)</title><rect x="932.3" y="419.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.3" y="430.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.41%)</title><rect x="932.3" y="403.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="935.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Value.getBytes (232 samples, 0.99%)</title><rect x="937.1" y="499.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.1" y="510.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.37%)</title><rect x="937.1" y="483.0" width="4.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="940.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (146 samples, 0.62%)</title><rect x="941.5" y="483.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.5" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (146 samples, 0.62%)</title><rect x="941.5" y="467.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="944.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (658 samples, 2.82%)</title><rect x="948.8" y="531.0" width="33.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="542.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.39%)</title><rect x="948.8" y="515.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1278677872.invoke (92 samples, 0.39%)</title><rect x="948.8" y="499.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.39%)</title><rect x="948.8" y="483.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.10%)</title><rect x="948.8" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="948.8" y="451.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="951.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (69 samples, 0.30%)</title><rect x="950.0" y="467.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (69 samples, 0.30%)</title><rect x="950.0" y="451.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.0" y="462.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.30%)</title><rect x="950.0" y="435.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="953.0" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (349 samples, 1.49%)</title><rect x="953.5" y="515.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.5" y="526.0"></text>
</g>
<g>
<title>java.net.URI (92 samples, 0.39%)</title><rect x="953.5" y="499.0" width="4.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="956.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (257 samples, 1.10%)</title><rect x="958.1" y="499.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.1" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (34 samples, 0.15%)</title><rect x="958.1" y="483.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="961.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (223 samples, 0.95%)</title><rect x="959.8" y="483.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.18%)</title><rect x="959.8" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.18%)</title><rect x="959.8" y="451.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="959.8" y="435.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="962.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="960.8" y="435.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.8" y="446.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="960.8" y="419.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="963.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (180 samples, 0.77%)</title><rect x="962.0" y="467.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (90 samples, 0.39%)</title><rect x="962.0" y="451.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (90 samples, 0.39%)</title><rect x="962.0" y="435.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.17%)</title><rect x="962.0" y="419.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="965.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.22%)</title><rect x="964.0" y="419.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.0" y="430.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.22%)</title><rect x="964.0" y="403.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="967.0" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (90 samples, 0.39%)</title><rect x="966.6" y="451.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.20%)</title><rect x="966.6" y="435.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.20%)</title><rect x="966.6" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="966.6" y="403.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="969.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.11%)</title><rect x="967.6" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.6" y="414.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="967.6" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="970.6" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (43 samples, 0.18%)</title><rect x="968.9" y="435.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.9" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (43 samples, 0.18%)</title><rect x="968.9" y="419.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.18%)</title><rect x="968.9" y="403.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.18%)</title><rect x="968.9" y="387.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="968.9" y="371.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="971.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.12%)</title><rect x="969.7" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.7" y="382.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="969.7" y="355.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="972.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (92 samples, 0.39%)</title><rect x="971.1" y="515.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (37 samples, 0.16%)</title><rect x="971.1" y="499.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="974.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (55 samples, 0.24%)</title><rect x="973.0" y="499.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (13 samples, 0.06%)</title><rect x="973.0" y="483.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="976.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (42 samples, 0.18%)</title><rect x="973.6" y="483.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (42 samples, 0.18%)</title><rect x="973.6" y="467.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="976.6" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (31 samples, 0.13%)</title><rect x="975.7" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.7" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.create (31 samples, 0.13%)</title><rect x="975.7" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.7" y="510.0"></text>
</g>
<g>
<title>java.time.Duration (31 samples, 0.13%)</title><rect x="975.7" y="483.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="978.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (94 samples, 0.40%)</title><rect x="977.3" y="515.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (94 samples, 0.40%)</title><rect x="977.3" y="499.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (94 samples, 0.40%)</title><rect x="977.3" y="483.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="980.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.07%)</title><rect x="977.3" y="467.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="980.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (30 samples, 0.13%)</title><rect x="978.2" y="467.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.13%)</title><rect x="978.2" y="451.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="981.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.20%)</title><rect x="979.7" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.20%)</title><rect x="979.7" y="451.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="982.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (221 samples, 0.95%)</title><rect x="982.1" y="531.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (72 samples, 0.31%)</title><rect x="982.1" y="515.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (72 samples, 0.31%)</title><rect x="982.1" y="499.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (72 samples, 0.31%)</title><rect x="982.1" y="483.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.31%)</title><rect x="982.1" y="467.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.1" y="478.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.31%)</title><rect x="982.1" y="451.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="985.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (149 samples, 0.64%)</title><rect x="985.7" y="515.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (149 samples, 0.64%)</title><rect x="985.7" y="499.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (149 samples, 0.64%)</title><rect x="985.7" y="483.0" width="7.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="988.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.getNodeReplica (188 samples, 0.80%)</title><rect x="993.2" y="547.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (67 samples, 0.29%)</title><rect x="993.2" y="531.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.2" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableSet (67 samples, 0.29%)</title><rect x="993.2" y="515.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="996.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (121 samples, 0.52%)</title><rect x="996.6" y="531.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashSet (8 samples, 0.03%)</title><rect x="996.6" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="999.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (23 samples, 0.10%)</title><rect x="997.0" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap (23 samples, 0.10%)</title><rect x="997.0" y="499.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1000.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (90 samples, 0.39%)</title><rect x="998.2" y="515.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (90 samples, 0.39%)</title><rect x="998.2" y="499.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (90 samples, 0.39%)</title><rect x="998.2" y="483.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (46 samples, 0.20%)</title><rect x="998.2" y="467.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1001.2" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (46 samples, 0.20%)</title><rect x="998.2" y="451.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1001.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (44 samples, 0.19%)</title><rect x="1000.5" y="467.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.5" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (44 samples, 0.19%)</title><rect x="1000.5" y="451.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1003.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (182 samples, 0.78%)</title><rect x="1002.7" y="547.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (58 samples, 0.25%)</title><rect x="1002.7" y="531.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (58 samples, 0.25%)</title><rect x="1002.7" y="515.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (58 samples, 0.25%)</title><rect x="1002.7" y="499.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.25%)</title><rect x="1002.7" y="483.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.7" y="494.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.25%)</title><rect x="1002.7" y="467.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1005.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (124 samples, 0.53%)</title><rect x="1005.6" y="531.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (124 samples, 0.53%)</title><rect x="1005.6" y="515.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.53%)</title><rect x="1005.6" y="499.0" width="6.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1008.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (141 samples, 0.60%)</title><rect x="1011.9" y="595.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (141 samples, 0.60%)</title><rect x="1011.9" y="579.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (141 samples, 0.60%)</title><rect x="1011.9" y="563.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.29%)</title><rect x="1011.9" y="547.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1014.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.31%)</title><rect x="1015.3" y="547.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.3" y="558.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.31%)</title><rect x="1015.3" y="531.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1018.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (651 samples, 2.79%)</title><rect x="1019.0" y="627.0" width="32.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.0" y="638.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (105 samples, 0.45%)</title><rect x="1019.0" y="611.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1022.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (222 samples, 0.95%)</title><rect x="1024.3" y="611.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (222 samples, 0.95%)</title><rect x="1024.3" y="595.0" width="11.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1027.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (324 samples, 1.39%)</title><rect x="1035.5" y="611.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1038.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (324 samples, 1.39%)</title><rect x="1035.5" y="595.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.5" y="606.0"></text>
</g>
<g>
<title>char[] (183 samples, 0.78%)</title><rect x="1035.5" y="579.0" width="9.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1038.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.19%)</title><rect x="1044.8" y="579.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1047.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (97 samples, 0.42%)</title><rect x="1047.0" y="579.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (97 samples, 0.42%)</title><rect x="1047.0" y="563.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (97 samples, 0.42%)</title><rect x="1047.0" y="547.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.0" y="558.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.42%)</title><rect x="1047.0" y="531.0" width="4.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1050.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (36 samples, 0.15%)</title><rect x="1051.9" y="627.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.9" y="638.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="1051.9" y="611.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1054.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (105 samples, 0.45%)</title><rect x="1053.7" y="627.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.45%)</title><rect x="1053.7" y="611.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.45%)</title><rect x="1053.7" y="595.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.21%)</title><rect x="1053.7" y="579.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1056.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.24%)</title><rect x="1056.2" y="579.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.2" y="590.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.24%)</title><rect x="1056.2" y="563.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1059.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,476 samples, 10.60%)</title><rect x="1059.0" y="627.0" width="125.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="638.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,476 samples, 10.60%)</title><rect x="1059.0" y="611.0" width="125.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.0" y="622.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (1,272 samples, 5.44%)</title><rect x="1059.0" y="595.0" width="64.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1062.0" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (407 samples, 1.74%)</title><rect x="1123.2" y="595.0" width="20.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1126.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (797 samples, 3.41%)</title><rect x="1143.8" y="595.0" width="40.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.8" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (797 samples, 3.41%)</title><rect x="1143.8" y="579.0" width="40.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.8" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (797 samples, 3.41%)</title><rect x="1143.8" y="563.0" width="40.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.8" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (797 samples, 3.41%)</title><rect x="1143.8" y="547.0" width="40.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1146.8" y="558.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.read (118 samples, 0.50%)</title><rect x="1184.0" y="643.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.0" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (118 samples, 0.50%)</title><rect x="1184.0" y="627.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (118 samples, 0.50%)</title><rect x="1184.0" y="611.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 0.50%)</title><rect x="1184.0" y="595.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
</g>
</svg>
