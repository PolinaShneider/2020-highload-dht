<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (68,756 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (39,777 samples, 57.85%)</title><rect x="10.0" y="643.0" width="682.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39,777 samples, 57.85%)</title><rect x="10.0" y="627.0" width="682.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39,777 samples, 57.85%)</title><rect x="10.0" y="611.0" width="682.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (11,953 samples, 17.38%)</title><rect x="10.0" y="595.0" width="205.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="606.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,953 samples, 17.38%)</title><rect x="10.0" y="579.0" width="205.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="590.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11,953 samples, 17.38%)</title><rect x="10.0" y="563.0" width="205.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/474961723.apply (11,953 samples, 17.38%)</title><rect x="10.0" y="547.0" width="205.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/http/Multi..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (11,953 samples, 17.38%)</title><rect x="10.0" y="531.0" width="205.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/http/Multi..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (11,953 samples, 17.38%)</title><rect x="10.0" y="515.0" width="205.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/http/Multi..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (8,149 samples, 11.85%)</title><rect x="10.0" y="499.0" width="139.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (8,149 samples, 11.85%)</title><rect x="10.0" y="483.0" width="139.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (8,149 samples, 11.85%)</title><rect x="10.0" y="467.0" width="139.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7,635 samples, 11.10%)</title><rect x="10.0" y="451.0" width="131.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7,635 samples, 11.10%)</title><rect x="10.0" y="435.0" width="131.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,635 samples, 11.10%)</title><rect x="10.0" y="419.0" width="131.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/2019708730.apply (7,635 samples, 11.10%)</title><rect x="10.0" y="403.0" width="131.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7,635 samples, 11.10%)</title><rect x="10.0" y="387.0" width="131.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7,635 samples, 11.10%)</title><rect x="10.0" y="371.0" width="131.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="382.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/68056152.apply (7,635 samples, 11.10%)</title><rect x="10.0" y="355.0" width="131.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="366.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7,635 samples, 11.10%)</title><rect x="10.0" y="339.0" width="131.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="350.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7,635 samples, 11.10%)</title><rect x="10.0" y="323.0" width="131.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7,635 samples, 11.10%)</title><rect x="10.0" y="307.0" width="131.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7,635 samples, 11.10%)</title><rect x="10.0" y="291.0" width="131.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/895303210.apply (7,635 samples, 11.10%)</title><rect x="10.0" y="275.0" width="131.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (7,635 samples, 11.10%)</title><rect x="10.0" y="259.0" width="131.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (7,635 samples, 11.10%)</title><rect x="10.0" y="243.0" width="131.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7,635 samples, 11.10%)</title><rect x="10.0" y="227.0" width="131.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="238.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,120 samples, 1.63%)</title><rect x="10.0" y="211.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,120 samples, 1.63%)</title><rect x="10.0" y="195.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,120 samples, 1.63%)</title><rect x="10.0" y="179.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,120 samples, 1.63%)</title><rect x="10.0" y="163.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,120 samples, 1.63%)</title><rect x="10.0" y="147.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (667 samples, 0.97%)</title><rect x="10.0" y="131.0" width="11.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (453 samples, 0.66%)</title><rect x="21.4" y="131.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Object (453 samples, 0.66%)</title><rect x="21.4" y="115.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="24.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (6,515 samples, 9.48%)</title><rect x="29.2" y="211.0" width="111.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="222.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (6,515 samples, 9.48%)</title><rect x="29.2" y="195.0" width="111.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="206.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (6,344 samples, 9.23%)</title><rect x="29.2" y="179.0" width="108.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.2" y="190.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6,344 samples, 9.23%)</title><rect x="29.2" y="163.0" width="108.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="174.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6,344 samples, 9.23%)</title><rect x="29.2" y="147.0" width="108.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.2" y="158.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,859 samples, 7.07%)</title><rect x="29.2" y="131.0" width="83.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="32.2" y="142.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1,485 samples, 2.16%)</title><rect x="112.6" y="131.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.6" y="142.0">s..</text>
</g>
<g>
<title>java.lang.Object (1,485 samples, 2.16%)</title><rect x="112.6" y="115.0" width="25.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.6" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (171 samples, 0.25%)</title><rect x="138.1" y="179.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (171 samples, 0.25%)</title><rect x="138.1" y="163.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (171 samples, 0.25%)</title><rect x="138.1" y="147.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (171 samples, 0.25%)</title><rect x="138.1" y="131.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (171 samples, 0.25%)</title><rect x="138.1" y="115.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (171 samples, 0.25%)</title><rect x="138.1" y="99.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (171 samples, 0.25%)</title><rect x="138.1" y="83.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (171 samples, 0.25%)</title><rect x="138.1" y="67.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (171 samples, 0.25%)</title><rect x="138.1" y="51.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.1" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (159 samples, 0.23%)</title><rect x="138.1" y="35.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="141.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (514 samples, 0.75%)</title><rect x="141.0" y="451.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (514 samples, 0.75%)</title><rect x="141.0" y="435.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (510 samples, 0.74%)</title><rect x="141.0" y="419.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (510 samples, 0.74%)</title><rect x="141.0" y="403.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (510 samples, 0.74%)</title><rect x="141.0" y="387.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/234148462.apply (510 samples, 0.74%)</title><rect x="141.0" y="371.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (510 samples, 0.74%)</title><rect x="141.0" y="355.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (510 samples, 0.74%)</title><rect x="141.0" y="339.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (510 samples, 0.74%)</title><rect x="141.0" y="323.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (510 samples, 0.74%)</title><rect x="141.0" y="307.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (510 samples, 0.74%)</title><rect x="141.0" y="291.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (510 samples, 0.74%)</title><rect x="141.0" y="275.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (510 samples, 0.74%)</title><rect x="141.0" y="259.0" width="8.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="144.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3,393 samples, 4.93%)</title><rect x="149.9" y="499.0" width="58.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.9" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,478 samples, 2.15%)</title><rect x="149.9" y="483.0" width="25.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="152.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,915 samples, 2.79%)</title><rect x="175.2" y="483.0" width="32.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.2" y="494.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1,915 samples, 2.79%)</title><rect x="175.2" y="467.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.2" y="478.0">su..</text>
</g>
<g>
<title>java.lang.Object (1,915 samples, 2.79%)</title><rect x="175.2" y="451.0" width="32.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.2" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (411 samples, 0.60%)</title><rect x="208.1" y="499.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (411 samples, 0.60%)</title><rect x="208.1" y="483.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (411 samples, 0.60%)</title><rect x="208.1" y="467.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Class (411 samples, 0.60%)</title><rect x="208.1" y="451.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="211.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12,642 samples, 18.39%)</title><rect x="215.1" y="595.0" width="217.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.1" y="606.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12,642 samples, 18.39%)</title><rect x="215.1" y="579.0" width="217.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.1" y="590.0">java/util/concurrent/ArrayBl..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,349 samples, 4.87%)</title><rect x="215.1" y="563.0" width="57.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.1" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3,349 samples, 4.87%)</title><rect x="215.1" y="547.0" width="57.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.1" y="558.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,349 samples, 4.87%)</title><rect x="215.1" y="531.0" width="57.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.1" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,349 samples, 4.87%)</title><rect x="215.1" y="515.0" width="57.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.1" y="526.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3,349 samples, 4.87%)</title><rect x="215.1" y="499.0" width="57.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.1" y="510.0">jdk/in..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (3,349 samples, 4.87%)</title><rect x="215.1" y="483.0" width="57.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="218.1" y="494.0">java.u..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (9,293 samples, 13.52%)</title><rect x="272.6" y="563.0" width="159.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.6" y="574.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (9,293 samples, 13.52%)</title><rect x="272.6" y="547.0" width="159.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.6" y="558.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (9,293 samples, 13.52%)</title><rect x="272.6" y="531.0" width="159.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.6" y="542.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9,293 samples, 13.52%)</title><rect x="272.6" y="515.0" width="159.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.6" y="526.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9,293 samples, 13.52%)</title><rect x="272.6" y="499.0" width="159.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.6" y="510.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9,293 samples, 13.52%)</title><rect x="272.6" y="483.0" width="159.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="494.0">jdk/internal/misc/Un..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9,293 samples, 13.52%)</title><rect x="272.6" y="467.0" width="159.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="275.6" y="478.0">java.util.concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,179 samples, 22.08%)</title><rect x="432.2" y="595.0" width="260.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.2" y="606.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,179 samples, 22.08%)</title><rect x="432.2" y="579.0" width="260.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.2" y="590.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,311 samples, 10.63%)</title><rect x="432.2" y="563.0" width="125.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.2" y="574.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (7,311 samples, 10.63%)</title><rect x="432.2" y="547.0" width="125.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.2" y="558.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,311 samples, 10.63%)</title><rect x="432.2" y="531.0" width="125.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.2" y="542.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5,973 samples, 8.69%)</title><rect x="432.2" y="515.0" width="102.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.2" y="526.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5,973 samples, 8.69%)</title><rect x="432.2" y="499.0" width="102.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.2" y="510.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5,973 samples, 8.69%)</title><rect x="432.2" y="483.0" width="102.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.2" y="494.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5,973 samples, 8.69%)</title><rect x="432.2" y="467.0" width="102.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.2" y="478.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5,973 samples, 8.69%)</title><rect x="432.2" y="451.0" width="102.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.2" y="462.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5,973 samples, 8.69%)</title><rect x="432.2" y="435.0" width="102.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.2" y="446.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5,973 samples, 8.69%)</title><rect x="432.2" y="419.0" width="102.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.2" y="430.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5,973 samples, 8.69%)</title><rect x="432.2" y="403.0" width="102.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.2" y="414.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,973 samples, 8.69%)</title><rect x="432.2" y="387.0" width="102.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.2" y="398.0">jdk/internal..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (5,001 samples, 7.27%)</title><rect x="432.2" y="371.0" width="85.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="435.2" y="382.0">jdk.intern..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (972 samples, 1.41%)</title><rect x="518.0" y="371.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object (972 samples, 1.41%)</title><rect x="518.0" y="355.0" width="16.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="521.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,338 samples, 1.95%)</title><rect x="534.7" y="515.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.7" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,338 samples, 1.95%)</title><rect x="534.7" y="499.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.7" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,338 samples, 1.95%)</title><rect x="534.7" y="483.0" width="22.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,338 samples, 1.95%)</title><rect x="534.7" y="467.0" width="22.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.7" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,338 samples, 1.95%)</title><rect x="534.7" y="451.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,338 samples, 1.95%)</title><rect x="534.7" y="435.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,338 samples, 1.95%)</title><rect x="534.7" y="419.0" width="22.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,338 samples, 1.95%)</title><rect x="534.7" y="403.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.7" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,338 samples, 1.95%)</title><rect x="534.7" y="387.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,338 samples, 1.95%)</title><rect x="534.7" y="371.0" width="22.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.7" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,338 samples, 1.95%)</title><rect x="534.7" y="355.0" width="22.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.7" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,338 samples, 1.95%)</title><rect x="534.7" y="339.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.7" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,338 samples, 1.95%)</title><rect x="534.7" y="323.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.7" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (329 samples, 0.48%)</title><rect x="534.7" y="307.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$421/1707489388.apply (329 samples, 0.48%)</title><rect x="534.7" y="291.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (329 samples, 0.48%)</title><rect x="534.7" y="275.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (329 samples, 0.48%)</title><rect x="534.7" y="259.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (329 samples, 0.48%)</title><rect x="534.7" y="243.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (329 samples, 0.48%)</title><rect x="534.7" y="227.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Class (329 samples, 0.48%)</title><rect x="534.7" y="211.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="537.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,009 samples, 1.47%)</title><rect x="540.3" y="307.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,009 samples, 1.47%)</title><rect x="540.3" y="291.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1145134436.apply (1,009 samples, 1.47%)</title><rect x="540.3" y="275.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,009 samples, 1.47%)</title><rect x="540.3" y="259.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,009 samples, 1.47%)</title><rect x="540.3" y="243.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,009 samples, 1.47%)</title><rect x="540.3" y="227.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,009 samples, 1.47%)</title><rect x="540.3" y="211.0" width="17.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="543.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,868 samples, 11.44%)</title><rect x="557.6" y="563.0" width="135.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.6" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,868 samples, 11.44%)</title><rect x="557.6" y="547.0" width="135.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.6" y="558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,868 samples, 11.44%)</title><rect x="557.6" y="531.0" width="135.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.6" y="542.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (7,868 samples, 11.44%)</title><rect x="557.6" y="515.0" width="135.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.6" y="526.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,868 samples, 11.44%)</title><rect x="557.6" y="499.0" width="135.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.6" y="510.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7,853 samples, 11.42%)</title><rect x="557.6" y="483.0" width="134.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.6" y="494.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7,853 samples, 11.42%)</title><rect x="557.6" y="467.0" width="134.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.6" y="478.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7,853 samples, 11.42%)</title><rect x="557.6" y="451.0" width="134.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.6" y="462.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1893889011.run (7,853 samples, 11.42%)</title><rect x="557.6" y="435.0" width="134.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.6" y="446.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,853 samples, 11.42%)</title><rect x="557.6" y="419.0" width="134.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.6" y="430.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,853 samples, 11.42%)</title><rect x="557.6" y="403.0" width="134.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.6" y="414.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,853 samples, 11.42%)</title><rect x="557.6" y="387.0" width="134.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.6" y="398.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,853 samples, 11.42%)</title><rect x="557.6" y="371.0" width="134.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.6" y="382.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (996 samples, 1.45%)</title><rect x="557.6" y="355.0" width="17.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="560.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6,857 samples, 9.97%)</title><rect x="574.7" y="355.0" width="117.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="366.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6,857 samples, 9.97%)</title><rect x="574.7" y="339.0" width="117.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.7" y="350.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,165 samples, 1.69%)</title><rect x="574.7" y="323.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,165 samples, 1.69%)</title><rect x="574.7" y="307.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,165 samples, 1.69%)</title><rect x="574.7" y="291.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,165 samples, 1.69%)</title><rect x="574.7" y="275.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,165 samples, 1.69%)</title><rect x="574.7" y="259.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (764 samples, 1.11%)</title><rect x="574.7" y="243.0" width="13.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="577.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (401 samples, 0.58%)</title><rect x="587.8" y="243.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object (401 samples, 0.58%)</title><rect x="587.8" y="227.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="590.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5,692 samples, 8.28%)</title><rect x="594.7" y="323.0" width="97.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.7" y="334.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5,692 samples, 8.28%)</title><rect x="594.7" y="307.0" width="97.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.7" y="318.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5,692 samples, 8.28%)</title><rect x="594.7" y="291.0" width="97.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.7" y="302.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,692 samples, 8.28%)</title><rect x="594.7" y="275.0" width="97.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.7" y="286.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,692 samples, 8.28%)</title><rect x="594.7" y="259.0" width="97.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.7" y="270.0">jdk/interna..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,930 samples, 7.17%)</title><rect x="594.7" y="243.0" width="84.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="597.7" y="254.0">jdk.intern..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (762 samples, 1.11%)</title><rect x="679.3" y="243.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object (762 samples, 1.11%)</title><rect x="679.3" y="227.0" width="13.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="682.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (15 samples, 0.02%)</title><rect x="692.4" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (15 samples, 0.02%)</title><rect x="692.4" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15 samples, 0.02%)</title><rect x="692.4" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15 samples, 0.02%)</title><rect x="692.4" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (15 samples, 0.02%)</title><rect x="692.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.02%)</title><rect x="692.4" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.02%)</title><rect x="692.4" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.02%)</title><rect x="692.4" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.02%)</title><rect x="692.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (15 samples, 0.02%)</title><rect x="692.4" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.02%)</title><rect x="692.4" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 0.02%)</title><rect x="692.4" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.02%)</title><rect x="692.4" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,714 samples, 2.49%)</title><rect x="692.7" y="643.0" width="29.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,714 samples, 2.49%)</title><rect x="692.7" y="627.0" width="29.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,714 samples, 2.49%)</title><rect x="692.7" y="611.0" width="29.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,714 samples, 2.49%)</title><rect x="692.7" y="595.0" width="29.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,714 samples, 2.49%)</title><rect x="692.7" y="579.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.7" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,714 samples, 2.49%)</title><rect x="692.7" y="563.0" width="29.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,714 samples, 2.49%)</title><rect x="692.7" y="547.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,714 samples, 2.49%)</title><rect x="692.7" y="531.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,714 samples, 2.49%)</title><rect x="692.7" y="515.0" width="29.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.7" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,714 samples, 2.49%)</title><rect x="692.7" y="499.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.7" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,714 samples, 2.49%)</title><rect x="692.7" y="483.0" width="29.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.7" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,714 samples, 2.49%)</title><rect x="692.7" y="467.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.7" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,714 samples, 2.49%)</title><rect x="692.7" y="451.0" width="29.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.7" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,714 samples, 2.49%)</title><rect x="692.7" y="435.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.7" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,714 samples, 2.49%)</title><rect x="692.7" y="419.0" width="29.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.7" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,714 samples, 2.49%)</title><rect x="692.7" y="403.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.7" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,714 samples, 2.49%)</title><rect x="692.7" y="387.0" width="29.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.7" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,714 samples, 2.49%)</title><rect x="692.7" y="371.0" width="29.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.7" y="382.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,714 samples, 2.49%)</title><rect x="692.7" y="355.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.7" y="366.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,714 samples, 2.49%)</title><rect x="692.7" y="339.0" width="29.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="695.7" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (24,728 samples, 35.96%)</title><rect x="722.1" y="643.0" width="424.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.1" y="654.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,184 samples, 1.72%)</title><rect x="722.1" y="627.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$434/1816691911.accept (1,184 samples, 1.72%)</title><rect x="722.1" y="611.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,184 samples, 1.72%)</title><rect x="722.1" y="595.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,184 samples, 1.72%)</title><rect x="722.1" y="579.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,184 samples, 1.72%)</title><rect x="722.1" y="563.0" width="20.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,184 samples, 1.72%)</title><rect x="722.1" y="547.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,184 samples, 1.72%)</title><rect x="722.1" y="531.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,184 samples, 1.72%)</title><rect x="722.1" y="515.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,184 samples, 1.72%)</title><rect x="722.1" y="499.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,184 samples, 1.72%)</title><rect x="722.1" y="483.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,184 samples, 1.72%)</title><rect x="722.1" y="467.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (1,184 samples, 1.72%)</title><rect x="722.1" y="451.0" width="20.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,184 samples, 1.72%)</title><rect x="722.1" y="435.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,182 samples, 1.72%)</title><rect x="722.1" y="419.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,182 samples, 1.72%)</title><rect x="722.1" y="403.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,182 samples, 1.72%)</title><rect x="722.1" y="387.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,182 samples, 1.72%)</title><rect x="722.1" y="371.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,182 samples, 1.72%)</title><rect x="722.1" y="355.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,182 samples, 1.72%)</title><rect x="722.1" y="339.0" width="20.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,182 samples, 1.72%)</title><rect x="722.1" y="323.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,182 samples, 1.72%)</title><rect x="722.1" y="307.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,182 samples, 1.72%)</title><rect x="722.1" y="291.0" width="20.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,182 samples, 1.72%)</title><rect x="722.1" y="275.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,182 samples, 1.72%)</title><rect x="722.1" y="259.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,182 samples, 1.72%)</title><rect x="722.1" y="243.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,182 samples, 1.72%)</title><rect x="722.1" y="227.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,182 samples, 1.72%)</title><rect x="722.1" y="211.0" width="20.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,182 samples, 1.72%)</title><rect x="722.1" y="195.0" width="20.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="725.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,927 samples, 18.80%)</title><rect x="742.4" y="627.0" width="221.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="745.4" y="638.0">jdk.internal.net.http.HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,969 samples, 5.77%)</title><rect x="964.2" y="627.0" width="68.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$282/549125360.run (1,470 samples, 2.14%)</title><rect x="964.2" y="611.0" width="25.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.2" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,470 samples, 2.14%)</title><rect x="964.2" y="595.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,470 samples, 2.14%)</title><rect x="964.2" y="579.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.2" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,470 samples, 2.14%)</title><rect x="964.2" y="563.0" width="25.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.2" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,470 samples, 2.14%)</title><rect x="964.2" y="547.0" width="25.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.2" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,470 samples, 2.14%)</title><rect x="964.2" y="531.0" width="25.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (1,470 samples, 2.14%)</title><rect x="964.2" y="515.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,470 samples, 2.14%)</title><rect x="964.2" y="499.0" width="25.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.2" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,466 samples, 2.13%)</title><rect x="964.3" y="483.0" width="25.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.3" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,466 samples, 2.13%)</title><rect x="964.3" y="467.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.3" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,466 samples, 2.13%)</title><rect x="964.3" y="451.0" width="25.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,466 samples, 2.13%)</title><rect x="964.3" y="435.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,466 samples, 2.13%)</title><rect x="964.3" y="419.0" width="25.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.3" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,466 samples, 2.13%)</title><rect x="964.3" y="403.0" width="25.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,466 samples, 2.13%)</title><rect x="964.3" y="387.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,466 samples, 2.13%)</title><rect x="964.3" y="371.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.3" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,466 samples, 2.13%)</title><rect x="964.3" y="355.0" width="25.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.3" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,466 samples, 2.13%)</title><rect x="964.3" y="339.0" width="25.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,466 samples, 2.13%)</title><rect x="964.3" y="323.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,466 samples, 2.13%)</title><rect x="964.3" y="307.0" width="25.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,466 samples, 2.13%)</title><rect x="964.3" y="291.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.3" y="302.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,466 samples, 2.13%)</title><rect x="964.3" y="275.0" width="25.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.3" y="286.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,466 samples, 2.13%)</title><rect x="964.3" y="259.0" width="25.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="967.3" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$297/974608749.run (2,499 samples, 3.63%)</title><rect x="989.5" y="611.0" width="42.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.5" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2,499 samples, 3.63%)</title><rect x="989.5" y="595.0" width="42.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.5" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,499 samples, 3.63%)</title><rect x="989.5" y="579.0" width="42.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.5" y="590.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,499 samples, 3.63%)</title><rect x="989.5" y="563.0" width="42.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.5" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,499 samples, 3.63%)</title><rect x="989.5" y="547.0" width="42.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,499 samples, 3.63%)</title><rect x="989.5" y="531.0" width="42.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.5" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,499 samples, 3.63%)</title><rect x="989.5" y="515.0" width="42.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.5" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,499 samples, 3.63%)</title><rect x="989.5" y="499.0" width="42.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.5" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,499 samples, 3.63%)</title><rect x="989.5" y="483.0" width="42.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.5" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,499 samples, 3.63%)</title><rect x="989.5" y="467.0" width="42.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.5" y="478.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,499 samples, 3.63%)</title><rect x="989.5" y="451.0" width="42.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.5" y="462.0">jdk/..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,499 samples, 3.63%)</title><rect x="989.5" y="435.0" width="42.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="992.5" y="446.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,014 samples, 1.47%)</title><rect x="1032.4" y="627.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,014 samples, 1.47%)</title><rect x="1032.4" y="611.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,014 samples, 1.47%)</title><rect x="1032.4" y="595.0" width="17.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1035.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3,677 samples, 5.35%)</title><rect x="1049.8" y="627.0" width="63.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.8" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,677 samples, 5.35%)</title><rect x="1049.8" y="611.0" width="63.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1052.8" y="622.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,897 samples, 2.76%)</title><rect x="1112.9" y="627.0" width="32.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.9" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,897 samples, 2.76%)</title><rect x="1112.9" y="611.0" width="32.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.9" y="622.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1,897 samples, 2.76%)</title><rect x="1112.9" y="595.0" width="32.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.9" y="606.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1,897 samples, 2.76%)</title><rect x="1112.9" y="579.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.9" y="590.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (1,897 samples, 2.76%)</title><rect x="1112.9" y="563.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.9" y="574.0">su..</text>
</g>
<g>
<title>java.lang.Object (1,897 samples, 2.76%)</title><rect x="1112.9" y="547.0" width="32.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1115.9" y="558.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (60 samples, 0.09%)</title><rect x="1145.4" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (60 samples, 0.09%)</title><rect x="1145.4" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (60 samples, 0.09%)</title><rect x="1145.4" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (60 samples, 0.09%)</title><rect x="1145.4" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (60 samples, 0.09%)</title><rect x="1145.4" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.4" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (60 samples, 0.09%)</title><rect x="1145.4" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1148.4" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,537 samples, 3.69%)</title><rect x="1146.5" y="643.0" width="43.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.5" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,537 samples, 3.69%)</title><rect x="1146.5" y="627.0" width="43.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.5" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,537 samples, 3.69%)</title><rect x="1146.5" y="611.0" width="43.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.5" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,537 samples, 3.69%)</title><rect x="1146.5" y="595.0" width="43.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.5" y="606.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,537 samples, 3.69%)</title><rect x="1146.5" y="579.0" width="43.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.5" y="590.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,537 samples, 3.69%)</title><rect x="1146.5" y="563.0" width="43.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.5" y="574.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2,537 samples, 3.69%)</title><rect x="1146.5" y="547.0" width="43.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.5" y="558.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (2,537 samples, 3.69%)</title><rect x="1146.5" y="531.0" width="43.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.5" y="542.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (2,537 samples, 3.69%)</title><rect x="1146.5" y="515.0" width="43.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.5" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (2,537 samples, 3.69%)</title><rect x="1146.5" y="499.0" width="43.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.5" y="510.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (881 samples, 1.28%)</title><rect x="1146.5" y="483.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (881 samples, 1.28%)</title><rect x="1146.5" y="467.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (881 samples, 1.28%)</title><rect x="1146.5" y="451.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (881 samples, 1.28%)</title><rect x="1146.5" y="435.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (881 samples, 1.28%)</title><rect x="1146.5" y="419.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (881 samples, 1.28%)</title><rect x="1146.5" y="403.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (881 samples, 1.28%)</title><rect x="1146.5" y="387.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (881 samples, 1.28%)</title><rect x="1146.5" y="371.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (881 samples, 1.28%)</title><rect x="1146.5" y="355.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (881 samples, 1.28%)</title><rect x="1146.5" y="339.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (881 samples, 1.28%)</title><rect x="1146.5" y="323.0" width="15.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1149.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="483.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.6" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="467.0" width="28.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.6" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="451.0" width="28.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.6" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="435.0" width="28.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.6" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="419.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.6" y="430.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,656 samples, 2.41%)</title><rect x="1161.6" y="403.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.6" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,656 samples, 2.41%)</title><rect x="1161.6" y="387.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.6" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,656 samples, 2.41%)</title><rect x="1161.6" y="371.0" width="28.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.6" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,656 samples, 2.41%)</title><rect x="1161.6" y="355.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.6" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,656 samples, 2.41%)</title><rect x="1161.6" y="339.0" width="28.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.6" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,656 samples, 2.41%)</title><rect x="1161.6" y="323.0" width="28.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,656 samples, 2.41%)</title><rect x="1161.6" y="307.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,656 samples, 2.41%)</title><rect x="1161.6" y="291.0" width="28.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.6" y="302.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,656 samples, 2.41%)</title><rect x="1161.6" y="275.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.6" y="286.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,656 samples, 2.41%)</title><rect x="1161.6" y="259.0" width="28.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1164.6" y="270.0">ja..</text>
</g>
</g>
</svg>
