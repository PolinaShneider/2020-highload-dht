<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (23,500 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (12,450 samples, 52.98%)</title><rect x="10.0" y="803.0" width="625.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,450 samples, 52.98%)</title><rect x="10.0" y="787.0" width="625.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,450 samples, 52.98%)</title><rect x="10.0" y="771.0" width="625.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,770 samples, 41.57%)</title><rect x="10.0" y="755.0" width="490.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,114 samples, 9.00%)</title><rect x="10.0" y="739.0" width="106.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,114 samples, 9.00%)</title><rect x="10.0" y="723.0" width="106.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (8 samples, 0.03%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/474961723.apply (2,106 samples, 8.96%)</title><rect x="10.4" y="707.0" width="105.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,106 samples, 8.96%)</title><rect x="10.4" y="691.0" width="105.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.4" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,106 samples, 8.96%)</title><rect x="10.4" y="675.0" width="105.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.4" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="10.4" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="10.4" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$421/1707489388.get$Lambda (7 samples, 0.03%)</title><rect x="10.4" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$421 (7 samples, 0.03%)</title><rect x="10.4" y="611.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (24 samples, 0.10%)</title><rect x="10.9" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24 samples, 0.10%)</title><rect x="10.9" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (9 samples, 0.04%)</title><rect x="10.9" y="627.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="11.3" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="11.3" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="11.3" y="595.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.18%)</title><rect x="12.1" y="659.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.18%)</title><rect x="12.1" y="643.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (23 samples, 0.10%)</title><rect x="12.1" y="627.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="15.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="13.2" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="13.2" y="611.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="13.2" y="595.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,992 samples, 8.48%)</title><rect x="14.2" y="659.0" width="100.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.2" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,992 samples, 8.48%)</title><rect x="14.2" y="643.0" width="100.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.2" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,992 samples, 8.48%)</title><rect x="14.2" y="627.0" width="100.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.2" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="14.2" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="14.2" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.get$Lambda (5 samples, 0.02%)</title><rect x="14.2" y="579.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (5 samples, 0.02%)</title><rect x="14.2" y="563.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="17.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/68056152.get$Lambda (6 samples, 0.03%)</title><rect x="14.4" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$197 (6 samples, 0.03%)</title><rect x="14.4" y="563.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,270 samples, 5.40%)</title><rect x="14.9" y="611.0" width="63.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,270 samples, 5.40%)</title><rect x="14.9" y="595.0" width="63.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.9" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,262 samples, 5.37%)</title><rect x="14.9" y="579.0" width="63.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.9" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/2019708730.apply (1,262 samples, 5.37%)</title><rect x="14.9" y="563.0" width="63.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,262 samples, 5.37%)</title><rect x="14.9" y="547.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,262 samples, 5.37%)</title><rect x="14.9" y="531.0" width="63.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.9" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/68056152.apply (1,262 samples, 5.37%)</title><rect x="14.9" y="515.0" width="63.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,262 samples, 5.37%)</title><rect x="14.9" y="499.0" width="63.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.9" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="14.9" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="14.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/20756969.get$Lambda (6 samples, 0.03%)</title><rect x="14.9" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$413 (6 samples, 0.03%)</title><rect x="14.9" y="435.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="17.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (32 samples, 0.14%)</title><rect x="15.2" y="483.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (32 samples, 0.14%)</title><rect x="15.2" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (18 samples, 0.08%)</title><rect x="15.2" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.03%)</title><rect x="16.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/20756969.apply (7 samples, 0.03%)</title><rect x="16.1" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.03%)</title><rect x="16.1" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.03%)</title><rect x="16.1" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.apply (7 samples, 0.03%)</title><rect x="16.1" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.03%)</title><rect x="16.1" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.03%)</title><rect x="16.1" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="16.4" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="16.4" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="16.4" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (18 samples, 0.08%)</title><rect x="16.8" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18 samples, 0.08%)</title><rect x="16.8" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (8 samples, 0.03%)</title><rect x="16.8" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="17.2" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="17.2" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="17.2" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="20.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,206 samples, 5.13%)</title><rect x="17.7" y="483.0" width="60.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="17.7" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="17.7" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,039 samples, 4.42%)</title><rect x="18.0" y="467.0" width="52.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.0" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,039 samples, 4.42%)</title><rect x="18.0" y="451.0" width="52.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.0" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (9 samples, 0.04%)</title><rect x="18.0" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/895303210.apply (1,005 samples, 4.28%)</title><rect x="18.5" y="435.0" width="50.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.5" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,005 samples, 4.28%)</title><rect x="18.5" y="419.0" width="50.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="18.5" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="18.5" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$439/703373061.get$Lambda (7 samples, 0.03%)</title><rect x="18.5" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$439 (7 samples, 0.03%)</title><rect x="18.5" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.07%)</title><rect x="18.8" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.07%)</title><rect x="18.8" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.03%)</title><rect x="18.8" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="21.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="19.1" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="19.1" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="19.1" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="22.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="19.6" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="22.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.08%)</title><rect x="20.0" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (6 samples, 0.03%)</title><rect x="20.0" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="23.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.06%)</title><rect x="20.3" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (10 samples, 0.04%)</title><rect x="20.3" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.04%)</title><rect x="20.3" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.04%)</title><rect x="20.3" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.04%)</title><rect x="20.3" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.04%)</title><rect x="20.3" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (26 samples, 0.11%)</title><rect x="20.9" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (26 samples, 0.11%)</title><rect x="20.9" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (22 samples, 0.09%)</title><rect x="21.1" y="371.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (22 samples, 0.09%)</title><rect x="21.1" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (17 samples, 0.07%)</title><rect x="21.1" y="339.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (930 samples, 3.96%)</title><rect x="22.3" y="403.0" width="46.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.3" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (10 samples, 0.04%)</title><rect x="22.3" y="387.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="25.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (18 samples, 0.08%)</title><rect x="22.8" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="22.8" y="371.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="23.4" y="371.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (92 samples, 0.39%)</title><rect x="23.7" y="387.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (92 samples, 0.39%)</title><rect x="23.7" y="371.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (92 samples, 0.39%)</title><rect x="23.7" y="355.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.7" y="366.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.39%)</title><rect x="23.7" y="339.0" width="4.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="26.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (27 samples, 0.11%)</title><rect x="28.3" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (27 samples, 0.11%)</title><rect x="28.3" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.3" y="382.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.11%)</title><rect x="28.3" y="355.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="31.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (79 samples, 0.34%)</title><rect x="29.6" y="387.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.34%)</title><rect x="29.6" y="371.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.34%)</title><rect x="29.6" y="355.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.6" y="366.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.34%)</title><rect x="29.6" y="339.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="32.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.08%)</title><rect x="33.6" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.08%)</title><rect x="33.6" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.08%)</title><rect x="33.6" y="355.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="36.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.03%)</title><rect x="34.6" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.6" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.03%)</title><rect x="34.6" y="371.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="37.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (576 samples, 2.45%)</title><rect x="34.9" y="387.0" width="28.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.9" y="398.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (11 samples, 0.05%)</title><rect x="34.9" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="34.9" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="34.9" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$446/1530018831.get$Lambda (11 samples, 0.05%)</title><rect x="34.9" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$446 (11 samples, 0.05%)</title><rect x="34.9" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="37.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (279 samples, 1.19%)</title><rect x="35.5" y="371.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (140 samples, 0.60%)</title><rect x="35.5" y="355.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (140 samples, 0.60%)</title><rect x="35.5" y="339.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (140 samples, 0.60%)</title><rect x="35.5" y="323.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (140 samples, 0.60%)</title><rect x="35.5" y="307.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.5" y="318.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.60%)</title><rect x="35.5" y="291.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.5" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (26 samples, 0.11%)</title><rect x="42.5" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (26 samples, 0.11%)</title><rect x="42.5" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (26 samples, 0.11%)</title><rect x="42.5" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (26 samples, 0.11%)</title><rect x="42.5" y="307.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (17 samples, 0.07%)</title><rect x="43.8" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.8" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (10 samples, 0.04%)</title><rect x="43.8" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (7 samples, 0.03%)</title><rect x="44.3" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (7 samples, 0.03%)</title><rect x="44.3" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="47.3" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$446/1530018831.test (96 samples, 0.41%)</title><rect x="44.6" y="355.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.6" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (96 samples, 0.41%)</title><rect x="44.6" y="339.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$87/888473870.test (96 samples, 0.41%)</title><rect x="44.6" y="323.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (96 samples, 0.41%)</title><rect x="44.6" y="307.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.6" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1714550218.test (96 samples, 0.41%)</title><rect x="44.6" y="291.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.6" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (96 samples, 0.41%)</title><rect x="44.6" y="275.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/718068661.test (96 samples, 0.41%)</title><rect x="44.6" y="259.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (96 samples, 0.41%)</title><rect x="44.6" y="243.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (96 samples, 0.41%)</title><rect x="44.6" y="227.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.41%)</title><rect x="44.6" y="211.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.23%)</title><rect x="44.6" y="195.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="47.6" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.18%)</title><rect x="47.4" y="195.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.4" y="206.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.18%)</title><rect x="47.4" y="179.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="50.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (286 samples, 1.22%)</title><rect x="49.5" y="371.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (286 samples, 1.22%)</title><rect x="49.5" y="355.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (286 samples, 1.22%)</title><rect x="49.5" y="339.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.5" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.03%)</title><rect x="49.5" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="52.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="49.9" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="52.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.06%)</title><rect x="50.2" y="323.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.03%)</title><rect x="50.9" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="53.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="51.3" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="51.3" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (7 samples, 0.03%)</title><rect x="51.3" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (7 samples, 0.03%)</title><rect x="51.3" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="54.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.03%)</title><rect x="51.6" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.6" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.03%)</title><rect x="51.6" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (217 samples, 0.92%)</title><rect x="52.0" y="323.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (217 samples, 0.92%)</title><rect x="52.0" y="307.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (217 samples, 0.92%)</title><rect x="52.0" y="291.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.18%)</title><rect x="52.0" y="275.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.18%)</title><rect x="52.0" y="259.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (43 samples, 0.18%)</title><rect x="52.0" y="243.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.0" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (43 samples, 0.18%)</title><rect x="52.0" y="227.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="55.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (17 samples, 0.07%)</title><rect x="54.2" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (17 samples, 0.07%)</title><rect x="54.2" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (17 samples, 0.07%)</title><rect x="54.2" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="54.2" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="54.2" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="54.2" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="54.2" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="54.2" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="54.2" y="147.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="57.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (82 samples, 0.35%)</title><rect x="55.0" y="275.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.0" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (82 samples, 0.35%)</title><rect x="55.0" y="259.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (46 samples, 0.20%)</title><rect x="55.0" y="243.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.20%)</title><rect x="55.0" y="227.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.0" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.20%)</title><rect x="55.0" y="211.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="58.0" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.15%)</title><rect x="57.4" y="243.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.15%)</title><rect x="57.4" y="227.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (75 samples, 0.32%)</title><rect x="59.2" y="275.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (75 samples, 0.32%)</title><rect x="59.2" y="259.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (18 samples, 0.08%)</title><rect x="62.9" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (18 samples, 0.08%)</title><rect x="62.9" y="307.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="65.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (23 samples, 0.10%)</title><rect x="63.8" y="387.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (6 samples, 0.03%)</title><rect x="63.8" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.8" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="63.8" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="66.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.07%)</title><rect x="64.1" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (17 samples, 0.07%)</title><rect x="64.1" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1011279482.invoke (17 samples, 0.07%)</title><rect x="64.1" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.07%)</title><rect x="64.1" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.04%)</title><rect x="64.1" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="64.1" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="67.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.03%)</title><rect x="64.6" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.03%)</title><rect x="64.6" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.6" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="64.6" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="67.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (23 samples, 0.10%)</title><rect x="65.0" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (23 samples, 0.10%)</title><rect x="65.0" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.10%)</title><rect x="65.0" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (23 samples, 0.10%)</title><rect x="65.0" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1011279482.invoke (23 samples, 0.10%)</title><rect x="65.0" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.10%)</title><rect x="65.0" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.03%)</title><rect x="65.0" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="65.0" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="68.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.07%)</title><rect x="65.3" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.07%)</title><rect x="65.3" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.3" y="286.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="65.3" y="259.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="68.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (56 samples, 0.24%)</title><rect x="66.1" y="387.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="66.1" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.06%)</title><rect x="66.7" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="66.7" y="355.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.13%)</title><rect x="67.4" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.4" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (31 samples, 0.13%)</title><rect x="67.4" y="355.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.11%)</title><rect x="68.9" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.11%)</title><rect x="68.9" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.11%)</title><rect x="68.9" y="403.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (36 samples, 0.15%)</title><rect x="70.2" y="467.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="73.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="72.0" y="467.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="75.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (116 samples, 0.49%)</title><rect x="72.4" y="467.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="72.4" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="72.4" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$370/1247519959.get$Lambda (8 samples, 0.03%)</title><rect x="72.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$370 (8 samples, 0.03%)</title><rect x="72.6" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="75.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (8 samples, 0.03%)</title><rect x="73.0" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="76.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (7 samples, 0.03%)</title><rect x="73.4" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (15 samples, 0.06%)</title><rect x="73.7" y="451.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (38 samples, 0.16%)</title><rect x="74.5" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.16%)</title><rect x="74.5" y="435.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.16%)</title><rect x="74.5" y="419.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 0.16%)</title><rect x="74.5" y="403.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (38 samples, 0.16%)</title><rect x="74.5" y="387.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (38 samples, 0.16%)</title><rect x="74.5" y="371.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (38 samples, 0.16%)</title><rect x="74.5" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (38 samples, 0.16%)</title><rect x="74.5" y="339.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (38 samples, 0.16%)</title><rect x="74.5" y="323.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.09%)</title><rect x="74.5" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.09%)</title><rect x="74.5" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$378/892894604.get$Lambda (7 samples, 0.03%)</title><rect x="74.5" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$378 (7 samples, 0.03%)</title><rect x="74.5" y="259.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="77.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$383/883977638.get$Lambda (13 samples, 0.06%)</title><rect x="74.8" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$383 (13 samples, 0.06%)</title><rect x="74.8" y="259.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="77.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (7 samples, 0.03%)</title><rect x="75.5" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="78.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (11 samples, 0.05%)</title><rect x="75.8" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (11 samples, 0.05%)</title><rect x="75.8" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (11 samples, 0.05%)</title><rect x="75.8" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.05%)</title><rect x="75.8" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="78.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (30 samples, 0.13%)</title><rect x="76.4" y="451.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.04%)</title><rect x="76.4" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (11 samples, 0.05%)</title><rect x="76.8" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="79.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="77.4" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.4" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="77.4" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.4" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="77.4" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (7 samples, 0.03%)</title><rect x="77.9" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="77.9" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="80.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="78.2" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="78.2" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="78.2" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="81.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (19 samples, 0.08%)</title><rect x="78.6" y="611.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (19 samples, 0.08%)</title><rect x="78.6" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (9 samples, 0.04%)</title><rect x="78.6" y="579.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="81.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="79.1" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="79.1" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="79.1" y="547.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="82.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (689 samples, 2.93%)</title><rect x="79.6" y="611.0" width="34.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.6" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="79.6" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="79.6" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$337/1386664033.get$Lambda (9 samples, 0.04%)</title><rect x="79.6" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$337 (9 samples, 0.04%)</title><rect x="79.6" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="82.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (24 samples, 0.10%)</title><rect x="80.2" y="595.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (24 samples, 0.10%)</title><rect x="80.2" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/2092764557.apply (12 samples, 0.05%)</title><rect x="80.2" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (12 samples, 0.05%)</title><rect x="80.2" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.05%)</title><rect x="80.2" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="80.2" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="80.8" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="80.8" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="80.8" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="83.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (650 samples, 2.77%)</title><rect x="81.6" y="595.0" width="32.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.6" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="81.6" y="579.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="81.6" y="563.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/234148462.get$Lambda (5 samples, 0.02%)</title><rect x="81.6" y="547.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$208 (5 samples, 0.02%)</title><rect x="81.6" y="531.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="84.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (614 samples, 2.61%)</title><rect x="81.8" y="579.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.8" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (614 samples, 2.61%)</title><rect x="81.8" y="563.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.8" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (608 samples, 2.59%)</title><rect x="81.8" y="547.0" width="30.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.8" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/234148462.apply (608 samples, 2.59%)</title><rect x="81.8" y="531.0" width="30.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.8" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (608 samples, 2.59%)</title><rect x="81.8" y="515.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (608 samples, 2.59%)</title><rect x="81.8" y="499.0" width="30.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.8" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="81.8" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="81.8" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$331/604314710.get$Lambda (5 samples, 0.02%)</title><rect x="81.8" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$331 (5 samples, 0.02%)</title><rect x="81.8" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="84.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (246 samples, 1.05%)</title><rect x="82.1" y="483.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (246 samples, 1.05%)</title><rect x="82.1" y="467.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (246 samples, 1.05%)</title><rect x="82.1" y="451.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$331/604314710.apply (233 samples, 0.99%)</title><rect x="82.1" y="435.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (233 samples, 0.99%)</title><rect x="82.1" y="419.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (233 samples, 0.99%)</title><rect x="82.1" y="403.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (233 samples, 0.99%)</title><rect x="82.1" y="387.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (164 samples, 0.70%)</title><rect x="82.1" y="371.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.1" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (55 samples, 0.23%)</title><rect x="82.1" y="355.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="82.1" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="85.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.10%)</title><rect x="82.4" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="82.4" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="82.4" y="307.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (26 samples, 0.11%)</title><rect x="83.5" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.5" y="350.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="83.5" y="323.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="86.5" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (5 samples, 0.02%)</title><rect x="84.8" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.8" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (5 samples, 0.02%)</title><rect x="84.8" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="87.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (75 samples, 0.32%)</title><rect x="85.1" y="355.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (5 samples, 0.02%)</title><rect x="85.1" y="339.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="88.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (57 samples, 0.24%)</title><rect x="85.3" y="339.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (57 samples, 0.24%)</title><rect x="85.3" y="323.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (33 samples, 0.14%)</title><rect x="85.3" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.14%)</title><rect x="85.3" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$75/1932274274.get$Lambda (33 samples, 0.14%)</title><rect x="85.3" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$75 (33 samples, 0.14%)</title><rect x="85.3" y="259.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="88.3" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 0.10%)</title><rect x="87.0" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$75/1932274274.run (24 samples, 0.10%)</title><rect x="87.0" y="291.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (24 samples, 0.10%)</title><rect x="87.0" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.0" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (24 samples, 0.10%)</title><rect x="87.0" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (24 samples, 0.10%)</title><rect x="87.0" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (24 samples, 0.10%)</title><rect x="87.0" y="227.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (13 samples, 0.06%)</title><rect x="88.2" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (13 samples, 0.06%)</title><rect x="88.2" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.2" y="334.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.06%)</title><rect x="88.2" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="91.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (29 samples, 0.12%)</title><rect x="88.8" y="355.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.8" y="366.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="88.8" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="91.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.05%)</title><rect x="89.7" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.05%)</title><rect x="89.7" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="89.7" y="307.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="92.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (69 samples, 0.29%)</title><rect x="90.3" y="371.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.09%)</title><rect x="90.3" y="355.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="93.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (23 samples, 0.10%)</title><rect x="91.3" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.10%)</title><rect x="91.3" y="339.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="94.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.11%)</title><rect x="92.4" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.11%)</title><rect x="92.4" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="93.8" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="93.8" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="93.8" y="403.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="96.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (357 samples, 1.52%)</title><rect x="94.4" y="483.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (31 samples, 0.13%)</title><rect x="94.4" y="467.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="97.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (318 samples, 1.35%)</title><rect x="96.0" y="467.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.0" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (15 samples, 0.06%)</title><rect x="96.2" y="451.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (10 samples, 0.04%)</title><rect x="96.9" y="451.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (11 samples, 0.05%)</title><rect x="97.4" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (11 samples, 0.05%)</title><rect x="97.4" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.4" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (11 samples, 0.05%)</title><rect x="97.4" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="100.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (9 samples, 0.04%)</title><rect x="98.0" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.04%)</title><rect x="98.0" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="101.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (20 samples, 0.09%)</title><rect x="98.4" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="101.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (15 samples, 0.06%)</title><rect x="99.4" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="102.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (20 samples, 0.09%)</title><rect x="100.2" y="451.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="103.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="101.2" y="451.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="104.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (94 samples, 0.40%)</title><rect x="102.0" y="451.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (11 samples, 0.05%)</title><rect x="102.0" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="105.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (6 samples, 0.03%)</title><rect x="102.8" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="105.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="103.1" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="103.1" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.get$Lambda (5 samples, 0.02%)</title><rect x="103.1" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$319 (5 samples, 0.02%)</title><rect x="103.1" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="106.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (9 samples, 0.04%)</title><rect x="103.4" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.04%)</title><rect x="103.4" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="106.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (7 samples, 0.03%)</title><rect x="103.8" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="106.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="104.2" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="107.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (40 samples, 0.17%)</title><rect x="104.7" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.03%)</title><rect x="104.7" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="107.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (8 samples, 0.03%)</title><rect x="105.1" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (7 samples, 0.03%)</title><rect x="105.5" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.03%)</title><rect x="105.5" y="403.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="108.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (17 samples, 0.07%)</title><rect x="105.9" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.03%)</title><rect x="105.9" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="108.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (7 samples, 0.03%)</title><rect x="106.4" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (66 samples, 0.28%)</title><rect x="106.7" y="451.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (6 samples, 0.03%)</title><rect x="106.7" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="109.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.04%)</title><rect x="107.3" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.04%)</title><rect x="107.3" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="110.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (45 samples, 0.19%)</title><rect x="107.8" y="435.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.03%)</title><rect x="107.8" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="110.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (9 samples, 0.04%)</title><rect x="108.2" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="111.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (5 samples, 0.02%)</title><rect x="108.6" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.02%)</title><rect x="108.6" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="111.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (23 samples, 0.10%)</title><rect x="108.9" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.03%)</title><rect x="108.9" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="111.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (10 samples, 0.04%)</title><rect x="109.2" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="112.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (6 samples, 0.03%)</title><rect x="109.7" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="112.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (10 samples, 0.04%)</title><rect x="110.0" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.04%)</title><rect x="110.0" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (7 samples, 0.03%)</title><rect x="110.2" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.03%)</title><rect x="110.2" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.03%)</title><rect x="110.2" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (7 samples, 0.03%)</title><rect x="110.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="110.2" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="113.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (28 samples, 0.12%)</title><rect x="110.5" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (6 samples, 0.03%)</title><rect x="110.5" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="110.5" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$231/2052440742.get$Lambda (6 samples, 0.03%)</title><rect x="110.5" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$231 (6 samples, 0.03%)</title><rect x="110.5" y="387.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="113.5" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22 samples, 0.09%)</title><rect x="110.8" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$231/2052440742.run (22 samples, 0.09%)</title><rect x="110.8" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (22 samples, 0.09%)</title><rect x="110.8" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.8" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (12 samples, 0.05%)</title><rect x="110.8" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="113.8" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.04%)</title><rect x="111.4" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (5 samples, 0.02%)</title><rect x="111.4" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.02%)</title><rect x="111.7" y="371.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="111.7" y="355.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="111.7" y="339.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.02%)</title><rect x="111.7" y="323.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (5 samples, 0.02%)</title><rect x="111.7" y="307.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="114.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.03%)</title><rect x="111.9" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="111.9" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="114.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="112.3" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="112.3" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="112.3" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="115.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.03%)</title><rect x="112.6" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.03%)</title><rect x="112.6" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="112.6" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="112.6" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="112.6" y="515.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="115.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (24 samples, 0.10%)</title><rect x="113.0" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (21 samples, 0.09%)</title><rect x="113.0" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (21 samples, 0.09%)</title><rect x="113.0" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1377865909.linkToTargetMethod (21 samples, 0.09%)</title><rect x="113.0" y="531.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1557127930.invoke (21 samples, 0.09%)</title><rect x="113.0" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1456441596.invoke (21 samples, 0.09%)</title><rect x="113.0" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="113.0" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.03%)</title><rect x="113.0" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="113.0" y="451.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="116.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.06%)</title><rect x="113.3" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.06%)</title><rect x="113.3" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.3" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="113.3" y="435.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="116.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (12 samples, 0.05%)</title><rect x="114.2" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (12 samples, 0.05%)</title><rect x="114.2" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.05%)</title><rect x="114.2" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.2" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.05%)</title><rect x="114.2" y="611.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="117.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (27 samples, 0.11%)</title><rect x="114.8" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.8" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (17 samples, 0.07%)</title><rect x="114.8" y="643.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="117.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (10 samples, 0.04%)</title><rect x="115.6" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (10 samples, 0.04%)</title><rect x="115.6" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="115.8" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.8" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (6 samples, 0.03%)</title><rect x="115.8" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.8" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="115.8" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.8" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="115.8" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.8" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (6 samples, 0.03%)</title><rect x="115.8" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="115.8" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.8" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.03%)</title><rect x="115.8" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.03%)</title><rect x="115.8" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.8" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (6 samples, 0.03%)</title><rect x="115.8" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="118.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$120/308330111.get (7,656 samples, 32.58%)</title><rect x="116.1" y="739.0" width="384.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.1" y="750.0">ru/mail/polis/service/ReplicationHandler$$Lambda$120..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$1 (7,656 samples, 32.58%)</title><rect x="116.1" y="723.0" width="384.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.1" y="734.0">ru/mail/polis/service/ReplicationHandler.lambda$mult..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,331 samples, 5.66%)</title><rect x="116.1" y="707.0" width="66.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.1" y="718.0">java/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,331 samples, 5.66%)</title><rect x="116.1" y="691.0" width="66.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.1" y="702.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,331 samples, 5.66%)</title><rect x="116.1" y="675.0" width="66.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.1" y="686.0">java.ni..</text>
</g>
<g>
<title>one.nio.http.Response (640 samples, 2.72%)</title><rect x="183.0" y="707.0" width="32.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="186.0" y="718.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,755 samples, 11.72%)</title><rect x="215.1" y="707.0" width="138.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.1" y="718.0">one/nio/http/Resp..</text>
</g>
<g>
<title>byte[] (1,039 samples, 4.42%)</title><rect x="215.1" y="691.0" width="52.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="218.1" y="702.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (958 samples, 4.08%)</title><rect x="267.3" y="691.0" width="48.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="270.3" y="702.0">java..</text>
</g>
<g>
<title>java.lang.String (758 samples, 3.23%)</title><rect x="315.4" y="691.0" width="38.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="318.4" y="702.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsertValue (1,960 samples, 8.34%)</title><rect x="353.5" y="707.0" width="98.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.5" y="718.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/Value.getValueBytes (1,123 samples, 4.78%)</title><rect x="353.5" y="691.0" width="56.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.5" y="702.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,123 samples, 4.78%)</title><rect x="353.5" y="675.0" width="56.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.5" y="686.0">java/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,123 samples, 4.78%)</title><rect x="353.5" y="659.0" width="56.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.5" y="670.0">java/n..</text>
</g>
<g>
<title>byte[] (1,123 samples, 4.78%)</title><rect x="353.5" y="643.0" width="56.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="356.5" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (837 samples, 3.56%)</title><rect x="409.8" y="691.0" width="42.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.8" y="702.0">ru/m..</text>
</g>
<g>
<title>byte[] (837 samples, 3.56%)</title><rect x="409.8" y="675.0" width="42.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="412.8" y="686.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (970 samples, 4.13%)</title><rect x="451.9" y="707.0" width="48.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.9" y="718.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (970 samples, 4.13%)</title><rect x="451.9" y="691.0" width="48.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.9" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (970 samples, 4.13%)</title><rect x="451.9" y="675.0" width="48.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.9" y="686.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (970 samples, 4.13%)</title><rect x="451.9" y="659.0" width="48.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.9" y="670.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (970 samples, 4.13%)</title><rect x="451.9" y="643.0" width="48.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.9" y="654.0">java..</text>
</g>
<g>
<title>byte[] (970 samples, 4.13%)</title><rect x="451.9" y="627.0" width="48.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="454.9" y="638.0">byte[]</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (32 samples, 0.14%)</title><rect x="500.6" y="755.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.14%)</title><rect x="500.6" y="739.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$186/1205736169.apply (32 samples, 0.14%)</title><rect x="500.6" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.lambda$multipleUpsert$2 (32 samples, 0.14%)</title><rect x="500.6" y="707.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.6" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.05%)</title><rect x="500.6" y="691.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="503.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.09%)</title><rect x="501.1" y="691.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.1" y="702.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="501.1" y="675.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="501.5" y="675.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="504.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="501.8" y="675.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="504.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (941 samples, 4.00%)</title><rect x="502.2" y="755.0" width="47.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.2" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (941 samples, 4.00%)</title><rect x="502.2" y="739.0" width="47.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.2" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (938 samples, 3.99%)</title><rect x="502.2" y="723.0" width="47.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.2" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (938 samples, 3.99%)</title><rect x="502.2" y="707.0" width="47.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.2" y="718.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (938 samples, 3.99%)</title><rect x="502.2" y="691.0" width="47.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="505.2" y="702.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$445/383899907.run (424 samples, 1.80%)</title><rect x="549.4" y="755.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (424 samples, 1.80%)</title><rect x="549.4" y="739.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.4" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (424 samples, 1.80%)</title><rect x="549.4" y="723.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (424 samples, 1.80%)</title><rect x="549.4" y="707.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.4" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 1.80%)</title><rect x="549.4" y="691.0" width="21.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.4" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 1.80%)</title><rect x="549.4" y="675.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.4" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (424 samples, 1.80%)</title><rect x="549.4" y="659.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.4" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (424 samples, 1.80%)</title><rect x="549.4" y="643.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.4" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (424 samples, 1.80%)</title><rect x="549.4" y="627.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.4" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (424 samples, 1.80%)</title><rect x="549.4" y="611.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.4" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (424 samples, 1.80%)</title><rect x="549.4" y="595.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.4" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (372 samples, 1.58%)</title><rect x="549.4" y="579.0" width="18.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="549.4" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="549.4" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$454/401574555.get$Lambda (5 samples, 0.02%)</title><rect x="549.4" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$454 (5 samples, 0.02%)</title><rect x="549.4" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="552.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$488/511336869.get$Lambda (9 samples, 0.04%)</title><rect x="549.7" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$488 (9 samples, 0.04%)</title><rect x="549.7" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="552.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$493/1845279560.get$Lambda (5 samples, 0.02%)</title><rect x="550.1" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$493 (5 samples, 0.02%)</title><rect x="550.1" y="515.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="553.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (353 samples, 1.50%)</title><rect x="550.4" y="563.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (12 samples, 0.05%)</title><rect x="550.4" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="553.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (341 samples, 1.45%)</title><rect x="551.0" y="547.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (341 samples, 1.45%)</title><rect x="551.0" y="531.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (341 samples, 1.45%)</title><rect x="551.0" y="515.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (48 samples, 0.20%)</title><rect x="551.0" y="499.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (18 samples, 0.08%)</title><rect x="551.0" y="483.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="554.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$469/603544558.apply (30 samples, 0.13%)</title><rect x="551.9" y="483.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (30 samples, 0.13%)</title><rect x="551.9" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (30 samples, 0.13%)</title><rect x="551.9" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.03%)</title><rect x="551.9" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.03%)</title><rect x="551.9" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.03%)</title><rect x="551.9" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="554.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (23 samples, 0.10%)</title><rect x="552.2" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (19 samples, 0.08%)</title><rect x="552.4" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (19 samples, 0.08%)</title><rect x="552.4" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (10 samples, 0.04%)</title><rect x="552.4" y="387.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="555.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="553.0" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="553.0" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="553.0" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="556.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (293 samples, 1.25%)</title><rect x="553.4" y="499.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (293 samples, 1.25%)</title><rect x="553.4" y="483.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/20756969.apply (293 samples, 1.25%)</title><rect x="553.4" y="467.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (293 samples, 1.25%)</title><rect x="553.4" y="451.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (293 samples, 1.25%)</title><rect x="553.4" y="435.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1609992908.apply (293 samples, 1.25%)</title><rect x="553.4" y="419.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (293 samples, 1.25%)</title><rect x="553.4" y="403.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="553.4" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="553.4" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$469/603544558.get$Lambda (5 samples, 0.02%)</title><rect x="553.4" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$469 (5 samples, 0.02%)</title><rect x="553.4" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="556.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (26 samples, 0.11%)</title><rect x="553.7" y="387.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (26 samples, 0.11%)</title><rect x="553.7" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (13 samples, 0.06%)</title><rect x="553.7" y="355.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="556.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="554.3" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="554.3" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="554.3" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="557.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (28 samples, 0.12%)</title><rect x="555.0" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="555.0" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="555.0" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$474/456745370.get$Lambda (6 samples, 0.03%)</title><rect x="555.0" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$474 (6 samples, 0.03%)</title><rect x="555.0" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="558.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.09%)</title><rect x="555.3" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.09%)</title><rect x="555.3" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (10 samples, 0.04%)</title><rect x="555.3" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="558.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="555.8" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="555.8" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="555.8" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="558.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (234 samples, 1.00%)</title><rect x="556.4" y="387.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.08%)</title><rect x="556.4" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.08%)</title><rect x="556.4" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$459/1048917100.get$Lambda (10 samples, 0.04%)</title><rect x="556.4" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$459 (10 samples, 0.04%)</title><rect x="556.4" y="323.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="559.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$466/120837901.get$Lambda (8 samples, 0.03%)</title><rect x="556.9" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$466 (8 samples, 0.03%)</title><rect x="556.9" y="323.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="559.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (72 samples, 0.31%)</title><rect x="557.3" y="371.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (72 samples, 0.31%)</title><rect x="557.3" y="355.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (72 samples, 0.31%)</title><rect x="557.3" y="339.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$459/1048917100.accept (22 samples, 0.09%)</title><rect x="557.3" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (22 samples, 0.09%)</title><rect x="557.3" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (22 samples, 0.09%)</title><rect x="557.3" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="557.3" y="275.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="557.3" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$463/686743847.get$Lambda (5 samples, 0.02%)</title><rect x="557.3" y="243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$463 (5 samples, 0.02%)</title><rect x="557.3" y="227.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="560.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (17 samples, 0.07%)</title><rect x="557.5" y="275.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.07%)</title><rect x="557.5" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.03%)</title><rect x="557.5" y="243.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="560.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="557.9" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="557.9" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="557.9" y="211.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="560.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$466/120837901.accept (29 samples, 0.12%)</title><rect x="558.4" y="323.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (29 samples, 0.12%)</title><rect x="558.4" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (29 samples, 0.12%)</title><rect x="558.4" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (29 samples, 0.12%)</title><rect x="558.4" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (29 samples, 0.12%)</title><rect x="558.4" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.12%)</title><rect x="558.4" y="243.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.12%)</title><rect x="558.4" y="227.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (29 samples, 0.12%)</title><rect x="558.4" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (29 samples, 0.12%)</title><rect x="558.4" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (29 samples, 0.12%)</title><rect x="558.4" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (12 samples, 0.05%)</title><rect x="558.4" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.05%)</title><rect x="558.4" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.04%)</title><rect x="558.5" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (10 samples, 0.04%)</title><rect x="558.5" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.04%)</title><rect x="558.5" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.04%)</title><rect x="558.5" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.04%)</title><rect x="558.5" y="67.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.04%)</title><rect x="558.5" y="51.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="561.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (17 samples, 0.07%)</title><rect x="559.0" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (17 samples, 0.07%)</title><rect x="559.0" y="147.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.03%)</title><rect x="559.0" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.03%)</title><rect x="559.0" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="562.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.04%)</title><rect x="559.3" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.03%)</title><rect x="559.5" y="115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (6 samples, 0.03%)</title><rect x="559.5" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (6 samples, 0.03%)</title><rect x="559.5" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (6 samples, 0.03%)</title><rect x="559.5" y="67.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (6 samples, 0.03%)</title><rect x="559.5" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (6 samples, 0.03%)</title><rect x="559.5" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="559.8" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="559.8" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="559.8" y="291.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="562.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (144 samples, 0.61%)</title><rect x="560.9" y="371.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (17 samples, 0.07%)</title><rect x="560.9" y="355.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="563.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (9 samples, 0.04%)</title><rect x="561.7" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (9 samples, 0.04%)</title><rect x="561.7" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="561.7" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="564.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (118 samples, 0.50%)</title><rect x="562.2" y="355.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (58 samples, 0.25%)</title><rect x="562.3" y="339.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.03%)</title><rect x="562.3" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.3" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (7 samples, 0.03%)</title><rect x="562.3" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="565.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (12 samples, 0.05%)</title><rect x="562.7" y="323.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="565.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (39 samples, 0.17%)</title><rect x="563.3" y="323.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (5 samples, 0.02%)</title><rect x="563.3" y="307.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="566.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (7 samples, 0.03%)</title><rect x="563.7" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="566.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (7 samples, 0.03%)</title><rect x="564.1" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.03%)</title><rect x="564.1" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (16 samples, 0.07%)</title><rect x="564.4" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.03%)</title><rect x="564.6" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="567.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (5 samples, 0.02%)</title><rect x="565.0" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="568.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (57 samples, 0.24%)</title><rect x="565.3" y="339.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.3" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="565.3" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="568.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.10%)</title><rect x="565.8" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.05%)</title><rect x="565.8" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="568.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.05%)</title><rect x="566.4" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.4" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="566.4" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="569.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.10%)</title><rect x="566.9" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.10%)</title><rect x="566.9" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.10%)</title><rect x="566.9" y="291.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.10%)</title><rect x="566.9" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.10%)</title><rect x="566.9" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.10%)</title><rect x="566.9" y="243.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="569.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (52 samples, 0.22%)</title><rect x="568.1" y="579.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (52 samples, 0.22%)</title><rect x="568.1" y="563.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (52 samples, 0.22%)</title><rect x="568.1" y="547.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (52 samples, 0.22%)</title><rect x="568.1" y="531.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (52 samples, 0.22%)</title><rect x="568.1" y="515.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (52 samples, 0.22%)</title><rect x="568.1" y="499.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (18 samples, 0.08%)</title><rect x="568.1" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.1" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (18 samples, 0.08%)</title><rect x="568.1" y="467.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="571.1" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (34 samples, 0.14%)</title><rect x="569.0" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.0" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (34 samples, 0.14%)</title><rect x="569.0" y="467.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="572.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,283 samples, 5.46%)</title><rect x="570.7" y="755.0" width="64.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.7" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,283 samples, 5.46%)</title><rect x="570.7" y="739.0" width="64.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.7" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,108 samples, 4.71%)</title><rect x="570.7" y="723.0" width="55.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.7" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (1,108 samples, 4.71%)</title><rect x="570.7" y="707.0" width="55.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,108 samples, 4.71%)</title><rect x="570.7" y="691.0" width="55.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.7" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 0.11%)</title><rect x="570.7" y="675.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.11%)</title><rect x="570.7" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.11%)</title><rect x="570.7" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.11%)</title><rect x="570.7" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (13 samples, 0.06%)</title><rect x="570.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802243390.invoke (13 samples, 0.06%)</title><rect x="570.7" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="570.7" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.06%)</title><rect x="570.7" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.06%)</title><rect x="570.7" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.7" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="570.7" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="573.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 0.05%)</title><rect x="571.4" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="571.4" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="571.4" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (12 samples, 0.05%)</title><rect x="571.4" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (12 samples, 0.05%)</title><rect x="571.4" y="547.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="574.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,083 samples, 4.61%)</title><rect x="572.0" y="675.0" width="54.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.0" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,083 samples, 4.61%)</title><rect x="572.0" y="659.0" width="54.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.0" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,083 samples, 4.61%)</title><rect x="572.0" y="643.0" width="54.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.0" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,083 samples, 4.61%)</title><rect x="572.0" y="627.0" width="54.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.0" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (495 samples, 2.11%)</title><rect x="572.0" y="611.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (495 samples, 2.11%)</title><rect x="572.0" y="595.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.0" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (495 samples, 2.11%)</title><rect x="572.0" y="579.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (495 samples, 2.11%)</title><rect x="572.0" y="563.0" width="24.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (495 samples, 2.11%)</title><rect x="572.0" y="547.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (495 samples, 2.11%)</title><rect x="572.0" y="531.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (495 samples, 2.11%)</title><rect x="572.0" y="515.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (482 samples, 2.05%)</title><rect x="572.0" y="499.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (482 samples, 2.05%)</title><rect x="572.0" y="483.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (475 samples, 2.02%)</title><rect x="572.0" y="467.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.0" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.02%)</title><rect x="572.0" y="451.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="575.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$474/456745370.apply (8 samples, 0.03%)</title><rect x="572.2" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (8 samples, 0.03%)</title><rect x="572.2" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (8 samples, 0.03%)</title><rect x="572.2" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.03%)</title><rect x="572.2" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="572.2" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="575.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1117015311.apply (437 samples, 1.86%)</title><rect x="572.6" y="451.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (437 samples, 1.86%)</title><rect x="572.6" y="435.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (19 samples, 0.08%)</title><rect x="572.8" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (19 samples, 0.08%)</title><rect x="572.8" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (8 samples, 0.03%)</title><rect x="572.8" y="387.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="575.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="573.2" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="573.2" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="573.2" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="576.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (414 samples, 1.76%)</title><rect x="573.8" y="419.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="573.8" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="573.8" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$574/1867618638.get$Lambda (9 samples, 0.04%)</title><rect x="573.8" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$574 (9 samples, 0.04%)</title><rect x="573.8" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="576.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.07%)</title><rect x="574.2" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.07%)</title><rect x="574.2" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.05%)</title><rect x="574.2" y="371.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="577.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="574.8" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="574.8" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="574.8" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="577.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (388 samples, 1.65%)</title><rect x="575.1" y="403.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (368 samples, 1.57%)</title><rect x="575.1" y="387.0" width="18.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="575.1" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="575.1" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$563/1604018323.get$Lambda (6 samples, 0.03%)</title><rect x="575.1" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$563 (6 samples, 0.03%)</title><rect x="575.1" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="578.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$568/1313816771.get$Lambda (7 samples, 0.03%)</title><rect x="575.4" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$568 (7 samples, 0.03%)</title><rect x="575.4" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="578.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/658369320.linkToTargetMethod (11 samples, 0.05%)</title><rect x="575.7" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1252363019.invokeStatic (11 samples, 0.05%)</title><rect x="575.7" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$526/101177499.get$Lambda (11 samples, 0.05%)</title><rect x="575.7" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$526 (11 samples, 0.05%)</title><rect x="575.7" y="323.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="578.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (58 samples, 0.25%)</title><rect x="576.3" y="371.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (29 samples, 0.12%)</title><rect x="576.3" y="355.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (6 samples, 0.03%)</title><rect x="576.3" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (6 samples, 0.03%)</title><rect x="576.3" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="579.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (23 samples, 0.10%)</title><rect x="576.6" y="339.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (23 samples, 0.10%)</title><rect x="576.6" y="323.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (17 samples, 0.07%)</title><rect x="577.8" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.07%)</title><rect x="577.8" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.07%)</title><rect x="577.8" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.03%)</title><rect x="577.8" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.03%)</title><rect x="577.8" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (6 samples, 0.03%)</title><rect x="577.8" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (6 samples, 0.03%)</title><rect x="577.8" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="580.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$517/1629819744.get (6 samples, 0.03%)</title><rect x="578.1" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.1" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (6 samples, 0.03%)</title><rect x="578.1" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="581.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (5 samples, 0.02%)</title><rect x="578.4" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (5 samples, 0.02%)</title><rect x="578.4" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.4" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (5 samples, 0.02%)</title><rect x="578.4" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.4" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (5 samples, 0.02%)</title><rect x="578.4" y="259.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="581.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (12 samples, 0.05%)</title><rect x="578.6" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (12 samples, 0.05%)</title><rect x="578.6" y="339.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="581.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.25%)</title><rect x="579.2" y="371.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.13%)</title><rect x="579.2" y="355.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="579.2" y="339.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="582.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="580.1" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="580.1" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="580.1" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="583.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (29 samples, 0.12%)</title><rect x="580.7" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (29 samples, 0.12%)</title><rect x="580.7" y="339.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.09%)</title><rect x="580.7" y="323.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="583.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="581.7" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="581.7" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="581.7" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="584.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (13 samples, 0.06%)</title><rect x="582.3" y="371.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="585.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="583.0" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="586.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (197 samples, 0.84%)</title><rect x="583.7" y="371.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$526/101177499.run (197 samples, 0.84%)</title><rect x="583.7" y="355.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (197 samples, 0.84%)</title><rect x="583.7" y="339.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="583.7" y="323.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="583.7" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1893889011.get$Lambda (5 samples, 0.02%)</title><rect x="583.7" y="291.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$530 (5 samples, 0.02%)</title><rect x="583.7" y="275.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="586.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$542/2024545176.get$Lambda (5 samples, 0.02%)</title><rect x="583.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$542 (5 samples, 0.02%)</title><rect x="583.9" y="275.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="586.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/818419977.get$Lambda (14 samples, 0.06%)</title><rect x="584.2" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (14 samples, 0.06%)</title><rect x="584.2" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="587.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (24 samples, 0.10%)</title><rect x="584.9" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.10%)</title><rect x="584.9" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.07%)</title><rect x="584.9" y="291.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="587.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="585.7" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="585.7" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="585.7" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="588.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (16 samples, 0.07%)</title><rect x="586.1" y="323.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="589.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (11 samples, 0.05%)</title><rect x="586.9" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="586.9" y="307.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="589.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (42 samples, 0.18%)</title><rect x="587.4" y="323.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (42 samples, 0.18%)</title><rect x="587.4" y="307.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="587.4" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="587.4" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$557/234067677.get$Lambda (12 samples, 0.05%)</title><rect x="587.4" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$557 (12 samples, 0.05%)</title><rect x="587.4" y="243.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="590.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.13%)</title><rect x="588.0" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.13%)</title><rect x="588.0" y="275.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.13%)</title><rect x="588.0" y="259.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.09%)</title><rect x="588.0" y="243.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="591.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="589.1" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="589.1" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="589.1" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="592.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (29 samples, 0.12%)</title><rect x="589.6" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.12%)</title><rect x="589.6" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (29 samples, 0.12%)</title><rect x="589.6" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.12%)</title><rect x="589.6" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (9 samples, 0.04%)</title><rect x="589.6" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="589.6" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="592.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.09%)</title><rect x="590.0" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.09%)</title><rect x="590.0" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.0" y="254.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="590.0" y="227.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="593.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (51 samples, 0.22%)</title><rect x="591.0" y="323.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (20 samples, 0.09%)</title><rect x="591.0" y="307.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="594.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (31 samples, 0.13%)</title><rect x="592.0" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="592.0" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (31 samples, 0.13%)</title><rect x="592.0" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="592.0" y="259.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.02%)</title><rect x="592.0" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="592.0" y="227.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="595.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (26 samples, 0.11%)</title><rect x="592.3" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (26 samples, 0.11%)</title><rect x="592.3" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="238.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="592.3" y="211.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="595.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/handlers/PutBodyHandler.apply (20 samples, 0.09%)</title><rect x="593.6" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (20 samples, 0.09%)</title><rect x="593.6" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (8 samples, 0.03%)</title><rect x="593.6" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (12 samples, 0.05%)</title><rect x="594.0" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="594.0" y="339.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="597.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$421/1707489388.apply (25 samples, 0.11%)</title><rect x="594.6" y="451.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (25 samples, 0.11%)</title><rect x="594.6" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (12 samples, 0.05%)</title><rect x="594.6" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (12 samples, 0.05%)</title><rect x="594.6" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (12 samples, 0.05%)</title><rect x="594.6" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.6" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (12 samples, 0.05%)</title><rect x="594.6" y="371.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="597.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (13 samples, 0.06%)</title><rect x="595.2" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="595.2" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.03%)</title><rect x="595.8" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.03%)</title><rect x="595.8" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1145134436.apply (7 samples, 0.03%)</title><rect x="595.8" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.03%)</title><rect x="595.8" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (7 samples, 0.03%)</title><rect x="595.8" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="595.8" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="598.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$496/833363224.apply (13 samples, 0.06%)</title><rect x="596.2" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (13 samples, 0.06%)</title><rect x="596.2" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (13 samples, 0.06%)</title><rect x="596.2" y="467.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="599.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (588 samples, 2.50%)</title><rect x="596.8" y="611.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.8" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (32 samples, 0.14%)</title><rect x="596.8" y="595.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (32 samples, 0.14%)</title><rect x="596.8" y="579.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (32 samples, 0.14%)</title><rect x="596.8" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (32 samples, 0.14%)</title><rect x="596.8" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.14%)</title><rect x="596.8" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.8" y="542.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="596.8" y="515.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="599.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (21 samples, 0.09%)</title><rect x="598.4" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 0.09%)</title><rect x="598.4" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 0.09%)</title><rect x="598.4" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (21 samples, 0.09%)</title><rect x="598.4" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.09%)</title><rect x="598.4" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.4" y="542.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="598.4" y="515.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="601.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (63 samples, 0.27%)</title><rect x="599.5" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.05%)</title><rect x="599.5" y="579.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="602.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.10%)</title><rect x="600.1" y="579.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.10%)</title><rect x="600.1" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="600.1" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="603.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.06%)</title><rect x="600.5" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.5" y="558.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="600.5" y="531.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="603.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="601.3" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="601.3" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.3" y="574.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="601.3" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="604.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.08%)</title><rect x="601.7" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.08%)</title><rect x="601.7" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="601.7" y="547.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="604.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="602.1" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.1" y="558.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="602.1" y="531.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (145 samples, 0.62%)</title><rect x="602.7" y="595.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (145 samples, 0.62%)</title><rect x="602.7" y="579.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (145 samples, 0.62%)</title><rect x="602.7" y="563.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.7" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="602.8" y="547.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="605.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.05%)</title><rect x="603.2" y="547.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="606.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.03%)</title><rect x="603.8" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="604.1" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="604.1" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (16 samples, 0.07%)</title><rect x="604.1" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (16 samples, 0.07%)</title><rect x="604.1" y="499.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="607.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.05%)</title><rect x="604.9" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.9" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.05%)</title><rect x="604.9" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="607.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (77 samples, 0.33%)</title><rect x="605.5" y="547.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (77 samples, 0.33%)</title><rect x="605.5" y="531.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (77 samples, 0.33%)</title><rect x="605.5" y="515.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="605.5" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="605.5" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (12 samples, 0.05%)</title><rect x="605.5" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (12 samples, 0.05%)</title><rect x="605.5" y="451.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="608.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (17 samples, 0.07%)</title><rect x="606.1" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (17 samples, 0.07%)</title><rect x="606.1" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (17 samples, 0.07%)</title><rect x="606.1" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="606.1" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="606.1" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="606.1" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="606.1" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="606.1" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="606.1" y="371.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="609.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (28 samples, 0.12%)</title><rect x="607.0" y="499.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (28 samples, 0.12%)</title><rect x="607.0" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.06%)</title><rect x="607.0" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="607.0" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="607.0" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="610.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.06%)</title><rect x="607.7" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.7" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.06%)</title><rect x="607.7" y="451.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="610.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.09%)</title><rect x="608.4" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (20 samples, 0.09%)</title><rect x="608.4" y="483.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="611.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (11 samples, 0.05%)</title><rect x="609.4" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.05%)</title><rect x="609.4" y="531.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="612.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (327 samples, 1.39%)</title><rect x="609.9" y="595.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.06%)</title><rect x="609.9" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="612.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.09%)</title><rect x="610.7" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.09%)</title><rect x="610.7" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.7" y="574.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="610.7" y="547.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="613.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (56 samples, 0.24%)</title><rect x="611.7" y="579.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.24%)</title><rect x="611.7" y="563.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="611.7" y="547.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="614.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.15%)</title><rect x="612.7" y="547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.7" y="558.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="612.7" y="531.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="615.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (236 samples, 1.00%)</title><rect x="614.5" y="579.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.34%)</title><rect x="614.5" y="563.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.34%)</title><rect x="614.5" y="547.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.17%)</title><rect x="614.5" y="531.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="617.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.17%)</title><rect x="616.6" y="531.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.6" y="542.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="616.6" y="515.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="619.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (35 samples, 0.15%)</title><rect x="618.5" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (35 samples, 0.15%)</title><rect x="618.5" y="547.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.5" y="558.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="618.5" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="621.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="619.3" y="531.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="622.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (31 samples, 0.13%)</title><rect x="620.3" y="563.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (31 samples, 0.13%)</title><rect x="620.3" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.13%)</title><rect x="620.3" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="620.3" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="623.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.07%)</title><rect x="621.0" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.0" y="526.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="621.0" y="499.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="624.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.17%)</title><rect x="621.8" y="563.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.17%)</title><rect x="621.8" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.17%)</title><rect x="621.8" y="531.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.17%)</title><rect x="621.8" y="515.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.17%)</title><rect x="621.8" y="499.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.17%)</title><rect x="621.8" y="483.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="624.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (50 samples, 0.21%)</title><rect x="623.9" y="563.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.05%)</title><rect x="623.9" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (12 samples, 0.05%)</title><rect x="623.9" y="531.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="626.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (24 samples, 0.10%)</title><rect x="624.5" y="547.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (24 samples, 0.10%)</title><rect x="624.5" y="531.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="627.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$504/1187071485.apply (14 samples, 0.06%)</title><rect x="625.7" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (14 samples, 0.06%)</title><rect x="625.7" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.7" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.06%)</title><rect x="625.7" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="628.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (175 samples, 0.74%)</title><rect x="626.4" y="723.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (175 samples, 0.74%)</title><rect x="626.4" y="707.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (175 samples, 0.74%)</title><rect x="626.4" y="691.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/797402868.run (175 samples, 0.74%)</title><rect x="626.4" y="675.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (175 samples, 0.74%)</title><rect x="626.4" y="659.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (175 samples, 0.74%)</title><rect x="626.4" y="643.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="626.4" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="626.4" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$378/892894604.get$Lambda (5 samples, 0.02%)</title><rect x="626.4" y="595.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$378 (5 samples, 0.02%)</title><rect x="626.4" y="579.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$383/883977638.get$Lambda (7 samples, 0.03%)</title><rect x="626.6" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$383 (7 samples, 0.03%)</title><rect x="626.6" y="579.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="629.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (14 samples, 0.06%)</title><rect x="627.0" y="627.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="630.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (14 samples, 0.06%)</title><rect x="627.7" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (14 samples, 0.06%)</title><rect x="627.7" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (10 samples, 0.04%)</title><rect x="627.9" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.04%)</title><rect x="627.9" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="630.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (135 samples, 0.57%)</title><rect x="628.4" y="627.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (135 samples, 0.57%)</title><rect x="628.4" y="611.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$530/1893889011.run (122 samples, 0.52%)</title><rect x="628.4" y="595.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (122 samples, 0.52%)</title><rect x="628.4" y="579.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (122 samples, 0.52%)</title><rect x="628.4" y="563.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (50 samples, 0.21%)</title><rect x="628.4" y="547.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (27 samples, 0.11%)</title><rect x="628.4" y="531.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.4" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (8 samples, 0.03%)</title><rect x="628.4" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.4" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (8 samples, 0.03%)</title><rect x="628.4" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="631.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.08%)</title><rect x="628.8" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.08%)</title><rect x="628.8" y="499.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="631.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (23 samples, 0.10%)</title><rect x="629.7" y="531.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.10%)</title><rect x="629.7" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.10%)</title><rect x="629.7" y="499.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (13 samples, 0.06%)</title><rect x="629.7" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (13 samples, 0.06%)</title><rect x="629.7" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="632.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (10 samples, 0.04%)</title><rect x="630.4" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (10 samples, 0.04%)</title><rect x="630.4" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (10 samples, 0.04%)</title><rect x="630.4" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.4" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (10 samples, 0.04%)</title><rect x="630.4" y="435.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="633.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (72 samples, 0.31%)</title><rect x="630.9" y="547.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.9" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.04%)</title><rect x="630.9" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.9" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.04%)</title><rect x="630.9" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (9 samples, 0.04%)</title><rect x="630.9" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (9 samples, 0.04%)</title><rect x="630.9" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.9" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (9 samples, 0.04%)</title><rect x="630.9" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="633.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (63 samples, 0.27%)</title><rect x="631.3" y="531.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (26 samples, 0.11%)</title><rect x="631.3" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.04%)</title><rect x="631.3" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (9 samples, 0.04%)</title><rect x="631.3" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (9 samples, 0.04%)</title><rect x="631.3" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (9 samples, 0.04%)</title><rect x="631.3" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (9 samples, 0.04%)</title><rect x="631.3" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (9 samples, 0.04%)</title><rect x="631.3" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="634.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.04%)</title><rect x="631.8" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.04%)</title><rect x="631.8" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.04%)</title><rect x="631.8" y="467.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="634.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (6 samples, 0.03%)</title><rect x="632.3" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="635.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (12 samples, 0.05%)</title><rect x="632.6" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.02%)</title><rect x="632.6" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.02%)</title><rect x="632.6" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.02%)</title><rect x="632.6" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="632.6" y="451.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="635.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.03%)</title><rect x="632.9" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.03%)</title><rect x="632.9" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.03%)</title><rect x="632.9" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="635.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (25 samples, 0.11%)</title><rect x="633.2" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (23 samples, 0.10%)</title><rect x="633.3" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (9 samples, 0.04%)</title><rect x="633.3" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.04%)</title><rect x="633.3" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.04%)</title><rect x="633.3" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (9 samples, 0.04%)</title><rect x="633.3" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="636.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.06%)</title><rect x="633.8" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.06%)</title><rect x="633.8" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (11 samples, 0.05%)</title><rect x="633.8" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="636.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (13 samples, 0.06%)</title><rect x="634.5" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (13 samples, 0.06%)</title><rect x="634.5" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (13 samples, 0.06%)</title><rect x="634.5" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.06%)</title><rect x="634.5" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.06%)</title><rect x="634.5" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.06%)</title><rect x="634.5" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.06%)</title><rect x="634.5" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$563/1604018323.accept (13 samples, 0.06%)</title><rect x="634.5" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (13 samples, 0.06%)</title><rect x="634.5" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.06%)</title><rect x="634.5" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.06%)</title><rect x="634.5" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13 samples, 0.06%)</title><rect x="634.5" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$579/1449206276.apply (13 samples, 0.06%)</title><rect x="634.5" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (13 samples, 0.06%)</title><rect x="634.5" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (13 samples, 0.06%)</title><rect x="634.5" y="371.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="637.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (45 samples, 0.19%)</title><rect x="635.1" y="803.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (45 samples, 0.19%)</title><rect x="635.1" y="787.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (45 samples, 0.19%)</title><rect x="635.1" y="771.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (45 samples, 0.19%)</title><rect x="635.1" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (45 samples, 0.19%)</title><rect x="635.1" y="739.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (45 samples, 0.19%)</title><rect x="635.1" y="723.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (45 samples, 0.19%)</title><rect x="635.1" y="707.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (45 samples, 0.19%)</title><rect x="635.1" y="691.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 0.19%)</title><rect x="635.1" y="675.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (45 samples, 0.19%)</title><rect x="635.1" y="659.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (45 samples, 0.19%)</title><rect x="635.1" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 0.19%)</title><rect x="635.1" y="627.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (45 samples, 0.19%)</title><rect x="635.1" y="611.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (45 samples, 0.19%)</title><rect x="635.1" y="595.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (45 samples, 0.19%)</title><rect x="635.1" y="579.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (45 samples, 0.19%)</title><rect x="635.1" y="563.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (45 samples, 0.19%)</title><rect x="635.1" y="547.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="638.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (946 samples, 4.03%)</title><rect x="637.4" y="803.0" width="47.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.4" y="814.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="637.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="637.4" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$420/1911998157.get$Lambda (8 samples, 0.03%)</title><rect x="637.4" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$420 (8 samples, 0.03%)</title><rect x="637.4" y="739.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="640.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/171802996.linkToTargetMethod (22 samples, 0.09%)</title><rect x="638.0" y="787.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="638.0" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$430/877989757.get$Lambda (22 samples, 0.09%)</title><rect x="638.0" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$430 (22 samples, 0.09%)</title><rect x="638.0" y="739.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="641.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (128 samples, 0.54%)</title><rect x="639.1" y="787.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$434/1816691911.accept (97 samples, 0.41%)</title><rect x="639.1" y="771.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (97 samples, 0.41%)</title><rect x="639.1" y="755.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (97 samples, 0.41%)</title><rect x="639.1" y="739.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (97 samples, 0.41%)</title><rect x="639.1" y="723.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (97 samples, 0.41%)</title><rect x="639.1" y="707.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (97 samples, 0.41%)</title><rect x="639.1" y="691.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 0.41%)</title><rect x="639.1" y="675.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 0.41%)</title><rect x="639.1" y="659.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (97 samples, 0.41%)</title><rect x="639.1" y="643.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (97 samples, 0.41%)</title><rect x="639.1" y="627.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (97 samples, 0.41%)</title><rect x="639.1" y="611.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (97 samples, 0.41%)</title><rect x="639.1" y="595.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.08%)</title><rect x="639.1" y="579.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.08%)</title><rect x="639.1" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (19 samples, 0.08%)</title><rect x="639.1" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (19 samples, 0.08%)</title><rect x="639.1" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (19 samples, 0.08%)</title><rect x="639.1" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (19 samples, 0.08%)</title><rect x="639.1" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (19 samples, 0.08%)</title><rect x="639.1" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (19 samples, 0.08%)</title><rect x="639.1" y="467.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="642.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.04%)</title><rect x="640.0" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="640.0" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="640.0" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (10 samples, 0.04%)</title><rect x="640.0" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (10 samples, 0.04%)</title><rect x="640.0" y="515.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="643.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (68 samples, 0.29%)</title><rect x="640.5" y="579.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (41 samples, 0.17%)</title><rect x="640.5" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.13%)</title><rect x="640.5" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.13%)</title><rect x="640.5" y="531.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="643.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (10 samples, 0.04%)</title><rect x="642.1" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (10 samples, 0.04%)</title><rect x="642.1" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (10 samples, 0.04%)</title><rect x="642.1" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="645.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (27 samples, 0.11%)</title><rect x="642.6" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$256/90328890.get (27 samples, 0.11%)</title><rect x="642.6" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (27 samples, 0.11%)</title><rect x="642.6" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.11%)</title><rect x="642.6" y="515.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.11%)</title><rect x="642.6" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.6" y="510.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="642.7" y="483.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$442/2143991438.accept (31 samples, 0.13%)</title><rect x="643.9" y="771.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (31 samples, 0.13%)</title><rect x="643.9" y="755.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$430/877989757.run (31 samples, 0.13%)</title><rect x="643.9" y="739.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (31 samples, 0.13%)</title><rect x="643.9" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (31 samples, 0.13%)</title><rect x="643.9" y="707.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (31 samples, 0.13%)</title><rect x="643.9" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (31 samples, 0.13%)</title><rect x="643.9" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (31 samples, 0.13%)</title><rect x="643.9" y="659.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="646.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (80 samples, 0.34%)</title><rect x="645.5" y="787.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.5" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (80 samples, 0.34%)</title><rect x="645.5" y="771.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="648.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (33 samples, 0.14%)</title><rect x="649.5" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.04%)</title><rect x="649.5" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.04%)</title><rect x="649.5" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.04%)</title><rect x="649.5" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.04%)</title><rect x="649.5" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.04%)</title><rect x="649.5" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (10 samples, 0.04%)</title><rect x="649.5" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (10 samples, 0.04%)</title><rect x="649.5" y="675.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="652.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (23 samples, 0.10%)</title><rect x="650.0" y="771.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (23 samples, 0.10%)</title><rect x="650.0" y="755.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="653.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (65 samples, 0.28%)</title><rect x="651.2" y="787.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$282/549125360.run (39 samples, 0.17%)</title><rect x="651.2" y="771.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (39 samples, 0.17%)</title><rect x="651.2" y="755.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.17%)</title><rect x="651.2" y="739.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.17%)</title><rect x="651.2" y="723.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39 samples, 0.17%)</title><rect x="651.2" y="707.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (39 samples, 0.17%)</title><rect x="651.2" y="691.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$270/1384667838.run (39 samples, 0.17%)</title><rect x="651.2" y="675.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.17%)</title><rect x="651.2" y="659.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (39 samples, 0.17%)</title><rect x="651.2" y="643.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (39 samples, 0.17%)</title><rect x="651.2" y="627.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (39 samples, 0.17%)</title><rect x="651.2" y="611.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (39 samples, 0.17%)</title><rect x="651.2" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (39 samples, 0.17%)</title><rect x="651.2" y="579.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.linkToTargetMethod (31 samples, 0.13%)</title><rect x="651.2" y="563.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802243390.invoke (31 samples, 0.13%)</title><rect x="651.2" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="651.2" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 0.13%)</title><rect x="651.2" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 0.13%)</title><rect x="651.2" y="499.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.2" y="510.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.13%)</title><rect x="651.2" y="483.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="654.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.03%)</title><rect x="652.7" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="652.7" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="652.7" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444/531963749.get$Lambda (8 samples, 0.03%)</title><rect x="652.7" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$444 (8 samples, 0.03%)</title><rect x="652.7" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="655.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$297/974608749.run (26 samples, 0.11%)</title><rect x="653.1" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (26 samples, 0.11%)</title><rect x="653.1" y="755.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="653.1" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="653.1" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$445/383899907.get$Lambda (24 samples, 0.10%)</title><rect x="653.1" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$445 (24 samples, 0.10%)</title><rect x="653.1" y="691.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="656.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (246 samples, 1.05%)</title><rect x="654.4" y="787.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.4" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (45 samples, 0.19%)</title><rect x="654.4" y="771.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.4" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (45 samples, 0.19%)</title><rect x="654.4" y="755.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (45 samples, 0.19%)</title><rect x="654.4" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.4" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (45 samples, 0.19%)</title><rect x="654.4" y="723.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.4" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (45 samples, 0.19%)</title><rect x="654.4" y="707.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="657.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (201 samples, 0.86%)</title><rect x="656.7" y="771.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="656.7" y="755.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="656.7" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$593/1526447846.get$Lambda (26 samples, 0.11%)</title><rect x="656.7" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.7" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$593 (26 samples, 0.11%)</title><rect x="656.7" y="707.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="659.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (58 samples, 0.25%)</title><rect x="658.0" y="755.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (58 samples, 0.25%)</title><rect x="658.0" y="739.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="661.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (32 samples, 0.14%)</title><rect x="660.9" y="755.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.9" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (32 samples, 0.14%)</title><rect x="660.9" y="739.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.9" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (32 samples, 0.14%)</title><rect x="660.9" y="723.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="663.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (85 samples, 0.36%)</title><rect x="662.5" y="755.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.15%)</title><rect x="662.5" y="739.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="665.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (49 samples, 0.21%)</title><rect x="664.3" y="739.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.3" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (49 samples, 0.21%)</title><rect x="664.3" y="723.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.3" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (49 samples, 0.21%)</title><rect x="664.3" y="707.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="667.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (117 samples, 0.50%)</title><rect x="666.8" y="787.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="666.8" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="666.8" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$417/1745229928.get$Lambda (11 samples, 0.05%)</title><rect x="666.8" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.8" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$417 (11 samples, 0.05%)</title><rect x="666.8" y="723.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="669.8" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (64 samples, 0.27%)</title><rect x="667.3" y="771.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (32 samples, 0.14%)</title><rect x="667.3" y="755.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (32 samples, 0.14%)</title><rect x="667.3" y="739.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="670.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.14%)</title><rect x="668.9" y="755.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.14%)</title><rect x="668.9" y="739.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="671.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (42 samples, 0.18%)</title><rect x="670.5" y="771.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (42 samples, 0.18%)</title><rect x="670.5" y="755.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="673.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (182 samples, 0.77%)</title><rect x="672.7" y="787.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.7" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (88 samples, 0.37%)</title><rect x="672.7" y="771.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.7" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (88 samples, 0.37%)</title><rect x="672.7" y="755.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (88 samples, 0.37%)</title><rect x="672.7" y="739.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (88 samples, 0.37%)</title><rect x="672.7" y="723.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.7" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (88 samples, 0.37%)</title><rect x="672.7" y="707.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="675.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (94 samples, 0.40%)</title><rect x="677.1" y="771.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (94 samples, 0.40%)</title><rect x="677.1" y="755.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.1" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (94 samples, 0.40%)</title><rect x="677.1" y="739.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.1" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (94 samples, 0.40%)</title><rect x="677.1" y="723.0" width="4.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="680.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (36 samples, 0.15%)</title><rect x="681.8" y="787.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (36 samples, 0.15%)</title><rect x="681.8" y="771.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (36 samples, 0.15%)</title><rect x="681.8" y="755.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (36 samples, 0.15%)</title><rect x="681.8" y="739.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (13 samples, 0.06%)</title><rect x="681.8" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.8" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (13 samples, 0.06%)</title><rect x="681.8" y="707.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="684.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (23 samples, 0.10%)</title><rect x="682.4" y="723.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (23 samples, 0.10%)</title><rect x="682.4" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.10%)</title><rect x="682.4" y="691.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (23 samples, 0.10%)</title><rect x="682.4" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (23 samples, 0.10%)</title><rect x="682.4" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (23 samples, 0.10%)</title><rect x="682.4" y="643.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="685.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (7 samples, 0.03%)</title><rect x="683.6" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.03%)</title><rect x="683.6" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (7 samples, 0.03%)</title><rect x="683.6" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 0.03%)</title><rect x="683.6" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.03%)</title><rect x="683.6" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.6" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.03%)</title><rect x="683.6" y="707.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="686.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (19 samples, 0.08%)</title><rect x="684.0" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (19 samples, 0.08%)</title><rect x="684.0" y="771.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (19 samples, 0.08%)</title><rect x="684.0" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (19 samples, 0.08%)</title><rect x="684.0" y="739.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="687.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,059 samples, 42.80%)</title><rect x="684.9" y="803.0" width="505.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.9" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (570 samples, 2.43%)</title><rect x="684.9" y="787.0" width="28.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.9" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (281 samples, 1.20%)</title><rect x="684.9" y="771.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.9" y="782.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (80 samples, 0.34%)</title><rect x="684.9" y="755.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="687.9" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (79 samples, 0.34%)</title><rect x="688.9" y="755.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="691.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (122 samples, 0.52%)</title><rect x="692.9" y="755.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (122 samples, 0.52%)</title><rect x="692.9" y="739.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (122 samples, 0.52%)</title><rect x="692.9" y="723.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.9" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (122 samples, 0.52%)</title><rect x="692.9" y="707.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="695.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (289 samples, 1.23%)</title><rect x="699.0" y="771.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (289 samples, 1.23%)</title><rect x="699.0" y="755.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (289 samples, 1.23%)</title><rect x="699.0" y="739.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (289 samples, 1.23%)</title><rect x="699.0" y="723.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (169 samples, 0.72%)</title><rect x="699.0" y="707.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.0" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (169 samples, 0.72%)</title><rect x="699.0" y="691.0" width="8.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="702.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (120 samples, 0.51%)</title><rect x="707.5" y="707.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (120 samples, 0.51%)</title><rect x="707.5" y="691.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (120 samples, 0.51%)</title><rect x="707.5" y="675.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (120 samples, 0.51%)</title><rect x="707.5" y="659.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (120 samples, 0.51%)</title><rect x="707.5" y="643.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (120 samples, 0.51%)</title><rect x="707.5" y="627.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="710.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9,489 samples, 40.38%)</title><rect x="713.5" y="787.0" width="476.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.5" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,489 samples, 40.38%)</title><rect x="713.5" y="771.0" width="476.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.5" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,321 samples, 39.66%)</title><rect x="713.5" y="755.0" width="468.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.5" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,658 samples, 24.08%)</title><rect x="713.5" y="739.0" width="284.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.5" y="750.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,658 samples, 24.08%)</title><rect x="713.5" y="723.0" width="284.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.5" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5,497 samples, 23.39%)</title><rect x="713.5" y="707.0" width="276.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.5" y="718.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (139 samples, 0.59%)</title><rect x="713.5" y="691.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (139 samples, 0.59%)</title><rect x="713.5" y="675.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (139 samples, 0.59%)</title><rect x="713.5" y="659.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (139 samples, 0.59%)</title><rect x="713.5" y="643.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (75 samples, 0.32%)</title><rect x="713.5" y="627.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="716.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.27%)</title><rect x="717.3" y="627.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.3" y="638.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.27%)</title><rect x="717.3" y="611.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="720.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceImpl.entity (5,358 samples, 22.80%)</title><rect x="720.5" y="691.0" width="269.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.5" y="702.0">ru/mail/polis/service/ReplicationSer..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (162 samples, 0.69%)</title><rect x="720.5" y="675.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (162 samples, 0.69%)</title><rect x="720.5" y="659.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (162 samples, 0.69%)</title><rect x="720.5" y="643.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.25%)</title><rect x="720.5" y="627.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="723.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.44%)</title><rect x="723.4" y="627.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.4" y="638.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.44%)</title><rect x="723.4" y="611.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="726.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.handle (5,196 samples, 22.11%)</title><rect x="728.6" y="675.0" width="261.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.6" y="686.0">ru/mail/polis/service/ReplicationHa..</text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.multipleUpsert (4,829 samples, 20.55%)</title><rect x="728.6" y="659.0" width="242.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="670.0">ru/mail/polis/service/Replicatio..</text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (49 samples, 0.21%)</title><rect x="728.6" y="643.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/SingletonImmutableSet.iterator (49 samples, 0.21%)</title><rect x="728.6" y="627.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.singletonIterator (49 samples, 0.21%)</title><rect x="728.6" y="611.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$9 (49 samples, 0.21%)</title><rect x="728.6" y="595.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="731.6" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (94 samples, 0.40%)</title><rect x="731.1" y="643.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="734.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.22%)</title><rect x="735.8" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.22%)</title><rect x="735.8" y="627.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler$$Lambda$120/308330111.get$Lambda (51 samples, 0.22%)</title><rect x="735.8" y="611.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ReplicationHandler$$Lambda$120 (51 samples, 0.22%)</title><rect x="735.8" y="595.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="738.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (35 samples, 0.15%)</title><rect x="738.4" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (35 samples, 0.15%)</title><rect x="738.4" y="627.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="741.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (65 samples, 0.28%)</title><rect x="740.1" y="643.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.28%)</title><rect x="740.1" y="627.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="743.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.12%)</title><rect x="743.4" y="643.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (20 samples, 0.09%)</title><rect x="743.4" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.4" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (20 samples, 0.09%)</title><rect x="743.4" y="611.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (9 samples, 0.04%)</title><rect x="744.4" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.4" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (9 samples, 0.04%)</title><rect x="744.4" y="611.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="747.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (143 samples, 0.61%)</title><rect x="744.9" y="643.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (143 samples, 0.61%)</title><rect x="744.9" y="627.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (74 samples, 0.31%)</title><rect x="744.9" y="611.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="747.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (68 samples, 0.29%)</title><rect x="748.6" y="611.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="751.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (68 samples, 0.29%)</title><rect x="752.0" y="643.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (68 samples, 0.29%)</title><rect x="752.0" y="627.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (30 samples, 0.13%)</title><rect x="752.0" y="611.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="755.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="753.6" y="611.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="753.6" y="595.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.16%)</title><rect x="753.6" y="579.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="756.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,718 samples, 7.31%)</title><rect x="755.5" y="643.0" width="86.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.5" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,718 samples, 7.31%)</title><rect x="755.5" y="627.0" width="86.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.5" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,718 samples, 7.31%)</title><rect x="755.5" y="611.0" width="86.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.5" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,718 samples, 7.31%)</title><rect x="755.5" y="595.0" width="86.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.5" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="755.5" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="755.5" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$173/1240135518.get$Lambda (12 samples, 0.05%)</title><rect x="755.5" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$173 (12 samples, 0.05%)</title><rect x="755.5" y="531.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="758.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.21%)</title><rect x="756.1" y="579.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.21%)</title><rect x="756.1" y="563.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.10%)</title><rect x="756.1" y="547.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="759.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.11%)</title><rect x="757.3" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.11%)</title><rect x="757.3" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.11%)</title><rect x="757.3" y="515.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="760.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (57 samples, 0.24%)</title><rect x="758.5" y="579.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (57 samples, 0.24%)</title><rect x="758.5" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.15%)</title><rect x="758.5" y="547.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="761.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="760.3" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="760.3" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="760.3" y="515.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="763.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (38 samples, 0.16%)</title><rect x="761.4" y="579.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="764.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (87 samples, 0.37%)</title><rect x="763.3" y="579.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="766.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (904 samples, 3.85%)</title><rect x="767.7" y="579.0" width="45.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.7" y="590.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (99 samples, 0.42%)</title><rect x="767.7" y="563.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (70 samples, 0.30%)</title><rect x="767.7" y="547.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (27 samples, 0.11%)</title><rect x="767.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.7" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (27 samples, 0.11%)</title><rect x="767.7" y="515.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="770.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (43 samples, 0.18%)</title><rect x="769.0" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (43 samples, 0.18%)</title><rect x="769.0" y="515.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="772.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (29 samples, 0.12%)</title><rect x="771.2" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (29 samples, 0.12%)</title><rect x="771.2" y="531.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (29 samples, 0.12%)</title><rect x="771.2" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (29 samples, 0.12%)</title><rect x="771.2" y="499.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.2" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (29 samples, 0.12%)</title><rect x="771.2" y="483.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="774.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (338 samples, 1.44%)</title><rect x="772.6" y="563.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (338 samples, 1.44%)</title><rect x="772.6" y="547.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.6" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (11 samples, 0.05%)</title><rect x="772.6" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="775.6" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.08%)</title><rect x="773.2" y="531.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="776.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.15%)</title><rect x="774.1" y="531.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="777.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.06%)</title><rect x="775.9" y="531.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="778.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.11%)</title><rect x="776.6" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.11%)</title><rect x="776.6" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (27 samples, 0.11%)</title><rect x="776.6" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.6" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (27 samples, 0.11%)</title><rect x="776.6" y="483.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="779.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (173 samples, 0.74%)</title><rect x="778.0" y="531.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (173 samples, 0.74%)</title><rect x="778.0" y="515.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (173 samples, 0.74%)</title><rect x="778.0" y="499.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (173 samples, 0.74%)</title><rect x="778.0" y="483.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (94 samples, 0.40%)</title><rect x="778.0" y="467.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (53 samples, 0.23%)</title><rect x="778.0" y="451.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (53 samples, 0.23%)</title><rect x="778.0" y="435.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (53 samples, 0.23%)</title><rect x="778.0" y="419.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (53 samples, 0.23%)</title><rect x="778.0" y="403.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (53 samples, 0.23%)</title><rect x="778.0" y="387.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (53 samples, 0.23%)</title><rect x="778.0" y="371.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.23%)</title><rect x="778.0" y="355.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.23%)</title><rect x="778.0" y="339.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="781.0" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (41 samples, 0.17%)</title><rect x="780.6" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.6" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (41 samples, 0.17%)</title><rect x="780.6" y="435.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="783.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.06%)</title><rect x="782.7" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.06%)</title><rect x="782.7" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (15 samples, 0.06%)</title><rect x="782.7" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.7" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (15 samples, 0.06%)</title><rect x="782.7" y="419.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="785.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (35 samples, 0.15%)</title><rect x="783.4" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (35 samples, 0.15%)</title><rect x="783.4" y="451.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (18 samples, 0.08%)</title><rect x="783.4" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.08%)</title><rect x="783.4" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.08%)</title><rect x="783.4" y="403.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="786.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.07%)</title><rect x="784.3" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.07%)</title><rect x="784.3" y="419.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="787.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (29 samples, 0.12%)</title><rect x="785.2" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (29 samples, 0.12%)</title><rect x="785.2" y="451.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="788.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (29 samples, 0.12%)</title><rect x="786.6" y="531.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.6" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (29 samples, 0.12%)</title><rect x="786.6" y="515.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="789.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (30 samples, 0.13%)</title><rect x="788.1" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (30 samples, 0.13%)</title><rect x="788.1" y="515.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="791.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (16 samples, 0.07%)</title><rect x="789.6" y="563.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="792.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (321 samples, 1.37%)</title><rect x="790.4" y="563.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.4" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (321 samples, 1.37%)</title><rect x="790.4" y="547.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (288 samples, 1.23%)</title><rect x="790.4" y="531.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (288 samples, 1.23%)</title><rect x="790.4" y="515.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.4" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (288 samples, 1.23%)</title><rect x="790.4" y="499.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.4" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (63 samples, 0.27%)</title><rect x="790.4" y="483.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="793.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (82 samples, 0.35%)</title><rect x="793.6" y="483.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (82 samples, 0.35%)</title><rect x="793.6" y="467.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.6" y="478.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.35%)</title><rect x="793.6" y="451.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="796.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (143 samples, 0.61%)</title><rect x="797.7" y="483.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.61%)</title><rect x="797.7" y="467.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.30%)</title><rect x="797.7" y="451.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="800.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (72 samples, 0.31%)</title><rect x="801.3" y="451.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.3" y="462.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.31%)</title><rect x="801.3" y="435.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="804.3" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (33 samples, 0.14%)</title><rect x="804.9" y="531.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="807.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (39 samples, 0.17%)</title><rect x="806.5" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.17%)</title><rect x="806.5" y="547.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="809.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (91 samples, 0.39%)</title><rect x="808.5" y="563.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.5" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.13%)</title><rect x="808.5" y="547.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="811.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (29 samples, 0.12%)</title><rect x="810.0" y="547.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.12%)</title><rect x="810.0" y="531.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="813.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.14%)</title><rect x="811.4" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.14%)</title><rect x="811.4" y="531.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="814.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (376 samples, 1.60%)</title><rect x="813.1" y="579.0" width="18.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.06%)</title><rect x="813.1" y="563.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="816.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (62 samples, 0.26%)</title><rect x="813.7" y="563.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (18 samples, 0.08%)</title><rect x="816.8" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (18 samples, 0.08%)</title><rect x="816.8" y="547.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="819.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (283 samples, 1.20%)</title><rect x="817.7" y="563.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (283 samples, 1.20%)</title><rect x="817.7" y="547.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.10%)</title><rect x="817.7" y="531.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (30 samples, 0.13%)</title><rect x="818.9" y="531.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="821.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (148 samples, 0.63%)</title><rect x="820.4" y="531.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (148 samples, 0.63%)</title><rect x="820.4" y="515.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (148 samples, 0.63%)</title><rect x="820.4" y="499.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (148 samples, 0.63%)</title><rect x="820.4" y="483.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.4" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (148 samples, 0.63%)</title><rect x="820.4" y="467.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="823.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (37 samples, 0.16%)</title><rect x="827.9" y="531.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (37 samples, 0.16%)</title><rect x="827.9" y="515.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (9 samples, 0.04%)</title><rect x="827.9" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (9 samples, 0.04%)</title><rect x="827.9" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="830.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (28 samples, 0.12%)</title><rect x="828.3" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (28 samples, 0.12%)</title><rect x="828.3" y="483.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="831.3" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (44 samples, 0.19%)</title><rect x="829.7" y="531.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (44 samples, 0.19%)</title><rect x="829.7" y="515.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.7" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (44 samples, 0.19%)</title><rect x="829.7" y="499.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="832.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (195 samples, 0.83%)</title><rect x="831.9" y="579.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (21 samples, 0.09%)</title><rect x="831.9" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (20 samples, 0.09%)</title><rect x="831.9" y="547.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="834.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="833.0" y="563.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="836.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (153 samples, 0.65%)</title><rect x="834.0" y="563.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.15%)</title><rect x="834.0" y="547.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.15%)</title><rect x="834.0" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$154/474961723.get$Lambda (13 samples, 0.06%)</title><rect x="834.0" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$154 (13 samples, 0.06%)</title><rect x="834.0" y="499.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="837.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/1117015311.get$Lambda (23 samples, 0.10%)</title><rect x="834.7" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$159 (23 samples, 0.10%)</title><rect x="834.7" y="499.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="837.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (117 samples, 0.50%)</title><rect x="835.8" y="547.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (117 samples, 0.50%)</title><rect x="835.8" y="531.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (72 samples, 0.31%)</title><rect x="835.8" y="515.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="838.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.19%)</title><rect x="839.5" y="515.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.19%)</title><rect x="839.5" y="499.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.19%)</title><rect x="839.5" y="483.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="842.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (356 samples, 1.51%)</title><rect x="841.7" y="643.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (36 samples, 0.15%)</title><rect x="841.7" y="627.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="844.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (320 samples, 1.36%)</title><rect x="843.5" y="627.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (296 samples, 1.26%)</title><rect x="843.5" y="611.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (296 samples, 1.26%)</title><rect x="843.5" y="595.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.5" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.05%)</title><rect x="843.5" y="579.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="846.5" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.08%)</title><rect x="844.1" y="579.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="847.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.14%)</title><rect x="845.1" y="579.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.04%)</title><rect x="846.7" y="579.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="849.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.06%)</title><rect x="847.1" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.06%)</title><rect x="847.1" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.get$Lambda (15 samples, 0.06%)</title><rect x="847.1" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.1" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (15 samples, 0.06%)</title><rect x="847.1" y="531.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="850.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (30 samples, 0.13%)</title><rect x="847.9" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.9" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (30 samples, 0.13%)</title><rect x="847.9" y="563.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="850.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (142 samples, 0.60%)</title><rect x="849.4" y="579.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/732975962.accept (142 samples, 0.60%)</title><rect x="849.4" y="563.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (142 samples, 0.60%)</title><rect x="849.4" y="547.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="849.4" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="849.4" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.get$Lambda (21 samples, 0.09%)</title><rect x="849.4" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.4" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$133 (21 samples, 0.09%)</title><rect x="849.4" y="483.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="852.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 0.20%)</title><rect x="850.5" y="531.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/1917796656.accept (47 samples, 0.20%)</title><rect x="850.5" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (47 samples, 0.20%)</title><rect x="850.5" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.20%)</title><rect x="850.5" y="483.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.20%)</title><rect x="850.5" y="467.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.20%)</title><rect x="850.5" y="451.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.20%)</title><rect x="850.5" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.20%)</title><rect x="850.5" y="419.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.20%)</title><rect x="850.5" y="403.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="853.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (30 samples, 0.13%)</title><rect x="852.8" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.8" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (30 samples, 0.13%)</title><rect x="852.8" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.06%)</title><rect x="852.8" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="852.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="852.8" y="467.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="855.8" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.07%)</title><rect x="853.5" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.07%)</title><rect x="853.5" y="483.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="856.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (44 samples, 0.19%)</title><rect x="854.3" y="531.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (44 samples, 0.19%)</title><rect x="854.3" y="515.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="857.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (37 samples, 0.16%)</title><rect x="856.5" y="579.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (37 samples, 0.16%)</title><rect x="856.5" y="563.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="859.5" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (24 samples, 0.10%)</title><rect x="858.4" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.4" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (24 samples, 0.10%)</title><rect x="858.4" y="595.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.4" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (24 samples, 0.10%)</title><rect x="858.4" y="579.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="861.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (684 samples, 2.91%)</title><rect x="859.6" y="643.0" width="34.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.6" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (538 samples, 2.29%)</title><rect x="859.6" y="627.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.6" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (281 samples, 1.20%)</title><rect x="859.6" y="611.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (281 samples, 1.20%)</title><rect x="859.6" y="595.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.6" y="606.0"></text>
</g>
<g>
<title>byte[] (281 samples, 1.20%)</title><rect x="859.6" y="579.0" width="14.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="862.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (257 samples, 1.09%)</title><rect x="873.7" y="611.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.7" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (118 samples, 0.50%)</title><rect x="873.7" y="595.0" width="5.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="876.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 0.59%)</title><rect x="879.6" y="595.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (139 samples, 0.59%)</title><rect x="879.6" y="579.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (139 samples, 0.59%)</title><rect x="879.6" y="563.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (139 samples, 0.59%)</title><rect x="879.6" y="547.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.6" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (139 samples, 0.59%)</title><rect x="879.6" y="531.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="882.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (146 samples, 0.62%)</title><rect x="886.6" y="627.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (146 samples, 0.62%)</title><rect x="886.6" y="611.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (146 samples, 0.62%)</title><rect x="886.6" y="595.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.27%)</title><rect x="886.6" y="579.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="889.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.35%)</title><rect x="889.8" y="579.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.8" y="590.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.35%)</title><rect x="889.8" y="563.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="892.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (157 samples, 0.67%)</title><rect x="893.9" y="643.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (157 samples, 0.67%)</title><rect x="893.9" y="627.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 0.67%)</title><rect x="893.9" y="611.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.31%)</title><rect x="893.9" y="595.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.36%)</title><rect x="897.6" y="595.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.6" y="606.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.36%)</title><rect x="897.6" y="579.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="900.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.futureHelper (756 samples, 3.22%)</title><rect x="901.8" y="643.0" width="38.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.8" y="654.0">ru/..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (52 samples, 0.22%)</title><rect x="901.8" y="627.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="904.8" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (142 samples, 0.60%)</title><rect x="904.4" y="627.0" width="7.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="907.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (291 samples, 1.24%)</title><rect x="911.6" y="627.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.6" y="638.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.62%)</title><rect x="911.6" y="611.0" width="7.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="914.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (94 samples, 0.40%)</title><rect x="918.9" y="611.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="921.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.22%)</title><rect x="923.6" y="611.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="926.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationHandler.count (271 samples, 1.15%)</title><rect x="926.2" y="627.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (83 samples, 0.35%)</title><rect x="926.2" y="611.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.2" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (83 samples, 0.35%)</title><rect x="926.2" y="595.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="929.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (188 samples, 0.80%)</title><rect x="930.3" y="611.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (188 samples, 0.80%)</title><rect x="930.3" y="595.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (188 samples, 0.80%)</title><rect x="930.3" y="579.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="933.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.setProxyHeader (624 samples, 2.66%)</title><rect x="939.8" y="643.0" width="31.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.8" y="654.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (87 samples, 0.37%)</title><rect x="939.8" y="627.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1278677872.invoke (87 samples, 0.37%)</title><rect x="939.8" y="611.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.37%)</title><rect x="939.8" y="595.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.10%)</title><rect x="939.8" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="939.8" y="563.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="942.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.27%)</title><rect x="940.9" y="579.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.27%)</title><rect x="940.9" y="563.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.9" y="574.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.27%)</title><rect x="940.9" y="547.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="943.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (337 samples, 1.43%)</title><rect x="944.2" y="627.0" width="16.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.2" y="638.0"></text>
</g>
<g>
<title>java.net.URI (59 samples, 0.25%)</title><rect x="944.2" y="611.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="947.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (278 samples, 1.18%)</title><rect x="947.1" y="611.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.1" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (31 samples, 0.13%)</title><rect x="947.1" y="595.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="950.1" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (247 samples, 1.05%)</title><rect x="948.7" y="595.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.17%)</title><rect x="948.7" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.17%)</title><rect x="948.7" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="948.7" y="547.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="951.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="949.5" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.5" y="558.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="949.5" y="531.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="952.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (207 samples, 0.88%)</title><rect x="950.7" y="579.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (97 samples, 0.41%)</title><rect x="950.7" y="563.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (97 samples, 0.41%)</title><rect x="950.7" y="547.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.14%)</title><rect x="950.7" y="531.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="953.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.28%)</title><rect x="952.3" y="531.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.3" y="542.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.28%)</title><rect x="952.3" y="515.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="955.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (110 samples, 0.47%)</title><rect x="955.6" y="563.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.24%)</title><rect x="955.6" y="547.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.24%)</title><rect x="955.6" y="531.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.09%)</title><rect x="955.6" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="958.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.15%)</title><rect x="956.7" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.7" y="526.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.15%)</title><rect x="956.7" y="499.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="959.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (53 samples, 0.23%)</title><rect x="958.4" y="547.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.4" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (53 samples, 0.23%)</title><rect x="958.4" y="531.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.23%)</title><rect x="958.4" y="515.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.23%)</title><rect x="958.4" y="499.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="958.4" y="483.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="961.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.13%)</title><rect x="959.6" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.6" y="494.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="959.6" y="467.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="962.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (97 samples, 0.41%)</title><rect x="961.1" y="627.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (42 samples, 0.18%)</title><rect x="961.1" y="611.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="964.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (55 samples, 0.23%)</title><rect x="963.2" y="611.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (13 samples, 0.06%)</title><rect x="963.2" y="595.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="966.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (42 samples, 0.18%)</title><rect x="963.8" y="595.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.8" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (42 samples, 0.18%)</title><rect x="963.8" y="579.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="966.8" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (21 samples, 0.09%)</title><rect x="966.0" y="627.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.0" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (21 samples, 0.09%)</title><rect x="966.0" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.0" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (21 samples, 0.09%)</title><rect x="966.0" y="595.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="969.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (82 samples, 0.35%)</title><rect x="967.0" y="627.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (82 samples, 0.35%)</title><rect x="967.0" y="611.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (82 samples, 0.35%)</title><rect x="967.0" y="595.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.0" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.08%)</title><rect x="967.0" y="579.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="970.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (25 samples, 0.11%)</title><rect x="967.9" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.11%)</title><rect x="967.9" y="563.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="970.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (39 samples, 0.17%)</title><rect x="969.2" y="579.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (39 samples, 0.17%)</title><rect x="969.2" y="563.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="972.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ReplicationServiceUtils.getNodeReplica (152 samples, 0.65%)</title><rect x="971.1" y="659.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (64 samples, 0.27%)</title><rect x="971.1" y="643.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.1" y="654.0"></text>
</g>
<g>
<title>com.google.common.collect.SingletonImmutableSet (64 samples, 0.27%)</title><rect x="971.1" y="627.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="974.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (88 samples, 0.37%)</title><rect x="974.3" y="643.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15 samples, 0.06%)</title><rect x="974.5" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.5" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap (15 samples, 0.06%)</title><rect x="974.5" y="611.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="977.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (69 samples, 0.29%)</title><rect x="975.3" y="627.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (69 samples, 0.29%)</title><rect x="975.3" y="611.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (69 samples, 0.29%)</title><rect x="975.3" y="595.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (43 samples, 0.18%)</title><rect x="975.3" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.3" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (43 samples, 0.18%)</title><rect x="975.3" y="563.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="978.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (26 samples, 0.11%)</title><rect x="977.4" y="579.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.4" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (26 samples, 0.11%)</title><rect x="977.4" y="563.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="980.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteBuffer (215 samples, 0.91%)</title><rect x="978.8" y="659.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (68 samples, 0.29%)</title><rect x="978.8" y="643.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (68 samples, 0.29%)</title><rect x="978.8" y="627.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (68 samples, 0.29%)</title><rect x="978.8" y="611.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.29%)</title><rect x="978.8" y="595.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.8" y="606.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.29%)</title><rect x="978.8" y="579.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="981.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (147 samples, 0.63%)</title><rect x="982.2" y="643.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (147 samples, 0.63%)</title><rect x="982.2" y="627.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.2" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (147 samples, 0.63%)</title><rect x="982.2" y="611.0" width="7.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="985.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (161 samples, 0.69%)</title><rect x="989.6" y="707.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (161 samples, 0.69%)</title><rect x="989.6" y="691.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (161 samples, 0.69%)</title><rect x="989.6" y="675.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.31%)</title><rect x="989.6" y="659.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="992.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (89 samples, 0.38%)</title><rect x="993.2" y="659.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.2" y="670.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.38%)</title><rect x="993.2" y="643.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="996.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (729 samples, 3.10%)</title><rect x="997.6" y="739.0" width="36.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.6" y="750.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (134 samples, 0.57%)</title><rect x="997.6" y="723.0" width="6.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1000.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (223 samples, 0.95%)</title><rect x="1004.4" y="723.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (223 samples, 0.95%)</title><rect x="1004.4" y="707.0" width="11.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1007.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (372 samples, 1.58%)</title><rect x="1015.6" y="723.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (372 samples, 1.58%)</title><rect x="1015.6" y="707.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.6" y="718.0"></text>
</g>
<g>
<title>char[] (177 samples, 0.75%)</title><rect x="1015.6" y="691.0" width="8.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1018.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.34%)</title><rect x="1024.4" y="691.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1027.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (116 samples, 0.49%)</title><rect x="1028.4" y="691.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (116 samples, 0.49%)</title><rect x="1028.4" y="675.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (116 samples, 0.49%)</title><rect x="1028.4" y="659.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.4" y="670.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.49%)</title><rect x="1028.4" y="643.0" width="5.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1031.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (85 samples, 0.36%)</title><rect x="1034.2" y="739.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.2" y="750.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.36%)</title><rect x="1034.2" y="723.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1037.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (131 samples, 0.56%)</title><rect x="1038.5" y="739.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (131 samples, 0.56%)</title><rect x="1038.5" y="723.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (131 samples, 0.56%)</title><rect x="1038.5" y="707.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.26%)</title><rect x="1038.5" y="691.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1041.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.29%)</title><rect x="1041.6" y="691.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.6" y="702.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.29%)</title><rect x="1041.6" y="675.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1044.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,718 samples, 11.57%)</title><rect x="1045.1" y="739.0" width="136.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.1" y="750.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,718 samples, 11.57%)</title><rect x="1045.1" y="723.0" width="136.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.1" y="734.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (1,368 samples, 5.82%)</title><rect x="1045.1" y="707.0" width="68.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1048.1" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (469 samples, 2.00%)</title><rect x="1113.8" y="707.0" width="23.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1116.8" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (881 samples, 3.75%)</title><rect x="1137.3" y="707.0" width="44.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.3" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (881 samples, 3.75%)</title><rect x="1137.3" y="691.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.3" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (881 samples, 3.75%)</title><rect x="1137.3" y="675.0" width="44.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.3" y="686.0">java..</text>
</g>
<g>
<title>byte[] (881 samples, 3.75%)</title><rect x="1137.3" y="659.0" width="44.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1140.3" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (168 samples, 0.71%)</title><rect x="1181.6" y="755.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (168 samples, 0.71%)</title><rect x="1181.6" y="739.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (168 samples, 0.71%)</title><rect x="1181.6" y="723.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (168 samples, 0.71%)</title><rect x="1181.6" y="707.0" width="8.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
</g>
</svg>
