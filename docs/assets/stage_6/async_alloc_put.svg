<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (151,697 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (107,408 samples, 70.80%)</title><rect x="10.0" y="803.0" width="835.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (107,408 samples, 70.80%)</title><rect x="10.0" y="787.0" width="835.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (107,408 samples, 70.80%)</title><rect x="10.0" y="771.0" width="835.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (70,501 samples, 46.47%)</title><rect x="10.0" y="755.0" width="548.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37,395 samples, 24.65%)</title><rect x="10.0" y="739.0" width="290.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/CompletableFuture...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (1,006 samples, 0.66%)</title><rect x="10.0" y="723.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.accept (1,006 samples, 0.66%)</title><rect x="10.0" y="707.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$resolve$0 (1,006 samples, 0.66%)</title><rect x="10.0" y="691.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (1,006 samples, 0.66%)</title><rect x="10.0" y="675.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,006 samples, 0.66%)</title><rect x="10.0" y="659.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,006 samples, 0.66%)</title><rect x="10.0" y="643.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (424 samples, 0.28%)</title><rect x="10.0" y="627.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (424 samples, 0.28%)</title><rect x="10.0" y="611.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>byte[] (276 samples, 0.18%)</title><rect x="10.0" y="595.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.10%)</title><rect x="12.1" y="595.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (582 samples, 0.38%)</title><rect x="13.3" y="627.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.3" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (226 samples, 0.15%)</title><rect x="13.3" y="611.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="16.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (356 samples, 0.23%)</title><rect x="15.1" y="611.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (356 samples, 0.23%)</title><rect x="15.1" y="595.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (356 samples, 0.23%)</title><rect x="15.1" y="579.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (356 samples, 0.23%)</title><rect x="15.1" y="563.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (356 samples, 0.23%)</title><rect x="15.1" y="547.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (36,389 samples, 23.99%)</title><rect x="17.8" y="723.0" width="283.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.8" y="734.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (155 samples, 0.10%)</title><rect x="17.8" y="707.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="20.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/895526520.apply (36,234 samples, 23.89%)</title><rect x="19.0" y="707.0" width="281.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.0" y="718.0">jdk/internal/net/http/MultiExchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (36,234 samples, 23.89%)</title><rect x="19.0" y="691.0" width="281.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.0" y="702.0">jdk/internal/net/http/MultiExchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (36,234 samples, 23.89%)</title><rect x="19.0" y="675.0" width="281.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.0" y="686.0">jdk/internal/net/http/MultiExchange.re..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (214 samples, 0.14%)</title><rect x="19.0" y="659.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (214 samples, 0.14%)</title><rect x="19.0" y="643.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.get$Lambda (116 samples, 0.08%)</title><rect x="19.0" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$474 (116 samples, 0.08%)</title><rect x="19.0" y="611.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="22.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$483/1866005702.get$Lambda (98 samples, 0.06%)</title><rect x="19.9" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$483 (98 samples, 0.06%)</title><rect x="19.9" y="611.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (375 samples, 0.25%)</title><rect x="20.7" y="659.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (375 samples, 0.25%)</title><rect x="20.7" y="643.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (194 samples, 0.13%)</title><rect x="20.7" y="627.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="23.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (181 samples, 0.12%)</title><rect x="22.2" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (181 samples, 0.12%)</title><rect x="22.2" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (181 samples, 0.12%)</title><rect x="22.2" y="595.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (721 samples, 0.48%)</title><rect x="23.6" y="659.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (721 samples, 0.48%)</title><rect x="23.6" y="643.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (416 samples, 0.27%)</title><rect x="23.6" y="627.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.20%)</title><rect x="26.8" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.20%)</title><rect x="26.8" y="611.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (305 samples, 0.20%)</title><rect x="26.8" y="595.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="29.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (34,284 samples, 22.60%)</title><rect x="29.2" y="659.0" width="266.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.2" y="670.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (34,284 samples, 22.60%)</title><rect x="29.2" y="643.0" width="266.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.2" y="654.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (34,284 samples, 22.60%)</title><rect x="29.2" y="627.0" width="266.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.2" y="638.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (361 samples, 0.24%)</title><rect x="29.2" y="611.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (361 samples, 0.24%)</title><rect x="29.2" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.get$Lambda (92 samples, 0.06%)</title><rect x="29.2" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$206 (92 samples, 0.06%)</title><rect x="29.2" y="563.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="32.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/1035282649.get$Lambda (134 samples, 0.09%)</title><rect x="29.9" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$210 (134 samples, 0.09%)</title><rect x="29.9" y="563.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$377/2081876233.get$Lambda (135 samples, 0.09%)</title><rect x="31.0" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$377 (135 samples, 0.09%)</title><rect x="31.0" y="563.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="34.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (22,084 samples, 14.56%)</title><rect x="32.0" y="611.0" width="171.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.0" y="622.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (22,084 samples, 14.56%)</title><rect x="32.0" y="595.0" width="171.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.0" y="606.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (21,930 samples, 14.46%)</title><rect x="32.0" y="579.0" width="170.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.0" y="590.0">java/util/concurrent/C..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$377/2081876233.apply (21,930 samples, 14.46%)</title><rect x="32.0" y="563.0" width="170.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.0" y="574.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (21,930 samples, 14.46%)</title><rect x="32.0" y="547.0" width="170.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.0" y="558.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (21,930 samples, 14.46%)</title><rect x="32.0" y="531.0" width="170.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.0" y="542.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/1035282649.apply (21,930 samples, 14.46%)</title><rect x="32.0" y="515.0" width="170.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.0" y="526.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (21,930 samples, 14.46%)</title><rect x="32.0" y="499.0" width="170.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.0" y="510.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (233 samples, 0.15%)</title><rect x="32.0" y="483.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (233 samples, 0.15%)</title><rect x="32.0" y="467.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.get$Lambda (233 samples, 0.15%)</title><rect x="32.0" y="451.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$470 (233 samples, 0.15%)</title><rect x="32.0" y="435.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="35.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (671 samples, 0.44%)</title><rect x="33.8" y="483.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (671 samples, 0.44%)</title><rect x="33.8" y="467.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (230 samples, 0.15%)</title><rect x="33.8" y="451.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="36.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (167 samples, 0.11%)</title><rect x="35.6" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.apply (167 samples, 0.11%)</title><rect x="35.6" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (167 samples, 0.11%)</title><rect x="35.6" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (167 samples, 0.11%)</title><rect x="35.6" y="403.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.apply (167 samples, 0.11%)</title><rect x="35.6" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (167 samples, 0.11%)</title><rect x="35.6" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (121 samples, 0.08%)</title><rect x="36.0" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (56 samples, 0.04%)</title><rect x="36.0" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (56 samples, 0.04%)</title><rect x="36.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (56 samples, 0.04%)</title><rect x="36.0" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (62 samples, 0.04%)</title><rect x="36.4" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (52 samples, 0.03%)</title><rect x="36.5" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (274 samples, 0.18%)</title><rect x="36.9" y="451.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (274 samples, 0.18%)</title><rect x="36.9" y="435.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (274 samples, 0.18%)</title><rect x="36.9" y="419.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (378 samples, 0.25%)</title><rect x="39.1" y="483.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (378 samples, 0.25%)</title><rect x="39.1" y="467.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (206 samples, 0.14%)</title><rect x="39.1" y="451.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="42.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (164 samples, 0.11%)</title><rect x="40.7" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (164 samples, 0.11%)</title><rect x="40.7" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (164 samples, 0.11%)</title><rect x="40.7" y="419.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="43.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (20,648 samples, 13.61%)</title><rect x="42.0" y="483.0" width="160.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.0" y="494.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 0.14%)</title><rect x="42.0" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 0.14%)</title><rect x="42.0" y="451.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$464/2061587391.get$Lambda (94 samples, 0.06%)</title><rect x="42.0" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$464 (94 samples, 0.06%)</title><rect x="42.0" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="45.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$467/1416554442.get$Lambda (118 samples, 0.08%)</title><rect x="42.7" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$467 (118 samples, 0.08%)</title><rect x="42.7" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17,698 samples, 11.67%)</title><rect x="43.7" y="467.0" width="137.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.7" y="478.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17,698 samples, 11.67%)</title><rect x="43.7" y="451.0" width="137.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.7" y="462.0">java/util/concurr..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (247 samples, 0.16%)</title><rect x="43.7" y="435.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="46.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$464/2061587391.apply (17,003 samples, 11.21%)</title><rect x="45.6" y="435.0" width="132.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.6" y="446.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (17,003 samples, 11.21%)</title><rect x="45.6" y="419.0" width="132.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.6" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.04%)</title><rect x="45.6" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.04%)</title><rect x="45.6" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/657889941.get$Lambda (67 samples, 0.04%)</title><rect x="45.6" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$522 (67 samples, 0.04%)</title><rect x="45.6" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (378 samples, 0.25%)</title><rect x="46.1" y="403.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (378 samples, 0.25%)</title><rect x="46.1" y="387.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (217 samples, 0.14%)</title><rect x="46.1" y="371.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="49.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.11%)</title><rect x="47.8" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.11%)</title><rect x="47.8" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.11%)</title><rect x="47.8" y="339.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.10%)</title><rect x="49.0" y="403.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="52.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (389 samples, 0.26%)</title><rect x="50.2" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (147 samples, 0.10%)</title><rect x="50.2" y="387.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="53.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (242 samples, 0.16%)</title><rect x="51.3" y="387.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (144 samples, 0.09%)</title><rect x="51.3" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (144 samples, 0.09%)</title><rect x="51.3" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (144 samples, 0.09%)</title><rect x="51.3" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (144 samples, 0.09%)</title><rect x="51.3" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (144 samples, 0.09%)</title><rect x="51.3" y="307.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (98 samples, 0.06%)</title><rect x="52.4" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (98 samples, 0.06%)</title><rect x="52.4" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (98 samples, 0.06%)</title><rect x="52.4" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (98 samples, 0.06%)</title><rect x="52.4" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (98 samples, 0.06%)</title><rect x="52.4" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (98 samples, 0.06%)</title><rect x="52.4" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (43 samples, 0.03%)</title><rect x="52.4" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (34 samples, 0.02%)</title><rect x="52.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (34 samples, 0.02%)</title><rect x="52.5" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="55.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (55 samples, 0.04%)</title><rect x="52.8" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (55 samples, 0.04%)</title><rect x="52.8" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (55 samples, 0.04%)</title><rect x="52.8" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (55 samples, 0.04%)</title><rect x="52.8" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (55 samples, 0.04%)</title><rect x="52.8" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.8" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (55 samples, 0.04%)</title><rect x="52.8" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.8" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (38 samples, 0.03%)</title><rect x="52.9" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.9" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (38 samples, 0.03%)</title><rect x="52.9" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (417 samples, 0.27%)</title><rect x="53.2" y="403.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (417 samples, 0.27%)</title><rect x="53.2" y="387.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (122 samples, 0.08%)</title><rect x="53.2" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (122 samples, 0.08%)</title><rect x="53.2" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (122 samples, 0.08%)</title><rect x="53.2" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (122 samples, 0.08%)</title><rect x="53.2" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (295 samples, 0.19%)</title><rect x="54.1" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (295 samples, 0.19%)</title><rect x="54.1" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (209 samples, 0.14%)</title><rect x="54.1" y="339.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="57.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (79 samples, 0.05%)</title><rect x="55.8" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (79 samples, 0.05%)</title><rect x="55.8" y="323.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="58.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (15,606 samples, 10.29%)</title><rect x="56.4" y="403.0" width="121.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.4" y="414.0">jdk/internal/ne..</text>
</g>
<g>
<title>java.lang.StringBuilder (121 samples, 0.08%)</title><rect x="56.4" y="387.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="59.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (258 samples, 0.17%)</title><rect x="57.4" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.4" y="398.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.09%)</title><rect x="57.4" y="371.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="60.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.08%)</title><rect x="58.5" y="371.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="61.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,703 samples, 1.12%)</title><rect x="59.4" y="387.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,703 samples, 1.12%)</title><rect x="59.4" y="371.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,703 samples, 1.12%)</title><rect x="59.4" y="355.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="366.0"></text>
</g>
<g>
<title>byte[] (1,115 samples, 0.74%)</title><rect x="59.4" y="339.0" width="8.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="62.4" y="350.0"></text>
</g>
<g>
<title>byte[] (588 samples, 0.39%)</title><rect x="68.1" y="339.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="71.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (427 samples, 0.28%)</title><rect x="72.6" y="387.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (427 samples, 0.28%)</title><rect x="72.6" y="371.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.6" y="382.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.27%)</title><rect x="72.6" y="355.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,653 samples, 1.09%)</title><rect x="76.0" y="387.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,653 samples, 1.09%)</title><rect x="76.0" y="371.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,653 samples, 1.09%)</title><rect x="76.0" y="355.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.0" y="366.0"></text>
</g>
<g>
<title>byte[] (1,298 samples, 0.86%)</title><rect x="76.0" y="339.0" width="10.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="79.0" y="350.0"></text>
</g>
<g>
<title>byte[] (355 samples, 0.23%)</title><rect x="86.1" y="339.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (272 samples, 0.18%)</title><rect x="88.8" y="387.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (272 samples, 0.18%)</title><rect x="88.8" y="371.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (272 samples, 0.18%)</title><rect x="88.8" y="355.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="91.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (143 samples, 0.09%)</title><rect x="90.9" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (143 samples, 0.09%)</title><rect x="90.9" y="371.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="93.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (9,367 samples, 6.17%)</title><rect x="92.0" y="387.0" width="72.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.0" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (138 samples, 0.09%)</title><rect x="92.0" y="371.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.09%)</title><rect x="92.0" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.09%)</title><rect x="92.0" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.0" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$532/952561455.get$Lambda (138 samples, 0.09%)</title><rect x="92.0" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.0" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$532 (138 samples, 0.09%)</title><rect x="92.0" y="307.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="95.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4,314 samples, 2.84%)</title><rect x="93.1" y="371.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.1" y="382.0">jd..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2,369 samples, 1.56%)</title><rect x="93.1" y="355.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.1" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2,369 samples, 1.56%)</title><rect x="93.1" y="339.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,369 samples, 1.56%)</title><rect x="93.1" y="323.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,369 samples, 1.56%)</title><rect x="93.1" y="307.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.1" y="318.0"></text>
</g>
<g>
<title>byte[] (1,933 samples, 1.27%)</title><rect x="93.1" y="291.0" width="15.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="96.1" y="302.0"></text>
</g>
<g>
<title>byte[] (436 samples, 0.29%)</title><rect x="108.2" y="291.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (276 samples, 0.18%)</title><rect x="111.5" y="355.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.5" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (127 samples, 0.08%)</title><rect x="111.5" y="339.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="114.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (149 samples, 0.10%)</title><rect x="112.5" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (149 samples, 0.10%)</title><rect x="112.5" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (149 samples, 0.10%)</title><rect x="112.5" y="307.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="115.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (158 samples, 0.10%)</title><rect x="113.7" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.7" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (66 samples, 0.04%)</title><rect x="113.7" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="116.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (92 samples, 0.06%)</title><rect x="114.2" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (92 samples, 0.06%)</title><rect x="114.2" y="323.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="117.2" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (150 samples, 0.10%)</title><rect x="114.9" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (150 samples, 0.10%)</title><rect x="114.9" y="339.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="117.9" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (95 samples, 0.06%)</title><rect x="116.1" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.1" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (95 samples, 0.06%)</title><rect x="116.1" y="339.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="119.1" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$532/952561455.test (1,266 samples, 0.83%)</title><rect x="116.8" y="355.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.8" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,266 samples, 0.83%)</title><rect x="116.8" y="339.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$85/11939193.test (1,266 samples, 0.83%)</title><rect x="116.8" y="323.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,266 samples, 0.83%)</title><rect x="116.8" y="307.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.8" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$78/302977067.test (1,266 samples, 0.83%)</title><rect x="116.8" y="291.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.8" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,266 samples, 0.83%)</title><rect x="116.8" y="275.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/657381435.test (1,266 samples, 0.83%)</title><rect x="116.8" y="259.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,266 samples, 0.83%)</title><rect x="116.8" y="243.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,266 samples, 0.83%)</title><rect x="116.8" y="227.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,266 samples, 0.83%)</title><rect x="116.8" y="211.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (609 samples, 0.40%)</title><rect x="116.8" y="195.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="119.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (657 samples, 0.43%)</title><rect x="121.6" y="195.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.6" y="206.0"></text>
</g>
<g>
<title>byte[] (657 samples, 0.43%)</title><rect x="121.6" y="179.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="124.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4,915 samples, 3.24%)</title><rect x="126.7" y="371.0" width="38.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.7" y="382.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,915 samples, 3.24%)</title><rect x="126.7" y="355.0" width="38.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.7" y="366.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,915 samples, 3.24%)</title><rect x="126.7" y="339.0" width="38.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.7" y="350.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (93 samples, 0.06%)</title><rect x="126.7" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="129.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (133 samples, 0.09%)</title><rect x="127.4" y="323.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="130.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (233 samples, 0.15%)</title><rect x="128.4" y="323.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="131.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (60 samples, 0.04%)</title><rect x="130.2" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="133.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.11%)</title><rect x="130.7" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.11%)</title><rect x="130.7" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (160 samples, 0.11%)</title><rect x="130.7" y="291.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.7" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (160 samples, 0.11%)</title><rect x="130.7" y="275.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="133.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (162 samples, 0.11%)</title><rect x="132.0" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.0" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (162 samples, 0.11%)</title><rect x="132.0" y="307.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,796 samples, 2.50%)</title><rect x="133.2" y="323.0" width="29.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.2" y="334.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (3,796 samples, 2.50%)</title><rect x="133.2" y="307.0" width="29.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.2" y="318.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,796 samples, 2.50%)</title><rect x="133.2" y="291.0" width="29.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.2" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (747 samples, 0.49%)</title><rect x="133.2" y="275.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (747 samples, 0.49%)</title><rect x="133.2" y="259.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.get$Lambda (747 samples, 0.49%)</title><rect x="133.2" y="243.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.2" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$539 (747 samples, 0.49%)</title><rect x="133.2" y="227.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="136.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (285 samples, 0.19%)</title><rect x="139.0" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.accept (285 samples, 0.19%)</title><rect x="139.0" y="259.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (285 samples, 0.19%)</title><rect x="139.0" y="243.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.19%)</title><rect x="139.0" y="227.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.19%)</title><rect x="139.0" y="211.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.19%)</title><rect x="139.0" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.19%)</title><rect x="139.0" y="179.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (285 samples, 0.19%)</title><rect x="139.0" y="163.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (285 samples, 0.19%)</title><rect x="139.0" y="147.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="142.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,510 samples, 1.00%)</title><rect x="141.2" y="275.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.2" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,510 samples, 1.00%)</title><rect x="141.2" y="259.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (768 samples, 0.51%)</title><rect x="141.2" y="243.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (768 samples, 0.51%)</title><rect x="141.2" y="227.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (768 samples, 0.51%)</title><rect x="141.2" y="211.0" width="6.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="144.2" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (742 samples, 0.49%)</title><rect x="147.2" y="243.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.2" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (742 samples, 0.49%)</title><rect x="147.2" y="227.0" width="5.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="150.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,254 samples, 0.83%)</title><rect x="153.0" y="275.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,254 samples, 0.83%)</title><rect x="153.0" y="259.0" width="9.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="156.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (278 samples, 0.18%)</title><rect x="162.7" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (278 samples, 0.18%)</title><rect x="162.7" y="307.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="165.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (434 samples, 0.29%)</title><rect x="164.9" y="387.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (127 samples, 0.08%)</title><rect x="164.9" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.9" y="382.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.08%)</title><rect x="164.9" y="355.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (307 samples, 0.20%)</title><rect x="165.9" y="371.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (307 samples, 0.20%)</title><rect x="165.9" y="355.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/543846639.invoke (307 samples, 0.20%)</title><rect x="165.9" y="339.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (307 samples, 0.20%)</title><rect x="165.9" y="323.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (135 samples, 0.09%)</title><rect x="165.9" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.09%)</title><rect x="165.9" y="291.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="168.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (172 samples, 0.11%)</title><rect x="166.9" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (172 samples, 0.11%)</title><rect x="166.9" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.9" y="302.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.11%)</title><rect x="166.9" y="275.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="169.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (364 samples, 0.24%)</title><rect x="168.3" y="387.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (364 samples, 0.24%)</title><rect x="168.3" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (364 samples, 0.24%)</title><rect x="168.3" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (364 samples, 0.24%)</title><rect x="168.3" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/543846639.invoke (364 samples, 0.24%)</title><rect x="168.3" y="323.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (364 samples, 0.24%)</title><rect x="168.3" y="307.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (128 samples, 0.08%)</title><rect x="168.3" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (128 samples, 0.08%)</title><rect x="168.3" y="275.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="171.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (236 samples, 0.16%)</title><rect x="169.3" y="291.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (236 samples, 0.16%)</title><rect x="169.3" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.3" y="286.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.16%)</title><rect x="169.3" y="259.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="172.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (864 samples, 0.57%)</title><rect x="171.1" y="387.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (231 samples, 0.15%)</title><rect x="171.1" y="371.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="174.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (234 samples, 0.15%)</title><rect x="172.9" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (234 samples, 0.15%)</title><rect x="172.9" y="355.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="175.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (399 samples, 0.26%)</title><rect x="174.7" y="371.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.7" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (399 samples, 0.26%)</title><rect x="174.7" y="355.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (448 samples, 0.30%)</title><rect x="177.8" y="435.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (448 samples, 0.30%)</title><rect x="177.8" y="419.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (448 samples, 0.30%)</title><rect x="177.8" y="403.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="180.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (434 samples, 0.29%)</title><rect x="181.3" y="467.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="184.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.12%)</title><rect x="184.8" y="467.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,109 samples, 1.39%)</title><rect x="186.2" y="467.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (175 samples, 0.12%)</title><rect x="186.2" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (175 samples, 0.12%)</title><rect x="186.2" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/56190756.get$Lambda (90 samples, 0.06%)</title><rect x="186.2" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$411 (90 samples, 0.06%)</title><rect x="186.2" y="403.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="189.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/544637637.get$Lambda (85 samples, 0.06%)</title><rect x="186.9" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$421 (85 samples, 0.06%)</title><rect x="186.9" y="403.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="189.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (222 samples, 0.15%)</title><rect x="187.6" y="451.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="190.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (191 samples, 0.13%)</title><rect x="189.3" y="451.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="192.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (196 samples, 0.13%)</title><rect x="190.8" y="451.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="193.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (598 samples, 0.39%)</title><rect x="192.3" y="451.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (598 samples, 0.39%)</title><rect x="192.3" y="435.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (598 samples, 0.39%)</title><rect x="192.3" y="419.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (598 samples, 0.39%)</title><rect x="192.3" y="403.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (598 samples, 0.39%)</title><rect x="192.3" y="387.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (598 samples, 0.39%)</title><rect x="192.3" y="371.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (598 samples, 0.39%)</title><rect x="192.3" y="355.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (598 samples, 0.39%)</title><rect x="192.3" y="339.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (598 samples, 0.39%)</title><rect x="192.3" y="323.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (208 samples, 0.14%)</title><rect x="192.3" y="307.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (208 samples, 0.14%)</title><rect x="192.3" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$430/849471415.get$Lambda (94 samples, 0.06%)</title><rect x="192.3" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$430 (94 samples, 0.06%)</title><rect x="192.3" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="195.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$436/99321411.get$Lambda (114 samples, 0.08%)</title><rect x="193.0" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$436 (114 samples, 0.08%)</title><rect x="193.0" y="259.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="196.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (178 samples, 0.12%)</title><rect x="193.9" y="307.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="196.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (212 samples, 0.14%)</title><rect x="195.3" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (212 samples, 0.14%)</title><rect x="195.3" y="291.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (84 samples, 0.06%)</title><rect x="195.3" y="275.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="198.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (128 samples, 0.08%)</title><rect x="196.0" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (128 samples, 0.08%)</title><rect x="196.0" y="259.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="199.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (561 samples, 0.37%)</title><rect x="197.0" y="451.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.0" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (120 samples, 0.08%)</title><rect x="197.0" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="200.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (267 samples, 0.18%)</title><rect x="197.9" y="435.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="200.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (174 samples, 0.11%)</title><rect x="200.0" y="435.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.0" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (174 samples, 0.11%)</title><rect x="200.0" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.0" y="430.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.11%)</title><rect x="200.0" y="403.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="203.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (166 samples, 0.11%)</title><rect x="201.3" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (166 samples, 0.11%)</title><rect x="201.3" y="435.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="204.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.10%)</title><rect x="202.6" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.10%)</title><rect x="202.6" y="563.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (154 samples, 0.10%)</title><rect x="202.6" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (365 samples, 0.24%)</title><rect x="203.8" y="611.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (365 samples, 0.24%)</title><rect x="203.8" y="595.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (179 samples, 0.12%)</title><rect x="203.8" y="579.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="206.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (186 samples, 0.12%)</title><rect x="205.2" y="579.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (186 samples, 0.12%)</title><rect x="205.2" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (186 samples, 0.12%)</title><rect x="205.2" y="547.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="208.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (11,474 samples, 7.56%)</title><rect x="206.7" y="611.0" width="89.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.7" y="622.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (202 samples, 0.13%)</title><rect x="206.7" y="595.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (202 samples, 0.13%)</title><rect x="206.7" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$363/1688663015.get$Lambda (114 samples, 0.08%)</title><rect x="206.7" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$363 (114 samples, 0.08%)</title><rect x="206.7" y="547.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="209.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$368/791125902.get$Lambda (88 samples, 0.06%)</title><rect x="207.5" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$368 (88 samples, 0.06%)</title><rect x="207.5" y="547.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (353 samples, 0.23%)</title><rect x="208.2" y="595.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (353 samples, 0.23%)</title><rect x="208.2" y="579.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$368/791125902.apply (163 samples, 0.11%)</title><rect x="208.2" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (163 samples, 0.11%)</title><rect x="208.2" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (163 samples, 0.11%)</title><rect x="208.2" y="531.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (163 samples, 0.11%)</title><rect x="208.2" y="515.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="211.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.13%)</title><rect x="209.5" y="563.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.13%)</title><rect x="209.5" y="547.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.13%)</title><rect x="209.5" y="531.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="212.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (149 samples, 0.10%)</title><rect x="211.0" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (149 samples, 0.10%)</title><rect x="211.0" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.10%)</title><rect x="211.0" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.10%)</title><rect x="211.0" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (149 samples, 0.10%)</title><rect x="211.0" y="531.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="214.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (10,770 samples, 7.10%)</title><rect x="212.1" y="595.0" width="83.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.1" y="606.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.08%)</title><rect x="212.1" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.08%)</title><rect x="212.1" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$223/1128961257.get$Lambda (116 samples, 0.08%)</title><rect x="212.1" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$223 (116 samples, 0.08%)</title><rect x="212.1" y="531.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="215.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10,006 samples, 6.60%)</title><rect x="213.0" y="579.0" width="77.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.0" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10,006 samples, 6.60%)</title><rect x="213.0" y="563.0" width="77.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.0" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,841 samples, 6.49%)</title><rect x="213.0" y="547.0" width="76.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.0" y="558.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$223/1128961257.apply (9,841 samples, 6.49%)</title><rect x="213.0" y="531.0" width="76.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9,841 samples, 6.49%)</title><rect x="213.0" y="515.0" width="76.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9,841 samples, 6.49%)</title><rect x="213.0" y="499.0" width="76.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.0" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.05%)</title><rect x="213.0" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.05%)</title><rect x="213.0" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$352/524402461.get$Lambda (78 samples, 0.05%)</title><rect x="213.0" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$352 (78 samples, 0.05%)</title><rect x="213.0" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="216.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4,060 samples, 2.68%)</title><rect x="213.6" y="483.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.6" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4,060 samples, 2.68%)</title><rect x="213.6" y="467.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.6" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4,060 samples, 2.68%)</title><rect x="213.6" y="451.0" width="31.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.6" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$352/524402461.apply (3,904 samples, 2.57%)</title><rect x="213.6" y="435.0" width="30.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.6" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3,904 samples, 2.57%)</title><rect x="213.6" y="419.0" width="30.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.6" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3,904 samples, 2.57%)</title><rect x="213.6" y="403.0" width="30.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.6" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3,904 samples, 2.57%)</title><rect x="213.6" y="387.0" width="30.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.6" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2,532 samples, 1.67%)</title><rect x="213.6" y="371.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.6" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (672 samples, 0.44%)</title><rect x="213.6" y="355.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.07%)</title><rect x="213.6" y="339.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="216.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (300 samples, 0.20%)</title><rect x="214.4" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (300 samples, 0.20%)</title><rect x="214.4" y="323.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.4" y="334.0"></text>
</g>
<g>
<title>byte[] (298 samples, 0.20%)</title><rect x="214.4" y="307.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="217.4" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (268 samples, 0.18%)</title><rect x="216.8" y="339.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.8" y="350.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.17%)</title><rect x="216.8" y="323.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="219.8" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (124 samples, 0.08%)</title><rect x="218.9" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.9" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (124 samples, 0.08%)</title><rect x="218.9" y="339.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="221.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,264 samples, 0.83%)</title><rect x="219.8" y="355.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (135 samples, 0.09%)</title><rect x="219.8" y="339.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="222.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (887 samples, 0.58%)</title><rect x="220.9" y="339.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (887 samples, 0.58%)</title><rect x="220.9" y="323.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (617 samples, 0.41%)</title><rect x="220.9" y="307.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (617 samples, 0.41%)</title><rect x="220.9" y="291.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/797814020.get$Lambda (617 samples, 0.41%)</title><rect x="220.9" y="275.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$73 (617 samples, 0.41%)</title><rect x="220.9" y="259.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="223.9" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (270 samples, 0.18%)</title><rect x="225.7" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/797814020.run (270 samples, 0.18%)</title><rect x="225.7" y="291.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (270 samples, 0.18%)</title><rect x="225.7" y="275.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.7" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (270 samples, 0.18%)</title><rect x="225.7" y="259.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (270 samples, 0.18%)</title><rect x="225.7" y="243.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (270 samples, 0.18%)</title><rect x="225.7" y="227.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="228.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (242 samples, 0.16%)</title><rect x="227.8" y="339.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (242 samples, 0.16%)</title><rect x="227.8" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.8" y="334.0"></text>
</g>
<g>
<title>int[] (242 samples, 0.16%)</title><rect x="227.8" y="307.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="230.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (472 samples, 0.31%)</title><rect x="229.7" y="355.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="366.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.16%)</title><rect x="229.7" y="339.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="232.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (228 samples, 0.15%)</title><rect x="231.6" y="339.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (228 samples, 0.15%)</title><rect x="231.6" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (228 samples, 0.15%)</title><rect x="231.6" y="307.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="234.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,372 samples, 0.90%)</title><rect x="233.3" y="371.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (356 samples, 0.23%)</title><rect x="233.3" y="355.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="236.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (366 samples, 0.24%)</title><rect x="236.1" y="355.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (366 samples, 0.24%)</title><rect x="236.1" y="339.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="239.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (650 samples, 0.43%)</title><rect x="238.9" y="355.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.9" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (650 samples, 0.43%)</title><rect x="238.9" y="339.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="241.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.10%)</title><rect x="244.0" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (156 samples, 0.10%)</title><rect x="244.0" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (156 samples, 0.10%)</title><rect x="244.0" y="403.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5,703 samples, 3.76%)</title><rect x="245.2" y="483.0" width="44.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.2" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (417 samples, 0.27%)</title><rect x="245.2" y="467.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="248.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5,099 samples, 3.36%)</title><rect x="248.6" y="467.0" width="39.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.6" y="478.0">jdk..</text>
</g>
<g>
<title>java.lang.Object (80 samples, 0.05%)</title><rect x="248.6" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="251.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (152 samples, 0.10%)</title><rect x="249.2" y="451.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="252.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (141 samples, 0.09%)</title><rect x="250.4" y="451.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="253.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (224 samples, 0.15%)</title><rect x="251.5" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (224 samples, 0.15%)</title><rect x="251.5" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.5" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (224 samples, 0.15%)</title><rect x="251.5" y="419.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="254.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (136 samples, 0.09%)</title><rect x="253.2" y="451.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (136 samples, 0.09%)</title><rect x="253.2" y="435.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="256.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (387 samples, 0.26%)</title><rect x="254.3" y="451.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="257.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (309 samples, 0.20%)</title><rect x="257.3" y="451.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="260.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (309 samples, 0.20%)</title><rect x="259.7" y="451.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="262.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (297 samples, 0.20%)</title><rect x="262.1" y="451.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="265.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,480 samples, 0.98%)</title><rect x="264.4" y="451.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (99 samples, 0.07%)</title><rect x="264.4" y="435.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="267.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (67 samples, 0.04%)</title><rect x="265.2" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="268.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (123 samples, 0.08%)</title><rect x="265.7" y="435.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="268.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (90 samples, 0.06%)</title><rect x="266.7" y="435.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="269.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.05%)</title><rect x="267.4" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.05%)</title><rect x="267.4" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.get$Lambda (75 samples, 0.05%)</title><rect x="267.4" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$344 (75 samples, 0.05%)</title><rect x="267.4" y="387.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="270.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (120 samples, 0.08%)</title><rect x="268.0" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (120 samples, 0.08%)</title><rect x="268.0" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="271.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (135 samples, 0.09%)</title><rect x="268.9" y="435.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="271.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.11%)</title><rect x="270.0" y="435.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="273.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (603 samples, 0.40%)</title><rect x="271.3" y="435.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (108 samples, 0.07%)</title><rect x="271.3" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="274.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (183 samples, 0.12%)</title><rect x="272.1" y="419.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="275.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (83 samples, 0.05%)</title><rect x="273.5" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (83 samples, 0.05%)</title><rect x="273.5" y="403.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="276.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (229 samples, 0.15%)</title><rect x="274.2" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (75 samples, 0.05%)</title><rect x="274.2" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (82 samples, 0.05%)</title><rect x="274.8" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="277.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (72 samples, 0.05%)</title><rect x="275.4" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="278.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (981 samples, 0.65%)</title><rect x="276.0" y="451.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (81 samples, 0.05%)</title><rect x="276.0" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="279.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (85 samples, 0.06%)</title><rect x="276.6" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (75 samples, 0.05%)</title><rect x="277.3" y="435.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="280.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (121 samples, 0.08%)</title><rect x="277.8" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (121 samples, 0.08%)</title><rect x="277.8" y="419.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="280.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (619 samples, 0.41%)</title><rect x="278.8" y="435.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (122 samples, 0.08%)</title><rect x="278.8" y="419.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="281.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (175 samples, 0.12%)</title><rect x="279.7" y="419.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="282.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (73 samples, 0.05%)</title><rect x="281.1" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (73 samples, 0.05%)</title><rect x="281.1" y="403.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="284.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (249 samples, 0.16%)</title><rect x="281.7" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (81 samples, 0.05%)</title><rect x="281.7" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="284.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (74 samples, 0.05%)</title><rect x="282.3" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="285.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (94 samples, 0.06%)</title><rect x="282.9" y="403.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="285.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (117 samples, 0.08%)</title><rect x="283.6" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (117 samples, 0.08%)</title><rect x="283.6" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (117 samples, 0.08%)</title><rect x="283.6" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (117 samples, 0.08%)</title><rect x="283.6" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (117 samples, 0.08%)</title><rect x="283.6" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (117 samples, 0.08%)</title><rect x="283.6" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.08%)</title><rect x="283.6" y="355.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="286.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (483 samples, 0.32%)</title><rect x="284.5" y="451.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (127 samples, 0.08%)</title><rect x="284.5" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.08%)</title><rect x="284.5" y="419.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1559228528.get$Lambda (127 samples, 0.08%)</title><rect x="284.5" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$239 (127 samples, 0.08%)</title><rect x="284.5" y="387.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="287.5" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (356 samples, 0.23%)</title><rect x="285.5" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1559228528.run (356 samples, 0.23%)</title><rect x="285.5" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (356 samples, 0.23%)</title><rect x="285.5" y="403.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.5" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (83 samples, 0.05%)</title><rect x="285.5" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="288.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (273 samples, 0.18%)</title><rect x="286.1" y="387.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (138 samples, 0.09%)</title><rect x="286.1" y="371.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="289.1" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (135 samples, 0.09%)</title><rect x="287.2" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (135 samples, 0.09%)</title><rect x="287.2" y="355.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (135 samples, 0.09%)</title><rect x="287.2" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (135 samples, 0.09%)</title><rect x="287.2" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (135 samples, 0.09%)</title><rect x="287.2" y="307.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="290.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (170 samples, 0.11%)</title><rect x="288.3" y="467.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.11%)</title><rect x="288.3" y="451.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="291.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.11%)</title><rect x="289.6" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="292.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.11%)</title><rect x="289.6" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (165 samples, 0.11%)</title><rect x="289.6" y="515.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="292.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (159 samples, 0.10%)</title><rect x="290.9" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (159 samples, 0.10%)</title><rect x="290.9" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (159 samples, 0.10%)</title><rect x="290.9" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (159 samples, 0.10%)</title><rect x="290.9" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (159 samples, 0.10%)</title><rect x="290.9" y="515.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="293.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (489 samples, 0.32%)</title><rect x="292.1" y="579.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (313 samples, 0.21%)</title><rect x="292.1" y="563.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (313 samples, 0.21%)</title><rect x="292.1" y="547.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2789112.linkToTargetMethod (313 samples, 0.21%)</title><rect x="292.1" y="531.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/962273869.invoke (313 samples, 0.21%)</title><rect x="292.1" y="515.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/132533114.invoke (313 samples, 0.21%)</title><rect x="292.1" y="499.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (313 samples, 0.21%)</title><rect x="292.1" y="483.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (119 samples, 0.08%)</title><rect x="292.1" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.08%)</title><rect x="292.1" y="451.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="295.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (194 samples, 0.13%)</title><rect x="293.0" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (194 samples, 0.13%)</title><rect x="293.0" y="451.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.0" y="462.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.13%)</title><rect x="293.0" y="435.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="296.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (176 samples, 0.12%)</title><rect x="294.5" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (176 samples, 0.12%)</title><rect x="294.5" y="547.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="297.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (182 samples, 0.12%)</title><rect x="295.9" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (182 samples, 0.12%)</title><rect x="295.9" y="643.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (182 samples, 0.12%)</title><rect x="295.9" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (182 samples, 0.12%)</title><rect x="295.9" y="611.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="298.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (458 samples, 0.30%)</title><rect x="297.3" y="659.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (339 samples, 0.22%)</title><rect x="297.3" y="643.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="300.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (119 samples, 0.08%)</title><rect x="300.0" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (119 samples, 0.08%)</title><rect x="300.0" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (119 samples, 0.08%)</title><rect x="300.0" y="611.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.0" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (119 samples, 0.08%)</title><rect x="300.0" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (119 samples, 0.08%)</title><rect x="300.0" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="303.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (119 samples, 0.08%)</title><rect x="300.0" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (119 samples, 0.08%)</title><rect x="300.0" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (119 samples, 0.08%)</title><rect x="300.0" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (119 samples, 0.08%)</title><rect x="300.0" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (119 samples, 0.08%)</title><rect x="300.0" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.0" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (119 samples, 0.08%)</title><rect x="300.0" y="483.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="303.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get (33,106 samples, 21.82%)</title><rect x="300.9" y="739.0" width="257.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.9" y="750.0">ru/mail/polis/service/AsyncClientS..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$handleLocal$3 (33,106 samples, 21.82%)</title><rect x="300.9" y="723.0" width="257.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.9" y="734.0">ru/mail/polis/service/AsyncClientS..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.put (33,106 samples, 21.82%)</title><rect x="300.9" y="707.0" width="257.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.9" y="718.0">ru/mail/polis/service/AsyncClientS..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,639 samples, 1.74%)</title><rect x="300.9" y="691.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,639 samples, 1.74%)</title><rect x="300.9" y="675.0" width="20.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,639 samples, 1.74%)</title><rect x="300.9" y="659.0" width="20.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,639 samples, 1.74%)</title><rect x="300.9" y="643.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.9" y="654.0"></text>
</g>
<g>
<title>byte[] (2,639 samples, 1.74%)</title><rect x="300.9" y="627.0" width="20.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="303.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10,699 samples, 7.05%)</title><rect x="321.4" y="691.0" width="83.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.4" y="702.0">java/nio/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10,699 samples, 7.05%)</title><rect x="321.4" y="675.0" width="83.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.4" y="686.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10,699 samples, 7.05%)</title><rect x="321.4" y="659.0" width="83.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="324.4" y="670.0">java.nio...</text>
</g>
<g>
<title>one.nio.http.Response (3,244 samples, 2.14%)</title><rect x="404.6" y="691.0" width="25.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="407.6" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10,368 samples, 6.83%)</title><rect x="429.9" y="691.0" width="80.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.9" y="702.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (4,377 samples, 2.89%)</title><rect x="429.9" y="675.0" width="34.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.9" y="686.0">by..</text>
</g>
<g>
<title>java.lang.String[] (3,489 samples, 2.30%)</title><rect x="463.9" y="675.0" width="27.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="466.9" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (2,502 samples, 1.65%)</title><rect x="491.1" y="675.0" width="19.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="494.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DaoEngine.upsert (6,156 samples, 4.06%)</title><rect x="510.5" y="691.0" width="47.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.5" y="702.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toByteArray (3,506 samples, 2.31%)</title><rect x="510.5" y="675.0" width="27.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="686.0">r..</text>
</g>
<g>
<title>byte[] (3,506 samples, 2.31%)</title><rect x="510.5" y="659.0" width="27.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="513.5" y="670.0">b..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.toShiftedArray (2,650 samples, 1.75%)</title><rect x="537.8" y="675.0" width="20.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.8" y="686.0"></text>
</g>
<g>
<title>byte[] (2,650 samples, 1.75%)</title><rect x="537.8" y="659.0" width="20.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="540.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,697 samples, 2.44%)</title><rect x="558.4" y="755.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,519 samples, 1.66%)</title><rect x="558.4" y="739.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,452 samples, 1.62%)</title><rect x="558.4" y="723.0" width="19.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,452 samples, 1.62%)</title><rect x="558.4" y="707.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,452 samples, 1.62%)</title><rect x="558.4" y="691.0" width="19.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="561.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (67 samples, 0.04%)</title><rect x="577.5" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (67 samples, 0.04%)</title><rect x="577.5" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (67 samples, 0.04%)</title><rect x="577.5" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (67 samples, 0.04%)</title><rect x="577.5" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (67 samples, 0.04%)</title><rect x="577.5" y="659.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="580.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,178 samples, 0.78%)</title><rect x="578.0" y="739.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,178 samples, 0.78%)</title><rect x="578.0" y="723.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,178 samples, 0.78%)</title><rect x="578.0" y="707.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,178 samples, 0.78%)</title><rect x="578.0" y="691.0" width="9.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="581.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$544/870026340.run (9,773 samples, 6.44%)</title><rect x="587.2" y="755.0" width="76.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.2" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (9,773 samples, 6.44%)</title><rect x="587.2" y="739.0" width="76.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.2" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (9,773 samples, 6.44%)</title><rect x="587.2" y="723.0" width="76.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.2" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (9,773 samples, 6.44%)</title><rect x="587.2" y="707.0" width="76.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.2" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,773 samples, 6.44%)</title><rect x="587.2" y="691.0" width="76.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.2" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,773 samples, 6.44%)</title><rect x="587.2" y="675.0" width="76.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.2" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,773 samples, 6.44%)</title><rect x="587.2" y="659.0" width="76.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.2" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,773 samples, 6.44%)</title><rect x="587.2" y="643.0" width="76.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.2" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,773 samples, 6.44%)</title><rect x="587.2" y="627.0" width="76.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.2" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9,773 samples, 6.44%)</title><rect x="587.2" y="611.0" width="76.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.2" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (9,773 samples, 6.44%)</title><rect x="587.2" y="595.0" width="76.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.2" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (8,963 samples, 5.91%)</title><rect x="587.2" y="579.0" width="69.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.2" y="590.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (617 samples, 0.41%)</title><rect x="587.2" y="563.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (617 samples, 0.41%)</title><rect x="587.2" y="547.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$546/1278642675.get$Lambda (395 samples, 0.26%)</title><rect x="587.2" y="531.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$546 (395 samples, 0.26%)</title><rect x="587.2" y="515.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$564/1199250429.get$Lambda (107 samples, 0.07%)</title><rect x="590.2" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$564 (107 samples, 0.07%)</title><rect x="590.2" y="515.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="593.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$567/981098721.get$Lambda (115 samples, 0.08%)</title><rect x="591.1" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$567 (115 samples, 0.08%)</title><rect x="591.1" y="515.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="594.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (8,346 samples, 5.50%)</title><rect x="592.0" y="563.0" width="64.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.0" y="574.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (358 samples, 0.24%)</title><rect x="592.0" y="547.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,988 samples, 5.27%)</title><rect x="594.7" y="547.0" width="62.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.7" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,988 samples, 5.27%)</title><rect x="594.7" y="531.0" width="62.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.7" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,988 samples, 5.27%)</title><rect x="594.7" y="515.0" width="62.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.7" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,195 samples, 0.79%)</title><rect x="594.7" y="499.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (448 samples, 0.30%)</title><rect x="594.7" y="483.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="597.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$550/1834351860.apply (747 samples, 0.49%)</title><rect x="598.2" y="483.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (747 samples, 0.49%)</title><rect x="598.2" y="467.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (747 samples, 0.49%)</title><rect x="598.2" y="451.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (174 samples, 0.11%)</title><rect x="598.2" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.2" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (174 samples, 0.11%)</title><rect x="598.2" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.2" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (174 samples, 0.11%)</title><rect x="598.2" y="403.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="601.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (573 samples, 0.38%)</title><rect x="599.6" y="435.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.06%)</title><rect x="599.6" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.06%)</title><rect x="599.6" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/1686384082.get$Lambda (92 samples, 0.06%)</title><rect x="599.6" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$570 (92 samples, 0.06%)</title><rect x="599.6" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="602.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (481 samples, 0.32%)</title><rect x="600.3" y="419.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (481 samples, 0.32%)</title><rect x="600.3" y="403.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (265 samples, 0.17%)</title><rect x="600.3" y="387.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="603.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.14%)</title><rect x="602.4" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.14%)</title><rect x="602.4" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (216 samples, 0.14%)</title><rect x="602.4" y="355.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="605.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6,793 samples, 4.48%)</title><rect x="604.0" y="499.0" width="52.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.0" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,793 samples, 4.48%)</title><rect x="604.0" y="483.0" width="52.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.0" y="494.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$470/292315939.apply (6,793 samples, 4.48%)</title><rect x="604.0" y="467.0" width="52.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.0" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6,793 samples, 4.48%)</title><rect x="604.0" y="451.0" width="52.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.0" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,793 samples, 4.48%)</title><rect x="604.0" y="435.0" width="52.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.0" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$206/308386622.apply (6,793 samples, 4.48%)</title><rect x="604.0" y="419.0" width="52.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.0" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6,793 samples, 4.48%)</title><rect x="604.0" y="403.0" width="52.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.0" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.07%)</title><rect x="604.0" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.07%)</title><rect x="604.0" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$550/1834351860.get$Lambda (103 samples, 0.07%)</title><rect x="604.0" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$550 (103 samples, 0.07%)</title><rect x="604.0" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="607.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (524 samples, 0.35%)</title><rect x="604.8" y="387.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (524 samples, 0.35%)</title><rect x="604.8" y="371.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (296 samples, 0.20%)</title><rect x="604.8" y="355.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="607.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.15%)</title><rect x="607.1" y="355.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.15%)</title><rect x="607.1" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (228 samples, 0.15%)</title><rect x="607.1" y="323.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="610.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (641 samples, 0.42%)</title><rect x="608.9" y="387.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.08%)</title><rect x="608.9" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.08%)</title><rect x="608.9" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$551/1036639044.get$Lambda (124 samples, 0.08%)</title><rect x="608.9" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$551 (124 samples, 0.08%)</title><rect x="608.9" y="323.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="611.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (517 samples, 0.34%)</title><rect x="609.9" y="371.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (517 samples, 0.34%)</title><rect x="609.9" y="355.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (260 samples, 0.17%)</title><rect x="609.9" y="339.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="612.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (257 samples, 0.17%)</title><rect x="611.9" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (257 samples, 0.17%)</title><rect x="611.9" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (257 samples, 0.17%)</title><rect x="611.9" y="307.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="614.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5,525 samples, 3.64%)</title><rect x="613.9" y="387.0" width="43.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.9" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (251 samples, 0.17%)</title><rect x="613.9" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (251 samples, 0.17%)</title><rect x="613.9" y="355.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$547/687806060.get$Lambda (121 samples, 0.08%)</title><rect x="613.9" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$547 (121 samples, 0.08%)</title><rect x="613.9" y="323.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="616.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$549/1542649797.get$Lambda (130 samples, 0.09%)</title><rect x="614.8" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$549 (130 samples, 0.09%)</title><rect x="614.8" y="323.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="617.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2,014 samples, 1.33%)</title><rect x="615.9" y="371.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2,014 samples, 1.33%)</title><rect x="615.9" y="355.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2,014 samples, 1.33%)</title><rect x="615.9" y="339.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$547/687806060.accept (695 samples, 0.46%)</title><rect x="615.9" y="323.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (695 samples, 0.46%)</title><rect x="615.9" y="307.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (695 samples, 0.46%)</title><rect x="615.9" y="291.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.12%)</title><rect x="615.9" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.12%)</title><rect x="615.9" y="259.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/774850884.get$Lambda (183 samples, 0.12%)</title><rect x="615.9" y="243.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$548 (183 samples, 0.12%)</title><rect x="615.9" y="227.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (512 samples, 0.34%)</title><rect x="617.3" y="275.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (512 samples, 0.34%)</title><rect x="617.3" y="259.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (285 samples, 0.19%)</title><rect x="617.3" y="243.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (227 samples, 0.15%)</title><rect x="619.5" y="243.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (227 samples, 0.15%)</title><rect x="619.5" y="227.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (227 samples, 0.15%)</title><rect x="619.5" y="211.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="622.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$549/1542649797.accept (863 samples, 0.57%)</title><rect x="621.3" y="323.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (863 samples, 0.57%)</title><rect x="621.3" y="307.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (863 samples, 0.57%)</title><rect x="621.3" y="291.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (863 samples, 0.57%)</title><rect x="621.3" y="275.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (863 samples, 0.57%)</title><rect x="621.3" y="259.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (863 samples, 0.57%)</title><rect x="621.3" y="243.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (863 samples, 0.57%)</title><rect x="621.3" y="227.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (863 samples, 0.57%)</title><rect x="621.3" y="211.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (863 samples, 0.57%)</title><rect x="621.3" y="195.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (863 samples, 0.57%)</title><rect x="621.3" y="179.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (331 samples, 0.22%)</title><rect x="621.3" y="163.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (331 samples, 0.22%)</title><rect x="621.3" y="147.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (155 samples, 0.10%)</title><rect x="621.3" y="131.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="624.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (176 samples, 0.12%)</title><rect x="622.5" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (176 samples, 0.12%)</title><rect x="622.5" y="115.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (176 samples, 0.12%)</title><rect x="622.5" y="99.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (176 samples, 0.12%)</title><rect x="622.5" y="83.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (176 samples, 0.12%)</title><rect x="622.5" y="67.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (176 samples, 0.12%)</title><rect x="622.5" y="51.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="625.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (532 samples, 0.35%)</title><rect x="623.8" y="163.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (532 samples, 0.35%)</title><rect x="623.8" y="147.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (169 samples, 0.11%)</title><rect x="623.8" y="131.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (169 samples, 0.11%)</title><rect x="623.8" y="115.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="626.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (363 samples, 0.24%)</title><rect x="625.2" y="131.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.2" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (172 samples, 0.11%)</title><rect x="625.2" y="115.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (191 samples, 0.13%)</title><rect x="626.5" y="115.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (191 samples, 0.13%)</title><rect x="626.5" y="99.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (191 samples, 0.13%)</title><rect x="626.5" y="83.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (191 samples, 0.13%)</title><rect x="626.5" y="67.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (191 samples, 0.13%)</title><rect x="626.5" y="51.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (191 samples, 0.13%)</title><rect x="626.5" y="35.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="629.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (456 samples, 0.30%)</title><rect x="628.0" y="323.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (456 samples, 0.30%)</title><rect x="628.0" y="307.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (456 samples, 0.30%)</title><rect x="628.0" y="291.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="631.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3,260 samples, 2.15%)</title><rect x="631.5" y="371.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.5" y="382.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (292 samples, 0.19%)</title><rect x="631.5" y="355.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="634.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (247 samples, 0.16%)</title><rect x="633.8" y="355.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (247 samples, 0.16%)</title><rect x="633.8" y="339.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.16%)</title><rect x="633.8" y="323.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="636.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2,721 samples, 1.79%)</title><rect x="635.7" y="355.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.7" y="366.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (171 samples, 0.11%)</title><rect x="635.7" y="339.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="638.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1,435 samples, 0.95%)</title><rect x="637.0" y="339.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (219 samples, 0.14%)</title><rect x="637.0" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (219 samples, 0.14%)</title><rect x="637.0" y="307.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (262 samples, 0.17%)</title><rect x="638.7" y="323.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="641.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (954 samples, 0.63%)</title><rect x="640.8" y="323.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (104 samples, 0.07%)</title><rect x="640.8" y="307.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="643.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (129 samples, 0.09%)</title><rect x="641.6" y="307.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="644.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (231 samples, 0.15%)</title><rect x="642.6" y="307.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="645.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (167 samples, 0.11%)</title><rect x="644.4" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (167 samples, 0.11%)</title><rect x="644.4" y="291.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="647.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (323 samples, 0.21%)</title><rect x="645.7" y="307.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (102 samples, 0.07%)</title><rect x="645.7" y="291.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="648.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (110 samples, 0.07%)</title><rect x="646.5" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="649.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (111 samples, 0.07%)</title><rect x="647.3" y="291.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="650.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,115 samples, 0.74%)</title><rect x="648.2" y="339.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (158 samples, 0.10%)</title><rect x="648.2" y="323.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="651.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (607 samples, 0.40%)</title><rect x="649.4" y="323.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (338 samples, 0.22%)</title><rect x="649.4" y="307.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="652.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (269 samples, 0.18%)</title><rect x="652.1" y="307.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.1" y="318.0"></text>
</g>
<g>
<title>byte[] (269 samples, 0.18%)</title><rect x="652.1" y="291.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="655.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (350 samples, 0.23%)</title><rect x="654.2" y="323.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (350 samples, 0.23%)</title><rect x="654.2" y="307.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (350 samples, 0.23%)</title><rect x="654.2" y="291.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (350 samples, 0.23%)</title><rect x="654.2" y="275.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (350 samples, 0.23%)</title><rect x="654.2" y="259.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (348 samples, 0.23%)</title><rect x="654.2" y="243.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="657.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (810 samples, 0.53%)</title><rect x="656.9" y="579.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (810 samples, 0.53%)</title><rect x="656.9" y="563.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (810 samples, 0.53%)</title><rect x="656.9" y="547.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (810 samples, 0.53%)</title><rect x="656.9" y="531.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (810 samples, 0.53%)</title><rect x="656.9" y="515.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (810 samples, 0.53%)</title><rect x="656.9" y="499.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (360 samples, 0.24%)</title><rect x="656.9" y="483.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.9" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (360 samples, 0.24%)</title><rect x="656.9" y="467.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.9" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (450 samples, 0.30%)</title><rect x="659.7" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.7" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (450 samples, 0.30%)</title><rect x="659.7" y="467.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="662.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23,437 samples, 15.45%)</title><rect x="663.2" y="755.0" width="182.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.2" y="766.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23,437 samples, 15.45%)</title><rect x="663.2" y="739.0" width="182.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.2" y="750.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19,640 samples, 12.95%)</title><rect x="663.2" y="723.0" width="152.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.2" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (19,640 samples, 12.95%)</title><rect x="663.2" y="707.0" width="152.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.2" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19,640 samples, 12.95%)</title><rect x="663.2" y="691.0" width="152.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.2" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (580 samples, 0.38%)</title><rect x="663.2" y="675.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (580 samples, 0.38%)</title><rect x="663.2" y="659.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (580 samples, 0.38%)</title><rect x="663.2" y="643.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (580 samples, 0.38%)</title><rect x="663.2" y="627.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423583818.linkToTargetMethod (279 samples, 0.18%)</title><rect x="663.2" y="611.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574268151.invoke (279 samples, 0.18%)</title><rect x="663.2" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.18%)</title><rect x="663.2" y="579.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (279 samples, 0.18%)</title><rect x="663.2" y="563.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (279 samples, 0.18%)</title><rect x="663.2" y="547.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.2" y="558.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.18%)</title><rect x="663.2" y="531.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="666.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (301 samples, 0.20%)</title><rect x="665.4" y="611.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (301 samples, 0.20%)</title><rect x="665.4" y="595.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (301 samples, 0.20%)</title><rect x="665.4" y="579.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (301 samples, 0.20%)</title><rect x="665.4" y="563.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (301 samples, 0.20%)</title><rect x="665.4" y="547.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="668.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (19,060 samples, 12.56%)</title><rect x="667.7" y="675.0" width="148.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.7" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (19,060 samples, 12.56%)</title><rect x="667.7" y="659.0" width="148.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.7" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19,060 samples, 12.56%)</title><rect x="667.7" y="643.0" width="148.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.7" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19,060 samples, 12.56%)</title><rect x="667.7" y="627.0" width="148.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.7" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,993 samples, 5.93%)</title><rect x="667.7" y="611.0" width="69.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.7" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,993 samples, 5.93%)</title><rect x="667.7" y="595.0" width="69.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.7" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,993 samples, 5.93%)</title><rect x="667.7" y="579.0" width="69.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.7" y="590.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8,993 samples, 5.93%)</title><rect x="667.7" y="563.0" width="69.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.7" y="574.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,993 samples, 5.93%)</title><rect x="667.7" y="547.0" width="69.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.7" y="558.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8,993 samples, 5.93%)</title><rect x="667.7" y="531.0" width="69.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.7" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,993 samples, 5.93%)</title><rect x="667.7" y="515.0" width="69.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.7" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8,686 samples, 5.73%)</title><rect x="667.7" y="499.0" width="67.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.7" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,686 samples, 5.73%)</title><rect x="667.7" y="483.0" width="67.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,507 samples, 5.61%)</title><rect x="667.7" y="467.0" width="66.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.7" y="478.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (176 samples, 0.12%)</title><rect x="667.7" y="451.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$551/1036639044.apply (167 samples, 0.11%)</title><rect x="669.1" y="451.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (167 samples, 0.11%)</title><rect x="669.1" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (167 samples, 0.11%)</title><rect x="669.1" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (167 samples, 0.11%)</title><rect x="669.1" y="403.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (167 samples, 0.11%)</title><rect x="669.1" y="387.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="672.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/1004347831.apply (7,827 samples, 5.16%)</title><rect x="670.4" y="451.0" width="60.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.4" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (7,827 samples, 5.16%)</title><rect x="670.4" y="435.0" width="60.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.4" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (127 samples, 0.08%)</title><rect x="670.4" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.08%)</title><rect x="670.4" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$663/395292897.get$Lambda (127 samples, 0.08%)</title><rect x="670.4" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$663 (127 samples, 0.08%)</title><rect x="670.4" y="371.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="673.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (405 samples, 0.27%)</title><rect x="671.3" y="419.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (405 samples, 0.27%)</title><rect x="671.3" y="403.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (238 samples, 0.16%)</title><rect x="671.3" y="387.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="674.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (167 samples, 0.11%)</title><rect x="673.2" y="387.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (167 samples, 0.11%)</title><rect x="673.2" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (167 samples, 0.11%)</title><rect x="673.2" y="355.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="676.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (7,295 samples, 4.81%)</title><rect x="674.5" y="419.0" width="56.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.5" y="430.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.06%)</title><rect x="674.5" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.06%)</title><rect x="674.5" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$655/2091751008.get$Lambda (93 samples, 0.06%)</title><rect x="674.5" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$655 (93 samples, 0.06%)</title><rect x="674.5" y="355.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="677.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (358 samples, 0.24%)</title><rect x="675.2" y="403.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (358 samples, 0.24%)</title><rect x="675.2" y="387.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (204 samples, 0.13%)</title><rect x="675.2" y="371.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="678.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.10%)</title><rect x="676.8" y="371.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.10%)</title><rect x="676.8" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (154 samples, 0.10%)</title><rect x="676.8" y="339.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="679.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (6,844 samples, 4.51%)</title><rect x="678.0" y="403.0" width="53.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.0" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$138/959561349.apply (479 samples, 0.32%)</title><rect x="678.0" y="387.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (479 samples, 0.32%)</title><rect x="678.0" y="371.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (479 samples, 0.32%)</title><rect x="678.0" y="355.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (179 samples, 0.12%)</title><rect x="678.0" y="339.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="681.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (300 samples, 0.20%)</title><rect x="679.4" y="339.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (115 samples, 0.08%)</title><rect x="679.4" y="323.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="682.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (185 samples, 0.12%)</title><rect x="680.3" y="323.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="683.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (6,365 samples, 4.20%)</title><rect x="681.7" y="387.0" width="49.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.7" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (192 samples, 0.13%)</title><rect x="681.7" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.13%)</title><rect x="681.7" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$642/1652146549.get$Lambda (100 samples, 0.07%)</title><rect x="681.7" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$642 (100 samples, 0.07%)</title><rect x="681.7" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="684.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$649/410742031.get$Lambda (92 samples, 0.06%)</title><rect x="682.5" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$649 (92 samples, 0.06%)</title><rect x="682.5" y="323.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="685.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/76253471.linkToTargetMethod (207 samples, 0.14%)</title><rect x="683.2" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1197189663.invokeStatic (207 samples, 0.14%)</title><rect x="683.2" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$593/1019219775.get$Lambda (207 samples, 0.14%)</title><rect x="683.2" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$593 (207 samples, 0.14%)</title><rect x="683.2" y="323.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="686.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,295 samples, 0.85%)</title><rect x="684.8" y="371.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (490 samples, 0.32%)</title><rect x="684.8" y="355.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (184 samples, 0.12%)</title><rect x="684.8" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (184 samples, 0.12%)</title><rect x="684.8" y="323.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="687.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (306 samples, 0.20%)</title><rect x="686.3" y="339.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (306 samples, 0.20%)</title><rect x="686.3" y="323.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (419 samples, 0.28%)</title><rect x="688.6" y="355.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (419 samples, 0.28%)</title><rect x="688.6" y="339.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (419 samples, 0.28%)</title><rect x="688.6" y="323.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (137 samples, 0.09%)</title><rect x="688.6" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (137 samples, 0.09%)</title><rect x="688.6" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (137 samples, 0.09%)</title><rect x="688.6" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (137 samples, 0.09%)</title><rect x="688.6" y="259.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="691.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$590/1926511506.get (136 samples, 0.09%)</title><rect x="689.7" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (136 samples, 0.09%)</title><rect x="689.7" y="291.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="692.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (146 samples, 0.10%)</title><rect x="690.8" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (146 samples, 0.10%)</title><rect x="690.8" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (146 samples, 0.10%)</title><rect x="690.8" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (146 samples, 0.10%)</title><rect x="690.8" y="259.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="693.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (386 samples, 0.25%)</title><rect x="691.9" y="355.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (382 samples, 0.25%)</title><rect x="691.9" y="339.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="694.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (749 samples, 0.49%)</title><rect x="694.9" y="371.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (390 samples, 0.26%)</title><rect x="694.9" y="355.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (217 samples, 0.14%)</title><rect x="694.9" y="339.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (173 samples, 0.11%)</title><rect x="696.6" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (173 samples, 0.11%)</title><rect x="696.6" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (173 samples, 0.11%)</title><rect x="696.6" y="307.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="699.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (359 samples, 0.24%)</title><rect x="697.9" y="355.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (359 samples, 0.24%)</title><rect x="697.9" y="339.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (213 samples, 0.14%)</title><rect x="697.9" y="323.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="700.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.10%)</title><rect x="699.6" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.10%)</title><rect x="699.6" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (146 samples, 0.10%)</title><rect x="699.6" y="291.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="702.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (126 samples, 0.08%)</title><rect x="700.7" y="371.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="703.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (186 samples, 0.12%)</title><rect x="701.7" y="371.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="704.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (165 samples, 0.11%)</title><rect x="703.2" y="371.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="706.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (85 samples, 0.06%)</title><rect x="704.4" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (85 samples, 0.06%)</title><rect x="704.4" y="355.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="707.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,360 samples, 2.21%)</title><rect x="705.1" y="371.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$593/1019219775.run (3,360 samples, 2.21%)</title><rect x="705.1" y="355.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.1" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3,360 samples, 2.21%)</title><rect x="705.1" y="339.0" width="26.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.1" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (429 samples, 0.28%)</title><rect x="705.1" y="323.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (429 samples, 0.28%)</title><rect x="705.1" y="307.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/71894497.get$Lambda (73 samples, 0.05%)</title><rect x="705.1" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$602 (73 samples, 0.05%)</title><rect x="705.1" y="275.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="708.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$612/541262814.get$Lambda (137 samples, 0.09%)</title><rect x="705.7" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$612 (137 samples, 0.09%)</title><rect x="705.7" y="275.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="708.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$629/449638901.get$Lambda (219 samples, 0.14%)</title><rect x="706.7" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$629 (219 samples, 0.14%)</title><rect x="706.7" y="275.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="709.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (393 samples, 0.26%)</title><rect x="708.4" y="323.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (393 samples, 0.26%)</title><rect x="708.4" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (209 samples, 0.14%)</title><rect x="708.4" y="291.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="711.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.12%)</title><rect x="710.1" y="291.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.12%)</title><rect x="710.1" y="275.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (184 samples, 0.12%)</title><rect x="710.1" y="259.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="713.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (237 samples, 0.16%)</title><rect x="711.5" y="323.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="714.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (206 samples, 0.14%)</title><rect x="713.3" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (206 samples, 0.14%)</title><rect x="713.3" y="307.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="716.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (550 samples, 0.36%)</title><rect x="714.9" y="323.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (550 samples, 0.36%)</title><rect x="714.9" y="307.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.09%)</title><rect x="714.9" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.09%)</title><rect x="714.9" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$636/145678626.get$Lambda (137 samples, 0.09%)</title><rect x="714.9" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$636 (137 samples, 0.09%)</title><rect x="714.9" y="243.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="717.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (413 samples, 0.27%)</title><rect x="716.0" y="291.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (413 samples, 0.27%)</title><rect x="716.0" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (413 samples, 0.27%)</title><rect x="716.0" y="259.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (226 samples, 0.15%)</title><rect x="716.0" y="243.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="719.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.12%)</title><rect x="717.8" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (187 samples, 0.12%)</title><rect x="717.8" y="227.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (187 samples, 0.12%)</title><rect x="717.8" y="211.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (539 samples, 0.36%)</title><rect x="719.2" y="323.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (539 samples, 0.36%)</title><rect x="719.2" y="307.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (539 samples, 0.36%)</title><rect x="719.2" y="291.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (539 samples, 0.36%)</title><rect x="719.2" y="275.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (144 samples, 0.09%)</title><rect x="719.2" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.09%)</title><rect x="719.2" y="243.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (395 samples, 0.26%)</title><rect x="720.3" y="259.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (395 samples, 0.26%)</title><rect x="720.3" y="243.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.3" y="254.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.26%)</title><rect x="720.3" y="227.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="723.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,006 samples, 0.66%)</title><rect x="723.4" y="323.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (319 samples, 0.21%)</title><rect x="723.4" y="307.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="726.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (687 samples, 0.45%)</title><rect x="725.9" y="307.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (687 samples, 0.45%)</title><rect x="725.9" y="291.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (687 samples, 0.45%)</title><rect x="725.9" y="275.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (687 samples, 0.45%)</title><rect x="725.9" y="259.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (137 samples, 0.09%)</title><rect x="725.9" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (137 samples, 0.09%)</title><rect x="725.9" y="227.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (550 samples, 0.36%)</title><rect x="727.0" y="243.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (550 samples, 0.36%)</title><rect x="727.0" y="227.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.0" y="238.0"></text>
</g>
<g>
<title>byte[] (518 samples, 0.34%)</title><rect x="727.0" y="211.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="730.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$474/891276895.apply (337 samples, 0.22%)</title><rect x="731.2" y="451.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (337 samples, 0.22%)</title><rect x="731.2" y="435.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (169 samples, 0.11%)</title><rect x="731.2" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (169 samples, 0.11%)</title><rect x="731.2" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (169 samples, 0.11%)</title><rect x="731.2" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.2" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (169 samples, 0.11%)</title><rect x="731.2" y="371.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="734.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (168 samples, 0.11%)</title><rect x="732.6" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.11%)</title><rect x="732.6" y="403.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="735.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (179 samples, 0.12%)</title><rect x="733.9" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (179 samples, 0.12%)</title><rect x="733.9" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$483/1866005702.apply (179 samples, 0.12%)</title><rect x="733.9" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (179 samples, 0.12%)</title><rect x="733.9" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (179 samples, 0.12%)</title><rect x="733.9" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (179 samples, 0.12%)</title><rect x="733.9" y="387.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="736.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/1686384082.apply (307 samples, 0.20%)</title><rect x="735.3" y="499.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (307 samples, 0.20%)</title><rect x="735.3" y="483.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (307 samples, 0.20%)</title><rect x="735.3" y="467.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="738.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (10,067 samples, 6.64%)</title><rect x="737.6" y="611.0" width="78.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.6" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (622 samples, 0.41%)</title><rect x="737.6" y="595.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (622 samples, 0.41%)</title><rect x="737.6" y="579.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (622 samples, 0.41%)</title><rect x="737.6" y="563.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (622 samples, 0.41%)</title><rect x="737.6" y="547.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (622 samples, 0.41%)</title><rect x="737.6" y="531.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.6" y="542.0"></text>
</g>
<g>
<title>byte[] (621 samples, 0.41%)</title><rect x="737.6" y="515.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="740.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (509 samples, 0.34%)</title><rect x="742.5" y="595.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (509 samples, 0.34%)</title><rect x="742.5" y="579.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (509 samples, 0.34%)</title><rect x="742.5" y="563.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (509 samples, 0.34%)</title><rect x="742.5" y="547.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (509 samples, 0.34%)</title><rect x="742.5" y="531.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.5" y="542.0"></text>
</g>
<g>
<title>byte[] (506 samples, 0.33%)</title><rect x="742.5" y="515.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="745.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (920 samples, 0.61%)</title><rect x="746.4" y="595.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (143 samples, 0.09%)</title><rect x="746.4" y="579.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="749.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (266 samples, 0.18%)</title><rect x="747.6" y="579.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (266 samples, 0.18%)</title><rect x="747.6" y="563.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.09%)</title><rect x="747.6" y="547.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="750.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (134 samples, 0.09%)</title><rect x="748.6" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.6" y="558.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.09%)</title><rect x="748.6" y="531.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="751.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (178 samples, 0.12%)</title><rect x="749.6" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (178 samples, 0.12%)</title><rect x="749.6" y="563.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.6" y="574.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.12%)</title><rect x="749.6" y="547.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="752.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (333 samples, 0.22%)</title><rect x="751.0" y="579.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (333 samples, 0.22%)</title><rect x="751.0" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.07%)</title><rect x="751.0" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="754.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (222 samples, 0.15%)</title><rect x="751.9" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.9" y="558.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.15%)</title><rect x="751.9" y="531.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="754.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (2,730 samples, 1.80%)</title><rect x="753.6" y="595.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.6" y="606.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,730 samples, 1.80%)</title><rect x="753.6" y="579.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.6" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,730 samples, 1.80%)</title><rect x="753.6" y="563.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.6" y="574.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (77 samples, 0.05%)</title><rect x="753.6" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="756.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (129 samples, 0.09%)</title><rect x="754.2" y="547.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="757.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (282 samples, 0.19%)</title><rect x="755.2" y="547.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="758.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (100 samples, 0.07%)</title><rect x="757.4" y="547.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="760.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.11%)</title><rect x="758.2" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.11%)</title><rect x="758.2" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (165 samples, 0.11%)</title><rect x="758.2" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.2" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (165 samples, 0.11%)</title><rect x="758.2" y="499.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="761.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (161 samples, 0.11%)</title><rect x="759.5" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.5" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (161 samples, 0.11%)</title><rect x="759.5" y="531.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="762.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,540 samples, 1.02%)</title><rect x="760.7" y="547.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.accept (1,540 samples, 1.02%)</title><rect x="760.7" y="531.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,540 samples, 1.02%)</title><rect x="760.7" y="515.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (270 samples, 0.18%)</title><rect x="760.7" y="499.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (270 samples, 0.18%)</title><rect x="760.7" y="483.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.get$Lambda (270 samples, 0.18%)</title><rect x="760.7" y="467.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.7" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$539 (270 samples, 0.18%)</title><rect x="760.7" y="451.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="763.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (294 samples, 0.19%)</title><rect x="762.8" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$539/2026620327.accept (294 samples, 0.19%)</title><rect x="762.8" y="483.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (294 samples, 0.19%)</title><rect x="762.8" y="467.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (294 samples, 0.19%)</title><rect x="762.8" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (294 samples, 0.19%)</title><rect x="762.8" y="435.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (294 samples, 0.19%)</title><rect x="762.8" y="419.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (294 samples, 0.19%)</title><rect x="762.8" y="403.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (294 samples, 0.19%)</title><rect x="762.8" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (291 samples, 0.19%)</title><rect x="762.8" y="371.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="765.8" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (533 samples, 0.35%)</title><rect x="765.1" y="499.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (533 samples, 0.35%)</title><rect x="765.1" y="483.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (267 samples, 0.18%)</title><rect x="765.1" y="467.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (267 samples, 0.18%)</title><rect x="765.1" y="451.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (267 samples, 0.18%)</title><rect x="765.1" y="435.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="768.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (266 samples, 0.18%)</title><rect x="767.2" y="467.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (266 samples, 0.18%)</title><rect x="767.2" y="451.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="770.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (443 samples, 0.29%)</title><rect x="769.2" y="499.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (443 samples, 0.29%)</title><rect x="769.2" y="483.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="772.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (276 samples, 0.18%)</title><rect x="772.7" y="547.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (276 samples, 0.18%)</title><rect x="772.7" y="531.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="775.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (5,286 samples, 3.48%)</title><rect x="774.8" y="595.0" width="41.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.8" y="606.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (245 samples, 0.16%)</title><rect x="774.8" y="579.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="777.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (352 samples, 0.23%)</title><rect x="776.7" y="579.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (352 samples, 0.23%)</title><rect x="776.7" y="563.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.7" y="574.0"></text>
</g>
<g>
<title>byte[] (352 samples, 0.23%)</title><rect x="776.7" y="547.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="779.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (673 samples, 0.44%)</title><rect x="779.5" y="579.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (673 samples, 0.44%)</title><rect x="779.5" y="563.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.18%)</title><rect x="779.5" y="547.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (404 samples, 0.27%)</title><rect x="781.6" y="547.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.6" y="558.0"></text>
</g>
<g>
<title>byte[] (404 samples, 0.27%)</title><rect x="781.6" y="531.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="784.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4,016 samples, 2.65%)</title><rect x="784.7" y="579.0" width="31.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.7" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (1,166 samples, 0.77%)</title><rect x="784.7" y="563.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,166 samples, 0.77%)</title><rect x="784.7" y="547.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (512 samples, 0.34%)</title><rect x="784.7" y="531.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="787.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (654 samples, 0.43%)</title><rect x="788.7" y="531.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.7" y="542.0"></text>
</g>
<g>
<title>byte[] (654 samples, 0.43%)</title><rect x="788.7" y="515.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="791.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (622 samples, 0.41%)</title><rect x="793.8" y="563.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (622 samples, 0.41%)</title><rect x="793.8" y="547.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.8" y="558.0"></text>
</g>
<g>
<title>byte[] (371 samples, 0.24%)</title><rect x="793.8" y="531.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="796.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (251 samples, 0.17%)</title><rect x="796.7" y="531.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (593 samples, 0.39%)</title><rect x="798.6" y="563.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (593 samples, 0.39%)</title><rect x="798.6" y="547.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (593 samples, 0.39%)</title><rect x="798.6" y="531.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.18%)</title><rect x="798.6" y="515.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="801.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (315 samples, 0.21%)</title><rect x="800.8" y="515.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.8" y="526.0"></text>
</g>
<g>
<title>byte[] (315 samples, 0.21%)</title><rect x="800.8" y="499.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="803.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (613 samples, 0.40%)</title><rect x="803.2" y="563.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (613 samples, 0.40%)</title><rect x="803.2" y="547.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (613 samples, 0.40%)</title><rect x="803.2" y="531.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (613 samples, 0.40%)</title><rect x="803.2" y="515.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (613 samples, 0.40%)</title><rect x="803.2" y="499.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (611 samples, 0.40%)</title><rect x="803.2" y="483.0" width="4.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="806.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,022 samples, 0.67%)</title><rect x="808.0" y="563.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (346 samples, 0.23%)</title><rect x="808.0" y="547.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (346 samples, 0.23%)</title><rect x="808.0" y="531.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="811.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (414 samples, 0.27%)</title><rect x="810.7" y="547.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (401 samples, 0.26%)</title><rect x="810.7" y="531.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="813.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$579/406867462.apply (262 samples, 0.17%)</title><rect x="813.9" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (262 samples, 0.17%)</title><rect x="813.9" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (262 samples, 0.17%)</title><rect x="813.9" y="515.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="816.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3,797 samples, 2.50%)</title><rect x="816.0" y="723.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.0" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,797 samples, 2.50%)</title><rect x="816.0" y="707.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.0" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,797 samples, 2.50%)</title><rect x="816.0" y="691.0" width="29.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.0" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$344/1255911169.run (3,797 samples, 2.50%)</title><rect x="816.0" y="675.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.0" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,797 samples, 2.50%)</title><rect x="816.0" y="659.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.0" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3,797 samples, 2.50%)</title><rect x="816.0" y="643.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.0" y="654.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (247 samples, 0.16%)</title><rect x="816.0" y="627.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (247 samples, 0.16%)</title><rect x="816.0" y="611.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$430/849471415.get$Lambda (85 samples, 0.06%)</title><rect x="816.0" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$430 (85 samples, 0.06%)</title><rect x="816.0" y="579.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="819.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$436/99321411.get$Lambda (162 samples, 0.11%)</title><rect x="816.6" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$436 (162 samples, 0.11%)</title><rect x="816.6" y="579.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="819.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (169 samples, 0.11%)</title><rect x="817.9" y="627.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="820.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (225 samples, 0.15%)</title><rect x="819.2" y="627.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (225 samples, 0.15%)</title><rect x="819.2" y="611.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (106 samples, 0.07%)</title><rect x="819.2" y="595.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="822.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (119 samples, 0.08%)</title><rect x="820.0" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (119 samples, 0.08%)</title><rect x="820.0" y="579.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="823.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3,156 samples, 2.08%)</title><rect x="820.9" y="627.0" width="24.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3,156 samples, 2.08%)</title><rect x="820.9" y="611.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.9" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/71894497.run (2,527 samples, 1.67%)</title><rect x="820.9" y="595.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2,527 samples, 1.67%)</title><rect x="820.9" y="579.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2,527 samples, 1.67%)</title><rect x="820.9" y="563.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (725 samples, 0.48%)</title><rect x="820.9" y="547.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (491 samples, 0.32%)</title><rect x="820.9" y="531.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (166 samples, 0.11%)</title><rect x="820.9" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.9" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (166 samples, 0.11%)</title><rect x="820.9" y="499.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="823.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (325 samples, 0.21%)</title><rect x="822.2" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (323 samples, 0.21%)</title><rect x="822.2" y="499.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="825.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (234 samples, 0.15%)</title><rect x="824.8" y="531.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (234 samples, 0.15%)</title><rect x="824.8" y="515.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (234 samples, 0.15%)</title><rect x="824.8" y="499.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (141 samples, 0.09%)</title><rect x="824.8" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (141 samples, 0.09%)</title><rect x="824.8" y="467.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="827.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (93 samples, 0.06%)</title><rect x="825.9" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (93 samples, 0.06%)</title><rect x="825.9" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (93 samples, 0.06%)</title><rect x="825.9" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (93 samples, 0.06%)</title><rect x="825.9" y="435.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="828.9" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.map (96 samples, 0.06%)</title><rect x="826.6" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (96 samples, 0.06%)</title><rect x="826.6" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.6" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (96 samples, 0.06%)</title><rect x="826.6" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.6" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (96 samples, 0.06%)</title><rect x="826.6" y="499.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="829.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,706 samples, 1.12%)</title><rect x="827.3" y="547.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (161 samples, 0.11%)</title><rect x="827.3" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.3" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (161 samples, 0.11%)</title><rect x="827.3" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (161 samples, 0.11%)</title><rect x="827.3" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (161 samples, 0.11%)</title><rect x="827.3" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.3" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (161 samples, 0.11%)</title><rect x="827.3" y="467.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="830.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,545 samples, 1.02%)</title><rect x="828.6" y="531.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (701 samples, 0.46%)</title><rect x="828.6" y="515.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (123 samples, 0.08%)</title><rect x="828.6" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (123 samples, 0.08%)</title><rect x="828.6" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.6" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (123 samples, 0.08%)</title><rect x="828.6" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (123 samples, 0.08%)</title><rect x="828.6" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.6" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (123 samples, 0.08%)</title><rect x="828.6" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.6" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (123 samples, 0.08%)</title><rect x="828.6" y="419.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="831.6" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (127 samples, 0.08%)</title><rect x="829.5" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (127 samples, 0.08%)</title><rect x="829.5" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (127 samples, 0.08%)</title><rect x="829.5" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (127 samples, 0.08%)</title><rect x="829.5" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (127 samples, 0.08%)</title><rect x="829.5" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (127 samples, 0.08%)</title><rect x="829.5" y="419.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="832.5" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (177 samples, 0.12%)</title><rect x="830.5" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (177 samples, 0.12%)</title><rect x="830.5" y="483.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (177 samples, 0.12%)</title><rect x="830.5" y="467.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="833.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (129 samples, 0.09%)</title><rect x="831.9" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (129 samples, 0.09%)</title><rect x="831.9" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (129 samples, 0.09%)</title><rect x="831.9" y="467.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="834.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (144 samples, 0.09%)</title><rect x="832.9" y="499.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="835.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (276 samples, 0.18%)</title><rect x="834.0" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (129 samples, 0.09%)</title><rect x="834.0" y="499.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (129 samples, 0.09%)</title><rect x="834.0" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (129 samples, 0.09%)</title><rect x="834.0" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (129 samples, 0.09%)</title><rect x="834.0" y="451.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="837.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (147 samples, 0.10%)</title><rect x="835.0" y="499.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.0" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (147 samples, 0.10%)</title><rect x="835.0" y="483.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.0" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (147 samples, 0.10%)</title><rect x="835.0" y="467.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="838.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (568 samples, 0.37%)</title><rect x="836.2" y="515.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (136 samples, 0.09%)</title><rect x="836.2" y="499.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="839.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (432 samples, 0.28%)</title><rect x="837.2" y="499.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (128 samples, 0.08%)</title><rect x="837.2" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (128 samples, 0.08%)</title><rect x="837.2" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (128 samples, 0.08%)</title><rect x="837.2" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (128 samples, 0.08%)</title><rect x="837.2" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="840.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (304 samples, 0.20%)</title><rect x="838.2" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (304 samples, 0.20%)</title><rect x="838.2" y="467.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (211 samples, 0.14%)</title><rect x="838.2" y="451.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="841.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (93 samples, 0.06%)</title><rect x="839.9" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (93 samples, 0.06%)</title><rect x="839.9" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="842.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (629 samples, 0.41%)</title><rect x="840.6" y="595.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (629 samples, 0.41%)</title><rect x="840.6" y="579.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (629 samples, 0.41%)</title><rect x="840.6" y="563.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (390 samples, 0.26%)</title><rect x="840.6" y="547.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (390 samples, 0.26%)</title><rect x="840.6" y="531.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (390 samples, 0.26%)</title><rect x="840.6" y="515.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (390 samples, 0.26%)</title><rect x="840.6" y="499.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$642/1652146549.accept (390 samples, 0.26%)</title><rect x="840.6" y="483.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (390 samples, 0.26%)</title><rect x="840.6" y="467.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (390 samples, 0.26%)</title><rect x="840.6" y="451.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (390 samples, 0.26%)</title><rect x="840.6" y="435.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (390 samples, 0.26%)</title><rect x="840.6" y="419.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$663/395292897.apply (390 samples, 0.26%)</title><rect x="840.6" y="403.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (390 samples, 0.26%)</title><rect x="840.6" y="387.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (379 samples, 0.25%)</title><rect x="840.6" y="371.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="843.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (239 samples, 0.16%)</title><rect x="843.6" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.6" y="558.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.05%)</title><rect x="843.6" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="846.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (162 samples, 0.11%)</title><rect x="844.2" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (162 samples, 0.11%)</title><rect x="844.2" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.2" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (162 samples, 0.11%)</title><rect x="844.2" y="499.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="847.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (9,991 samples, 6.59%)</title><rect x="845.5" y="803.0" width="77.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.5" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (9,991 samples, 6.59%)</title><rect x="845.5" y="787.0" width="77.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.5" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (9,991 samples, 6.59%)</title><rect x="845.5" y="771.0" width="77.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.5" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (9,991 samples, 6.59%)</title><rect x="845.5" y="755.0" width="77.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.5" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (9,991 samples, 6.59%)</title><rect x="845.5" y="739.0" width="77.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.5" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (9,991 samples, 6.59%)</title><rect x="845.5" y="723.0" width="77.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.5" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9,991 samples, 6.59%)</title><rect x="845.5" y="707.0" width="77.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.5" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9,991 samples, 6.59%)</title><rect x="845.5" y="691.0" width="77.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.5" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,991 samples, 6.59%)</title><rect x="845.5" y="675.0" width="77.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="848.5" y="686.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (3,074 samples, 2.03%)</title><rect x="845.5" y="659.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.5" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.accept (3,074 samples, 2.03%)</title><rect x="845.5" y="643.0" width="23.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.5" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.lambda$resolve$0 (3,074 samples, 2.03%)</title><rect x="845.5" y="627.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.5" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (3,074 samples, 2.03%)</title><rect x="845.5" y="611.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.5" y="622.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,074 samples, 2.03%)</title><rect x="845.5" y="595.0" width="23.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.5" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,074 samples, 2.03%)</title><rect x="845.5" y="579.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.5" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,437 samples, 0.95%)</title><rect x="845.5" y="563.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,437 samples, 0.95%)</title><rect x="845.5" y="547.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1,368 samples, 0.90%)</title><rect x="845.5" y="531.0" width="10.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="848.5" y="542.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="856.1" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,637 samples, 1.08%)</title><rect x="856.7" y="563.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.7" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (723 samples, 0.48%)</title><rect x="856.7" y="547.0" width="5.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="859.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (914 samples, 0.60%)</title><rect x="862.3" y="547.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (914 samples, 0.60%)</title><rect x="862.3" y="531.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (914 samples, 0.60%)</title><rect x="862.3" y="515.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (914 samples, 0.60%)</title><rect x="862.3" y="499.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (914 samples, 0.60%)</title><rect x="862.3" y="483.0" width="7.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="865.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6,917 samples, 4.56%)</title><rect x="869.4" y="659.0" width="53.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.4" y="670.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$187/991325733.apply (6,917 samples, 4.56%)</title><rect x="869.4" y="643.0" width="53.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.4" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertResponse (6,917 samples, 4.56%)</title><rect x="869.4" y="627.0" width="53.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.4" y="638.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.valueOf (2,132 samples, 1.41%)</title><rect x="869.4" y="611.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2,132 samples, 1.41%)</title><rect x="869.4" y="595.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>byte[] (1,176 samples, 0.78%)</title><rect x="869.4" y="579.0" width="9.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (956 samples, 0.63%)</title><rect x="878.6" y="579.0" width="7.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="881.6" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (901 samples, 0.59%)</title><rect x="886.0" y="611.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="889.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,884 samples, 2.56%)</title><rect x="893.0" y="611.0" width="30.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.0" y="622.0">on..</text>
</g>
<g>
<title>byte[] (1,625 samples, 1.07%)</title><rect x="893.0" y="595.0" width="12.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="896.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1,283 samples, 0.85%)</title><rect x="905.6" y="595.0" width="10.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="908.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (976 samples, 0.64%)</title><rect x="915.6" y="595.0" width="7.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,763 samples, 1.82%)</title><rect x="923.2" y="803.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.2" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.04%)</title><rect x="923.2" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="926.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.04%)</title><rect x="923.2" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$477/334303939.get$Lambda (39 samples, 0.03%)</title><rect x="923.2" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$477 (39 samples, 0.03%)</title><rect x="923.2" y="739.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="926.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1402433372.linkToTargetMethod (61 samples, 0.04%)</title><rect x="923.7" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.04%)</title><rect x="923.7" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$516/1789985635.get$Lambda (61 samples, 0.04%)</title><rect x="923.7" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$516 (61 samples, 0.04%)</title><rect x="923.7" y="739.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="926.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (626 samples, 0.41%)</title><rect x="924.1" y="787.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$518/283147200.accept (513 samples, 0.34%)</title><rect x="924.1" y="771.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (513 samples, 0.34%)</title><rect x="924.1" y="755.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (513 samples, 0.34%)</title><rect x="924.1" y="739.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (513 samples, 0.34%)</title><rect x="924.1" y="723.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (513 samples, 0.34%)</title><rect x="924.1" y="707.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (513 samples, 0.34%)</title><rect x="924.1" y="691.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (513 samples, 0.34%)</title><rect x="924.1" y="675.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (513 samples, 0.34%)</title><rect x="924.1" y="659.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (513 samples, 0.34%)</title><rect x="924.1" y="643.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (513 samples, 0.34%)</title><rect x="924.1" y="627.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (513 samples, 0.34%)</title><rect x="924.1" y="611.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (513 samples, 0.34%)</title><rect x="924.1" y="595.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (129 samples, 0.09%)</title><rect x="924.1" y="579.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (129 samples, 0.09%)</title><rect x="924.1" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (129 samples, 0.09%)</title><rect x="924.1" y="547.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (55 samples, 0.04%)</title><rect x="924.1" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="927.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (55 samples, 0.04%)</title><rect x="924.1" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (55 samples, 0.04%)</title><rect x="924.1" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (55 samples, 0.04%)</title><rect x="924.1" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (55 samples, 0.04%)</title><rect x="924.1" y="467.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="927.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.05%)</title><rect x="924.6" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.05%)</title><rect x="924.6" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 0.05%)</title><rect x="924.6" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 0.05%)</title><rect x="924.6" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (74 samples, 0.05%)</title><rect x="924.6" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (74 samples, 0.05%)</title><rect x="924.6" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (74 samples, 0.05%)</title><rect x="924.6" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (74 samples, 0.05%)</title><rect x="924.6" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="927.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.02%)</title><rect x="925.2" y="579.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.02%)</title><rect x="925.2" y="563.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.02%)</title><rect x="925.2" y="547.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (33 samples, 0.02%)</title><rect x="925.2" y="531.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (33 samples, 0.02%)</title><rect x="925.2" y="515.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="928.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (348 samples, 0.23%)</title><rect x="925.4" y="579.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (188 samples, 0.12%)</title><rect x="925.4" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (127 samples, 0.08%)</title><rect x="925.4" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (127 samples, 0.08%)</title><rect x="925.4" y="531.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="928.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (61 samples, 0.04%)</title><rect x="926.4" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.4" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (61 samples, 0.04%)</title><rect x="926.4" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.4" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (61 samples, 0.04%)</title><rect x="926.4" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="929.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (160 samples, 0.11%)</title><rect x="926.9" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$270/992642972.get (160 samples, 0.11%)</title><rect x="926.9" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (160 samples, 0.11%)</title><rect x="926.9" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (160 samples, 0.11%)</title><rect x="926.9" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (160 samples, 0.11%)</title><rect x="926.9" y="499.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.9" y="510.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.10%)</title><rect x="927.0" y="483.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="930.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$530/286927879.accept (113 samples, 0.07%)</title><rect x="928.1" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (113 samples, 0.07%)</title><rect x="928.1" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$516/1789985635.run (113 samples, 0.07%)</title><rect x="928.1" y="739.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (113 samples, 0.07%)</title><rect x="928.1" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (113 samples, 0.07%)</title><rect x="928.1" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (113 samples, 0.07%)</title><rect x="928.1" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (113 samples, 0.07%)</title><rect x="928.1" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.1" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (113 samples, 0.07%)</title><rect x="928.1" y="659.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="931.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (70 samples, 0.05%)</title><rect x="929.0" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.0" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (70 samples, 0.05%)</title><rect x="929.0" y="771.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="932.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (117 samples, 0.08%)</title><rect x="929.5" y="787.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (63 samples, 0.04%)</title><rect x="929.5" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (63 samples, 0.04%)</title><rect x="929.5" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (63 samples, 0.04%)</title><rect x="929.5" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (63 samples, 0.04%)</title><rect x="929.5" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (63 samples, 0.04%)</title><rect x="929.5" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (63 samples, 0.04%)</title><rect x="929.5" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (63 samples, 0.04%)</title><rect x="929.5" y="675.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="932.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (54 samples, 0.04%)</title><rect x="930.0" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (54 samples, 0.04%)</title><rect x="930.0" y="755.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="933.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (463 samples, 0.31%)</title><rect x="930.5" y="787.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$293/88605173.run (228 samples, 0.15%)</title><rect x="930.5" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (228 samples, 0.15%)</title><rect x="930.5" y="755.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (228 samples, 0.15%)</title><rect x="930.5" y="739.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (228 samples, 0.15%)</title><rect x="930.5" y="723.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (228 samples, 0.15%)</title><rect x="930.5" y="707.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (228 samples, 0.15%)</title><rect x="930.5" y="691.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284/488519312.run (228 samples, 0.15%)</title><rect x="930.5" y="675.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (228 samples, 0.15%)</title><rect x="930.5" y="659.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (224 samples, 0.15%)</title><rect x="930.5" y="643.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (224 samples, 0.15%)</title><rect x="930.5" y="627.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (142 samples, 0.09%)</title><rect x="930.5" y="611.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (142 samples, 0.09%)</title><rect x="930.5" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (142 samples, 0.09%)</title><rect x="930.5" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423583818.linkToTargetMethod (91 samples, 0.06%)</title><rect x="930.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574268151.invoke (91 samples, 0.06%)</title><rect x="930.5" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.06%)</title><rect x="930.5" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (91 samples, 0.06%)</title><rect x="930.5" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (91 samples, 0.06%)</title><rect x="930.5" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.5" y="510.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.06%)</title><rect x="930.5" y="483.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="933.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (51 samples, 0.03%)</title><rect x="931.2" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.03%)</title><rect x="931.2" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.03%)</title><rect x="931.2" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552/1853809106.get$Lambda (51 samples, 0.03%)</title><rect x="931.2" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$552 (51 samples, 0.03%)</title><rect x="931.2" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="934.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (82 samples, 0.05%)</title><rect x="931.6" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.05%)</title><rect x="931.6" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.05%)</title><rect x="931.6" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (82 samples, 0.05%)</title><rect x="931.6" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (82 samples, 0.05%)</title><rect x="931.6" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (82 samples, 0.05%)</title><rect x="931.6" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (82 samples, 0.05%)</title><rect x="931.6" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (82 samples, 0.05%)</title><rect x="931.6" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (82 samples, 0.05%)</title><rect x="931.6" y="483.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="934.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$314/275545491.run (235 samples, 0.15%)</title><rect x="932.2" y="771.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (235 samples, 0.15%)</title><rect x="932.2" y="755.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.05%)</title><rect x="932.2" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.05%)</title><rect x="932.2" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$544/870026340.get$Lambda (76 samples, 0.05%)</title><rect x="932.2" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.2" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$544 (76 samples, 0.05%)</title><rect x="932.2" y="691.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="935.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (159 samples, 0.10%)</title><rect x="932.8" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (159 samples, 0.10%)</title><rect x="932.8" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (159 samples, 0.10%)</title><rect x="932.8" y="707.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (159 samples, 0.10%)</title><rect x="932.8" y="691.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (159 samples, 0.10%)</title><rect x="932.8" y="675.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (159 samples, 0.10%)</title><rect x="932.8" y="659.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="935.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (554 samples, 0.37%)</title><rect x="934.1" y="787.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (82 samples, 0.05%)</title><rect x="934.1" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (82 samples, 0.05%)</title><rect x="934.1" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (82 samples, 0.05%)</title><rect x="934.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (82 samples, 0.05%)</title><rect x="934.1" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (82 samples, 0.05%)</title><rect x="934.1" y="707.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="937.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (472 samples, 0.31%)</title><rect x="934.7" y="771.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.03%)</title><rect x="934.7" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.03%)</title><rect x="934.7" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$698/666961958.get$Lambda (48 samples, 0.03%)</title><rect x="934.7" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.7" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$698 (48 samples, 0.03%)</title><rect x="934.7" y="707.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="937.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (104 samples, 0.07%)</title><rect x="935.1" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.1" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (104 samples, 0.07%)</title><rect x="935.1" y="739.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="938.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (41 samples, 0.03%)</title><rect x="935.9" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.9" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (41 samples, 0.03%)</title><rect x="935.9" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.9" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (41 samples, 0.03%)</title><rect x="935.9" y="723.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="938.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (279 samples, 0.18%)</title><rect x="936.2" y="755.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.05%)</title><rect x="936.2" y="739.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="939.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (203 samples, 0.13%)</title><rect x="936.8" y="739.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.8" y="750.0"></text>
</g>
<g>
<title>java.util.LinkedList$DescendingIterator (81 samples, 0.05%)</title><rect x="936.8" y="723.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="939.8" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (122 samples, 0.08%)</title><rect x="937.4" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.4" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (122 samples, 0.08%)</title><rect x="937.4" y="707.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="940.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (450 samples, 0.30%)</title><rect x="938.4" y="787.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.02%)</title><rect x="938.4" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.02%)</title><rect x="938.4" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$472/942966156.get$Lambda (37 samples, 0.02%)</title><rect x="938.4" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.4" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$472 (37 samples, 0.02%)</title><rect x="938.4" y="723.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="941.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (246 samples, 0.16%)</title><rect x="938.7" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (103 samples, 0.07%)</title><rect x="938.7" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.7" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (103 samples, 0.07%)</title><rect x="938.7" y="739.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="941.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (143 samples, 0.09%)</title><rect x="939.5" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.5" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (143 samples, 0.09%)</title><rect x="939.5" y="739.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="942.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (167 samples, 0.11%)</title><rect x="940.6" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.6" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (167 samples, 0.11%)</title><rect x="940.6" y="755.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="943.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (151 samples, 0.10%)</title><rect x="941.9" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.9" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (151 samples, 0.10%)</title><rect x="941.9" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.9" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (151 samples, 0.10%)</title><rect x="941.9" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.9" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (151 samples, 0.10%)</title><rect x="941.9" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.9" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (151 samples, 0.10%)</title><rect x="941.9" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.9" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (151 samples, 0.10%)</title><rect x="941.9" y="707.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="944.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (119 samples, 0.08%)</title><rect x="943.0" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (119 samples, 0.08%)</title><rect x="943.0" y="771.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (119 samples, 0.08%)</title><rect x="943.0" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (119 samples, 0.08%)</title><rect x="943.0" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (50 samples, 0.03%)</title><rect x="943.0" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (50 samples, 0.03%)</title><rect x="943.0" y="707.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="946.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (69 samples, 0.05%)</title><rect x="943.4" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (69 samples, 0.05%)</title><rect x="943.4" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (69 samples, 0.05%)</title><rect x="943.4" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (69 samples, 0.05%)</title><rect x="943.4" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (69 samples, 0.05%)</title><rect x="943.4" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (69 samples, 0.05%)</title><rect x="943.4" y="643.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="946.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (45 samples, 0.03%)</title><rect x="944.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (45 samples, 0.03%)</title><rect x="944.0" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (45 samples, 0.03%)</title><rect x="944.0" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (45 samples, 0.03%)</title><rect x="944.0" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (42 samples, 0.03%)</title><rect x="944.0" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (42 samples, 0.03%)</title><rect x="944.0" y="707.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="947.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (49 samples, 0.03%)</title><rect x="944.3" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (49 samples, 0.03%)</title><rect x="944.3" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (49 samples, 0.03%)</title><rect x="944.3" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (49 samples, 0.03%)</title><rect x="944.3" y="739.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="947.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (31,535 samples, 20.79%)</title><rect x="944.7" y="803.0" width="245.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1,232 samples, 0.81%)</title><rect x="944.7" y="787.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (448 samples, 0.30%)</title><rect x="944.7" y="771.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.7" y="782.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (124 samples, 0.08%)</title><rect x="944.7" y="755.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="947.7" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (136 samples, 0.09%)</title><rect x="945.7" y="755.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="948.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (188 samples, 0.12%)</title><rect x="946.7" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (188 samples, 0.12%)</title><rect x="946.7" y="739.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (188 samples, 0.12%)</title><rect x="946.7" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.7" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (188 samples, 0.12%)</title><rect x="946.7" y="707.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="949.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (784 samples, 0.52%)</title><rect x="948.2" y="771.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (784 samples, 0.52%)</title><rect x="948.2" y="755.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (784 samples, 0.52%)</title><rect x="948.2" y="739.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (784 samples, 0.52%)</title><rect x="948.2" y="723.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (376 samples, 0.25%)</title><rect x="948.2" y="707.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.2" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (376 samples, 0.25%)</title><rect x="948.2" y="691.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="951.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (408 samples, 0.27%)</title><rect x="951.1" y="707.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (408 samples, 0.27%)</title><rect x="951.1" y="691.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (408 samples, 0.27%)</title><rect x="951.1" y="675.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (408 samples, 0.27%)</title><rect x="951.1" y="659.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (408 samples, 0.27%)</title><rect x="951.1" y="643.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (408 samples, 0.27%)</title><rect x="951.1" y="627.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="954.1" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (30,303 samples, 19.98%)</title><rect x="954.3" y="787.0" width="235.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.3" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30,303 samples, 19.98%)</title><rect x="954.3" y="771.0" width="235.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.3" y="782.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29,736 samples, 19.60%)</title><rect x="954.3" y="755.0" width="231.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.3" y="766.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,327 samples, 10.10%)</title><rect x="954.3" y="739.0" width="119.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.3" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,327 samples, 10.10%)</title><rect x="954.3" y="723.0" width="119.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.3" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (14,689 samples, 9.68%)</title><rect x="954.3" y="707.0" width="114.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.3" y="718.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (567 samples, 0.37%)</title><rect x="954.3" y="691.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (567 samples, 0.37%)</title><rect x="954.3" y="675.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (567 samples, 0.37%)</title><rect x="954.3" y="659.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (567 samples, 0.37%)</title><rect x="954.3" y="643.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.19%)</title><rect x="954.3" y="627.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="957.3" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.18%)</title><rect x="956.5" y="627.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.5" y="638.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.18%)</title><rect x="956.5" y="611.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="959.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.entity (14,122 samples, 9.31%)</title><rect x="958.7" y="691.0" width="109.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.7" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (536 samples, 0.35%)</title><rect x="958.7" y="675.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (536 samples, 0.35%)</title><rect x="958.7" y="659.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.7" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (536 samples, 0.35%)</title><rect x="958.7" y="643.0" width="4.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="961.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (531 samples, 0.35%)</title><rect x="962.9" y="675.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (531 samples, 0.35%)</title><rect x="962.9" y="659.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (531 samples, 0.35%)</title><rect x="962.9" y="643.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (255 samples, 0.17%)</title><rect x="962.9" y="627.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="965.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (276 samples, 0.18%)</title><rect x="964.8" y="627.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.8" y="638.0"></text>
</g>
<g>
<title>byte[] (276 samples, 0.18%)</title><rect x="964.8" y="611.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="967.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handle (9,284 samples, 6.12%)</title><rect x="967.0" y="675.0" width="72.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.0" y="686.0">ru/mail/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (52 samples, 0.03%)</title><rect x="967.0" y="659.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (39 samples, 0.03%)</title><rect x="967.4" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (39 samples, 0.03%)</title><rect x="967.4" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (39 samples, 0.03%)</title><rect x="967.4" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.03%)</title><rect x="967.4" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.4" y="622.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="967.4" y="595.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="970.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.05%)</title><rect x="967.7" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.05%)</title><rect x="967.7" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.7" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.05%)</title><rect x="967.7" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="970.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (101 samples, 0.07%)</title><rect x="968.3" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.02%)</title><rect x="968.3" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.02%)</title><rect x="968.3" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get$Lambda (34 samples, 0.02%)</title><rect x="968.3" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$118 (34 samples, 0.02%)</title><rect x="968.3" y="595.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="971.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (67 samples, 0.04%)</title><rect x="968.6" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (67 samples, 0.04%)</title><rect x="968.6" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (39 samples, 0.03%)</title><rect x="968.8" y="611.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="971.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.proxy (7,648 samples, 5.04%)</title><rect x="969.1" y="659.0" width="59.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.1" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (172 samples, 0.11%)</title><rect x="969.1" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (172 samples, 0.11%)</title><rect x="969.1" y="627.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (102 samples, 0.07%)</title><rect x="969.1" y="611.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="972.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.05%)</title><rect x="969.9" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.05%)</title><rect x="969.9" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.05%)</title><rect x="969.9" y="579.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="972.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (227 samples, 0.15%)</title><rect x="970.5" y="643.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (227 samples, 0.15%)</title><rect x="970.5" y="627.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (113 samples, 0.07%)</title><rect x="970.5" y="611.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="973.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.08%)</title><rect x="971.3" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.08%)</title><rect x="971.3" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.08%)</title><rect x="971.3" y="579.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="974.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,961 samples, 3.27%)</title><rect x="972.2" y="643.0" width="38.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.2" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,961 samples, 3.27%)</title><rect x="972.2" y="627.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.2" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,961 samples, 3.27%)</title><rect x="972.2" y="611.0" width="38.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.2" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,961 samples, 3.27%)</title><rect x="972.2" y="595.0" width="38.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.2" y="606.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.03%)</title><rect x="972.2" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.03%)</title><rect x="972.2" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$173/958672610.get$Lambda (50 samples, 0.03%)</title><rect x="972.2" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$173 (50 samples, 0.03%)</title><rect x="972.2" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="975.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (199 samples, 0.13%)</title><rect x="972.6" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (199 samples, 0.13%)</title><rect x="972.6" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (112 samples, 0.07%)</title><rect x="972.6" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="975.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.06%)</title><rect x="973.5" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.06%)</title><rect x="973.5" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (87 samples, 0.06%)</title><rect x="973.5" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="976.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (221 samples, 0.15%)</title><rect x="974.2" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (221 samples, 0.15%)</title><rect x="974.2" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (132 samples, 0.09%)</title><rect x="974.2" y="547.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="977.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.06%)</title><rect x="975.2" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="978.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.06%)</title><rect x="975.2" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="978.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.06%)</title><rect x="975.2" y="515.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="978.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (158 samples, 0.10%)</title><rect x="975.9" y="579.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (276 samples, 0.18%)</title><rect x="977.1" y="579.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="980.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,124 samples, 1.40%)</title><rect x="979.3" y="579.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (338 samples, 0.22%)</title><rect x="979.3" y="563.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (258 samples, 0.17%)</title><rect x="979.3" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (93 samples, 0.06%)</title><rect x="979.3" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.3" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (93 samples, 0.06%)</title><rect x="979.3" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="982.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (165 samples, 0.11%)</title><rect x="980.0" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (165 samples, 0.11%)</title><rect x="980.0" y="515.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="983.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (80 samples, 0.05%)</title><rect x="981.3" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (80 samples, 0.05%)</title><rect x="981.3" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (80 samples, 0.05%)</title><rect x="981.3" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$25/1582785598.get (80 samples, 0.05%)</title><rect x="981.3" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (80 samples, 0.05%)</title><rect x="981.3" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="984.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (441 samples, 0.29%)</title><rect x="981.9" y="563.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (441 samples, 0.29%)</title><rect x="981.9" y="547.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.9" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (53 samples, 0.03%)</title><rect x="981.9" y="531.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="984.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (127 samples, 0.08%)</title><rect x="982.3" y="531.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="985.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (46 samples, 0.03%)</title><rect x="983.3" y="531.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="986.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.06%)</title><rect x="983.7" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.06%)</title><rect x="983.7" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (84 samples, 0.06%)</title><rect x="983.7" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="986.7" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (84 samples, 0.06%)</title><rect x="983.7" y="483.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="986.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (131 samples, 0.09%)</title><rect x="984.3" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (131 samples, 0.09%)</title><rect x="984.3" y="515.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="987.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (39 samples, 0.03%)</title><rect x="985.3" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="988.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (938 samples, 0.62%)</title><rect x="985.6" y="563.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.6" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (938 samples, 0.62%)</title><rect x="985.6" y="547.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.6" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (861 samples, 0.57%)</title><rect x="985.6" y="531.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.6" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (861 samples, 0.57%)</title><rect x="985.6" y="515.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.6" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (861 samples, 0.57%)</title><rect x="985.6" y="499.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.6" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (180 samples, 0.12%)</title><rect x="985.6" y="483.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="988.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (221 samples, 0.15%)</title><rect x="987.0" y="483.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.0" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (221 samples, 0.15%)</title><rect x="987.0" y="467.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.0" y="478.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.15%)</title><rect x="987.0" y="451.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="990.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (460 samples, 0.30%)</title><rect x="988.8" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (460 samples, 0.30%)</title><rect x="988.8" y="467.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (189 samples, 0.12%)</title><rect x="988.8" y="451.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="991.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (271 samples, 0.18%)</title><rect x="990.2" y="451.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.2" y="462.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.18%)</title><rect x="990.2" y="435.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="993.2" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (77 samples, 0.05%)</title><rect x="992.3" y="531.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="995.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (129 samples, 0.09%)</title><rect x="992.9" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (129 samples, 0.09%)</title><rect x="992.9" y="547.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="995.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (239 samples, 0.16%)</title><rect x="993.9" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.9" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.04%)</title><rect x="993.9" y="547.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="996.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (66 samples, 0.04%)</title><rect x="994.5" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.04%)</title><rect x="994.5" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="997.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (106 samples, 0.07%)</title><rect x="995.0" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (106 samples, 0.07%)</title><rect x="995.0" y="531.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="998.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,173 samples, 0.77%)</title><rect x="995.8" y="579.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (46 samples, 0.03%)</title><rect x="995.8" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="998.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (200 samples, 0.13%)</title><rect x="996.1" y="563.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="999.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (54 samples, 0.04%)</title><rect x="997.7" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (54 samples, 0.04%)</title><rect x="997.7" y="547.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1000.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (873 samples, 0.58%)</title><rect x="998.1" y="563.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (873 samples, 0.58%)</title><rect x="998.1" y="547.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.06%)</title><rect x="998.1" y="531.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.1" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (87 samples, 0.06%)</title><rect x="998.8" y="531.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1001.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (435 samples, 0.29%)</title><rect x="999.5" y="531.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (435 samples, 0.29%)</title><rect x="999.5" y="515.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (435 samples, 0.29%)</title><rect x="999.5" y="499.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (435 samples, 0.29%)</title><rect x="999.5" y="483.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.5" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (435 samples, 0.29%)</title><rect x="999.5" y="467.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1002.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (138 samples, 0.09%)</title><rect x="1002.9" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (138 samples, 0.09%)</title><rect x="1002.9" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (41 samples, 0.03%)</title><rect x="1002.9" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (41 samples, 0.03%)</title><rect x="1002.9" y="483.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1005.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (97 samples, 0.06%)</title><rect x="1003.2" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (97 samples, 0.06%)</title><rect x="1003.2" y="483.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1006.2" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (124 samples, 0.08%)</title><rect x="1003.9" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.9" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (124 samples, 0.08%)</title><rect x="1003.9" y="515.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.9" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (124 samples, 0.08%)</title><rect x="1003.9" y="499.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1006.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (760 samples, 0.50%)</title><rect x="1004.9" y="579.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (161 samples, 0.11%)</title><rect x="1004.9" y="563.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (77 samples, 0.05%)</title><rect x="1004.9" y="547.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1007.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.06%)</title><rect x="1005.5" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1008.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (84 samples, 0.06%)</title><rect x="1005.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (84 samples, 0.06%)</title><rect x="1005.5" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (84 samples, 0.06%)</title><rect x="1005.5" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (84 samples, 0.06%)</title><rect x="1005.5" y="483.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1008.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.06%)</title><rect x="1006.2" y="563.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1009.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (513 samples, 0.34%)</title><rect x="1006.8" y="563.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.06%)</title><rect x="1006.8" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.06%)</title><rect x="1006.8" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/895526520.get$Lambda (47 samples, 0.03%)</title><rect x="1006.8" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$153 (47 samples, 0.03%)</title><rect x="1006.8" y="499.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1009.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/1004347831.get$Lambda (44 samples, 0.03%)</title><rect x="1007.2" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$161 (44 samples, 0.03%)</title><rect x="1007.2" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1010.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (422 samples, 0.28%)</title><rect x="1007.5" y="547.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (422 samples, 0.28%)</title><rect x="1007.5" y="531.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (240 samples, 0.16%)</title><rect x="1007.5" y="515.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1010.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.12%)</title><rect x="1009.4" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.12%)</title><rect x="1009.4" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (182 samples, 0.12%)</title><rect x="1009.4" y="483.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1012.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.convertRequest (2,288 samples, 1.51%)</title><rect x="1010.8" y="643.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (257 samples, 0.17%)</title><rect x="1010.8" y="627.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/807657332.invoke (257 samples, 0.17%)</title><rect x="1010.8" y="611.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (257 samples, 0.17%)</title><rect x="1010.8" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1013.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (60 samples, 0.04%)</title><rect x="1010.8" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.04%)</title><rect x="1010.8" y="563.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1013.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (197 samples, 0.13%)</title><rect x="1011.3" y="579.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (197 samples, 0.13%)</title><rect x="1011.3" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.3" y="574.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.13%)</title><rect x="1011.3" y="547.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1014.3" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (1,044 samples, 0.69%)</title><rect x="1012.8" y="627.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.8" y="638.0"></text>
</g>
<g>
<title>java.net.URI (213 samples, 0.14%)</title><rect x="1012.8" y="611.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1015.8" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (831 samples, 0.55%)</title><rect x="1014.5" y="611.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.5" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (86 samples, 0.06%)</title><rect x="1014.5" y="595.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1017.5" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (745 samples, 0.49%)</title><rect x="1015.2" y="595.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (135 samples, 0.09%)</title><rect x="1015.2" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.09%)</title><rect x="1015.2" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1018.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.04%)</title><rect x="1015.2" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1018.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.05%)</title><rect x="1015.6" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.6" y="558.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.05%)</title><rect x="1015.6" y="531.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1018.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (610 samples, 0.40%)</title><rect x="1016.2" y="579.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (334 samples, 0.22%)</title><rect x="1016.2" y="563.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (334 samples, 0.22%)</title><rect x="1016.2" y="547.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (145 samples, 0.10%)</title><rect x="1016.2" y="531.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1019.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (189 samples, 0.12%)</title><rect x="1017.3" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.3" y="542.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.12%)</title><rect x="1017.3" y="515.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1020.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (276 samples, 0.18%)</title><rect x="1018.8" y="563.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1021.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (143 samples, 0.09%)</title><rect x="1018.8" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.09%)</title><rect x="1018.8" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1021.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.04%)</title><rect x="1018.8" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1021.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (81 samples, 0.05%)</title><rect x="1019.3" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.3" y="526.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.05%)</title><rect x="1019.3" y="499.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1022.3" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (133 samples, 0.09%)</title><rect x="1019.9" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (133 samples, 0.09%)</title><rect x="1019.9" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.09%)</title><rect x="1019.9" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.09%)</title><rect x="1019.9" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.03%)</title><rect x="1019.9" y="483.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1022.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.05%)</title><rect x="1020.3" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.3" y="494.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.05%)</title><rect x="1020.3" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1023.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (81 samples, 0.05%)</title><rect x="1020.9" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (81 samples, 0.05%)</title><rect x="1020.9" y="611.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (307 samples, 0.20%)</title><rect x="1021.6" y="627.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (134 samples, 0.09%)</title><rect x="1021.6" y="611.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1024.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (173 samples, 0.11%)</title><rect x="1022.6" y="611.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (46 samples, 0.03%)</title><rect x="1022.6" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1025.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (127 samples, 0.08%)</title><rect x="1023.0" y="595.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.0" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (127 samples, 0.08%)</title><rect x="1023.0" y="579.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1026.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (599 samples, 0.39%)</title><rect x="1024.0" y="627.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (98 samples, 0.06%)</title><rect x="1024.0" y="611.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1027.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (501 samples, 0.33%)</title><rect x="1024.7" y="611.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (416 samples, 0.27%)</title><rect x="1024.7" y="595.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (416 samples, 0.27%)</title><rect x="1024.7" y="579.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.7" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (53 samples, 0.03%)</title><rect x="1024.7" y="563.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1027.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (136 samples, 0.09%)</title><rect x="1025.1" y="563.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1028.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.06%)</title><rect x="1026.4" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.06%)</title><rect x="1026.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/630938139.get$Lambda (88 samples, 0.06%)</title><rect x="1026.4" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.4" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (88 samples, 0.06%)</title><rect x="1026.4" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1029.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (108 samples, 0.07%)</title><rect x="1027.1" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1030.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (108 samples, 0.07%)</title><rect x="1027.1" y="547.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1030.1" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (85 samples, 0.06%)</title><rect x="1028.0" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.0" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (85 samples, 0.06%)</title><rect x="1028.0" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.0" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (85 samples, 0.06%)</title><rect x="1028.0" y="563.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1031.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.resolve (491 samples, 0.32%)</title><rect x="1028.6" y="659.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1286946432.linkToTargetMethod (52 samples, 0.03%)</title><rect x="1028.8" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1840111587.invokeStatic (52 samples, 0.03%)</title><rect x="1028.8" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$205/1540742994.get$Lambda (52 samples, 0.03%)</title><rect x="1028.8" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$205 (52 samples, 0.03%)</title><rect x="1028.8" y="595.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1031.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (224 samples, 0.15%)</title><rect x="1029.2" y="643.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (224 samples, 0.15%)</title><rect x="1029.2" y="627.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (42 samples, 0.03%)</title><rect x="1029.2" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1032.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (130 samples, 0.09%)</title><rect x="1029.8" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (52 samples, 0.03%)</title><rect x="1029.8" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1032.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (40 samples, 0.03%)</title><rect x="1030.2" y="595.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1033.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (38 samples, 0.03%)</title><rect x="1030.5" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (38 samples, 0.03%)</title><rect x="1030.5" y="579.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1033.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (100 samples, 0.07%)</title><rect x="1031.0" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (100 samples, 0.07%)</title><rect x="1031.0" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (66 samples, 0.04%)</title><rect x="1031.0" y="611.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1034.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (34 samples, 0.02%)</title><rect x="1031.5" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (34 samples, 0.02%)</title><rect x="1031.5" y="595.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1034.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (87 samples, 0.06%)</title><rect x="1031.8" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (87 samples, 0.06%)</title><rect x="1031.8" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (54 samples, 0.04%)</title><rect x="1031.8" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1034.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (33 samples, 0.02%)</title><rect x="1032.2" y="611.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (33 samples, 0.02%)</title><rect x="1032.2" y="595.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1035.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Topology.getReplicas (42 samples, 0.03%)</title><rect x="1032.4" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.03%)</title><rect x="1032.4" y="643.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1035.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.markTargetRequest (828 samples, 0.55%)</title><rect x="1032.8" y="659.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (222 samples, 0.15%)</title><rect x="1032.8" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.03%)</title><rect x="1032.8" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$120/426447819.get$Lambda (51 samples, 0.03%)</title><rect x="1032.8" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$120 (51 samples, 0.03%)</title><rect x="1032.8" y="595.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1035.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1686369710.invoke (171 samples, 0.11%)</title><rect x="1033.2" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.11%)</title><rect x="1033.2" y="611.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (65 samples, 0.04%)</title><rect x="1033.2" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.04%)</title><rect x="1033.2" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1036.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (106 samples, 0.07%)</title><rect x="1033.7" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (106 samples, 0.07%)</title><rect x="1033.7" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.7" y="590.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.07%)</title><rect x="1033.7" y="563.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1036.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (263 samples, 0.17%)</title><rect x="1034.5" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (98 samples, 0.06%)</title><rect x="1034.5" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.5" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (98 samples, 0.06%)</title><rect x="1034.5" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.5" y="622.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (98 samples, 0.06%)</title><rect x="1034.5" y="595.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1037.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (165 samples, 0.11%)</title><rect x="1035.3" y="627.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1038.3" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (165 samples, 0.11%)</title><rect x="1035.3" y="611.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1038.3" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Request (121 samples, 0.08%)</title><rect x="1036.5" y="643.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1039.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (222 samples, 0.15%)</title><rect x="1037.5" y="643.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (222 samples, 0.15%)</title><rect x="1037.5" y="627.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1040.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.handleLocal (788 samples, 0.52%)</title><rect x="1039.2" y="675.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (242 samples, 0.16%)</title><rect x="1039.2" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (242 samples, 0.16%)</title><rect x="1039.2" y="643.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl$$Lambda$118/1505718306.get$Lambda (242 samples, 0.16%)</title><rect x="1039.2" y="627.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClientServiceImpl$$Lambda$118 (242 samples, 0.16%)</title><rect x="1039.2" y="611.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1042.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (546 samples, 0.36%)</title><rect x="1041.1" y="659.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (546 samples, 0.36%)</title><rect x="1041.1" y="643.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (260 samples, 0.17%)</title><rect x="1041.1" y="627.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1044.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (270 samples, 0.18%)</title><rect x="1043.1" y="627.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1046.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClientServiceImpl.sendResponse (2,983 samples, 1.97%)</title><rect x="1045.3" y="675.0" width="23.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.3" y="686.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,983 samples, 1.97%)</title><rect x="1045.3" y="659.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.3" y="670.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,931 samples, 1.27%)</title><rect x="1045.3" y="643.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (984 samples, 0.65%)</title><rect x="1045.3" y="627.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (984 samples, 0.65%)</title><rect x="1045.3" y="611.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.3" y="622.0"></text>
</g>
<g>
<title>byte[] (984 samples, 0.65%)</title><rect x="1045.3" y="595.0" width="7.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1048.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (947 samples, 0.62%)</title><rect x="1053.0" y="627.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.0" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (427 samples, 0.28%)</title><rect x="1053.0" y="611.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1056.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (520 samples, 0.34%)</title><rect x="1056.3" y="611.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (520 samples, 0.34%)</title><rect x="1056.3" y="595.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (520 samples, 0.34%)</title><rect x="1056.3" y="579.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (520 samples, 0.34%)</title><rect x="1056.3" y="563.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (520 samples, 0.34%)</title><rect x="1056.3" y="547.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1059.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,052 samples, 0.69%)</title><rect x="1060.4" y="643.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,052 samples, 0.69%)</title><rect x="1060.4" y="627.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,052 samples, 0.69%)</title><rect x="1060.4" y="611.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (591 samples, 0.39%)</title><rect x="1060.4" y="595.0" width="4.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1063.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (461 samples, 0.30%)</title><rect x="1065.0" y="595.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.0" y="606.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.30%)</title><rect x="1065.0" y="579.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1068.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (638 samples, 0.42%)</title><rect x="1068.5" y="707.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (638 samples, 0.42%)</title><rect x="1068.5" y="691.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (638 samples, 0.42%)</title><rect x="1068.5" y="675.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (287 samples, 0.19%)</title><rect x="1068.5" y="659.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1071.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (351 samples, 0.23%)</title><rect x="1070.8" y="659.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.8" y="670.0"></text>
</g>
<g>
<title>byte[] (351 samples, 0.23%)</title><rect x="1070.8" y="643.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1073.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,309 samples, 2.18%)</title><rect x="1073.5" y="739.0" width="25.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.5" y="750.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (496 samples, 0.33%)</title><rect x="1073.5" y="723.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1076.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (973 samples, 0.64%)</title><rect x="1077.4" y="723.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (973 samples, 0.64%)</title><rect x="1077.4" y="707.0" width="7.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1080.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,840 samples, 1.21%)</title><rect x="1084.9" y="723.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,840 samples, 1.21%)</title><rect x="1084.9" y="707.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.9" y="718.0"></text>
</g>
<g>
<title>char[] (973 samples, 0.64%)</title><rect x="1084.9" y="691.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1087.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String (293 samples, 0.19%)</title><rect x="1092.5" y="691.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1095.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (574 samples, 0.38%)</title><rect x="1094.8" y="691.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (574 samples, 0.38%)</title><rect x="1094.8" y="675.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (574 samples, 0.38%)</title><rect x="1094.8" y="659.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.8" y="670.0"></text>
</g>
<g>
<title>byte[] (574 samples, 0.38%)</title><rect x="1094.8" y="643.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1097.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (380 samples, 0.25%)</title><rect x="1099.2" y="739.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.2" y="750.0"></text>
</g>
<g>
<title>byte[] (380 samples, 0.25%)</title><rect x="1099.2" y="723.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1102.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (586 samples, 0.39%)</title><rect x="1102.2" y="739.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (586 samples, 0.39%)</title><rect x="1102.2" y="723.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (586 samples, 0.39%)</title><rect x="1102.2" y="707.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.19%)</title><rect x="1102.2" y="691.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1105.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (302 samples, 0.20%)</title><rect x="1104.4" y="691.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.4" y="702.0"></text>
</g>
<g>
<title>byte[] (302 samples, 0.20%)</title><rect x="1104.4" y="675.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1107.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,134 samples, 6.68%)</title><rect x="1106.8" y="739.0" width="78.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.8" y="750.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,134 samples, 6.68%)</title><rect x="1106.8" y="723.0" width="78.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.8" y="734.0">one/nio/u..</text>
</g>
<g>
<title>char[] (5,086 samples, 3.35%)</title><rect x="1106.8" y="707.0" width="39.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1109.8" y="718.0">cha..</text>
</g>
<g>
<title>java.lang.String (1,694 samples, 1.12%)</title><rect x="1146.3" y="707.0" width="13.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1149.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,354 samples, 2.21%)</title><rect x="1159.5" y="707.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.5" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,354 samples, 2.21%)</title><rect x="1159.5" y="691.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.5" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,354 samples, 2.21%)</title><rect x="1159.5" y="675.0" width="26.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.5" y="686.0">j..</text>
</g>
<g>
<title>byte[] (3,354 samples, 2.21%)</title><rect x="1159.5" y="659.0" width="26.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1162.5" y="670.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.read (567 samples, 0.37%)</title><rect x="1185.6" y="755.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (567 samples, 0.37%)</title><rect x="1185.6" y="739.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (567 samples, 0.37%)</title><rect x="1185.6" y="723.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (567 samples, 0.37%)</title><rect x="1185.6" y="707.0" width="4.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
</g>
</svg>
